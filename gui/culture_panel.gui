# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types culture_panel
{
	type culture_panel = default_block_window {
		name = "culture_panel"
		
		blockoverride "animation_state_block" {
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/culture"
				}
			}

			state = {
				name = _hide
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/culture_stop"
				}
			}
		}
		
		blockoverride "window_header_name"
		{
			text = "CULTURE_OVERVIEW"
		}
		
		blockoverride "fixed_top"
		{
			### PRIMARY CULTURES
			top_illu = {
				
				blockoverride "illu" {
					texture = "gfx/interface/illustrations/top_illus/top_illu_cultures.dds"
				}
				
				flowcontainer = {
					parentanchor = hcenter
					resizeparent = yes
					
					spacing = 10
					
					flowcontainer = {
						direction = vertical
						parentanchor = vcenter
						margin = { 0 6 }

						textbox = {
							text = "COUNTRY_CULTURES_ONE_LINE"
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							autoresize = yes
							align = hcenter|nobaseline
							parentanchor = hcenter
						}
						textbox = {
							raw_text = "#v [GetPlayer.GetPrimaryCulturesDesc]#!"
							margin = { 6 0 }
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							multiline = yes
							autoresize = yes
							align = hcenter|nobaseline
							using = fontsize_xl
							parentanchor = hcenter
						}
					}

					flowcontainer = {
						direction = vertical
						parentanchor = vcenter
						margin = { 0 6 }

						textbox = {
							text = "[concept_state_religion]"
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							autoresize = yes
							align = hcenter|nobaseline
							parentanchor = hcenter
						}
						textbox = {
							raw_text = "#v [GetPlayer.GetStateReligion.GetName]#!"
							margin = { 6 0 }
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							autoresize = yes
							align = hcenter|nobaseline
							using = fontsize_xl
							parentanchor = hcenter
						}
					}
				}
			}

			flowcontainer = {
				spacing = 10
				margin_bottom = 10
				
				law_item_small = {
					datacontext = "[AccessPlayer.AccessActiveLawFromGroup('lawgroup_discrimination')]"
				}

				law_item_small = {
					datacontext = "[AccessPlayer.AccessActiveLawFromGroup('lawgroup_church_and_state')]"
				}
			}
			
			### TABS
			tab_buttons = {
				# Culture Info
				blockoverride "first_button" {
					text = CULTURE_INFO
				}
				blockoverride "first_button_tooltip" {
					tooltip = "CULTURE_INFO"
				}
				blockoverride "first_button_click" {
					onclick = "[InformationPanel.SelectTab('default')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('default')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('default') )]"
				}
				blockoverride "first_button_selected" {
					text = CULTURE_INFO
				}
				blockoverride "first_button_name" {
					name = "tutorial_highlight_culture_info_tab"
				}

				# Nation Formation
				blockoverride "second_button" {
					text = NATION_FORMATION
				}
				blockoverride "second_button_tooltip" {
					tooltip = "NATION_FORMATION"
				}
				blockoverride "second_button_click" {
					onclick = "[InformationPanel.SelectTab('nation_formation')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('nation_formation')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('nation_formation') )]"
				}
				blockoverride "second_button_selected" {
					text = NATION_FORMATION
				}		
			}
			
			### SORT BUTTONS
			flowcontainer = {
				margin_top = 10
				visible = "[InformationPanel.IsTabSelected('default')]"
				
				sort_button = {
					size = { 230 30 }
					text = "CULTURE_TITLE"
					onclick = "[AccessPlayer.SortCultures('name')]"
				}
				sort_button = {
					size = { 110 30 }
					tooltip = "MAJORITY_RELIGION_TITLE"
					onclick = "[AccessPlayer.SortCultures('religion')]"
					button = {
						texture = "gfx/interface/buttons/sort_button_icons/sort_icon_religion.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}

				}
				sort_button = {
					size = { 65 30 }
					tooltip = "TURMOIL_TITLE"
					onclick = "[AccessPlayer.SortCultures('turmoil')]"
					button = {
						texture = "gfx/interface/buttons/sort_button_icons/sort_icon_turmoil.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}
				sort_button = {
					size = { 65 30 }
					tooltip = "POLITICAL_STRENGTH_TITLE"
					onclick = "[AccessPlayer.SortCultures('polstr')]"
					button = {
						texture = "gfx/interface/buttons/sort_button_icons/sort_icon_political_strength.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}
				sort_button = {
					size = { 65 30 }
					tooltip = "POPULATION_TOOLTIP"
					onclick = "[AccessPlayer.SortCultures('population')]"
					button = {
						texture = "gfx/interface/buttons/sort_button_icons/sort_icon_population.dds"
						size = { 25 25 }
						parentanchor = center
						alwaystransparent = yes
					}
				}			
			}
		}
		
		blockoverride "scrollarea_content"
		{
			flowcontainer = {
				using = default_list_position
				direction = vertical
				minimumsize = { @panel_width_plus_20 -1 }
				maximumsize = { @panel_width_plus_20 -1 }			
				margin_top = 10
				
				### CULTURES
				flowcontainer = {
					parentanchor = hcenter
					direction = vertical
					minimumsize = { @panel_width -1 }
					maximumsize = { @panel_width -1 }
					visible = "[InformationPanel.IsTabSelected('default')]"
					using = default_content_fade

					empty_state = {
						blockoverride "visible" {
							visible = "[IsDataModelEmpty(AccessPlayer.AccessPopCultures)]"
						}
						blockoverride "text" {
							text = "NO_CULTURES"
						}
					}	
					
					flowcontainer = {	
						direction = vertical
						visible = "[Not(IsDataModelEmpty(AccessPlayer.AccessPopCultures))]"			

						dynamicgridbox = {
							datamodel = "[AccessPlayer.AccessPopCultures]"

							item = {
								flowcontainer = {
									using = unclickable_listentry_small
									minimumsize = { @panel_width 48 }
									alwaystransparent = no

									button = {
										name = "tutorial_highlight_specific_culture_button"
										using = clean_button
										size = { 230 35 }
										parentanchor = vcenter
										onclick = "[InformationPanelBar.OpenCultureInfoPanel(Culture.AccessSelf)]"
										using = tooltip_above

										tooltipwidget = {
											FancyTooltip_Culture = {}
										}

										icon = {
											visible = "[Culture.IsDiscriminatedIn(GetPlayer.Self)]"
											texture = "gfx/interface/icons/generic_icons/discriminated_icon.dds"
											size = { 30 30 }
											parentanchor = vcenter
										}

										icon = {
											visible = "[Not(Culture.IsDiscriminatedIn(GetPlayer.Self))]"
											texture = "gfx/interface/icons/generic_icons/accepted_icon.dds"
											size = { 30 30 }
											parentanchor = vcenter
										}
										
										textbox = {
											position = { 30 0 }
											size = { 120 100% }
											text = "[Culture.GetNameNoFormatting]"
											align = left|nobaseline
											parentanchor = vcenter
											multiline = yes
											margin = { 5 0 }
										}
									}
									
									widget = { size = { 5 5 }}

									button = {
										using = clean_button
										size = { 108 35 }
										parentanchor = vcenter
										onclick = "[InformationPanelBar.OpenReligionInfoPanel(Culture.AccessReligion)]"
										using = tooltip_above
										datacontext = "[Culture.GetReligion]"
										
										tooltipwidget = {
											FancyTooltip_Religion = {}
										}
										
										textbox = {
											size = { 100% 100% }
											text = "[Religion.GetNameNoFormatting]"
											align = left|nobaseline
											parentanchor = vcenter
											multiline = yes
											margin = { 10 0 }
										}
									}
									
									widget = {
										size = { 65 100% }

										textbox = {
											name = "tutorial_highlight_turmoil_value"
											text = "[GetPlayer.CalcCulturalTurmoil( Culture.Self )|-0%]"
											size = { 40 100% }
											align = right|nobaseline
											parentanchor = right|vcenter
											tooltip = "CULTURAL_TURMOIL_TOOLTIP"
											margin_right = 5
											alpha = "[TransparentIfZero( GetPlayer.CalcCulturalTurmoil( Culture.Self ) )]"
										}

										icon = {
											texture = "gfx/interface/icons/generic_icons/secession_culture_possible.dds"
											size = { 30 30 }
											parentanchor = vcenter
											visible = "[And( Culture.HasChanceForSecessionMovement( GetPlayer.Self ), Not( Culture.HasSecessionMovement( GetPlayer.Self ) ))]"
											tooltip = "CULTURAL_POSSIBLE_SECESSION_ICON_TOOLTIP"
										}

										icon = {
											texture = "gfx/interface/icons/generic_icons/secession_culture_ongoing.dds"
											size = { 30 30 }
											parentanchor = vcenter
											visible = "[And( Culture.HasSecessionMovement( GetPlayer.Self ), Not( Culture.HasChanceForSecessionMovement( GetPlayer.Self ) ))]"
											tooltip = "CULTURAL_GROWING_SECESSION_ICON_TOOLTIP"
										}
									}

									textbox = {
										text = "[GetPlayer.GetCulturePolStrAsPercentage(Culture.Self)|1%]"
										size = { 65 100% }
										align = right|nobaseline
										parentanchor = vcenter
										margin_right = 5
									}				

									textbox = {
										text = "[GetPlayer.GetCulturePopulation(Culture.Self)|K]"
										size = { 65 100% }
										align = right|nobaseline
										parentanchor = vcenter
										margin_right = 5
									}
								}
							}
						}	
					}
				}

				### NATION FORMATION
				container = {
					minimumsize = { @panel_width_plus_20 -1 }
					maximumsize = { @panel_width_plus_20 -1 }
					visible = "[InformationPanel.IsTabSelected('nation_formation')]"
					using = default_content_fade
					
					empty_state = {
						blockoverride "visible" {
							visible = "[IsDataModelEmpty(AccessPlayer.AccessFormableCountries)]"
						}
						blockoverride "text" {
							text = "NO_FORMABLE_COUNTRIES"
						}
					}	
					
					flowcontainer = {
						parentanchor = hcenter					
						direction = vertical
						visible = "[Not(IsDataModelEmpty(AccessPlayer.AccessFormableCountries))]"
						spacing = 5

						flowcontainer = {
							parentanchor = hcenter
							direction = vertical
							datamodel = "[AccessPlayer.AccessFormableCountries]"

							item = {
								formable_country_button = {}
							}
						}	
					}			
				}
			}
		}
	}

	type country_button = button {
		using = default_button
		blockoverride "sound" {
			using = confirm_button_sound
		}
		size = { @panel_width 60 }
		
		flowcontainer = {
			position = { 10 0 }
			parentanchor = vcenter

			flag_icon = {
				framesize = "[GetSmallFlagFrameSize]"
				block "flag_definition" {
				}
				blockoverride "flag_tooltip" {}
			}
			
			widget = { size = { 15 15 } }
	
			flowcontainer = {
				direction = vertical
			
				textbox = {
					block "country_name" {}
					elide = right
					fontsize_min = 12
					max_width = 375
					autoresize = yes
					align = left|nobaseline
					using = fontsize_large
				}

				textbox = {
					block "country_tier" {}
					autoresize = yes
					align = left|nobaseline
					using = fontsize_medium
				}					
			}	
		}	

		textbox = {
			block "right_number" {}
			margin_right = 20
			autoresize = yes
			align = right|nobaseline
			parentanchor = right|vcenter
			widgetanchor = right|vcenter
			using = fontsize_large
		}	

		textbox = {
			block "right_number_two" {}
			margin_right = 20
			autoresize = yes
			align = right|nobaseline
			parentanchor = right|vcenter
			widgetanchor = right|vcenter
			using = fontsize_large
		}			
	}

	type formable_country_button = container {
		onmousehierarchyenter = "[AccessHighlightManager.HighlightCountryFormation(CountryFormation.Self)]"
		onmousehierarchyleave = "[AccessHighlightManager.RemoveHighlight]"
		alwaystransparent = no
		minimumsize = { @panel_width 80 }

		background = {
			using = entry_bg_fancy
		}

		country_button = {
			onclick = "[InformationPanelBar.OpenCountryFormationPanel(CountryFormation.Self)]"
			datacontext = "[CountryFormation.GetDefinition]"
			size = { 450 60 }
			parentanchor = vcenter
			tooltip = "GO_TO_COUNTRY_FORMATION"
			
			blockoverride "country_name" {
				text = "FORM_COUNTRY_NAME"
			}
			
			blockoverride "country_tier" {
				text = "FORM_COUNTRY_TIER"
			}		

			blockoverride "flag_definition" {
				texture = "[CountryDefinition.GetFlag('formation').GetSmallFlagTexture]"
				frame = "[CountryDefinition.GetFlag('formation').GetSmallFlagFrame]"
				parentanchor = vcenter
			}
		}

		textbox = {
			parentanchor = right|vcenter
			align = left|nobaseline
			margin_right = 10
			autoresize = yes
			tooltip = "FORM_COUNTRY_TOOLTIP"
			text = "FORM_COUNTRY_REQ_STATES"
			using = fontsize_xl
		}

		divider_clean = {
			parentanchor = bottom|hcenter
		}
	}

	type law_item_small = button {
		using = default_button
		size = { @panel_width_half 80 }
		onclick = "[InformationPanelBar.OpenChangeLaw(Law.AccessSelf)]"

		flowcontainer = {
			parentanchor = vcenter
			margin_left = 10
			spacing = 10
			
			law_icon = {
				size = { 60 60 }
				parentanchor = vcenter
			}
			
			flowcontainer = {
				direction = vertical
				parentanchor = vcenter

				textbox = {
					autoresize = yes
					align = nobaseline
					raw_text = "#title [Law.GetGroup.GetNameNoFormatting]#!"
				}

				textbox = {
					autoresize = yes
					align = nobaseline
					multiline = yes
					maximumsize = { 190 -1 }
					text = "[Law.GetNameNoFormatting|v]"
				}
			}
		}

		tooltipwidget = {
			FancyTooltip_Law = {}
		}
	}
}