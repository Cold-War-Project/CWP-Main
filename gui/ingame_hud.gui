template information_panels {
	add_wargoal_panel = {}
	battle_panel = {}
	battle_participants_panel = {}
	building_details_panel = {}
	commander_panel = {}
	countries_panel = {}
	country_panel = {}
	culture_panel = {}
	culture_info_panel = {}
	decisions_panel = {}
	diplomatic_overview_panel = {}
	diplomatic_play_panel = {}
	election_panel = {}
	front_panel = {}
	international_panel = {}
	un_panel = {}
	goods_state_panel = {}
	goods_usage_panel = {}
	goods_panel = {}
	hq_panel = {}
	interest_group_panel = {}
	journal_entry_panel = {}
	journal_panel = {}
	market_panel = {}
	outliner_panel = {}
	panel_military = {}
	party_panel = {}
	pop_details_panel = {}
	pops_overview_panel = {}
	production_methods_panel = {}
	religion_info_panel = {}
	sea_region_panel = {}
	state_population_panel = {}
	states_panel = {}
	sway_country_panel = {}
	war_panel = {}
	budget_panel = {}
	country_formation_panel = {}
}

template information_panels_fullscreens {
	politics_panel = {}
	politics_panel_change_law = {}
	tech_tree_panel = {}
}

template map_list_panels {
	empty_map_list_panel = {}
	default_map_list_panel = {}
	build_building_map_list_panel = {}
	colony_map_list_panel = {}
	diplo_action_map_list_panel = {}
	decree_map_list_panel = {}
	markets_map_list_panel = {}
	strategic_regions_map_list_panel = {}
	interest_groups_map_list_panel = {}
	countries_map_list_panel = {}
	countries_ongoing_diplomatic_play_map_list_panel = {}
	country_attitude_map_list_panel = {}
	country_relations_map_list_panel = {}
	country_infamy_map_list_panel = {}
	countries_military_map_list_panel = {}
	trade_route_map_list_panel = {}
	state_map_list_panel = {}
	state_population_map_list_panel = {}
	state_production_map_list_panel = {}
	state_gdp_map_list_panel = {}
	state_gdp_nationally_map_list_panel = {}
	state_standard_of_living_map_list_panel = {}
	state_radicals_map_list_panel = {}
	state_loyalists_map_list_panel = {}
	state_migration_pull_list_panel = {}
	state_culture_map_list_panel = {}
	state_literacy_map_list_panel = {}
	activate_conscription_center_map_list_panel = {}
	front_map_list_panel = {}
	recruit_commanders_map_list_panel = {}
}

widget = {
	size = { 100% 100% }
	name = "ingame_hud"
	layer = "layer_ingame_hud"
	ignore_in_debug_draw = yes

	pause_border = {}
	
	# fullscreens
	using = information_panels_fullscreens
	
	# vbox with things that should be reduced in size on Y-axis when opening the lens options
	vbox = {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = expanding
		margin_top = 85 #margin topbar
		
		widget = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			ignore_in_debug_draw = yes
			
			# lens toolbar
			lens_toolbar = {
				parentanchor = bottom|hcenter
			}
			
			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding

				# sidepanels
				using = information_panels
				using = map_list_panels
				
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					ignore_in_debug_draw = yes
				}

				# outliner / notifications
				vbox = {
					visible = "[And( And( Not( IsPauseMenuShown ), Not( IsGameOverScreenShown )), GetMetaPlayer.GetPlayedOrObservedCountry.IsValid)]"
					layoutpolicy_horizontal = preferred
					layoutpolicy_vertical = expanding
					margin_top = 70 #margin construction info
					
					vbox = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
						expand = {}
						
						vbox = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding
						
							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = preferred
								expand = {}
								
								outliner_wars = {
									using = fullscreen_hide
								}
							}
							
							hbox = {
								layoutpolicy_horizontal = expanding
								layoutpolicy_vertical = expanding
								expand = {}
								
								outliner = {
									size = { 360 0 }
									layoutpolicy_vertical = expanding
								}
							}
						}
					}
					message_feed_widget = {}
				}
			}
		}

		# lens tabs / actions
		lens_option_menu = {
			using = sidebar_margin
		}
	}
	
	# topbar / alerts / timemanip
	vbox = {
		hbox = {
			layoutpolicy_horizontal = preferred
			layoutpolicy_vertical = preferred

			vbox = {
				layoutpolicy_horizontal = preferred
				layoutpolicy_vertical = preferred
				
				datacontext = "[AccessMetaPlayer.AccessPlayedOrObservedCountry]"
			
				# Has navy
				topbar = {
					visible = "[Or(GreaterThan_int32(Country.GetNumConvoys, '(int32)0'), GreaterThan_int32(Country.GetRequiredConvoys, '(int32)0'))]"
				}

				# Landlocked
				topbar = {
					visible = "[Not(Or(GreaterThan_int32(Country.GetNumConvoys, '(int32)0'), GreaterThan_int32(Country.GetRequiredConvoys, '(int32)0')))]"
					
					blockoverride "convoys_info" {}

					blockoverride "spacing" {
						spacing = 37
					}
				}
				
				widget = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					ignore_in_debug_draw = yes
				}
			}
			topfrontend = {}
			pollutioncounter = {}
			timemanip = {}
		}
		widget = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = expanding
			ignore_in_debug_draw = yes
		}
	}

	# Topbar rank icon
	topbar_rank = {}
	
	# left sidebar buttons
	information_panel_bar = {}
	
	# misc
	container = {
		parentanchor = hcenter
		position = { 0 130 }
		using = hud_visibility
		using = default_fade_in_out
		
		### SAVING GAME TEXT
		textbox = {
			visible = "[IsSaving]"
			parentanchor = hcenter
			text = "SAVING_GAME"
			align = right|nobaseline
			autoresize = yes
			using = fontsize_large
			margin = { 16 8 }
			
			background = {
				using = paper_bg
			}
		}
	}
	
	# game start animation effect (should continue from the state that the animation from lobby ends in)
	widget = {
		size = { 100% 100% }
		parentanchor = center
		visible = "[IsInGame]"
		
		state = {
			trigger_on_create = yes 
			name = _show
			
			on_start = "[PdxGuiTriggerAllAnimations('game_start_animation_clouds')]"
			on_start = "[PdxGuiTriggerAllAnimations('game_start_animation_glow')]"
			on_start = "[PdxGuiTriggerAllAnimations('game_start_menu_logo_v_start')]"
			on_start = "[PdxGuiTriggerAllAnimations('game_start_animation_logo')]" 
			on_start = "[PdxGuiTriggerAllAnimations('game_start_animation_country')]"

			on_start = "[PdxGuiTriggerAllAnimations('game_start_animation_effect')]" #shine on golden HUD elements after clouds vanished

			duration = 3
			on_finish = "[PdxGuiWidget.Hide]"
			on_finish = "[PdxGuiTriggerAllAnimations('game_start_menu_animation_reset')]"
		}
		
		### CLOUDS
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/animation/cloud_backdrop.dds"
			parentanchor = center
			
			state = {
				name = game_start_animation_clouds
				next = game_start_animation_clouds2
				
				scale = 1.1
				alpha = 1
			}
			state = {
				name = game_start_animation_clouds2
				
				duration = 3
				
				scale = 1.3
				alpha = 0
			}
		}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/animation/cloud_01.dds"
			parentanchor = center
			
			state = {
				name = game_start_animation_clouds
				next = game_start_animation_clouds2
				
				scale = 1.2
				alpha = 1
			}
			state = {
				name = game_start_animation_clouds2
				
				duration = 3
				
				scale = 1.6
				alpha = 0
			}
		}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/animation/cloud_02.dds"
			parentanchor = center
			
			state = {
				name = game_start_animation_clouds
				next = game_start_animation_clouds2
				
				scale = 1.3
				alpha = 1
			}
			state = {
				name = game_start_animation_clouds2
				
				duration = 3
				
				scale = 2
				alpha = 0
			}
		}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/animation/cloud_03.dds"
			parentanchor = center
			
			state = {
				name = game_start_animation_clouds
				next = game_start_animation_clouds2
				
				scale = 1.4
				alpha = 1
			}
			state = {
				name = game_start_animation_clouds2
				
				duration = 3
				
				scale = 2.5
				alpha = 0
			}
		}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/animation/cloud_04.dds"
			parentanchor = center
			
			state = {
				name = game_start_animation_clouds
				next = game_start_animation_clouds2
				
				scale = 1.5
				alpha = 1
			}
			state = {
				name = game_start_animation_clouds2
				
				duration = 3
				
				scale = 3
				alpha = 0
			}
		}

		### GLOW EFFECT
		icon = {
			using = rotate_glow_animation_02
			alpha = 0 
			
			state = {
				name = game_start_animation_glow
				next = game_start_animation_glow2
				
				alpha = 0 
			}
			state = {
				name = game_start_animation_glow2
				next = game_start_animation_glow3
				
				duration = 1
				using = Animation_Curve_Default
				
				alpha = 1
			}
			state = {
				name = game_start_animation_glow3
				delay = 1
				
				duration = 1
				using = Animation_Curve_Default
				
				alpha = 0
			}
		}
		
		### LOGO
		widget = {
			size = { 800 180 }
			parentanchor = center
			position = { 0 -205 } 
			
			background = {
				using = default_header_bg
				alpha = 0.95
				
				modify_texture = {
					texture = "gfx/interface/masks/fade_horizontal_center.dds"
					blend_mode = alphamultiply
				}
			}
			
			state = {
				name = game_start_animation_logo
				next = game_start_animation_logo2
				
				position_x = 1500
			}
			state = {
				name = game_start_animation_logo2
				next = game_start_animation_logo3
				
				duration = 0.4
				using = Animation_Curve_Default
				
				position_x = -15
			}
			state = {
				name = game_start_animation_logo3
				next = game_start_animation_logo4
				
				duration = 0.1
				using = Animation_Curve_Default
				
				position_x = 0
			}
			state = {
				name = game_start_animation_logo4
				delay = 2
				
				duration = 0.5
				using = Animation_Curve_Default
				
				position_x = -1500
			}
		
			v3_logo_animation_game_start = {
				parentanchor = center
			}
		}			
		
		### FLAG + COUNTRY NAME
		flowcontainer = {
			direction = vertical
			datacontext = "[GetMetaPlayer.GetPlayedOrObservedCountry]"
			parentanchor = center
			spacing = 20
			position = { -1500 150 }
			
			margin = { 150 45 }
			margin_bottom = 70
			
			background = {
				using = default_background
				color = "[GetMetaPlayer.GetPlayedOrObservedCountry.GetMapColor]"
				alpha = 0.60
			}
			
			background = {
				texture = "gfx/interface/animation/start_game_effect_frame.dds"
				texture_density = 2
				spriteType = Corneredstretched
				spriteborder = { 510 0 }
				spriteborder_bottom = 470
				spriteborder_top = 230
			}
			
			state = {
				name = game_start_animation_country
				next = game_start_animation_country2
				
				position_x = -1500
			}
			state = {
				name = game_start_animation_country2
				next = game_start_animation_country3
				
				duration = 0.4
				using = Animation_Curve_Default
				
				position_x = 15
			}
			state = {
				name = game_start_animation_country3
				next = game_start_animation_country4
				
				duration = 0.1
				using = Animation_Curve_Default
				
				position_x = 0
			}
			state = {
				name = game_start_animation_country4
				delay = 2
				
				duration = 0.5
				using = Animation_Curve_Default
				
				position_x = 1500
			}
			
			widget = {
				size = { 230 180 }
				parentanchor = hcenter
				
				background = {
					using = blurry_dark_background
					margin = { 130 80 }
				}
				
				flag_3d_animated = {
					size = { 640 360 }
					scale = 0.5
				}

				observer_mode_overlay = {}

			}
			
			textbox = {
				visible = "[Country.IsValid]"
				parentanchor = hcenter
				text = "#BOLD [Country.GetNameNoFormatting]#!"
				autoresize = yes
				align = nobaseline
				fontsize = 100
				using = header_font_fancy
			} 
		}
		
		### clickthrough blocker (you should not be able to click anything until the animation has finished (3 seconds))
		widget = {
			size = { 100% 100% }
			using = clickthrough_blocker
		}
	} 
}
