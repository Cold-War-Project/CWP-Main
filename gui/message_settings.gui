message_settings_window = {}

types message_settings {
	type message_settings_window = default_popup {
		name = "message_settings_window"
		parentanchor = center

		blockoverride "window_header_name" {
			text = MESSAGE_SETTINGS
		}

		blockoverride "header_close_button_visibility" {
			visible = yes
		}

		blockoverride "header_close_button" {
			onclick = "[ToggleMessageSettings]"
		}

		blockoverride "content" {

			flowcontainer = {
				direction = vertical
				resizeparent = yes
				minimumsize = { 700 300 }
				margin_top = 90
				margin_bottom = 30
				margin_left = 14
				margin_right = 14

				widget = {
                    size = { 700 44 }

                    tab_buttons = {
                        blockoverride "first_button" {
                            text = "MESSAGE_SETTINGS_NOTIFICATION_TYPES"
                        }
                        blockoverride "first_button_tooltip" {
                            tooltip = "MESSAGE_SETTINGS_NOTIFICATION_TYPES"
                        }
                        blockoverride "first_button_click" {
                            onclick = "[GetVariableSystem.Set('message_settings_notification_types', 'true')]"
                            onclick = "[GetVariableSystem.Set('message_settings_alerts', 'false')]"
                        }
                        blockoverride "first_button_visibility" {
                            visible = "[GetVariableSystem.HasValue('message_settings_notification_types', 'true')]"
                        }
                        blockoverride "first_button_visibility_checked" {
                            visible = "[Not( GetVariableSystem.HasValue('message_settings_notification_types', 'true') )]"
                        }
                        blockoverride "first_button_selected" {
                            text = "MESSAGE_SETTINGS_NOTIFICATION_TYPES"
                        }

                        blockoverride "second_button" {
                            text = "MESSAGE_SETTINGS_ALERTS"
                        }
                        blockoverride "second_button_tooltip" {
                            tooltip = "MESSAGE_SETTINGS_ALERTS"
                        }
                        blockoverride "second_button_click" {
                            onclick = "[GetVariableSystem.Set('message_settings_notification_types', 'false')]"
                            onclick = "[GetVariableSystem.Set('message_settings_alerts', 'true')]"
                        }
                        blockoverride "second_button_visibility" {
                            visible = "[GetVariableSystem.HasValue('message_settings_alerts', 'true')]"
                        }
                        blockoverride "second_button_visibility_checked" {
                            visible = "[Not( GetVariableSystem.HasValue('message_settings_alerts', 'true') )]"
                        }
                        blockoverride "second_button_selected" {
                            text = "MESSAGE_SETTINGS_ALERTS"
                        }
                    }
                }

				flowcontainer = {
					parentanchor = hcenter
					spacing = 7
					margin_bottom = 5
					visible = "[GetVariableSystem.HasValue('message_settings_notification_types', 'true')]"

					textbox = {
						text = "MESSAGE_SETTINGS_SORT_NOTIFICATION_TYPE"
						autoresize = yes
						minimumsize = { 290 -1 }
						maximumsize = { 290 -1 }
						align = nobaseline
						default_format = "#title"
					}

					textbox = {
						text = "MESSAGE_SETTINGS_SORT_APPEARANCE"
						autoresize = yes
						minimumsize = { 290 -1 }
						maximumsize = { 290 -1 }
						align = nobaseline
						default_format = "#title"
					}

					textbox = {
						text = "MESSAGE_SETTINGS_SORT_PAUSE"
						autoresize = yes
						minimumsize = { 60 -1 }
						maximumsize = { 60 -1 }
						align = hcenter|nobaseline
						default_format = "#title"
					}									
				}

				flowcontainer = {
                    direction = vertical
                    parentanchor = hcenter
                    visible = "[GetVariableSystem.HasValue('message_settings_alerts', 'true')]"

					flowcontainer = {
	                    parentanchor = hcenter
	                    spacing = 7
	                    margin_bottom = 5
	                    margin_top = 10

	                    textbox = {
	                        parentanchor = vcenter
	                        text = "MESSAGE_SETTINGS_ALERTS_BUTTON_LABEL"
	                        autoresize = yes
	                        minimumsize = { 290 -1 }
	                        maximumsize = { 290 -1 }
	                        align = nobaseline
	                    }

	                    widget = {
	                        size = { 290 44 }

	                        dropdown_menu_standard = {
	                            parentanchor = vcenter
	                            blockoverride "dropdown_properties"
	                            {
	                                #TODO PRCAL-26115 - Add the correct datamodel and onselectionchanged function for the Alerts button label
	                                #datamodel = "[MessageSettingsWindow.GetCurrentSituationSettingsOptions]"
	                                #onselectionchanged = "[MessageSettingsWindow.OnSelectAlertOption]"
	                                datamodel = "[GetLoyaltyTypes]"
	                            }

	                            blockoverride "dropdown_size"
	                            {
	                                size = { 290 32 }
	                            }

	                            blockoverride "dropdown_list_maxsize"
	                            {
	                                size = { 290 600 }
	                            }

	                            blockoverride "dropdown_active_item_properties"
	                            {
	                                text_single = {
	                                    parentanchor = vcenter
	                                    position = { 10 0 }
	                                    autoresize = yes
	                                    align = nobaseline
	                                    default_format = "#clickable"

	                                    #text = "[MessageSettings.GetCurrentAlertLabelOption.GetNameWithConcept]" <--- Make sure this gets the concept for the option
	                                    raw_text = "#todo PRCAL-26115 Option Name#!"
	                                }
	                                        
	                                text_single = {
	                                    parentanchor = right|vcenter
	                                    position = { -30 0 }
	                                    autoresize = yes
	                                    align = right|nobaseline
	                                    default_format = "#title"
	                                    text = "MESSAGE_SETTINGS_DEFAULT"

	                                    #todo PRCAL-26115 - visible state for the deafult option of the current situation button label#!
	                                    #visible = "[MessageSettings.GetCurrentAlertLabelOption.IsDefault]"
	                                }
	                            }

	                            blockoverride "dropdown_item_properties"
	                            {
	                                widget = {
	                                    size = { 100% 100% }

	                                    hbox = {
	                                        layoutpolicy_horizontal = expanding
	                                        margin_right = 10

	                                        text_single = {
	                                            layoutpolicy_horizontal = expanding
	                                            align = nobaseline
	                                            margin_left = 10
	                                            default_format = "#clickable"

	                                           	#text = "[MessageSettings.GetCurrentAlertLabelOption.GetNameWithConcept]" <--- Make sure this gets the concept for the option
	                                    		raw_text = "#todo PRCAL-26115 Option Name#!"
	                                        }

	                                        expand = {}
	                                        
	                                        text_single = {
	                                            layoutpolicy_horizontal = expanding
	                                            align = right|nobaseline
	                                            default_format = "#title"

	                                           	#todo PRCAL-26115 - visible state for the deafult option of the current situation button label#!
	                                    		#visible = "[MessageSettings.GetCurrentAlertLabelOption.IsDefault]"
	                                        }
	                                    }
	                                }
	                            }
	                        }
	                    }

	                }

					flowcontainer = {
						parentanchor = hcenter
						spacing = 7
						margin_bottom = 5

						textbox = {
							text = "MESSAGE_SETTINGS_SORT_ALERT_NAME"
							autoresize = yes
							minimumsize = { 320 -1 }
							maximumsize = { 320 -1 }
							align = nobaseline
							default_format = "#title"
						}

						textbox = {
							text = "MESSAGE_SETTINGS_SORT_APPEARANCE"
							autoresize = yes
							minimumsize = { 320 -1 }
							maximumsize = { 320 -1 }
							align = nobaseline
							default_format = "#title"
						}								
					}
				}

				scrollarea = {
					using = default_list_position
					layoutpolicy_vertical = preferred
					layoutpolicy_horizontal = preferred
					maximumsize = { 684 600 }
					minimumsize = { 684 150 }

					scrollbarpolicy_horizontal = always_off
					
					scrollbar_vertical = {
						using = vertical_scrollbar		
					}

					scrollwidget = {
						container = {
							parentanchor = hcenter
							resizeparent = yes
								
							flowcontainer = {
								parentanchor = hcenter
								direction = vertical
								spacing = 4
								visible = "[GetVariableSystem.HasValue('message_settings_notification_types', 'true')]"
								datamodel = "[MessageSettingsWindow.GetSettingsItems]"
								
								item = {
									notification_type_list_item = {}
								}
							}

							flowcontainer = {
			                    direction = vertical
			                    parentanchor = hcenter
			                    visible = "[GetVariableSystem.HasValue('message_settings_alerts', 'true')]"

			                    #TODO PRCAL-26115 - Add the correct datamodel for all Alert Types
                                #datamodel = "[MessageSettingsWindow.GetAlertSettingsItems]"
                                datamodel = "[MessageSettingsWindow.GetSettingsItems]"

			                    item = {
			                    	alert_type_list_item = {}
			                    }
			                }

						}					
					}
				}
				
				flowcontainer = {
					visible = "[MessageSettingsWindow.HasSingleShownItem]"
					parentanchor = hcenter
					spacing = 10
					margin_top = 10
					
					button_primary = {
						onclick = "[MessageSettingsWindow.RemoveSingleShownItem]"
						size = { 660 40 }
						text = "SHOW_ALL_MESSAGE_SETTINGS"
					}	
				}

				flowcontainer = {
					parentanchor = hcenter
					spacing = 10
					margin_top = 10
					
					button = {
						onclick = "[MessageSettingsWindow.ResetSettings]"
						size = { 310 40 }
						text = "RESET_TO_DEFAULT"
						using = default_button
					}
					
					button = {
						onclick = "[ToggleMessageSettings]"
						size = { 310 40 }
						text = "CLOSE_LABEL"
						using = default_button
					}					
				}
			}
		}
	}

	type notification_type_list_item = widget {
		size = { 660 44 }
		visible = "[MessageSettingsWindow.ShouldBeShown(MessageSettingsItem.GetTag)]"

		background = { 
			using = entry_bg_simple
		}

		hbox = {
			textbox = {
				text = "[MessageSettingsItem.GetName]"
				align = nobaseline
				layoutpolicy_vertical = preferred
				layoutpolicy_horizontal = preferred
				maximumsize = { 290 -1 }
				margin_left = 10
				fontsize_min = 14
				elide = right
			}

			widget = {
				size = { 290 44 }

				dropdown_menu_standard = {
					parentanchor = vcenter

					blockoverride "dropdown_properties"
					{
						datamodel = "[MessageSettingsItem.GetValidOptions]"
						onselectionchanged = "[MessageSettingsItem.OnSelectOption]"
					}

					blockoverride "dropdown_size"
					{
						size = { 290 32 }
					}

					blockoverride "dropdown_list_maxsize"
					{
						size = { 290 600 }
					}

					blockoverride "dropdown_active_item_properties"
					{
						text_single = {
							parentanchor = vcenter
							position = { 10 0 }
							autoresize = yes
							align = nobaseline
							default_format = "#clickable"
							text = "[MessageSettingsItem.GetCurrentOption.GetNameWithConcept]"
						}
								
						text_single = {
							parentanchor = right|vcenter
							position = { -30 0 }
							autoresize = yes
							align = right|nobaseline
							default_format = "#title"
							text = "MESSAGE_SETTINGS_DEFAULT"
							visible = "[MessageSettingsItem.GetCurrentOption.IsDefault]"
						}
					}

					blockoverride "dropdown_item_properties"
					{
						widget = {
							size = { 100% 100% }

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_right = 10

								text_single = {
									layoutpolicy_horizontal = expanding
									align = nobaseline
									margin_left = 10
									default_format = "#clickable"
									text = "[NotificationOptionItem.GetNameWithConcept]"
								}

								expand = {}
								
								text_single = {
									layoutpolicy_horizontal = expanding
									align = right|nobaseline
									default_format = "#title"
									text = "MESSAGE_SETTINGS_DEFAULT"
									visible = "[NotificationOptionItem.IsDefault]"
								}
							}
						}
					}
				}
			}

			widget = {
				size = { 60 44 }
				checkbutton = {
					using = check_button
					size = { 24 24 }
					parentanchor = center
					onclick = "[MessageSettingsItem.ToggleAutoPause]"
					checked = "[MessageSettingsItem.HasAutoPause]"
				}
			}
		}
	}

	type alert_type_list_item = widget {
		size = { 660 44 }
		visible = "[MessageSettingsWindow.ShouldBeShown(MessageSettingsItem.GetTag)]"

		background = { 
			using = entry_bg_simple
		}

		hbox = {
			textbox = {
				#todo PRCAL-26115 - Make sure it gets the correct name for the Alert Type here
				#text = "[MessageSettingsItem.GetName]"
				raw_text = "#todo Name of Alert / Important Action#!"
				align = nobaseline
				layoutpolicy_vertical = preferred
				layoutpolicy_horizontal = preferred
				maximumsize = { 320 -1 }
				margin_left = 10
			}

			widget = {
				size = { 320 44 }

				dropdown_menu_standard = {
					parentanchor = vcenter

					blockoverride "dropdown_properties"
					{
						#todo PRCAL-26115 - Make sure this datamodel are giving the correct options for the Alerts, should be two options: Alert and Important Action
						datamodel = "[MessageSettingsItem.GetValidOptions]"

						#todo PRCAL-26115 - Make sure this oncelectionchanged changes and saves the option for the Alert
						onselectionchanged = "[MessageSettingsItem.OnSelectOption]"
					}

					blockoverride "dropdown_size"
					{
						size = { 320 32 }
					}

					blockoverride "dropdown_list_maxsize"
					{
						size = { 320 600 }
					}

					blockoverride "dropdown_active_item_properties"
					{
						text_single = {
							parentanchor = vcenter
							position = { 10 0 }
							autoresize = yes
							align = nobaseline
							default_format = "#clickable"

							#text = "[MessageSettingsItem.GetCurrentOption.GetNameWithConcept]" <--- Make sure this gets the concept for the option
							raw_text = "#todo PRCAL-26115 Option Name#!"
						}
								
						text_single = {
							parentanchor = right|vcenter
							position = { -30 0 }
							autoresize = yes
							align = right|nobaseline
							default_format = "#title"
							text = "MESSAGE_SETTINGS_DEFAULT"

							#todo PRCAL-26115 - Fix this visible state checking if this option is the default option for this Alert
							visible = "[MessageSettingsItem.GetCurrentOption.IsDefault]"
						}
					}

					blockoverride "dropdown_item_properties"
					{
						widget = {
							size = { 100% 100% }

							hbox = {
								layoutpolicy_horizontal = expanding
								margin_right = 10

								text_single = {
									layoutpolicy_horizontal = expanding
									align = nobaseline
									margin_left = 10
									default_format = "#clickable"

									#text = "[AlertOptionItem.GetNameWithConcept]" <--- Make sure this gets the concept for the option
									raw_text = "#todo PRCAL-26115 Option Name#!"
								}

								expand = {}
								
								text_single = {
									layoutpolicy_horizontal = expanding
									align = right|nobaseline
									default_format = "#title"
									text = "MESSAGE_SETTINGS_DEFAULT"

									#todo PRCAL-26115 - Fix this visible state checking if this option is the default option for this Alert
									#visible = "[AlertOptionItem.IsDefault]"
								}
							}
						}
					}
				}
			}
		}
	}
}