# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types companies_panel
{
	type companies_panel = default_block_window {
		name = "companies_panel"
		
		#blockoverride "animation_state_block" {
		#	state = {
		#		name = _show
		#		start_sound = {
		#			soundeffect = "event:/SFX/UI/SideBar/companies"
		#		}
		#	}
		#
		#	state = {
		#		name = _hide
		#		start_sound = {
		#			soundeffect = "event:/SFX/UI/SideBar/companies_stop"
		#		}
		#	}
		#}
		
		blockoverride "window_header_name"
		{
			text = "COMPANIES"
		}
		
		blockoverride "fixed_top"
		{
			top_illu = {	
				datacontext = "[GetPlayer]"
			
				blockoverride "illu" {
					texture = "gfx/interface/illustrations/top_illus/top_illu_companies.dds"
				}
				
				flowcontainer = {
					direction = vertical
					parentanchor = hcenter|top
					
					textbox = {
						text = "COMPANIES_AMOUNT_HEADER"			
						using = fontsize_xxl
						minimumsize = { @panel_width_plus_14 -1 }
						maximumsize = { @panel_width_plus_14 -1 }
						autoresize = yes
						multiline = yes
						align = center|nobaseline
					}	

					textbox = {				
						text = "COMPANY_THROUGHPUT_BONUS_HEADER"
						using = fontsize_xl
						minimumsize = { @panel_width_plus_14 -1 }
						maximumsize = { @panel_width_plus_14 -1 }
						autoresize = yes
						multiline = yes
						align = center|nobaseline
					}


					textbox = {				
						text = "COMPANY_CONSTRUCTION_BONUS_HEADER"
						using = fontsize_xl
						minimumsize = { @panel_width_plus_14 -1 }
						maximumsize = { @panel_width_plus_14 -1 }
						autoresize = yes
						multiline = yes
						align = center|nobaseline
					}						
				}
			}
		
			### TABS
			tab_buttons = {
				# Companies Info
				blockoverride "first_button" {
					text = COMPANIES_OVERVIEW
				}
				blockoverride "first_button_tooltip" {
					tooltip = "COMPANIES_OVERVIEW"
				}
				blockoverride "first_button_click" {
					onclick = "[InformationPanel.SelectTab('default')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('default')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('default') )]"
				}
				blockoverride "first_button_selected" {
					text = COMPANIES_OVERVIEW
				}
				blockoverride "first_button_name" {
					name = "tutorial_highlight_companies_overview_tab"
				}

				# Potential Companies
				blockoverride "second_button" {
					text = POTENTIAL_COMPANIES_OVERVIEW
				}
				blockoverride "second_button_tooltip" {
					tooltip = POTENTIAL_COMPANIES_OVERVIEW
				}
				blockoverride "second_button_click" {
					onclick = "[InformationPanel.SelectTab('potential_companies')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('potential_companies')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('potential_companies') )]"
				}
				blockoverride "second_button_selected" {
					text = POTENTIAL_COMPANIES_OVERVIEW
				}					
			}			
		}
		
		blockoverride "scrollarea_content"
		{
			flowcontainer = {
				using = default_list_position
				direction = vertical
				minimumsize = { @panel_width_plus_20 -1 }
				maximumsize = { @panel_width_plus_20 -1 }			
				margin_top = 10
				
				### COMPANIES
				flowcontainer = {
					parentanchor = hcenter
					direction = vertical
					minimumsize = { @panel_width -1 }
					maximumsize = { @panel_width -1 }
					visible = "[InformationPanel.IsTabSelected('default')]"
					using = default_content_fade

					empty_state = {
						blockoverride "visible" {
							visible = "[IsDataModelEmpty(AccessPlayer.AccessCompanies)]"
						}
						blockoverride "text" {
							text = "NO_COMPANIES"
						}
					}

					flowcontainer = {
						visible = "[Not(IsDataModelEmpty(AccessPlayer.AccessCompanies))]"
						minimumsize = { @panel_width -1 }
						maximumsize = { @panel_width -1 }
						datamodel = "[AccessPlayer.AccessCompanies]"
						direction = vertical
						parentanchor = hcenter
						widgetanchor = hcenter
						spacing = 5

						item = {
							company_item = {}
						}
					}					
				}
				
				### POTENTIAL COMPANIES
				flowcontainer = {
					parentanchor = hcenter
					direction = vertical
					minimumsize = { @panel_width -1 }
					maximumsize = { @panel_width -1 }
					visible = "[InformationPanel.IsTabSelected('potential_companies')]"
					using = default_content_fade

					empty_state = {
						blockoverride "visible" {
							visible = "[IsDataModelEmpty(AccessPlayer.AccessPotentialCompanies)]"
						}
						blockoverride "text" {
							text = "NO_POTENTIAL_COMPANIES"
						}
					}	
					
					flowcontainer = {
						visible = "[Not(IsDataModelEmpty(AccessPlayer.AccessPotentialCompanies))]"
						minimumsize = { @panel_width -1 }
						maximumsize = { @panel_width -1 }
						datamodel = "[AccessPlayer.AccessPotentialCompanies]"
						direction = vertical
						parentanchor = hcenter
						widgetanchor = hcenter
						spacing = 5

						item = {
							potential_company_item = {}
						}
					}
				}			
			}
		}
	}
	
	type company_item = container {
		minimumsize = { @panel_width 215 }		
		maximumsize = { @panel_width 215 }		
		
		background = {
			using = Background_Area
			margin = { 0 5 }
		}
		
		icon = {
			size = { 120 120 }
			position = { 10 0 }
			parentanchor = vcenter
			alwaystransparent = no
			texture = "[Company.GetCompanyType.GetTexture]"
		}							

		textbox = {
			text = "[Company.GetCompanyType.GetName]"
			default_format = "#header"
			using = fontsize_xl
			align = center|nobaseline
			position = { 0 5 }
			autoresize = yes
			minimumsize = { @panel_width -1 }
			maximumsize = { @panel_width -1 }
		}
		
		button = {
			using = default_button
			position = { 10 -5 }
			size = { 120 40 }
			parentanchor = bottom
			text = "DISBAND_COMPANY"
			onclick = "[Execute(GetPlayer.RemoveCompany(Company.GetCompanyType))]"
			enabled = "[IsValid(GetPlayer.RemoveCompany(Company.GetCompanyType))]"
			tooltip = "[GetPlayer.GetRemoveCompanyDesc(Company.GetCompanyType)]"		
		}
		
		flowcontainer = {
			direction = vertical 
			position = { 135 40 }
		
			flowcontainer = {
				direction = horizontal
				spacing = 5							
				datamodel = "[Company.AccessCompanyType.AccessBuildingTypes]"
				
				item = {
					company_building_item = {}
				}
			}	

			textbox = {				
				text = "COMPANY_PRODUCTIVITY"
				autoresize = yes
				multiline = yes
				align = left|nobaseline
			}	

			textbox = {				
				text = "COMPANY_PROSPERITY"
				autoresize = yes
				multiline = yes
				align = left|nobaseline
			}

			widget = { size = { 10 10 } }			
			
			textbox = {
				text = "COMPANY_PROSPERITY_MODIFIER_HEADER"
				autoresize = yes
				multiline = yes
			}			
			
			textbox = {
				text = "COMPANY_PROSPERITY_MODIFIER"
				alpha = "[Select_float(Company.ProvidesProsperityBonus,'(float)1.0','(float)0.5')]"
				autoresize = yes
				multiline = yes
				minimumsize = { 400 -1 }
				maximumsize = { 400 -1 }
			}			
		}		
	}		
	
	type potential_company_item = container {
		minimumsize = { @panel_width 215 }		
		maximumsize = { @panel_width 215 }		
			
		background = {
			using = Background_Area
			margin = { 0 5 }
		}			
			
		button = {
			using = default_button
			position = { 10 -5 }
			size = { 120 40 }
			parentanchor = bottom
			text = "ESTABLISH_COMPANY"
			onclick = "[Execute(GetPlayer.CreateCompany(CompanyType.Self))]"
			enabled = "[IsValid(GetPlayer.CreateCompany(CompanyType.Self))]"
			tooltip = "[GetPlayer.GetCreateCompanyDesc(CompanyType.Self)]"	
		}		
		
		icon = {
			size = { 120 120 }
			position = { 10 0 }
			parentanchor = vcenter
			alwaystransparent = no
			texture = "[CompanyType.GetTexture]"
		}							

		textbox = {
			text = "[CompanyType.GetName]"
			default_format = "#header"
			using = fontsize_xl
			align = center|nobaseline
			position = { 0 5 }
			autoresize = yes
			minimumsize = { @panel_width -1 }
			maximumsize = { @panel_width -1 }
		}

		flowcontainer = {
			direction = vertical 
			position = { 135 40 }		
		
			flowcontainer = {
				direction = horizontal
				spacing = 5							
				datamodel = "[CompanyType.AccessBuildingTypes]"
				minimumsize = { 275 50 }
				maximumsize = { 275 50 }
				
				item = {
					company_building_item = {}
				}
			}	
			
			textbox = {				
				text = "COMPANY_TYPE_NUM_BUILDING_LEVELS"
				autoresize = yes
				multiline = yes
			}	

			textbox = {				
				text = "COMPANY_TYPE_PRODUCTIVITY"
				autoresize = yes
				multiline = yes
			}	

			widget = { size = { 10 10 } }

			textbox = {
				text = "COMPANY_PROSPERITY_MODIFIER_HEADER"
				autoresize = yes
				multiline = yes
			}			
			
			textbox = {
				text = "COMPANY_TYPE_PROSPERITY_MODIFIER"
				autoresize = yes
				multiline = yes
				minimumsize = { 400 -1 }
				maximumsize = { 400 -1 }
			}	
		}
	}

	type company_building_item = button {
		texture = "[BuildingType.GetTexture]"
		onrightclick = "[RightClickMenuManager.ShowForBuildingType(BuildingType.AccessSelf)]"
		effectname = "NoHighlight"
		distribute_visual_state = no
		inherit_visual_state = no

		size = { 50 50 }

		tooltipwidget = {
			FancyTooltip_BuildingType = {}
		}
	}		
}