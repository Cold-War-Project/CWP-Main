template GDP_tooltip_with_graph
{
	tooltip = "GDP_TOOLTIP"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_gdp = {}
			}
		}
	}
}

template literacy_tooltip_with_graph
{
	tooltip = "LITERACY_TOOLTIP"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_incorporated_literacy = {}
			}
		}
	}
}

template population_tooltip_with_graph 
{
	tooltip = "POP_TOOLTIP"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_population = {}
			}
		}
	}
}

template loyalty_slice_tooltip_with_graph
{
	tooltip = "[LoyaltyType.GetCountryTooltip(Country.Self)]"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_radicals_loyalists = {}
			}
		}
	}
}

template radicals_tooltip_with_graph 
{
	tooltip = "RADICALS_TOOLTIP"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_radicals_loyalists = {}
			}
		}
	}
}

template loyalists_tooltip_with_graph 
{
	tooltip = "LOYALISTS_TOOLTIP"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_radicals_loyalists = {}
			}
		}
	}
}

template ig_radicals_tooltip_with_graph 
{
	tooltip = "IG_RADICALS_TOOLTIP"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_ig_radicals_loyalists = {}
			}
		}
	}
}

template ig_loyalists_tooltip_with_graph 
{
	tooltip = "IG_LOYALISTS_TOOLTIP"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_ig_radicals_loyalists = {}
			}
		}
	}
}

template average_standard_of_living_tooltip_with_graph 
{
	tooltip = "AVG_STANDARD_OF_LIVING_COUNTRY"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_sol = {}
			}
		}
	}
}

template average_standard_of_living_lower_tooltip_with_graph 
{
	tooltip = "COUNTRY_SOL_LOW"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_sol_lower = {}
				v3_plotline_population_lower = {}
			}
		}
	}
}

template average_standard_of_living_middle_tooltip_with_graph 
{
	tooltip = "COUNTRY_SOL_MIDDLE"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_sol_middle = {}
				v3_plotline_population_middle = {}
			}
		}
	}
}

template average_standard_of_living_upper_tooltip_with_graph 
{
	tooltip = "COUNTRY_SOL_UPPER"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_sol_upper = {}
				v3_plotline_population_upper = {}
			}
		}
	}
}

template competitiveness_world_tooltip_with_graph 
{
	tooltip = "TOOLTIP_BUILDING_HEALTH_WORLD"
	tooltipwidget = {
		GraphTooltip_WorldProfitability = {}
	}
}

template competitiveness_building_type_tooltip_with_graph 
{
	tooltip = "TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE"
	tooltipwidget = {
		GraphTooltip_TypeProfitability = {}
	}
}

template productivity_tooltip_with_graph 
{
	tooltip = "TOOLTIP_BUILDING_PRODUCTIVITY"
	tooltipwidget = {
		GraphTooltip_Productivity = {}
	}
}

template building_profitability_tooltip_with_graph 
{
	tooltip = "TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE"
	tooltipwidget = {
		GraphTooltip_TypeProfitability = {}
	}
}

template building_world_profitability_tooltip_with_graph 
{
	tooltip = "TOOLTIP_BUILDING_HEALTH_WORLD"
	tooltipwidget = {
		GraphTooltip_WorldProfitability = {}
	}
}

template cash_reserves_tooltip_with_graph 
{
	tooltip = "BUILDING_CASH_RESERVES_TOOLTIP"
	tooltipwidget = {
		GraphTooltip_CashReserves = {}
	}
}

template clout_tooltip_with_graph 
{
	tooltip = "IG_CLOUT_BREAKDOWN"
	tooltipwidget = {
		GraphTooltip_IGClout = {}
	}
}

template ig_clouts_tooltip_with_graph
{
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_clout = {
					using = default_list_position
				}
			}
		}
	}
}

template in_government_tooltip_with_graph
{
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_clout = {
					using = default_list_position

					blockoverride "datamodel" {
						datamodel = "[AccessPlayer.AccessInterestGroupsInGovernment]"
					}
				}
			}
		}
	}
}

template in_opposition_tooltip_with_graph
{
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_clout = {
					using = default_list_position

					blockoverride "datamodel" {
						datamodel = "[AccessPlayer.AccessInterestGroupsInOpposition]"
					}
				}
			}
		}
	}
}

template marginalized_tooltip_with_graph
{
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline_clout = {
					using = default_list_position

					blockoverride "datamodel" {
						datamodel = "[AccessPlayer.AccessMarginalInterestGroups]"
					}
				}
			}
		}
	}
}

template pop_population_tooltip_with_graph 
{
	tooltip = "POP_POPULATION"
	tooltipwidget = {
		GraphTooltip_PopPopulation = {}
	}
}

template pop_sol_tooltip_with_graph 
{
	tooltip = "TOOLTIP_POP_QOL"
	tooltipwidget = {
		GraphTooltip_PopStandardOfLiving = {}
	}
}

template pop_pol_str_tooltip_with_graph 
{
	tooltip = "POP_POL_STR"
	tooltipwidget = {
		GraphTooltip_PopPoliticalStrength = {}
	}
}

template political_movement_support_tooltip_with_graph 
{
	tooltip = "POLITICAL_MOVEMENT_SUPPORT_TOOLTIP"
	tooltipwidget = {
		GraphTooltip_PoliticalMovementSupport = {}
	}
}

template political_movement_radicalism_tooltip_with_graph 
{
	tooltip = "POLITICAL_MOVEMENT_RADICALISM_TOOLTIP"
	tooltipwidget = {
		GraphTooltip_PoliticalMovementRadicalism = {}
	}
}

template money_tooltip_with_graph 
{
	tooltip = "CAPITAL_MONEY"
	tooltipwidget = {
		TooltipWidgetType = {
			blockoverride "tooltip_content_after" {
				v3_plotline = {
					visible = "[GetMetaPlayer.GetPlayedOrObservedCountry.IsValid]"

					using = default_list_position

					blockoverride "header" {
						text = "BALANCE"
					}
					blockoverride "line_color" {
						color = { .9 .9 .9 1.0 }
					}
					blockoverride "size" {
						size = { 280 100 }
					}
					blockoverride "line_plotpoints" {
						visible = "[Not(IsDynTrendEmpty(GetPlayer.GetBalanceTrend))]"
						plotpoints = "[GetDynTrendPlotPoints(GetPlayer.GetBalanceTrend, GetDynTrendMin(GetPlayer.GetBalanceTrend), GetDynTrendMax(GetPlayer.GetBalanceTrend))]"
					}
					blockoverride "maxvalue" {
						text = "[GetDynTrendMax(GetPlayer.GetBalanceTrend)|K+=]"
					}
					blockoverride "minvalue" {
						text = "[GetDynTrendMin(GetPlayer.GetBalanceTrend)|K+=]"
					}
					blockoverride "startdate" {
						text = "[CalcDynTrendOldestDate(GetPlayer.GetBalanceTrend)]"
					}
					blockoverride "enddate" {
						text = "[CalcDynTrendLatestDate(GetPlayer.GetBalanceTrend)]"
					}
					blockoverride "multiitem" {}

					blockoverride "extra_plotlines" {
						plotline = {
							visible = "[And(GreaterThan_CFixedPoint(GetDynTrendMax(GetPlayer.GetBalanceTrend), '(CFixedPoint)0'), LessThan_CFixedPoint(GetDynTrendMin(GetPlayer.GetBalanceTrend), '(CFixedPoint)0'))]"
							size = { 100% 100% }
							using = plot_line
							width = 3.5
							color = { 0 0 0 0.5 }
							plotpoints = "[GetPlayer.GetZeroBalancePlotPoints]"
						}
					}
					blockoverride "empty_state_visibility" {
						visible = "[IsDynTrendEmpty(GetPlayer.GetBalanceTrend)]"
					}
					blockoverride "empty_state_text" {
						text = "GRAPH_NOT_INITIALIZED"
					}
				}

				v3_plotline = {
					visible = "[GetMetaPlayer.GetPlayedOrObservedCountry.IsValid]"

					using = default_list_position

					blockoverride "header" {
						text = "MONEY"
					}
					blockoverride "line_color" {
						color = { .9 .9 .9 1.0 }
					}
					blockoverride "size" {
						size = { 280 100 }
					}
					blockoverride "line_plotpoints" {
						visible = "[Not(IsDynTrendEmpty(GetPlayer.GetGoldReservesTrend))]"
						plotpoints = "[GetDynTrendPlotPoints(GetPlayer.GetGoldReservesTrend, Negate_CFixedPoint(GetPlayer.GetMaxCredit), GetDynTrendMax( GetPlayer.GetGoldReservesTrend ))]"
					}
					blockoverride "maxvalue" {
						text = "[GetDynTrendMax(GetPlayer.GetGoldReservesTrend)|K]"
					}
					blockoverride "minvalue" {
						text = "[Negate_CFixedPoint(GetPlayer.GetMaxCredit)|K]"
					}
					blockoverride "startdate" {
						text = "[CalcDynTrendOldestDate(GetPlayer.GetGoldReservesTrend)]"
					}
					blockoverride "enddate" {
						text = "[CalcDynTrendLatestDate(GetPlayer.GetGoldReservesTrend)]"
					}
					blockoverride "multiitem" {}

					blockoverride "extra_plotlines" {
						plotline = {
							visible = "[GreaterThan_CFixedPoint(GetDynTrendMax(GetPlayer.GetGoldReservesTrend), '(CFixedPoint)0')]"
							size = { 100% 100% }
							using = plot_line
							width = 3.5
							color = { 0 0 0 0.5 }
							plotpoints = "[GetPlayer.GetZeroMoneyPlotPoints]"
						}
					}
					blockoverride "empty_state_visibility" {
						visible = "[IsDynTrendEmpty(GetPlayer.GetGoldReservesTrend)]"
					}
					blockoverride "empty_state_text" {
						text = "GRAPH_NOT_INITIALIZED"
					}
				}
			}
		}
	}
}

template market_price_tooltip_with_graph 
{
	tooltip = "[Goods.GetMarketPriceDesc]"
	tooltipwidget = {
		GraphTooltip_GoodsPrice = {}
	}
}

template tax_income_tooltip_with_graph
{
	tooltip = "INCOME_TAXES_BREAKDOWN"

	tooltipwidget = {
		GraphTooltip_TaxIncome = {}
	}
}

template tax_poll_tooltip_with_graph
{
	tooltip = "POLL_TAXES_BREAKDOWN"

	tooltipwidget = {
		GraphTooltip_TaxPoll = {}
	}
}

template additional_income_tooltip_with_graph
{
    tooltip = "ADDITIONAL_INCOME_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_AdditionalIncome = {}
    }
}

template minting_tooltip_with_graph
{
    tooltip = "MINTING_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_Minting = {}
    }
}

template tariffs_tooltip_with_graph
{
    tooltip = "TARIFFS_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_Tariffs = {}
    }
}

template government_share_dividends_tooltip_with_graph
{
    tooltip = "GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_GovernmentShareDividends = {}
    }
}

template government_share_losses_tooltip_with_graph
{
    tooltip = "GOVERNMENT_SHARE_LOSSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_GovernmentShareLosses = {}
    }
}

template investment_income_tooltip_with_graph
{
    tooltip = "INVESTMENT_INCOME_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_InvestmentIncome = {}
    }
}

template additional_expenses_tooltip_with_graph
{
    tooltip = "ADDITIONAL_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_AdditionalExpenses = {}
    }
}

template consumption_tax_tooltip_with_graph
{
    tooltip = "CONSUMPTION_TAXES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_ConsumptionTax = {}
    }
}

template dividends_tax_tooltip_with_graph
{
    tooltip = "DIVIDENDS_TAXES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_DividendsTax = {}
    }
}

template diplomatic_pacts_income_tooltip_with_graph
{
    tooltip = "DIPLOMATIC_PACTS_INCOME_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_DiplomaticPactsIncome = {}
    }
}

template government_slaves_expense_tooltip_with_graph
{
    tooltip = "GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_GovernmentSlavesExpense = {}
    }
}

template government_goods_expense_tooltip_with_graph
{
    tooltip = "GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_GovernmentGoodsExpense = {}
    }
}

template government_wages_expense_tooltip_with_graph
{
    tooltip = "GOVERNMENT_WAGES_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_GovernmentWagesExpense = {}
    }
}

template military_slaves_expense_tooltip_with_graph
{
    tooltip = "MILITARY_SLAVES_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_MilitarySlavesExpense = {}
    }
}

template military_goods_expense_tooltip_with_graph
{
    tooltip = "MILITARY_BUILDINGS_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_MilitaryGoodsExpense = {}
    }
}

template military_wages_expense_tooltip_with_graph
{
    tooltip = "MILITARY_WAGES_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_MilitaryWagesExpense = {}
    }
}

template construction_goods_expense_tooltip_with_graph
{
    tooltip = "CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_ConstructionGoodsExpense = {}
    }
}

template subsidies_expense_tooltip_with_graph
{
    tooltip = "SUBSIDIES_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_SubsidiesExpense = {}
    }
}


template welfare_payments_expense_tooltip_with_graph
{
    tooltip = "WELFARE_PAYMENTS_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_WelfarePayments = {}
    }
}


template interest_expense_tooltip_with_graph
{
    tooltip = "INTEREST_EXPENSE_TOOLTIP"

    tooltipwidget = {
        GraphTooltip_InterestExpense = {}
    }
}

template diplomatic_pacts_expense_tooltip_with_graph
{
    tooltip = "DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_DiplomaticPactsExpense = {}
    }
}

template investment_pool_tooltip_with_graph
{
    tooltip = "INVESTMENT_POOL_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_InvestmentPool = {}
    }
}

template total_income_tooltip_with_graph
{
    tooltip = "TOTAL_INCOME_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_TotalIncome = {}
    }
}

template total_expenses_tooltip_with_graph
{
    tooltip = "TOTAL_EXPENSES_BREAKDOWN"

    tooltipwidget = {
        GraphTooltip_TotalExpenses = {}
    }
}

types graph_tooltips {
	type GraphTooltip_GoodsPrice = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				visible = "[Goods.HasPriceTrend]"
				using = default_list_position

				blockoverride "size" {
					size = { 260 100 }
				}
				blockoverride "header" {
					text = "PRICE"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(Goods.GetPriceTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized( Goods.GetPriceTrend, Goods.GetMinPrice, Goods.GetMaxPrice )]"
				}
				blockoverride "maxvalue" {
					raw_text = "[GetPlayer.MakeScope.Var('cwp_currency').GetFlagName] [Goods.GetMaxPrice]"
				}
				blockoverride "minvalue" {
					raw_text = "[GetPlayer.MakeScope.Var('cwp_currency').GetFlagName] [Goods.GetMinPrice]"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(Goods.GetPriceTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(Goods.GetPriceTrend)]"
				}
				blockoverride "multiitem" {}
				
				blockoverride "extra_plotlines" {
					### Base Price line
					plotline = {
						size = { 100% 100% }
						using = plot_line
						width = 2
						color = { 1 0 0 0.5 }
						plotpoints = "[Goods.GetBasePricePlotPoints]"
					}
				}
				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(Goods.GetPriceTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_WorldProfitability = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = WORLD_PROFITABILITY_HEADER
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(Building.GetProfitabilityTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(Building.GetProfitabilityTrend, Min_CFixedPoint('(CFixedPoint)0', GetMin(Building.GetProfitabilityTrend)), Max_CFixedPoint('(CFixedPoint)0', GetMax(Building.GetProfitabilityTrend)))]"
				}
				blockoverride "maxvalue" {
					text = "[Max_CFixedPoint('(CFixedPoint)0', GetMax(Building.GetProfitabilityTrend))|%=+0]"
				}
				blockoverride "minvalue" {
					text = "[Min_CFixedPoint('(CFixedPoint)0', GetMin(Building.GetProfitabilityTrend))|%=+0]"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(Building.GetProfitabilityTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(Building.GetProfitabilityTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(Building.GetProfitabilityTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_TypeProfitability = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = BUILDING_PROFITABILITY_HEADER
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(Building.GetProfitabilityInTypeTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(Building.GetProfitabilityInTypeTrend, Min_CFixedPoint('(CFixedPoint)0', GetMin(Building.GetProfitabilityInTypeTrend)), Max_CFixedPoint('(CFixedPoint)0', GetMax(Building.GetProfitabilityInTypeTrend)))]"
				}
				blockoverride "maxvalue" {
					text = "[Max_CFixedPoint('(CFixedPoint)0', GetMax(Building.GetProfitabilityInTypeTrend))|%=+0]"
				}
				blockoverride "minvalue" {
					text = "[Min_CFixedPoint('(CFixedPoint)0', GetMin(Building.GetProfitabilityInTypeTrend))|%=+0]"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(Building.GetProfitabilityInTypeTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(Building.GetProfitabilityInTypeTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(Building.GetProfitabilityInTypeTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_Productivity = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "YEARLY_AVERAGE_EARNINGS_PER_EMPLOYEE"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(Building.GetEarningsPerEmployeeTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(Building.GetEarningsPerEmployeeTrend, '(CFixedPoint)0', GetMax(Building.GetEarningsPerEmployeeTrend) )]"
				}
				blockoverride "maxvalue" {
					raw_text = "[GetPlayer.MakeScope.Var('cwp_currency').GetFlagName] [GetMax(Building.GetEarningsPerEmployeeTrend)|2]"
				}
				blockoverride "minvalue" {
					raw_text = "0.00"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(Building.GetEarningsPerEmployeeTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(Building.GetEarningsPerEmployeeTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(Building.GetEarningsPerEmployeeTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_CashReserves = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_cash_reserves]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(Building.GetCashReservesTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(Building.GetCashReservesTrend, '(CFixedPoint)0', GetMax(Building.GetCashReservesTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(Building.GetCashReservesTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(Building.GetCashReservesTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(Building.GetCashReservesTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(Building.GetCashReservesTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_TaxIncome = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_income_taxes]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetTaxIncomeTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetTaxIncomeTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetTaxIncomeTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetTaxIncomeTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetTaxIncomeTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetTaxIncomeTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetTaxIncomeTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}
	
	type GraphTooltip_TaxPoll = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_poll_taxes]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetPollTaxTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetPollTaxTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetPollTaxTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetPollTaxTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetPollTaxTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetPollTaxTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetPollTaxTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}	

	type GraphTooltip_AdditionalIncome = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_additional_income]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetAdditionalIncomeTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetAdditionalIncomeTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetAdditionalIncomeTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetAdditionalIncomeTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetAdditionalIncomeTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetAdditionalIncomeTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetAdditionalIncomeTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}
	
	type GraphTooltip_Minting = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_minting]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetMintingTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetMintingTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetMintingTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetMintingTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetMintingTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetMintingTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetMintingTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}
	
	type GraphTooltip_Tariffs = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_tariffs]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetTariffTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetTariffTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetTariffTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetTariffTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetTariffTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetTariffTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetTariffTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}	
	
	type GraphTooltip_GovernmentShareDividends = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "DIVIDENDS_FROM_GOVERNMENT_SHARES"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetGovernmentShareDividendsTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetGovernmentShareDividendsTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetGovernmentShareDividendsTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetGovernmentShareDividendsTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetGovernmentShareDividendsTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetGovernmentShareDividendsTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetGovernmentShareDividendsTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}	

	type GraphTooltip_GovernmentShareLosses = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "LOSSES_FROM_GOVERNMENT_SHARES"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetGovernmentShareLossesTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetGovernmentShareLossesTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetGovernmentShareLossesTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetGovernmentShareLossesTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetGovernmentShareLossesTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetGovernmentShareLossesTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetGovernmentShareLossesTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}		
	
	type GraphTooltip_InvestmentIncome = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_investment_income]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetInvestmentIncomeTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetInvestmentIncomeTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetInvestmentIncomeTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetInvestmentIncomeTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetInvestmentIncomeTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetInvestmentIncomeTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetInvestmentIncomeTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}
	
	type GraphTooltip_AdditionalExpenses = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_additional_expenses]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetAdditionalExpensesTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetAdditionalExpensesTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetAdditionalExpensesTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetAdditionalExpensesTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetAdditionalExpensesTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetAdditionalExpensesTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetAdditionalExpensesTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}
	
	type GraphTooltip_WelfarePayments = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_welfare_payments]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetWelfarePaymentsTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetWelfarePaymentsTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetWelfarePaymentsTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetWelfarePaymentsTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetWelfarePaymentsTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetWelfarePaymentsTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetWelfarePaymentsTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}	

	type GraphTooltip_ConsumptionTax = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_consumption_taxes]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetConsumptionTaxTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetConsumptionTaxTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetConsumptionTaxTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetConsumptionTaxTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetConsumptionTaxTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetConsumptionTaxTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetConsumptionTaxTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_DividendsTax = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_dividends_taxes]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetDividendsTaxTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetDividendsTaxTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetDividendsTaxTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetDividendsTaxTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetDividendsTaxTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetDividendsTaxTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetDividendsTaxTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_DiplomaticPactsIncome = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_diplomatic_pacts]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetDiplomaticPactsIncomeTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetDiplomaticPactsIncomeTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetDiplomaticPactsIncomeTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetDiplomaticPactsIncomeTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetDiplomaticPactsIncomeTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetDiplomaticPactsIncomeTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetDiplomaticPactsIncomeTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_GovernmentSlavesExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_government_slaves]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetGovernmentSlavesExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetGovernmentSlavesExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetGovernmentSlavesExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetGovernmentSlavesExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetGovernmentSlavesExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetGovernmentSlavesExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetGovernmentSlavesExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_GovernmentGoodsExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_goods_for_government_buildings]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetGovernmentGoodsExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetGovernmentGoodsExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetGovernmentGoodsExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetGovernmentGoodsExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetGovernmentGoodsExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetGovernmentGoodsExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetGovernmentGoodsExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_GovernmentWagesExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_government_wages]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetGovernmentWagesExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetGovernmentWagesExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetGovernmentWagesExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetGovernmentWagesExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetGovernmentWagesExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetGovernmentWagesExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetGovernmentWagesExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_MilitarySlavesExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_military_slaves]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetMilitarySlavesExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetMilitarySlavesExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetMilitarySlavesExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetMilitarySlavesExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetMilitarySlavesExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetMilitarySlavesExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetMilitarySlavesExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_MilitaryGoodsExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_goods_for_military_buildings]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetMilitaryGoodsExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetMilitaryGoodsExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetMilitaryGoodsExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetMilitaryGoodsExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetMilitaryGoodsExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetMilitaryGoodsExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetMilitaryGoodsExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_MilitaryWagesExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_military_wages]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetMilitaryWagesExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetMilitaryWagesExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetMilitaryWagesExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetMilitaryWagesExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetMilitaryWagesExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetMilitaryWagesExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetMilitaryWagesExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_ConstructionGoodsExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_construction_goods]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetConstructionGoodsExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetConstructionGoodsExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetConstructionGoodsExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetConstructionGoodsExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetConstructionGoodsExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetConstructionGoodsExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetConstructionGoodsExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_SubsidiesExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_subsidies]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetSubsidiesExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetSubsidiesExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetSubsidiesExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetSubsidiesExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetSubsidiesExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetSubsidiesExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetSubsidiesExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_InterestExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_interest]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetInterestExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetInterestExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetInterestExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetInterestExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetInterestExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetInterestExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetInterestExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_DiplomaticPactsExpense = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_budget_diplomatic_pacts]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetDiplomaticPactsExpenseTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetDiplomaticPactsExpenseTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetDiplomaticPactsExpenseTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetDiplomaticPactsExpenseTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetDiplomaticPactsExpenseTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetDiplomaticPactsExpenseTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetDiplomaticPactsExpenseTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_CountryStandardOfLivingLower = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline_sol_lower = {}
		}
	}
	
	type GraphTooltip_CountryStandardOfLivingMiddle = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline_sol_middle = {}
		}
	}
	
	type GraphTooltip_CountryStandardOfLivingUpper = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline_sol_upper = {}
		}
	}

	type GraphTooltip_InvestmentPool = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_investment_pool]"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetInvestmentFundTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetInvestmentFundTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetInvestmentFundTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetInvestmentFundTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetInvestmentFundTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetInvestmentFundTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetInvestmentFundTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_TotalIncome = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "NATIONAL_REVENUE"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetTotalIncomeTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetTotalIncomeTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetTotalIncomeTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetTotalIncomeTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetTotalIncomeTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetTotalIncomeTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetTotalIncomeTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_TotalExpenses = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "NATIONAL_EXPENSES"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(GetPlayer.GetTotalExpensesTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized(GetPlayer.GetTotalExpensesTrend, '(CFixedPoint)0', GetMax(GetPlayer.GetTotalExpensesTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(GetPlayer.GetTotalExpensesTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(GetPlayer.GetTotalExpensesTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(GetPlayer.GetTotalExpensesTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(GetPlayer.GetTotalExpensesTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_IGClout = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_clout]"
				}
				blockoverride "line_color" {
					color = "[InterestGroup.GetColor]"
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(InterestGroup.GetCloutTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized( InterestGroup.GetCloutTrend, '(CFixedPoint)0', GetMax(InterestGroup.GetCloutTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(InterestGroup.GetCloutTrend)|%0]"
				}
				blockoverride "minvalue" {
					raw_text = "0%"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(InterestGroup.GetCloutTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(InterestGroup.GetCloutTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[EqualTo_string(GetOldestDate(InterestGroup.GetCloutTrend), GetLatestDate(InterestGroup.GetCloutTrend))]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}

				blockoverride "everything_that_is_not_empty_state_visibility" {
					visible = "[Not(EqualTo_string(GetOldestDate(InterestGroup.GetCloutTrend), GetLatestDate(InterestGroup.GetCloutTrend)))]"
				}
			}
		}
	}

	type GraphTooltip_PopPopulation = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "POPULATION"
				}
				blockoverride "line_color" {
					color = "[Pop.GetPopType.GetColor]"
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(Pop.GetSizeTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized( Pop.GetSizeTrend, '(CFixedPoint)0', GetMax(Pop.GetSizeTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(Pop.GetSizeTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(Pop.GetSizeTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(Pop.GetSizeTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(Pop.GetSizeTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_PopStandardOfLiving = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_sol]"
				}
				blockoverride "line_color" {
					color = "[Pop.GetPopType.GetColor]"
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(Pop.GetCurrentStandardOfLivingTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized( Pop.GetCurrentStandardOfLivingTrend, '(CFixedPoint)0', GetMax(Pop.GetCurrentStandardOfLivingTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(Pop.GetCurrentStandardOfLivingTrend)|0]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(Pop.GetCurrentStandardOfLivingTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(Pop.GetCurrentStandardOfLivingTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(Pop.GetCurrentStandardOfLivingTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_PopPoliticalStrength = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_political_strength]"
				}
				blockoverride "line_color" {
					color = "[Pop.GetPopType.GetColor]"
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(Pop.GetPoliticalStrengthTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized( Pop.GetPoliticalStrengthTrend, '(CFixedPoint)0', GetMax(Pop.GetPoliticalStrengthTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(Pop.GetPoliticalStrengthTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(Pop.GetPoliticalStrengthTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(Pop.GetPoliticalStrengthTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(Pop.GetPoliticalStrengthTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
			}
		}
	}

	type GraphTooltip_PoliticalMovementSupport = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_political_movement_support]"
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(PoliticalMovement.GetSupportTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized( PoliticalMovement.GetSupportTrend, '(CFixedPoint)0', GetMax(PoliticalMovement.GetSupportTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(PoliticalMovement.GetSupportTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(PoliticalMovement.GetSupportTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(PoliticalMovement.GetSupportTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(PoliticalMovement.GetSupportTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}
				blockoverride "line_color" {
					color = { .9 .9 .9 1.0 }
				}
			}
		}
	}

	type GraphTooltip_PoliticalMovementRadicalism = TooltipWidgetType {
		blockoverride "tooltip_content_after" {
			v3_plotline = {
				using = default_list_position

				blockoverride "header" {
					text = "[concept_political_movement_radicalism]"
				}
				blockoverride "size" {
					size = { 280 100 }
				}
				blockoverride "line_plotpoints" {
					visible = "[Not(IsEmpty(PoliticalMovement.GetRadicalismTrend))]"
					plotpoints = "[GetTrendPlotPointsNormalized( PoliticalMovement.GetRadicalismTrend, '(CFixedPoint)0', GetMax(PoliticalMovement.GetRadicalismTrend) )]"
				}
				blockoverride "maxvalue" {
					text = "[GetMax(PoliticalMovement.GetRadicalismTrend)|D]"
				}
				blockoverride "minvalue" {
					raw_text = "0"
				}
				blockoverride "startdate" {
					text = "[GetOldestDate(PoliticalMovement.GetRadicalismTrend)]"
				}
				blockoverride "enddate" {
					text = "[GetLatestDate(PoliticalMovement.GetRadicalismTrend)]"
				}
				blockoverride "multiitem" {}

				blockoverride "empty_state_visibility" {
					visible = "[IsEmpty(PoliticalMovement.GetRadicalismTrend)]"
				}
				blockoverride "empty_state_text" {
					text = "GRAPH_NOT_INITIALIZED"
				}

				blockoverride "line_color" {
					color = { 1 0.4 0.35 1 }
				}
			}
		}
	}
}
