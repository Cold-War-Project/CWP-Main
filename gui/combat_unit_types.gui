types combat_unit_types
{
	# Combat unit list item
	type combat_unit_item = widget {
		size = { 253 110 }
			
		widget = {
			size = { 96% 100% }
			parentanchor = hcenter

			background = {
				using = default_bg_nofade
				margin = { -1 -1 }

				# Lighten color
				modify_texture = {
					visible = "[CombatUnit.IsFullyMobilized]"
					texture = "gfx/interface/backgrounds/white.dds" 
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = add
					alpha = 0.05
				}
			}

			# Base background to even out color
			background = {
				using = entry_bg_unit
				alpha = 0.5
			}

			# Go to building and background frame
			button = {
				parentanchor = hcenter
				size = { 100% 100% }

				onclick = "[InformationPanelBar.OpenBuildingDetailsPanel( CombatUnit.GetBuilding )]"
				onrightclick = "[RightClickMenuManager.ShowForBuilding( CombatUnit.GetBuilding )]"

				# Background
				using = entry_bg_unit_dark
				color = "[CombatUnit.GetCountry.GetMapColor]"
				
				gfxtype = buttongfx
				effectname = "NoHighlight"

				# Mouse states
				using = default_mouse_states_animation
				modify_texture = {
					name = "mouse_enter"
					texture = "gfx/interface/buttons/default_button_frame_mouse_enter.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = add
					alpha = 0
				}
				modify_texture = {
					name = "mouse_press"
					texture = "gfx/interface/masks/fade_vertical_bottom.dds"
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = normal
					alpha = 0
				}	
			}

			# Mobilization progress, also used as lit frame
			progressbar_properties = {
				size = { 100% 100% }
				
				# Hide glow when bar is full
				blockoverride "glow_visible" { 
					visible = "[Not(CombatUnit.IsFullyMobilized)]"
				}

				blockoverride "values" {
					min = 0
					max = 1
					value = "[FixedPointToFloat( CombatUnit.GetMobilization )]"
				}

				# Country color
				blockoverride "color" {
					color = "[CombatUnit.GetCountry.GetMapColor]"
				}

				# Unit frame with applied country colo
				blockoverride "progresstexture" {
					texture = "gfx/interface/backgrounds/entry_bg_unit.dds" 
					
					# Lighten color
					modify_texture = {
						texture = "gfx/interface/backgrounds/white.dds" 
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = add
						alpha = 0.5
					}
				}

				# White glow with applied country color
				blockoverride "glow" {
					texture = "gfx/interface/progressbar/progressbar_white_glow.dds"

					# Lighten color
					modify_texture = {
						texture = "gfx/interface/backgrounds/white.dds" 
						spriteType = Corneredstretched
						color = { 2.0 2.0 2.0 1.0 }
						spriteborder = { 0 0 }
						blend_mode = add
					}
				}	
				blockoverride "glow_alpha" {
					alpha = 0.4
				}
				blockoverride "glow_line" {
					texture = "gfx/interface/progressbar/progressbar_white_glow_line.dds"
					alpha = 1.0
				}

				# Remove elements
				blockoverride "frame" { }
				blockoverride "background" { }
				blockoverride "gradient" { }
				
			}

			vbox = {
				layoutpolicy_horizontal = expanding
				flowcontainer = {
					layoutpolicy_horizontal = expanding
					direction = vertical
					margin = { 10 1}

					background = {
						visible = "[Not(CombatUnit.IsFullyMobilized)]"
						using = fade_right_entry_header_colored
						color = "[CombatUnit.GetCountry.GetMapColor]"
						alpha = 0.15
					}
					background = {
						visible = "[CombatUnit.IsFullyMobilized]"
						using = fade_right_entry_header_colored
						color = "[CombatUnit.GetCountry.GetMapColor]"

						# Simple highlight
						modify_texture = {
							texture = "gfx/interface/backgrounds/white.dds" 
							spriteType = Corneredstretched
							spriteborder = { 0 0 }
							blend_mode = add
							alpha = 0.5
						}
					}

					flowcontainer = {
						margin_left = 15

						textbox = {
							autoresize = yes
							visible = "[And( CombatUnit.IsArmyUnit, Not( Or( CombatUnit.IsMobilizing, CombatUnit.IsFullyMobilized )))]"
							text = "COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED"
							tooltip = "COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED_TOOLTIP"
							align = left|nobaseline
						}
						textbox = {
							autoresize = yes
							visible = "[And( CombatUnit.IsArmyUnit, CombatUnit.IsMobilizing )]"
							text = "COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING"
							tooltip = "COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING_TOOLTIP"
							align = left|nobaseline
						}
						textbox = {
							autoresize = yes
							visible = "[And( CombatUnit.IsArmyUnit, CombatUnit.IsFullyMobilized)]"
							text = "COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED"
							tooltip = "COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED_TOOLTIP"
							align = left|nobaseline
						}
						textbox = {
							autoresize = yes
							visible = "[Not(CombatUnit.IsArmyUnit)]"
							text = "combat_unit_flotilla"
							align = left|nobaseline
						}
					}
					
					textbox = {
						autoresize = yes
						maximumsize = { 210 -1 }
						text = "[CombatUnit.GetName]"
						tooltip = "[CombatUnit.GetName]"
						elide = right
						align = left|nobaseline
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 10
					margin = { 10 1 }
					
					# Offense
					textbox = {
						autoresize = yes
						text = "[CombatUnit.GetOffenseFormatted]"
						tooltip = "COMBAT_UNIT_OFFENSE_BREAKDOWN"
						align = left|nobaseline 
					}
					
					# Defense
					textbox = {
						autoresize = yes
						text = "[CombatUnit.GetDefenseFormatted]"
						tooltip = "COMBAT_UNIT_DEFENSE_BREAKDOWN"
						align = left|nobaseline
					}

					# Manpower
					textbox = {
						autoresize = yes
						text = "COMBAT_UNIT_MANPOWER"
						tooltip = "COMBAT_UNIT_MANPOWER_BREAKDOWN"
						align = left|nobaseline
					}

					# Expander widget
					widget = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
					}

					# Morale
					morale_bar = {
						tooltip = "[CombatUnit.GetMoraleTooltip]"
						
						blockoverride "morale_value" {
							value = "[FixedPointToFloat( CombatUnit.GetMoraleRaw )]"
						}
						blockoverride "morale_color" {
							color = "[GetMoraleColorVec( CombatUnit.GetMoraleRaw )]"
						}
					}
				}
			}

			# Unit icon
			widget = {
				position = { -5 -5 }
				icon = {
					texture = "[CombatUnit.GetIconTexture]"
					size = { 28 28 }
				}
			}
		}
	}

	type combat_unit_simple_item = widget {
		size = { 100% 65 }
			
		widget = {
			size = { 96% 100% }
			parentanchor = hcenter

			# Go to building and background frame
			background = {
				using = entry_bg_simple
			}

			vbox = {
				flowcontainer = {
					layoutpolicy_horizontal = expanding
					direction = vertical
					margin = { 10 1}

					background = {
						visible = "[Not(CombatUnit.IsFullyMobilized)]"
						using = fade_right_entry_header_colored
						color = "[CombatUnit.GetCountry.GetMapColor]"
						alpha = 0.33
					}
					background = {
						visible = "[CombatUnit.IsFullyMobilized]"
						using = fade_right_entry_header_colored
						color = "[CombatUnit.GetCountry.GetMapColor]"
					}

					flowcontainer = {
						margin_left = 15
						spacing = 10

						textbox = {
							autoresize = yes
							maximumsize = { 400 -1 }
							text = "[CombatUnit.GetName]"
							tooltip = "[CombatUnit.GetName]"
							elide = right
							align = left|nobaseline
						}

						textbox = {
							autoresize = yes
							visible = "[And( CombatUnit.IsArmyUnit, Not( Or( CombatUnit.IsMobilizing, CombatUnit.IsFullyMobilized )))]"
							text = "COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED"
							tooltip = "COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED_TOOLTIP"
							align = left|nobaseline
						}
						textbox = {
							autoresize = yes
							visible = "[And( CombatUnit.IsArmyUnit, CombatUnit.IsMobilizing )]"
							text = "COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING"
							tooltip = "COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING_TOOLTIP"
							align = left|nobaseline
						}
						textbox = {
							autoresize = yes
							visible = "[And( CombatUnit.IsArmyUnit, CombatUnit.IsFullyMobilized)]"
							text = "COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED"
							tooltip = "COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED_TOOLTIP"
							align = left|nobaseline
						}
						textbox = {
							autoresize = yes
							visible = "[Not(CombatUnit.IsArmyUnit)]"
							text = "combat_unit_flotilla"
							align = left|nobaseline
						}
					}
				}

				hbox = {
					layoutpolicy_horizontal = expanding
					layoutpolicy_vertical = expanding
					spacing = 40
					margin = { 10 1 }
					
					# Offense
					textbox = {
						autoresize = yes
						text = "[CombatUnit.GetOffenseFormatted]"
						tooltip = "[CombatUnit.GetOffenseBreakdown]"
						align = left|nobaseline 
					}
					
					# Defense
					textbox = {
						autoresize = yes
						text = "[CombatUnit.GetDefenseFormatted]"
						tooltip = "[CombatUnit.GetDefenseBreakdown]"
						align = left|nobaseline
					}

					# Manpower
					textbox = {
						autoresize = yes
						raw_text = "[CombatUnit.GetManpowerFormatted]"
						tooltip = "[CombatUnit.GetManpowerTooltip]"
						align = left|nobaseline
					}

					# Expander widget
					widget = {
						layoutpolicy_horizontal = expanding
						layoutpolicy_vertical = expanding
					}


				}
			}

			# Unit icon
			widget = {
				position = { -5 -5 }
				icon = {
					texture = "[CombatUnit.GetIconTexture]"
					size = { 28 28 }
				}
			}

			# Morale
			white_progressbar_vertical = {
				size = { 6 48 }
				position = { -10 0 }
				parentanchor = right|vcenter
				tooltip = "[CombatUnit.GetMoraleTooltip]"
				
				blockoverride "values" {
					min = 0
					max = 1
					value = "[FixedPointToFloat( CombatUnit.GetMoraleRaw )]"
				}
				blockoverride "color" {
					color = "[GetMoraleColorVec( CombatUnit.GetMoraleRaw )]"
				}
			}
		}
	}

	type combat_unit_grid = fixedgridbox {
		addcolumn = 253
		addrow = 120
		datamodel_wrap = 2
		flipdirection = yes

		item = {
			combat_unit_item = {}
		}
	}

	type combat_unit_simple_grid = fixedgridbox {
		addcolumn = 506
		addrow = 72
		datamodel_wrap = 1
		flipdirection = yes

		item = {
			combat_unit_simple_item = {}
		}
	}
}
