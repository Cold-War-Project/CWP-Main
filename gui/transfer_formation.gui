default_popup = {
	name = "transfer_formation_popup"

	blockoverride "header_close_button" {
		onclick = "[PopupManager.HideTransferFormation]"
	}

	blockoverride "header_close_button_visibility" {}

	blockoverride "window_header_name" {
		text = "TRANSFER_POPUP_HEADER"
	}

	blockoverride "scrollarea_content"
	{
		flowcontainer = {
			direction = vertical
			resizeparent = yes
			margin_top = 10

			flowcontainer = {
				parentanchor = hcenter

				### LEFT SIDE
				flowcontainer = {
					direction = vertical
					spacing = 10

					default_header_clean_faded = {
						size = { 400 44 }
						blockoverride "text" {
							text = "FROM_HEADER"
						}
					}

					# SELECTED ORIGIN FORMATION
					military_formation_right_click_item = {
						visible = "[TransferFormationPopup.HasSourceFormation]"
						datacontext = "[TransferFormationPopup.GetSourceFormation]"

						parentanchor = hcenter
						size = { 320 80 }
					
						blockoverride "tooltip" {
							tooltip = "CHANGE_ORIGIN_FORMATION"
						}
					
						blockoverride "onclick" {
							onclick = "[TransferFormationPopup.SelectSourceFormation]"
							onrightclick = "[TransferFormationPopup.DeselectSourceFormation]"
						}
					}

					# SELECT ORIGIN ARMY (+) BUTTON
					button = {
						using = default_button
						using = fontsize_large
						using = default_content_fade

						visible = "[Not(TransferFormationPopup.HasSourceFormation)]"

						parentanchor = hcenter
						size = { 320 80 }

						tooltip = "SELECT_MILITARY_FORMATION_TO_SEND_FROM"

						onclick = "[TransferFormationPopup.SelectSourceFormation]"

						icon = {
							size = { 40 40 }
							texture = "gfx/interface/buttons/button_icons/plus.dds"
							parentanchor = center
						}
					}
				}

				vertical_divider_full = {}

				### RIGHT SIDE
				flowcontainer = {
					direction = vertical
					spacing = 10

					default_header_clean_faded = {
						size = { 400 44 }
						blockoverride "text" {
							text = "TO_HEADER"
						}
					}

					# SELECTED DESTINATION FORMATION
					military_formation_right_click_item = {
						visible = "[TransferFormationPopup.HasTargetFormation]"
						datacontext = "[TransferFormationPopup.GetTargetFormation]"

						parentanchor = hcenter
						size = { 320 80 }
					
						blockoverride "tooltip" {
							tooltip = "CHANGE_DESTINATION_FORMATION"
						}
					
						blockoverride "onclick" {
							onclick = "[TransferFormationPopup.SelectTargetFormation]"
							onrightclick = "[TransferFormationPopup.DeselectTargetFormation]"
						}
					}

					# SELECT DESTINATION ARMY (+) BUTTON
					button = {
						using = default_button
						using = fontsize_large
						using = default_content_fade

						visible = "[Not(TransferFormationPopup.HasTargetFormation)]"

						parentanchor = hcenter
						size = { 320 80 }

						tooltip = "SELECT_MILITARY_FORMATION_TO_SEND_TO"

						onclick = "[TransferFormationPopup.SelectTargetFormation]"

						icon = {
							size = { 40 40 }
							texture = "gfx/interface/buttons/button_icons/plus.dds"
							parentanchor = center
						}
					}
				}
			}

			widget = {
				size = { 20 20 }
			}

			### COMMANDERS
			default_header_clean_faded = {
				using = default_fade_in_out
				size = { 100% 44 }

				blockoverride "text" {
					text = "TRANSFER_FORMATION_SELECT_COMMANDERS_TO_TRANSFER"
				}
			}

			widget = {
				size = { 20 20 }
			}

			dynamicgridbox = {
				visible = "[And(TransferFormationPopup.HasSourceFormation, Not(IsDataModelEmpty(TransferFormationPopup.GetSourceFormation.GetCommanders)))]"
				datamodel = "[TransferFormationPopup.GetSourceFormation.GetCommanders]"
				parentanchor = hcenter
				datamodel_wrap = 6
				flipdirection = yes

				item = {
					widget = {
						size = { 130 100 }

						background = {
							using = entry_bg_simple
						}

						background = {
							visible = "[TransferFormationPopup.IsCommanderSelected( Character.AccessSelf )]"
							using = paper_bg
						}

						icon = {
							visible = "[TransferFormationPopup.IsCommanderSelected( Character.AccessSelf )]"
							using = highlighted_square_selection
						}

						### COMMANDER
						military_formation_commander = {
							parentanchor = vcenter|right
							size = { 80 80 }
							position = { -5 0 }

							blockoverride "portrait" {
								character_portrait_medium = {
									parentanchor = center
									using = tooltip_above

									blockoverride "highlight" {}
								}
							}

							blockoverride "orders_visibility" {
								visible = no
							}
						}

						button_checkbox = {
							parentanchor = vcenter
							size = { 30 30 }
							position = { 10 0 }
							name = "commander_checkbox"
							using = check_button_sound
							tooltip = "SELECT_COMMANDER_TO_TRANSFER"
							using = tooltip_above

							checked = "[TransferFormationPopup.IsCommanderSelected( Character.AccessSelf )]"
							onclick = "[TransferFormationPopup.ToggleCommanderSelected( Character.AccessSelf )]"
						}
					}
				}
			}

			# EMPTY STATE FOR NO ORIGIN FORMATION SELECTED
			empty_state = {
				parentanchor = hcenter

				blockoverride "visible" {
					visible = "[Not(TransferFormationPopup.HasSourceFormation)]"
				}

				blockoverride "text" {
					text = "NO_ORIGIN_FORMATION_SELECTED"
				}
			}

			# EMPTY STATE FOR NO COMMANDERS IN MILITARY FORMATION
			empty_state = {
				parentanchor = hcenter

				blockoverride "visible" {
					visible = "[And(TransferFormationPopup.HasSourceFormation, IsDataModelEmpty(TransferFormationPopup.GetSourceFormation.GetCommanders))]"
				}

				blockoverride "text" {
					text = "NO_COMMANDERS_IN_MILITARY_FORMATION"
				}
			}

			widget = {
				size = { 20 20 }
			}

			### UNITS
			default_header_clean_faded = {
				using = default_fade_in_out
				size = { 100% 44 }

				blockoverride "text" {
					text = "TRANSFER_FORMATION_SELECT_UNITS_TO_TRANSFER"
				}
			}

			# UNIT TYPES FROM SELECTED ORIGIN FORMATION
			dynamicgridbox = {
				parentanchor = hcenter

				visible = "[TransferFormationPopup.HasSourceFormation]"
				datamodel = "[TransferFormationPopup.GetSourceFormation.GetCombatUnitEntries]"

				item = {
					flowcontainer = {
						unit_type_dropdown_with_checkbox = {
							datacontext = "[TransferFormationPopup.GetSourceFormation]"
						}
					}
				}
			}

			# EMPTY STATE FOR NO ORIGIN FORMATION SELECTED
			empty_state = {
				parentanchor = hcenter

				blockoverride "visible" {
					visible = "[Not(TransferFormationPopup.HasSourceFormation)]"
				}

				blockoverride "text" {
					text = "NO_ORIGIN_FORMATION_SELECTED"
				}
			}

			# EMPTY STATE FOR NO UNITS IN MILITARY FORMATION
			empty_state = {
				parentanchor = hcenter

				blockoverride "visible" {
					visible = "[And(TransferFormationPopup.HasSourceFormation, IsDataModelEmpty(TransferFormationPopup.GetSourceFormation.GetCombatUnitEntries))]"
				}

				blockoverride "text" {
					text = "NO_UNITS_IN_MILITARY_FORMATION"
				}
			}
		}
	}

	blockoverride "fixed_bottom" {
		flowcontainer = {
			using = default_list_position
			direction = vertical
			parentanchor = hcenter

			flowcontainer = {
				direction = vertical
				margin = { 20 20 }
				parentanchor = hcenter
				spacing = 10

				textbox = {
					parentanchor = hcenter
					autoresize = yes
					align = nobaseline
					text = "TRANSFER_FORMATION_TRAVEL_TIME_LABEL"
				}

				button = {
					parentanchor = hcenter
					using = default_button_primary_action
					using = ui_pointer_over
					size = { 170 42 }

					clicksound = "[TransferFormationPopup.GetConfirmationSound]"

					enabled = "[IsValid(TransferFormationPopup.Confirm)]"
					onclick = "[Execute(TransferFormationPopup.Confirm)]"
					onclick = "[PopupManager.HideTransferFormation]"

					tooltip = "[TransferFormationPopup.GetConfirmDesc]"
					input_action = "confirm"
					text = "CONFIRM"
				}
			}
		}
	}
}

types transfer_formation_types
{
	type unit_type_dropdown_with_checkbox = flowcontainer {
		direction = vertical

		datacontext = "[MilitaryFormationUnitEntry.GetUnitType]"

		block "minumumsize" {
			minimumsize = { 400 55 }
		}

		background = {
			using = entry_bg_simple
		}

		background = {
			visible = "[TransferFormationPopup.IsUnitTypeSelected( CombatUnitType.AccessSelf )]"
			using = paper_bg
		}

		icon = {
			visible = "[TransferFormationPopup.IsUnitTypeSelected( CombatUnitType.AccessSelf )]"
			using = highlighted_square_selection
		}

		widget = {
			parentanchor = hcenter

			block "header_size" {
				size = { 790 55 }
			}

			hbox = {
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = preferred
				margin = { 10 0 }
				spacing = 5

				button_checkbox = {
					size = { 30 30 }
					name = "unit_type_checkbox"
					using = check_button_sound
					tooltip = "SELECT_UNIT_TYPE_TO_TRANSFER"
					using = tooltip_above

					checked = "[TransferFormationPopup.IsUnitTypeSelected( CombatUnitType.AccessSelf )]"
					onclick = "[TransferFormationPopup.ToggleUnitTypeSelected( CombatUnitType.AccessSelf )]"
				}

				section_header_button = {
					using = default_fade_in_out
					layoutpolicy_horizontal = expanding

					blockoverride "layout" {}

					block "section_header_size" {
						size = { 0 40 }
					}

					textbox = {
						position = { 35 0 }
						parentanchor = vcenter
						autoresize = yes
						align = nobaseline
						text = "[CombatUnitType.GetName]"
					}

					textbox = {
						visible = "[MilitaryFormation.IsArmy]"
						position = { -20 0 }
						parentanchor = right|vcenter
						autoresize = yes
						align = nobaseline
						text = "MILITARY_FORMATION_NUMBER_OF_BATTALIONS"
					}

					textbox = {
						visible = "[MilitaryFormation.IsFleet]"
						position = { -20 0 }
						parentanchor = right|vcenter
						autoresize = yes
						align = nobaseline
						text = "MILITARY_FORMATION_NUMBER_OF_FLOTILLAS"
					}
					
					blockoverride "onclick" {
						onclick = "[GetVariableSystem.Toggle( MilitaryFormationUnitEntry.GetIDString )]"
					}

					blockoverride "onclick_showmore" {
						visible = "[Not(GetVariableSystem.Exists( MilitaryFormationUnitEntry.GetIDString ))]"
					}

					blockoverride "onclick_showless" {
						visible = "[GetVariableSystem.Exists( MilitaryFormationUnitEntry.GetIDString )]"
					}
				}

		
			}
		}

		dynamicgridbox = {
			visible = "[GetVariableSystem.Exists( MilitaryFormationUnitEntry.GetIDString )]"
			flipdirection = yes
			parentanchor = hcenter
			datamodel_wrap = 2
			datamodel = "[MilitaryFormationUnitEntry.GetCombatUnits]"

			background = {
				using = dark_area
			}

			item = {
				widget = {
					size = { 380 40 }

					small_combat_unit_with_checkbox = {
						parentanchor = center
					}
				}
			}
		}
	}

	type small_combat_unit_with_checkbox = widget {
		block "size" {
			size = { 100% 100% }
		}

		background = {
			visible = "[Not(TransferFormationPopup.IsUnitSelected( CombatUnit.AccessSelf ))]"
			using = entry_bg_unit
			alpha = 0.5
		}

		background = {
			visible = "[TransferFormationPopup.IsUnitSelected( CombatUnit.AccessSelf )]"
			using = paper_bg
		}

		hbox = {
			layoutpolicy_horizontal = expanding
			layoutpolicy_vertical = preferred
			margin = { 10 0 }
			spacing = 5

			button_checkbox = {
				size = { 30 30 }
				name = "unit_type_checkbox"
				using = check_button_sound
				tooltip = "SELECT_UNIT_TO_TRANSFER"
				using = tooltip_above

				checked = "[TransferFormationPopup.IsUnitSelected( CombatUnit.AccessSelf )]"
				onclick = "[TransferFormationPopup.ToggleUnitSelected( CombatUnit.AccessSelf )]"
			}

			widget = {
				size = { 300 40 }

				textbox = {
					visible = "[MilitaryFormation.IsArmy]"
					parentanchor = vcenter
					autoresize = yes
					maximumsize = { 200 -1 }
					raw_text = "@battalions! [CombatUnit.GetName]"
					tooltip = "[CombatUnit.GetName]"
					elide = right
					align = left|nobaseline
				}

				textbox = {
					visible = "[MilitaryFormation.IsFleet]"
					parentanchor = vcenter
					autoresize = yes
					maximumsize = { 200 -1 }
					raw_text = "@flotillas! [CombatUnit.GetName]"
					tooltip = "[CombatUnit.GetName]"
					elide = right
					align = left|nobaseline
				}

				# Manpower
				textbox = {
					parentanchor = vcenter
					position = { 210 0 }
					autoresize = yes
					text = "COMBAT_UNIT_MANPOWER"
					tooltip = "COMBAT_UNIT_MANPOWER_BREAKDOWN"
					align = left|nobaseline
					using = text_icon_scale
				}

				# Morale
				morale_bar = {
					parentanchor = vcenter|right
					position = { -10 0 }
					tooltip = "[CombatUnit.GetMoraleTooltip]"
					
					blockoverride "morale_value" {
						value = "[FixedPointToFloat( CombatUnit.GetMoraleRaw )]"
					}
					blockoverride "morale_color" {
						color = "[GetMoraleColorVec( CombatUnit.GetMoraleRaw )]"
					}
				}
			}
		}

		icon = {
			visible = "[TransferFormationPopup.IsUnitSelected( CombatUnit.AccessSelf )]"
			using = highlighted_square_selection
		}
	}
}
