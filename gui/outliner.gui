# todo: use template pinned_overrides when PSGE-2629 is resolved

template outliner_entry_animation {
	state = {
		name = _show
		alpha = 1
		duration = 0.3
	}
	state = {
		name = _hide
		alpha = 0
		duration = 0.3
	}
}

types outliner_types {
	type outliner = outliner_type {
		blockoverride "items" {

			# The framework for the Outliner and the items reusable parts within it are defined in outliner_framework.gui
			# Implementation of the items not defined here are defined in either outliner_pinnable_types.gui or outliner_ongoing_types.gui

			### Ongoing
			flowcontainer = {
				direction = vertical
				margin = { 5 5 }
				spacing = 5
				parentanchor = right
				
				outliner_journal_entries = {
					margin = { 5 0 }
					
					background = {
						using = paper_bg
						alpha = 0.85
						margin = { 0 5 }
					}
				}
				
				outliner_situations = {}
				outliner_un_vote = {}
				outliner_diplomatic_plays = {}
				outliner_diplomatic_pacts = {}
				outliner_civil_wars = {}
				outliner_law_enactment = {}
				outliner_political_movement = {}
				outliner_election = {}
			}

			### Pinned
			flowcontainer = {
				direction = vertical
				margin = { 5 10 }
				
				background = {
					using = default_background
					alpha = 1
					margin_right = 15
					
					modify_texture = {
						texture = "gfx/interface/masks/fade_horizontal_left.dds"
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = alphamultiply
						alpha = 0.5
					}
				}
				
				outliner_interest_groups = {
					blockoverride "visibility" {
						visible = "[OutlinerEntry.IsShownPinned]"
					}
					blockoverride "title_click" {
						onclick = "[OutlinerEntry.TogglePinnedExpanded]"
					}
					blockoverride "list_visibility" {
						visible = "[OutlinerEntry.IsPinnedExpanded]"
					}
					blockoverride "pinnable_expand_buttons" {
						pinned_expand_buttons = {}
					}
					using = outliner_entry_animation
				}
				outliner_commanders = {
					blockoverride "visibility" {
						visible = "[OutlinerEntry.IsShownPinned]"
					}
					blockoverride "title_click" {
						onclick = "[OutlinerEntry.TogglePinnedExpanded]"
					}
					blockoverride "list_visibility" {
						visible = "[OutlinerEntry.IsPinnedExpanded]"
					}
					blockoverride "pinnable_expand_buttons" {
						pinned_expand_buttons = {}
					}
					using = outliner_entry_animation
				}
				outliner_politicians = {
					blockoverride "visibility" {
						visible = "[OutlinerEntry.IsShownPinned]"
					}
					blockoverride "title_click" {
						onclick = "[OutlinerEntry.TogglePinnedExpanded]"
					}
					blockoverride "list_visibility" {
						visible = "[OutlinerEntry.IsPinnedExpanded]"
					}
					blockoverride "pinnable_expand_buttons" {
						pinned_expand_buttons = {}
					}
					using = outliner_entry_animation
				}
				outliner_markets = {
					blockoverride "visibility" {
						visible = "[OutlinerEntry.IsShownPinned]"
					}
					blockoverride "title_click" {
						onclick = "[OutlinerEntry.TogglePinnedExpanded]"
					}
					blockoverride "list_visibility" {
						visible = "[OutlinerEntry.IsPinnedExpanded]"
					}
					blockoverride "pinnable_expand_buttons" {
						pinned_expand_buttons = {}
					}
					using = outliner_entry_animation
				}
				outliner_goods = {
					blockoverride "visibility" {
						visible = "[OutlinerEntry.IsShownPinned]"
					}
					blockoverride "title_click" {
						onclick = "[OutlinerEntry.TogglePinnedExpanded]"
					}
					blockoverride "list_visibility" {
						visible = "[OutlinerEntry.IsPinnedExpanded]"
					}
					blockoverride "pinnable_expand_buttons" {
						pinned_expand_buttons = {}
					}
					using = outliner_entry_animation
				}
				outliner_colonies = {
					blockoverride "visibility" {
						visible = "[OutlinerEntry.IsShownPinned]"
					}
					blockoverride "title_click" {
						onclick = "[OutlinerEntry.TogglePinnedExpanded]"
					}
					blockoverride "list_visibility" {
						visible = "[OutlinerEntry.IsPinnedExpanded]"
					}
					blockoverride "pinnable_expand_buttons" {
						pinned_expand_buttons = {}
					}
					using = outliner_entry_animation
				}
				outliner_states = {
					blockoverride "visibility" {
						visible = "[OutlinerEntry.IsShownPinned]"
					}
					blockoverride "title_click" {
						onclick = "[OutlinerEntry.TogglePinnedExpanded]"
					}
					blockoverride "list_visibility" {
						visible = "[OutlinerEntry.IsPinnedExpanded]"
					}
					blockoverride "pinnable_expand_buttons" {
						pinned_expand_buttons = {}
					}
					using = outliner_entry_animation
				}
				outliner_players = {
					blockoverride "visibility" {
						visible = "[OutlinerEntry.IsShownPinned]"
					}
					blockoverride "title_click" {
						onclick = "[OutlinerEntry.TogglePinnedExpanded]"
					}
					blockoverride "list_visibility" {
						visible = "[OutlinerEntry.IsPinnedExpanded]"
					}
					blockoverride "pinnable_expand_buttons" {
						pinned_expand_buttons = {}
					}
					using = outliner_entry_animation
				}
			}
		}
	}
}
