# COPY-PASTED FOR NOW
@panel_width_minus_30 = 510
@panel_width_minus_20 = 520	
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530


military_formation_change_name_popup_type = {
	name = military_formation_change_name_popup
}

types military_formation_change_name
{
	type military_formation_change_name_popup_type = default_popup
	{
		datacontext = "[MilitaryFormationChangeNamePopup.GetFormation]"

		blockoverride "window_header_name"
		{
			text = "CUSTOMISE_MILITARY_FORMATION"
		}

		blockoverride "header_close_button_visibility"
		{
			visible = yes
		}

		blockoverride "header_close_button"
		{
			visible = yes
			onclick = "[PopupManager.HideMilitaryFormationChangeName]"
		}

		blockoverride "entire_scrollarea"
		{
			flowcontainer = {
				direction = vertical

				#background = {
				#	using = default_background
				#}

				# "Choose Name" section
				flowcontainer = {
					direction = vertical	
					spacing = 10

					textbox = {
						size = { 420 40 }
						align = left|nobaseline
						autoresize = yes
						using = fontsize_large
						text = "FORMATION_NAME"
					}

					# Set a custom name
					editbox = {
						visible = yes
						background = {
							using = text_edit_bg
						}

						# The name is referenced in code. If you change it, it will no longer get properly reset
						name = "formation_name_edit"
						ontextedited = "[MilitaryFormationChangeNamePopup.OnEditName]"
						maxcharacters = 30
						size = { 420 40 }
						margin_left = 10
						alwaystransparent = no
						focuspolicy = all
						focus_on_visible = yes
						align = left|nobaseline
					}
					
					widget = {
						size = { 420 10 }
					}
				}

				# "Choose Formation Flag" section
				flowcontainer = {
					direction = vertical
					spacing = 10

					textbox = {
						size = { 420 40 }
						align = left|nobaseline
						autoresize = yes
						using = fontsize_large
						text = "CHOOSE_FORMATION_FLAG"
					}

					dynamicgridbox = {
						# PRCAL-29157 Remove the # for visible state on next line
						#visible = "[MilitaryFormation.IsArmy]"
						###PRCAL-29157 Needs datamodel to pull all Formation Identifiers icons for Army
						#datamodel = "[GetArmyIdentities]"
						datamodel = "[DataModelRepeatedItem('(int32)20')]"
						datamodel_wrap = 5
						flipdirection = yes

						item = {
							widget = {
								size = { 85 95 }

								set_level_bar_item = {
									blockoverride "button_texture" {
										###PRCAL-29157 Needs function to get the texture from this color
										#texture = "[Color.GetTexture]"
										###PRCAL-29157 Remove next line when function is in
										texture = "gfx/interface/icons/generic_icons/battalions.dds"
									}

									blockoverride "size" {
										size = { 85 95 }
									}

									blockoverride "button_size" {
										size = { 80 80 }
									}

									blockoverride "texture_size" {
										size = { 50 50 }
									}

									blockoverride "selected_frame_size" {
										size = { 80 80 }
									}

									blockoverride "selected_texture_size" {
										size = { 53 53 }
									}

									blockoverride "selected_arrow_size" {	
										size = { 30 17 }
									}

									blockoverride "click" {
										using = budget_coins_lvl_1_button_sound
										block "button_1_click" {
											###PRCAL-29157 Needs function to select the color
											#onclick = "[Execute(MilitaryFormationChangeNamePopup.SelectColor(Color.AccessSelf))]"
											###PRCAL-29157 Remove next line when function is in
											onclick = "[GetVariableSystem.Toggle('military_formation_cool_color')]"
										}
									}

									blockoverride "setvisible" {
										###PRCAL-29157 Add visible state for when a color is selected or not
										#visible = "[MilitaryFormationChangeNamePopup.IsColorSelected(Color.AccessSelf)]"
										###PRCAL-29157 Remove next line when function is in
										visible = "[GetVariableSystem.Exists('military_formation_cool_color')]"
									}

									blockoverride "setvisible_2" {
										###PRCAL-29157 Add visible state for when a color is selected or not
										#visible = "[Not(MilitaryFormationChangeNamePopup.IsColorSelected(Color.AccessSelf))]"
										###PRCAL-29157 Remove next line when function is in
										visible = "[Not(GetVariableSystem.Exists('military_formation_cool_color'))]"
									}
								}
							}
						}
					}

					dynamicgridbox = {
						#visible = "[MilitaryFormation.IsNavy]"
						###PRCAL-29157 Remove next line when data is in
						visible = no
						###PRCAL-29157 Needs datamodel to pull all Formation Identifiers icons for Navy
						#datamodel = "[GetNavyIdentities]"
						datamodel = "[DataModelRepeatedItem('(int32)20')]"
						datamodel_wrap = 5
						flipdirection = yes

						item = {
							widget = {
								size = { 85 95 }

								set_level_bar_item = {
									blockoverride "button_texture" {
										###PRCAL-29157 Needs function to get the texture from this color
										#texture = "[Color.GetTexture]"
										###PRCAL-29157 Remove next line when function is in
										texture = "gfx/interface/icons/generic_icons/battalions.dds"
									}

									blockoverride "size" {
										size = { 85 95 }
									}

									blockoverride "button_size" {
										size = { 80 80 }
									}

									blockoverride "texture_size" {
										size = { 50 50 }
									}

									blockoverride "selected_frame_size" {
										size = { 80 80 }
									}

									blockoverride "selected_texture_size" {
										size = { 53 53 }
									}

									blockoverride "selected_arrow_size" {	
										size = { 30 17 }
									}

									blockoverride "click" {
										using = budget_coins_lvl_1_button_sound
										block "button_1_click" {
											###PRCAL-29157 Needs function to select the color
											#onclick = "[Execute(MilitaryFormationChangeNamePopup.SelectColor(Color.AccessSelf))]"
											###PRCAL-29157 Remove next line when function is in
											onclick = "[GetVariableSystem.Toggle('military_formation_cool_color')]"
										}
									}

									blockoverride "setvisible" {
										###PRCAL-29157 Add visible state for when a color is selected or not
										#visible = "[MilitaryFormationChangeNamePopup.IsColorSelected(Color.AccessSelf)]"
										###PRCAL-29157 Remove next line when function is in
										visible = "[GetVariableSystem.Exists('military_formation_cool_color')]"
									}

									blockoverride "setvisible_2" {
										###PRCAL-29157 Add visible state for when a color is selected or not
										#visible = "[Not(MilitaryFormationChangeNamePopup.IsColorSelected(Color.AccessSelf))]"
										###PRCAL-29157 Remove next line when function is in
										visible = "[Not(GetVariableSystem.Exists('military_formation_cool_color'))]"
									}
								}
							}
						}
					}

					widget = {
						size = { 420 10 }
					}
				}

				# "Choose Flag Colour" section
				flowcontainer = {
					direction = vertical
					spacing = 10

					textbox = {
						size = { 420 40 }
						align = left|nobaseline
						autoresize = yes
						using = fontsize_large
						text = "CHOOSE_FORMATION_FLAG_COLOUR"
					}

					dynamicgridbox = {
						# PRCAL-29157 Remove the # for visible state on next line
						#visible = "[MilitaryFormation.IsArmy]"
						###PRCAL-29157 Needs datamodel to pull all Formation Identifiers colours for Army
						#datamodel = "[GetArmyIdentitiesColour]"
						###PRCAL-29157 Remove next line when datamodel is in
						datamodel = "[DataModelRepeatedItem('(int32)7')]"
						datamodel_wrap = 7
						flipdirection = yes

						item = {
							widget = {
								size = { 61 70 }

								set_level_bar_item = {
									blockoverride "button_texture" {
										###PRCAL-29157 Needs function to get the texture from this color
										#texture = "[Color.GetTexture]"
										###PRCAL-29157 Remove next line when function is in
										texture = "gfx/interface/icons/generic_icons/battalions.dds"
									}

									blockoverride "size" {
										size = { 61 70 }
									}

									blockoverride "button_size" {
										size = { 56 56 }
									}

									blockoverride "texture_size" {
										size = { 32 32 }
									}

									blockoverride "selected_frame_size" {
										size = { 56 56 }
									}

									blockoverride "selected_texture_size" {
										size = { 35 35 }
									}

									blockoverride "selected_arrow_size" {	
										size = { 30 17 }
									}

									blockoverride "click" {
										using = budget_coins_lvl_1_button_sound
										block "button_1_click" {
											###PRCAL-29157 Needs function to select the color
											#onclick = "[Execute(MilitaryFormationChangeNamePopup.SelectColor(Color.AccessSelf))]"
											onclick = "[GetVariableSystem.Toggle('military_formation_cool_color')]"
										}
									}

									blockoverride "setvisible" {
										###PRCAL-29157 Add visible state for when a color is selected or not
										#visible = "[MilitaryFormationChangeNamePopup.IsColorSelected(Color.AccessSelf)]"
										visible = "[GetVariableSystem.Exists('military_formation_cool_color')]"
									}

									blockoverride "setvisible_2" {
										###PRCAL-29157 Add visible state for when a color is selected or not
										#visible = "[Not(MilitaryFormationChangeNamePopup.IsColorSelected(Color.AccessSelf))]"
										visible = "[Not(GetVariableSystem.Exists('military_formation_cool_color'))]"
									}
								}
							}
						}
					}

					dynamicgridbox = {
						#visible = "[MilitaryFormation.IsNavy]"
						###PRCAL-29157 Remove next line when data is in
						visible = no
						###PRCAL-29157 Needs datamodel to pull all Formation Identifiers colours for Navy
						#datamodel = "[GetNavyIdentitiesColour]"
						datamodel = "[DataModelRepeatedItem('(int32)7')]"
						datamodel_wrap = 7
						flipdirection = yes

						item = {
							widget = {
								size = { 64 75 }

								set_level_bar_item = {
									blockoverride "button_texture" {
										###PRCAL-29157 Needs function to get the texture from this color
										#texture = "[Color.GetTexture]"
										###PRCAL-29157 Remove next line when function is in
										texture = "gfx/interface/icons/generic_icons/battalions.dds"
									}

									blockoverride "size" {
										size = { 60 75 }
									}

									blockoverride "button_size" {
										size = { 56 56 }
									}

									blockoverride "texture_size" {
										size = { 40 40 }
									}

									blockoverride "selected_frame_size" {
										size = { 56 56 }
									}

									blockoverride "selected_texture_size" {
										size = { 43 43 }
									}

									blockoverride "selected_arrow_size" {	
										size = { 30 17 }
									}

									blockoverride "click" {
										using = budget_coins_lvl_1_button_sound
										block "button_1_click" {
											###PRCAL-29157 Needs function to select the color
											#onclick = "[Execute(MilitaryFormationChangeNamePopup.SelectColor(Color.AccessSelf))]"
											onclick = "[GetVariableSystem.Toggle('military_formation_cool_color')]"
										}
									}

									blockoverride "setvisible" {
										###PRCAL-29157 Add visible state for when a color is selected or not
										#visible = "[MilitaryFormationChangeNamePopup.IsColorSelected(Color.AccessSelf)]"
										visible = "[GetVariableSystem.Exists('military_formation_cool_color')]"
									}

									blockoverride "setvisible_2" {
										###PRCAL-29157 Add visible state for when a color is selected or not
										#visible = "[Not(MilitaryFormationChangeNamePopup.IsColorSelected(Color.AccessSelf))]"
										visible = "[Not(GetVariableSystem.Exists('military_formation_cool_color'))]"
									}
								}
							}
						}
					}

					widget = {
						size = { 420 10 }
					}
				}
			}
		}

		blockoverride "fixed_bottom"
		{
			# Formation button
			button = {
				using = default_button_action
				parentanchor = hcenter
				size = { 420 50 }
				using = fontsize_large
				enabled = "[IsValid(MilitaryFormationChangeNamePopup.Confirm)]"
				onclick = "[Execute(MilitaryFormationChangeNamePopup.Confirm)]"
				tooltip = "[GetDesc(MilitaryFormationChangeNamePopup.Confirm)]"
				onclick = "[PopupManager.HideMilitaryFormationChangeName]"
				using = default_content_fade

				flowcontainer = {
					parentanchor = center

					textbox = {
						parentanchor = vcenter
						autoresize = yes
						align = center|nobaseline
						text = "CONFIRM"
					}
				}
			}
		}
		
		blockoverride "bottom_margin"
		{
			margin_bottom = 50
		}
	}
}

types military_formation_panel_types
{
	# placeholder
	type smol_combat_unit = widget
	{
		size = { 250 70 }

		background = {
			using = entry_bg_unit
			alpha = 0.5
		}

		### REMOVE UNIT
		button_icon_round_action = {
			parentanchor = right
			position = { -5 5 }
			size = { 25 25 }
			visible = "[MilitaryFormation.GetCountry.IsPlayer]"
			enabled = "[IsValid( MilitaryFormation.GetDisbandUnitCommand( CombatUnit.AccessSelf ) )]"
			onclick = "[Execute( MilitaryFormation.GetDisbandUnitCommand( CombatUnit.AccessSelf ) )]"
			tooltip = "DISBAND_COMBAT_UNIT"

			blockoverride "icon" {
				texture = "gfx/interface/buttons/button_icons/close.dds"
			}
		}

		flowcontainer = {
			direction = vertical
			parentanchor = center
			spacing = 5
			margin_right = 20

			textbox = {
				visible = "[MilitaryFormation.IsArmy]"
				parentanchor = vcenter
				autoresize = yes
				maximumsize = { 210 -1 }
				raw_text = "@battalions! [CombatUnit.GetName]"
				tooltip = "[CombatUnit.GetName]"
				elide = right
				align = left|nobaseline
			}

			textbox = {
				visible = "[MilitaryFormation.IsFleet]"
				parentanchor = vcenter
				autoresize = yes
				maximumsize = { 210 -1 }
				raw_text = "@flotillas! [CombatUnit.GetName]"
				tooltip = "[CombatUnit.GetName]"
				elide = right
				align = left|nobaseline
			}

			flowcontainer = {
				direction = horizontal
				spacing = 20
				
				textbox = {
					parentanchor = vcenter
					autoresize = yes
					text = "[CombatUnit.GetOffenseFormatted]"
					tooltip = "COMBAT_UNIT_OFFENSE_BREAKDOWN"
					align = left|nobaseline
					using = text_icon_scale 
				}
				
				# Defense
				textbox = {
					parentanchor = vcenter
					autoresize = yes
					text = "[CombatUnit.GetDefenseFormatted]"
					tooltip = "COMBAT_UNIT_DEFENSE_BREAKDOWN"
					align = left|nobaseline
					using = text_icon_scale
				}

				# Manpower
				textbox = {
					parentanchor = vcenter
					autoresize = yes
					text = "COMBAT_UNIT_MANPOWER"
					tooltip = "COMBAT_UNIT_MANPOWER_BREAKDOWN"
					align = left|nobaseline
					using = text_icon_scale
				}

				# Morale
				morale_bar = {
					tooltip = "[CombatUnit.GetMoraleTooltip]"
					
					blockoverride "morale_value" {
						value = "[FixedPointToFloat( CombatUnit.GetMoraleRaw )]"
					}
					blockoverride "morale_color" {
						color = "[GetMoraleColorVec( CombatUnit.GetMoraleRaw )]"
					}
				}
			}
		}
	}

	type military_formation_panel = default_block_window
    {
        name = "military_formation_panel"
        datacontext = "[FormationPanel.GetFormation]"

        blockoverride "window_header_name"
        {
            text = "[MilitaryFormation.GetName]"
        }
		blockoverride "window_header_name_line_two"
		{
			text = "MILITARY_FORMATION_IN_LOCATION_SUBTITLE"
		}

		blockoverride "pin_visibility" {
			visible = "[MilitaryFormation.GetCountry.IsLocalPlayer]"
		}

		blockoverride "pin_properties" {
			visible = "[MilitaryFormation.IsPinnedInOutliner]"
			onclick = "[MilitaryFormation.TogglePinInOutliner]"
			tooltip = "UNPIN_MILITARY_FORMATION"
		}

		blockoverride "unpin_properties" {
			visible = "[Not(MilitaryFormation.IsPinnedInOutliner)]"
			onclick = "[MilitaryFormation.TogglePinInOutliner]"
			tooltip = "PIN_MILITARY_FORMATION"
		}

		blockoverride "goto_visibility" {}

		blockoverride "goto_properties" {
			### TODO add a function to zoom to the current location of the Military Formation + tooltip
			onclick = "[MilitaryFormation.ZoomToMapMarkerPosition]"
			tooltip = "ZOOM_TO_MILITARY_FORMATION"
			enabled = "[Not( MilitaryFormation.IsZoomingToMapMarkerPosition )]"
		}
		
		
		blockoverride "edit_visibility" {
			visible = yes
		}
		
		blockoverride "edit_tooltip" {
			tooltip = "CHANGE_NAME"
		}
		
		blockoverride "edit_properties" {
			onclick = "[PopupManager.ShowMilitaryFormationChangeName(MilitaryFormation.Self)]"
			#enabled = yes
		}
		

		blockoverride "fixed_top"
		{
			top_illu = {
				datacontext = "[GetPlayer]"

				blockoverride "illu" {
					texture = "gfx/interface/illustrations/top_illus/top_illu_army.dds"
				}

				flowcontainer = {
					parentanchor = center
					spacing = 10

					### ARMY ICON
					icon = {
						visible = "[MilitaryFormation.IsArmy]"
						size = { 30 30 }
						parentanchor = vcenter
						texture = "gfx/interface/icons/generic_icons/battalions.dds"
					}

					### FLEET ICON
					icon = {
						visible = "[MilitaryFormation.IsFleet]"
						size = { 30 30 }
						parentanchor = vcenter
						texture = "gfx/interface/icons/generic_icons/flotillas.dds"
					}

					### NUMBER OF UNITS
					textbox = {
						parentanchor = vcenter
						using = fontsize_mega
						autoresize = yes
						align = center|nobaseline
						text = "MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS"
						tooltip = "MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_TOOLTIP"
					}

					widget = {
						size = { 30 0 }
					}

					### ATTRITION ICON
					textbox = {
						parentanchor = vcenter
						autoresize = yes
						align = left|nobaseline
						using = fontsize_xxl
						tooltip = "[MilitaryFormation.GetAttritionRiskDesc]"
						
						text = "MILITARY_FORMATION_ATTRITION"
					}

					widget = {
						size = { 30 0 }
					}

					### MORALE VALUE
					textbox = {
						parentanchor = vcenter
						autoresize = yes
						align = left|nobaseline
						using = fontsize_xxl
						tooltip = "MILITARY_FORMATION_MORALE_TOOLTIP"
						
						text = "MILITARY_FORMATION_MORALE"
					}

					### MORALE BAR
					morale_bar = {
						size = { 6 24 }
						parentanchor = vcenter
						tooltip = "MILITARY_FORMATION_MORALE_TOOLTIP"
						
						blockoverride "morale_value" {
							value = "[FixedPointToFloat( MilitaryFormation.GetMorale )]"
						}
						blockoverride "morale_color" {
							color = "[GetMoraleColorVec( MilitaryFormation.GetMorale )]"
						}
					}

					widget = {
						size = { 30 0 }
					}

					### EXPENSES
					textbox = {
						parentanchor = vcenter
						text = "MILITARY_FORMATION_EXPENSE"
						autoresize = yes
						align = left|nobaseline
						using = fontsize_xxl
						tooltip = "MILITARY_FORMATION_EXPENSE_TOOLTIP_TAG"
					}
				}
			}

			tab_buttons = {
				# Information
				blockoverride "first_button" {
					text = "MILITARY_FORMATION_PANEL_INFORMATION_TAB"
				}
				blockoverride "first_button_tooltip" {
					tooltip = "MILITARY_FORMATION_PANEL_INFORMATION_TAB"
				}
				blockoverride "first_button_click" {
					onclick = "[InformationPanel.SelectTab('default')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('default')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('default') )]"
				}
				blockoverride "first_button_selected" {
					text = "MILITARY_FORMATION_PANEL_INFORMATION_TAB_SELECTED"
				}
					
				# Mobilization
				blockoverride "second_button" {
					text = "MILITARY_FORMATION_PANEL_MOBILIZATION_TAB"
				}
				blockoverride "second_button_tooltip" {
					tooltip = "MILITARY_FORMATION_PANEL_MOBILIZATION_TAB"
				}
				blockoverride "second_button_click" {
					onclick = "[InformationPanel.SelectTab('mobilization')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[And(Not(IsDataModelEmpty(MilitaryFormation.GetMobilizationOptions)),InformationPanel.IsTabSelected('mobilization'))]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[And(Not(IsDataModelEmpty(MilitaryFormation.GetMobilizationOptions)),Not(InformationPanel.IsTabSelected('mobilization')))]"
				}
				blockoverride "second_button_selected" {
					text = "MILITARY_FORMATION_PANEL_MOBILIZATION_TAB_SELECTED"
				}		
				
				# Modifiers
				blockoverride "third_button" {
					text = "MILITARY_FORMATION_PANEL_MODIFIERS_TAB"
				}
				blockoverride "third_button_tooltip" {
					tooltip = "MILITARY_FORMATION_PANEL_MODIFIERS_TAB"
				}
				blockoverride "third_button_click" {
					onclick = "[InformationPanel.SelectTab('modifiers')]"
				}
				blockoverride "third_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('modifiers')]"
				}
				blockoverride "third_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('modifiers') )]"
				}
				blockoverride "third_button_selected" {
					text = "MILITARY_FORMATION_PANEL_MODIFIERS_TAB_SELECTED"
				}		
			}
		}
		
		blockoverride "scrollarea_content"
		{
			military_formation_panel_overview_content = {
				visible = "[InformationPanel.IsTabSelected('default')]"
				using = default_content_fade
			}

			military_formation_panel_mobilization_content = {
				visible = "[InformationPanel.IsTabSelected('mobilization')]"
				using = default_content_fade
			}

			modifier_list = {
				visible = "[InformationPanel.IsTabSelected('modifiers')]"
				using = default_content_fade
			}
		}

        ### BOTTOM PART
		blockoverride "fixed_bottom"
        {

			military_formation_panel_default_footer = {
				visible = "[And(InformationPanel.IsTabSelected('default'), MilitaryFormation.GetCountry.IsPlayer)]"
			}
			
			military_formation_panel_mobilization_footer = {
				visible = "[And(InformationPanel.IsTabSelected('mobilization'), MilitaryFormation.GetCountry.IsPlayer)]"
			}
        }
    }
	
	type military_formation_panel_overview_content = flowcontainer {
		direction = vertical
		using = default_list_position
		spacing = 10

		### COMMANDERS
		default_header = {
			using = default_fade_in_out

			blockoverride "text" {
				text = "MILITARY_FORMATION_COMMANDERS"
			}
		}

		dynamicgridbox = {
			visible = "[Not(IsDataModelEmpty(MilitaryFormation.GetCommandersWithRecruitableSlot))]"
			datamodel = "[MilitaryFormation.GetCommandersWithRecruitableSlot]"
			parentanchor = hcenter
			datamodel_wrap = "[GetDefine('NMilitary','MAX_NUM_COMMANDERS_PER_FORMATION')]"
			flipdirection = yes

			item = {
				widget = {
					size = { 120 110 }

					### COMMANDER
					military_formation_commander = {
						visible = "[Character.IsValid]"
					}

					### RECRUIT GENERAL
					add_character_button = {
						visible = "[And(Not(Character.IsValid), MilitaryFormation.IsArmy)]"
						size = { 110 110 }
						parentanchor = center
						
						blockoverride "tooltip" {
							tooltip = "RECRUIT_CHARACTER_GENERAL"
						}

						blockoverride "onclick" {
							onclick = "[PopupManager.ToggleRecruitFormationGeneral( MilitaryFormation.Self )]"
						}
					}

					### RECRUIT ADMIRAL
					add_character_button = {
						visible = "[And(Not(Character.IsValid), MilitaryFormation.IsFleet)]"
						size = { 110 110 }
						parentanchor = center

						blockoverride "tooltip" {
							tooltip = "RECRUIT_CHARACTER_ADMIRAL"
						}

						blockoverride "onclick" {
							onclick = "[PopupManager.ToggleRecruitFormationAdmiral( MilitaryFormation.Self )]"
						}
					}

				}
			}
		}

		flowcontainer = {
			visible = "[IsDataModelEmpty(MilitaryFormation.GetCommandersWithRecruitableSlot)]"
			parentanchor = hcenter
			direction = vertical
			spacing = 5

			textbox = {
				visible = "[MilitaryFormation.IsArmy]"
				parentanchor = hcenter
				align = hcenter|nobaseline
				autoresize = yes
				using = fontsize_large
				using = look_at_me_text_animation
				text = "MILITARY_FORMATION_RECRUIT_GENERAL"
			}

			textbox = {
				visible = "[MilitaryFormation.IsFleet]"
				parentanchor = hcenter
				align = hcenter|nobaseline
				autoresize = yes
				using = fontsize_large
				using = look_at_me_text_animation
				text = "MILITARY_FORMATION_RECRUIT_ADMIRAL"
			}

			### RECRUIT GENERAL
			add_character_button = {
				visible = "[MilitaryFormation.IsArmy]"
				size = { 110 110 }
				parentanchor = hcenter

				blockoverride "tooltip" {
					tooltip = "RECRUIT_CHARACTER_GENERAL"
				}

				blockoverride "onclick" {
					onclick = "[PopupManager.ToggleRecruitFormationGeneral( MilitaryFormation.Self )]"
				}
			}

			### RECRUIT ADMIRAL
			add_character_button = {
				visible = "[MilitaryFormation.IsFleet]"
				size = { 110 110 }
				parentanchor = hcenter

				blockoverride "tooltip" {
					tooltip = "RECRUIT_CHARACTER_ADMIRAL"
				}

				blockoverride "onclick" {
					onclick = "[PopupManager.ToggleRecruitFormationAdmiral( MilitaryFormation.Self )]"
				}
			}
		}

		### UNITS
		default_header = {
			using = default_fade_in_out

			blockoverride "text" {
				text = "MILITARY_FORMATION_UNITS"
			}
		}

		dynamicgridbox = {
			parentanchor = hcenter

			datamodel = "[MilitaryFormation.GetEligibleGroups]"

			item = {
				flowcontainer = {
					margin = { 0 5 }

					military_formation_unit_type_group = {
						visible = "[GreaterThan_int32(MilitaryFormation.GetNumCombatUnitsInGroup(CombatUnitGroup.Self), '(int32)0')]"
					}

					military_formation_unit_type_group_small = {
						visible = "[EqualTo_int32(MilitaryFormation.GetNumCombatUnitsInGroup(CombatUnitGroup.Self), '(int32)0')]"
					}
				}
			}
		}
	}

	type military_formation_commander = widget {
		size = { 100% 100% }

		block "portrait" {
			character_portrait_large = {
				parentanchor = center
				using = tooltip_above

				blockoverride "highlight" {}
			}
		}

		dropdown_menu_round = {
			block "orders_visibility" {
				visible = "[Character.GetCountry.IsPlayer]"
			}

            parentanchor = bottom

            blockoverride "dropdown_properties" {
                datamodel = "[Character.AccessOrders]"
            }

            blockoverride "dropdown_active_item_tooltip" {
            	datacontext = "[Character.GetCommanderOrder.GetType]"
            	tooltip = "CHANGE_COMMANDER_ORDER_TOOLTIP"
            	using = tooltip_above
            }

            blockoverride "dropdown_size" {
                size = { 40 40 }
            }

            blockoverride "dropdown_active_size" {
            	size = { 40 40 }
            }

            blockoverride "dropdown_list_size" {
                size = { 160 40 }
            }

            blockoverride "dropdown_list_maxsize" {
                size = { 160 600 }
            }

        	blockoverride "dropdown_active_item_icon" {
				texture = "[Character.GetCommanderOrder.GetType.GetTexture]"
            }

            blockoverride "dropdown_item_properties" {
                button = {
                    size = { 100% 100% }
	            	clicksound = "[CommanderOrderType.GetClickSound]"
	            	enabled = "[Character.CanSelectOrder( CommanderOrderType.Self )]"
	            	onclick = "[Character.SelectOrder( CommanderOrderType.Self )]"
	            	onclick = "[RightClickMenuManager.Close]"
	            	using = default_button_action
	            	tooltip = "COMMANDER_PANEL_ORDER_TOOLTIP"
                    
                    widget = {
                    	visible = "[ObjectsEqual(Character.GetCommanderOrder.GetType.Self, CommanderOrderType.Self)]"
                    	size = { 100% 100% }

                    	background = {
	                    	using = paper_bg
	                    }
                    }

                    hbox = {
                        layoutpolicy_horizontal = expanding
                        margin_left = 5

                        icon = {
                        	size = { 30 30 }
							texture = "[CommanderOrderType.GetTexture]"
                        }

                        text_single = {
                            layoutpolicy_horizontal = expanding
                            align = nobaseline
                            margin_left = 10
                            default_format = "#clickable"
                           	text = "[CommanderOrderType.GetName]"
                        }

                        expand = {}
                    }

                    icon = {
                    	visible = "[Character.HasOrder( CommanderOrderType.Self )]"
                    	size = { 100% 100% }
                    	using = highlighted_square_selection
                    }
                }
            }
        }
	}

	type military_formation_unit_type_group = flowcontainer {
		direction = vertical
		spacing = 5

		block "minimumsize" {
			minimumsize = { @panel_width 100 }
		}

		background = {
			using = paper_bg
			color = "[CombatUnitGroup.GetUIColor]"
		}

		flowcontainer = {
			spacing = 5

			block "content_margins" {
				margin_top = 10
				margin_left = 10
			}

			icon = {
				#### PLACEHOLDER - Needs Group.GetTexture function
				texture = "gfx/unit_illustrations/unit_battalion_line_infantry_european.dds"
				size = { 130 90 }
			}

			flowcontainer = {
				direction = vertical

				block "info_minimumsize" {
					minimumsize = { 390 -1 }
				}

				### UNIT TYPE GROUP NAME HEADER
				widget = {
					size = { 100% 30 }
					
					background = {
						using = dark_area
					}

					textbox = {
						position = { 10 0 }
						autoresize = yes
						align = nobaseline
						using = fontsize_large
						text = "[CombatUnitGroup.GetName]"
					}
				}

				widget = {
					size = { 100% 60 }

					flowcontainer = {
						parentanchor = vcenter
						position = { 10 0 }
						spacing = 10

						### DEFAULT UNIT
						unit_group_default_unit_button = {
							visible = "[MilitaryFormation.GetCountry.IsPlayer]"
						}

						### RECRUIT UNITS
						button_icon_round_map_interaction = {
							visible = "[MilitaryFormation.GetCountry.IsPlayer]"
							size = { 30 30 }
							parentanchor = vcenter
							onclick = "[MilitaryFormation.OnClickRecruitCombatUnit( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.AccessSelf) )]"
							tooltip = "MILITARY_FORMATION_RECRUIT_DEFAULT_UNIT_TYPE_TOOLTIP"

							blockoverride "icon" {
								texture = "gfx/interface/buttons/button_icons/plus.dds"
							}
						}
					}
				}
			}
		}

		section_header_button = {
			visible = "[GreaterThan_int32(MilitaryFormation.GetNumCombatUnitsInGroup(CombatUnitGroup.Self), '(int32)0')]"
			using = default_fade_in_out

			block "section_header_size" {
				size = { @panel_width_minus_10 40 }
			}

			textbox = {
				position = { 35 0 }
				parentanchor = vcenter
				autoresize = yes
				align = nobaseline
				text = "COMBAT_UNIT_TYPES_CONCEPT"
			}

			textbox = {
				position = { -20 0 }
				parentanchor = right|vcenter
				autoresize = yes
				align = nobaseline
				text = "[MilitaryFormation.GetCombatUnitsTypeIcon] [MilitaryFormation.GetNumCombatUnitsInGroup(CombatUnitGroup.Self)|v]"
			}

			blockoverride "onclick" {
				onclick = "[GetVariableSystem.Toggle( CombatUnitGroup.GetIDString )]"
			}

			blockoverride "onclick_showmore" {
				visible = "[Not(GetVariableSystem.Exists( CombatUnitGroup.GetIDString ))]"
			}

			blockoverride "onclick_showless" {
				visible = "[GetVariableSystem.Exists( CombatUnitGroup.GetIDString )]"
			}
		}

		widget = {
			size = { 1 1 }
		}

		dynamicgridbox = {
			visible = "[GetVariableSystem.Exists( CombatUnitGroup.GetIDString )]"
			parentanchor = hcenter
			datamodel = "[MilitaryFormation.GetCombatUnitEntries]"

			item = {
				flowcontainer = {
					visible = "[MilitaryFormationUnitEntry.IsForGroup( CombatUnitGroup.Self )]"
					military_formation_combat_unit = {
						visible = "[GreaterThan_int32(MilitaryFormationUnitEntry.GetCurrentNumUnits, '(int32)0')]"
					}

					military_formation_combat_unit_small = {
						visible = "[EqualTo_int32(MilitaryFormationUnitEntry.GetCurrentNumUnits, '(int32)0')]"
					}
				}
			}
		}
	}

	type military_formation_unit_type_group_small = flowcontainer {
		direction = vertical
		spacing = 5

		block "minimumsize" {
			minimumsize = { @panel_width 40 }
		}

		background = {
			using = paper_bg
			color = "[CombatUnitGroup.GetUIColor]"
		}

		flowcontainer = {
			spacing = 5

			block "content_margins" {
				margin = { 10 10 }
			}

			### COMBAT UNIT NAME HEADER
			widget = {
				size = { @panel_width_minus_20 40 }
				
				background = {
					using = dark_area
				}

				flowcontainer = {
					parentanchor = vcenter
					position = { 10 0 }
					spacing = 10

					textbox = {
						autoresize = yes
						align = nobaseline
						using = fontsize_large
						text = "[CombatUnitGroup.GetName]"
						parentanchor = vcenter
					}

					textbox = {
						parentanchor = vcenter
						autoresize = yes
						align = nobaseline
						using = fontsize_large
						text = "[MilitaryFormation.GetCombatUnitsTypeIcon] [MilitaryFormation.GetNumCombatUnitsInGroup(CombatUnitGroup.Self)|v]"
					}
				}


				flowcontainer = {
					parentanchor = right|vcenter
					position = { -10 0 }
					spacing = 10

					### DEFAULT UNIT
					unit_group_default_unit_button = {
						visible = "[MilitaryFormation.GetCountry.IsPlayer]"

						block "text_max_width" {
							max_width = 250
						}

						blockoverride "size" {
							size = { 250 40 }
						}
					}

					### RECRUIT UNITS
					button_icon_round_map_interaction = {
						visible = "[MilitaryFormation.GetCountry.IsPlayer]"
						size = { 30 30 }
						parentanchor = vcenter
						onclick = "[MilitaryFormation.OnClickRecruitCombatUnit( MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.AccessSelf) )]"
						tooltip = "MILITARY_FORMATION_RECRUIT_DEFAULT_UNIT_TYPE_TOOLTIP"

						blockoverride "icon" {
							texture = "gfx/interface/buttons/button_icons/plus.dds"
						}
					}
				}
			}
		}
	}

	type unit_group_default_unit_button = button {
		using = default_button
		parentanchor = vcenter
		using = tooltip_above
		tooltip = "MILITARY_FORMATION_UNIT_GROUP_DEFAULT_UNIT_TOOLTIP"
		onclick = "[RightClickMenuManager.ShowForSetDefaultCombatUnitType(MilitaryFormation.AccessSelf, CombatUnitGroup.AccessSelf)]"

		textbox = {
			parentanchor = center
			align = nobaseline
			autoresize = yes
			elide = right
			fontsize_min = 14

			block "text_max_width" {
				max_width = 300
			}

			text = "[MilitaryFormation.GetSelectedUnitTypeForGroup(CombatUnitGroup.AccessSelf).GetName]"
		}

		block "size" {
			size = { 300 40 }
		}
	}

	type default_unit_right_click_item = button {
		size = { 400 110 }
		using = default_button
		parentanchor = vcenter
		tooltip = "[CombatUnitType.GetDesc]"
		enabled = "[IsValid( MilitaryFormation.GetSetDefaultUnitTypeCommand( CombatUnitType.AccessSelf ) )]"
		onclick = "[Execute( MilitaryFormation.GetSetDefaultUnitTypeCommand( CombatUnitType.AccessSelf ) )]"

		flowcontainer = {
			margin_left = 10
			parentanchor = vcenter
			spacing = 10

			icon = {
				parentanchor = vcenter
				size = { 130 90 }
				texture = "gfx/unit_illustrations/unit_battalion_line_infantry_european.dds"
			}

			textbox = {
				align = nobaseline
				parentanchor = vcenter
				autoresize = yes
				text = "[CombatUnitType.GetName]"
				using = fontsize_xl
			}
		}
	}

	type default_unit_right_click_item_selected = widget {
		size = { 400 110 }
		parentanchor = vcenter
		tooltip = "[CombatUnitType.GetDesc]"

		background = {
			using = paper_bg
		}

		flowcontainer = {
			margin_left = 10
			parentanchor = vcenter
			spacing = 10

			icon = {
				parentanchor = vcenter
				size = { 130 90 }
				texture = "gfx/unit_illustrations/unit_battalion_line_infantry_european.dds"
			}

			textbox = {
				align = nobaseline
				parentanchor = vcenter
				autoresize = yes
				text = "[CombatUnitType.GetName]"
				using = fontsize_xl
				max_width = 240
				elide = right
				multiline = yes
				fontsize_min = 14
			}
		}

		icon = {
			using = highlighted_square_selection
		}
	}

    type military_formation_panel_mobilization_content = flowcontainer {
        direction = vertical
        using = default_list_position

        ### UNITS
		default_header = {
			using = default_fade_in_out

			blockoverride "text" {
				text = "MOBILIZATION_OPTIONS_HEADER"
			}
		}

		widget = { size = { 5 5 } }

		flowcontainer = {
			direction = vertical
			datamodel = "[MilitaryFormation.GetMobilizationOptions]"

			item = {
				button = {
					enabled = "[IsValid( MobilizationOption.Toggle( FormationPanel.GetFormation ) )]"
					onclick = "[Execute( MobilizationOption.Toggle( FormationPanel.GetFormation ) )]"
					tooltip = "[MobilizationOption.GetTooltipWithToggleDesc( FormationPanel.GetFormation )]"

					tooltipwidget = {
						FancyTooltip_MobilizationOption = {}
					}

					using = default_button_action

					container = {
						resizeparent = yes
						minimumsize = { 550 60 }

						icon = {
							position = { 10 0 }
							size = { 50 50 }
							texture = "[MobilizationOption.GetTexture]"
							parentanchor = left|vcenter
							widgetanchor = left|vcenter
						}	

						textbox = {
							position = { 70 0 }
							using = fontsize_large
							parentanchor = left|vcenter
							align = left|nobaseline
							text = "[MobilizationOption.GetNameNoFormatting]"
							autoresize = yes
							maximumsize = { 440 -1 }
							multiline = yes
						}
						
						icon = {
							visible = "[MobilizationOption.IsActivated(FormationPanel.GetFormation)]"
							position = { -10 0 }
							size = { 30 30 }
							texture = "gfx/interface/icons/generic_icons/green_checkmark.dds"
							parentanchor = right|vcenter
							widgetanchor = right|vcenter
						}

						icon = {
							visible = "[Not(MobilizationOption.IsActivated(FormationPanel.GetFormation))]"
							position = { -10 0 }
							size = { 30 30 }
							texture = "gfx/interface/icons/generic_icons/red_cross.dds"
							parentanchor = right|vcenter
							widgetanchor = right|vcenter
						}
                    }
                }
            }
        }
	}

	type military_formation_combat_unit_small = flowcontainer {
		direction = vertical
		datacontext = "[MilitaryFormationUnitEntry.GetUnitType]"
		spacing = 5

		block "minimumsize" {
			minimumsize = { @panel_width 40 }
		}

		background = {
			using = paper_bg
			color = "[CombatUnitType.GetGroup.GetUIColor]"
		}

		flowcontainer = {
			spacing = 5

			block "content_margins" {
				margin = { 10 10 }
			}

			### COMBAT UNIT NAME HEADER
			widget = {
				size = { @panel_width_minus_20 40 }
				
				background = {
					using = dark_area
				}

				textbox = {
					position = { 10 0 }
					autoresize = yes
					align = nobaseline
					using = fontsize_large
					text = "[CombatUnitType.GetName]"
					parentanchor = vcenter
				}

				flowcontainer = {
					direction = horizontal
					parentanchor = vcenter|right
					position = { -10 0 }

					### REMOVE UNITS
					button_icon_round_action = {
						visible = "[MilitaryFormation.GetCountry.IsPlayer]"
						size = { 30 30 }
						parentanchor = vcenter
						tooltip = "MILITARY_FORMATION_REMOVE_UNIT_TOOLTIP"
						enabled = "[IsValid( MilitaryFormation.GetDisbandUnitTypeCommand( MilitaryFormationUnitEntry.GetUnitType ) )]"
						onclick = "[Execute( MilitaryFormation.GetDisbandUnitTypeCommand( MilitaryFormationUnitEntry.GetUnitType ) )]"

						blockoverride "icon" {
							texture = "gfx/interface/buttons/button_icons/minus.dds"
						}
					}

					widget = { size = { 15 15 } }

					textbox = {
						visible = "[MilitaryFormation.IsArmy]"
						parentanchor = vcenter
						autoresize = yes
						align = nobaseline
						using = fontsize_large
						text = "MILITARY_FORMATION_NUMBER_OF_BATTALIONS"
						tooltip = "MILITARY_FORMATION_NUMBER_OF_BATTALIONS_TOOLTIP"
					}

					textbox = {
						visible = "[MilitaryFormation.IsFleet]"
						parentanchor = vcenter
						autoresize = yes
						align = nobaseline
						using = fontsize_large
						text = "MILITARY_FORMATION_NUMBER_OF_FLOTILLAS"
						tooltip = "MILITARY_FORMATION_NUMBER_OF_FLOTILLAS_TOOLTIP"
					}

					widget = { size = { 15 15 } }

					### RECRUIT UNITS
					button_icon_round_map_interaction = {
						visible = "[MilitaryFormation.GetCountry.IsPlayer]"
						size = { 30 30 }
						parentanchor = vcenter
						tooltip = "MILITARY_FORMATION_RECRUIT_UNIT_TOOLTIP"
						onclick = "[MilitaryFormation.OnClickRecruitCombatUnit( MilitaryFormationUnitEntry.GetUnitType )]"

						blockoverride "icon" {
							texture = "gfx/interface/buttons/button_icons/plus.dds"
						}
					}
				}
			}
		}
	}

	type military_formation_combat_unit = flowcontainer {
		direction = vertical
		datacontext = "[MilitaryFormationUnitEntry.GetUnitType]"
		spacing = 5

		block "minimumsize" {
			minimumsize = { @panel_width 100 }
		}

		background = {
			using = paper_bg
			color = "[CombatUnitType.GetGroup.GetUIColor]"
		}

		flowcontainer = {
			spacing = 5

			block "content_margins" {
				margin_top = 10
				margin_left = 10
			}

			icon = {
				# placeholder
				texture = "gfx/unit_illustrations/unit_battalion_line_infantry_european.dds"
				size = { 130 90 }
			}

			flowcontainer = {
				direction = vertical

				block "info_minimumsize" {
					minimumsize = { 390 -1 }
				}

				### COMBAT UNIT NAME HEADER
				widget = {
					size = { 100% 30 }
					
					background = {
						using = dark_area
					}

					textbox = {
						parentanchor = vcenter
						position = { 10 0 }
						autoresize = yes
						align = nobaseline
						using = fontsize_large
						text = "[CombatUnitType.GetName]"
						max_width = 360
						elide = right
						fontsize_min = 14
					}
				}

				widget = {
					size = { 100% 60 }

					flowcontainer = {
						direction = horizontal
						parentanchor = vcenter
						position = { 10 0 }

						### REMOVE UNITS
						button_icon_round_action = {
							visible = "[MilitaryFormation.GetCountry.IsPlayer]"
							size = { 30 30 }
							parentanchor = vcenter
							tooltip = "MILITARY_FORMATION_REMOVE_UNIT_TOOLTIP"
							using = tooltip_above
							enabled = "[IsValid( MilitaryFormation.GetDisbandUnitTypeCommand( MilitaryFormationUnitEntry.GetUnitType ) )]"
							onclick = "[Execute( MilitaryFormation.GetDisbandUnitTypeCommand( MilitaryFormationUnitEntry.GetUnitType ) )]"

							blockoverride "icon" {
								texture = "gfx/interface/buttons/button_icons/minus.dds"
							}
						}

						widget = { size = { 15 15 } }

						textbox = {
							visible = "[MilitaryFormation.IsArmy]"
							parentanchor = vcenter
							autoresize = yes
							align = nobaseline
							using = fontsize_large
							text = "MILITARY_FORMATION_NUMBER_OF_BATTALIONS"
							tooltip = "MILITARY_FORMATION_NUMBER_OF_BATTALIONS_TOOLTIP"
						}

						textbox = {
							visible = "[MilitaryFormation.IsFleet]"
							parentanchor = vcenter
							autoresize = yes
							align = nobaseline
							using = fontsize_large
							text = "MILITARY_FORMATION_NUMBER_OF_FLOTILLAS"
							tooltip = "MILITARY_FORMATION_NUMBER_OF_FLOTILLAS_TOOLTIP"
						}

						widget = { size = { 15 15 } }

						### RECRUIT UNITS
						button_icon_round_map_interaction = {
							visible = "[MilitaryFormation.GetCountry.IsPlayer]"
							size = { 30 30 }
							parentanchor = vcenter
							tooltip = "MILITARY_FORMATION_RECRUIT_UNIT_TOOLTIP"
							using = tooltip_above
							onclick = "[MilitaryFormation.OnClickRecruitCombatUnit( MilitaryFormationUnitEntry.GetUnitType )]"

							blockoverride "icon" {
								texture = "gfx/interface/buttons/button_icons/plus.dds"
							}
						}
					}

					flowcontainer = {
						visible = "[MilitaryFormation.GetCountry.IsPlayer]"
						spacing = 10
						parentanchor = right|vcenter
						position = { -10 0 }

						### UPGRADE UNITS
						button_icon_round_action = {
							blockoverride "icon_size" { size = { 75% 75% } }
							size = { 40 40 }
							tooltip = "MILITARY_FORMATION_UPGRADE_UNIT_TOOLTIP"
							using = tooltip_above
							#onclick = "[MilitaryFormation.OnClickUpgradeCombatUnit( MilitaryFormationUnitEntry.GetUnitType )]"

							blockoverride "icon" {
								texture = "gfx/interface/icons/generic_icons/up_up.dds"
							}
						}
					}
				}
			}
		}

		section_header_button = {
			visible = "[GreaterThan_int32(MilitaryFormationUnitEntry.GetCurrentNumUnits, '(int32)0')]"
			using = default_fade_in_out

			block "section_header_size" {
				size = { @panel_width_minus_10 40 }
			}

			textbox = {
				position = { 35 0 }
				parentanchor = vcenter
				autoresize = yes
				align = nobaseline
				text = "COMBAT_UNITS_CONCEPT"
			}

			textbox = {
				visible = "[MilitaryFormation.IsArmy]"
				position = { -20 0 }
				parentanchor = right|vcenter
				autoresize = yes
				align = nobaseline
				text = "MILITARY_FORMATION_NUMBER_OF_BATTALIONS"
			}

			textbox = {
				visible = "[MilitaryFormation.IsFleet]"
				position = { -20 0 }
				parentanchor = right|vcenter
				autoresize = yes
				align = nobaseline
				text = "MILITARY_FORMATION_NUMBER_OF_FLOTILLAS"
			}
			
			blockoverride "onclick" {
				onclick = "[GetVariableSystem.Toggle( MilitaryFormationUnitEntry.GetIDString )]"
			}

			blockoverride "onclick_showmore" {
				visible = "[Not(GetVariableSystem.Exists( MilitaryFormationUnitEntry.GetIDString ))]"
			}

			blockoverride "onclick_showless" {
				visible = "[GetVariableSystem.Exists( MilitaryFormationUnitEntry.GetIDString )]"
			}
		}

		widget = {
			size = { 1 1 }
		}


		dynamicgridbox = {
			visible = "[GetVariableSystem.Exists( MilitaryFormationUnitEntry.GetIDString )]"
			flipdirection = yes
			parentanchor = hcenter
			datamodel_wrap = 2
			datamodel = "[MilitaryFormationUnitEntry.GetCombatUnits]"

			background = {
				using = dark_area
			}

			item = {

				widget = {
					size = { 260 80 }

					smol_combat_unit = {
						parentanchor = center
					}
				}
			}
		}
	}

	type military_formation_panel_default_footer = flowcontainer {
		minimumsize = { @panel_width_plus_14 -1 }
		direction = vertical
		spacing = 5
		using = default_fade_in_out

		divider_clean = {
			size = { @panel_width_plus_14 4 }
		}

		background = {
			using = dark_area
		}

		widget = {
			size = { 5 5 }
		}

		textbox = {
			parentanchor = hcenter
			autoresize = yes
			align = nobaseline
			text = "[MilitaryFormation.GetFormationStatusDesc]"
			maximumsize = { @panel_width -1 }
			multiline = yes
		}
			
		flowcontainer = {
			visible = "[MilitaryFormation.IsArmy]"
			parentanchor = hcenter

			military_formation_mobilize_button = {}

			widget = {
				size = { 5 5 }
			}

			# deploy to front
			button_icon_round_map_interaction = {
				blockoverride "icon_size" { size = { 75% 75% } }
				size = { 60 60 }
				parentanchor = vcenter
				tooltip = "DEPLOY_MILITARY_FORMATION_TO_FRONT_TOOLTIP"
				onclick = "[MilitaryFormation.OnDeployToFrontClicked]"
				enabled = "[MilitaryFormation.IsMobilized]"

				blockoverride "icon" {
					### PLACEHOLDER ICON
					texture = "gfx/interface/icons/commander_order_icons/unused/move.dds"
				}
			}

			# station
			button_icon_round_map_interaction = {
				blockoverride "icon_size" { size = { 75% 75% } }
				size = { 60 60 }
				parentanchor = vcenter
				tooltip = "STATION_MILITARY_FORMATION_TOOLTIP"
				onclick = "[MilitaryFormation.OnStationClicked]"

				blockoverride "icon" {
					### PLACEHOLDER ICON
					texture = "gfx/interface/icons/alert_icons/has_army_in_reserve.dds"
				}
			}

			### TRANSFER UNITS
			button_icon_round = {
				blockoverride "icon_size" { size = { 75% 75% } }
				size = { 60 60 }
				parentanchor = vcenter
				tooltip = "MILITARY_FORMATION_TRANSFER_UNIT_TOOLTIP"
				using = tooltip_above
				onclick = "[PopupManager.ShowTransferFormation( MilitaryFormation.AccessSelf )]"

				blockoverride "icon" {
					texture = "gfx/interface/icons/generic_icons/ongoing_action_both.dds"
				}
			}
		}

		flowcontainer = {
			visible = "[MilitaryFormation.IsFleet]"
			spacing = 10
			parentanchor = hcenter

			# deploy to sea node
			button_icon_round_map_interaction = {
				blockoverride "icon_size" { size = { 75% 75% } }
				size = { 60 60 }
				parentanchor = vcenter
				tooltip = "DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_TOOLTIP"
				onclick = "[MilitaryFormation.OnDeployToSeaNodeClicked]"

				blockoverride "icon" {
					### PLACEHOLDER ICON
					texture = "gfx/interface/icons/generic_icons/unused/sea_region_mm_battle.dds"
				}
			}

			# station
			button_icon_round_map_interaction = {
				blockoverride "icon_size" { size = { 75% 75% } }
				size = { 60 60 }
				parentanchor = vcenter
				tooltip = "STATION_MILITARY_FORMATION_TOOLTIP"
				onclick = "[MilitaryFormation.OnStationClicked]"

				blockoverride "icon" {
					### PLACEHOLDER ICON
					texture = "gfx/interface/icons/alert_icons/has_army_in_reserve.dds"
				}
			}
		}

		### Activate Conscripts
		button = {
			parentanchor = hcenter
			### TODO: REPLACE THIS WITH THE MILITARY FORMATION FUNCTION WHEN CODE SUPPORT IS IN
			#enabled = "[IsValid( GetPlayer.ActivateConscriptionCenters )]"
			visible = no
			using = default_button_action
			size = { 520 50 }
			using = fontsize_large
			using = default_content_fade
			### TODO: REPLACE THIS WITH THE MILITARY FORMATION FUNCTION WHEN CODE SUPPORT IS IN
			onclick = "[GetLensToolbar.ActivateOption('activate_conscription_centers_lens_option')]"
			tooltip = "[GetDesc( GetPlayer.ActivateConscriptionCenters )]"

			textbox = {
				text = "MILITARY_PANEL_ACTIVATE_CONSCRIPTS"
				align = center|nobaseline
				parentanchor = center
				margin_left = 55
				size = { 480 50 }
				fontsize_min = 14
				elide = right
			}

			conscription_icon_big = {
				parentanchor = left|vcenter
				position = { 4 0 }
			}
		}
	}
	
	type military_formation_panel_mobilization_footer = flowcontainer {
		minimumsize = { @panel_width_plus_14 -1 }
		direction = vertical
		spacing = 5

		divider_clean = {
			size = { @panel_width_plus_14 4 }
		}

		widget = {
			size = { 5 5 }
		}

		flowcontainer = {
			parentanchor = hcenter
			spacing = 5

			textbox = {
				visible = "[MilitaryFormation.IsMobilized]"
				parentanchor = vcenter
				align = left|vcenter
				autoresize = yes
				text = "[MilitaryFormation.GetMobilizationModifier.GetDescNoGoods]"
			}
			
			widget = { size = { 5 5 } }
			
			flowcontainer = {
				visible = "[Not(MilitaryFormation.IsMobilized)]"
				parentanchor = hcenter
				direction = vertical
				spacing = 5
				
				textbox = {
					align = left|vcenter
					autoresize = yes
					text = "[MilitaryFormation.GetEstimatedMobilizationCostDesc]"
				}
			
				textbox = {
					align = left|vcenter
					autoresize = yes
					raw_text = "Total: [MilitaryFormation.GetEstimatedMobilizationCostFormatted]"
				}
			}
		}

		widget = {
			size = { 5 5 }
		}
	}

	type military_formation_mobilize_button = widget {

		block "size" {
			size = { 330 80 }
		}

		# Mobilize this army button
		button = {
			visible = "[Not(MilitaryFormation.IsMobilized)]"
			using = default_button_action
			using = commander_mobilize_button_sound
			parentanchor = right|vcenter
			enabled = "[IsValid( MilitaryFormation.Mobilize )]"
			onclick = "[Execute( MilitaryFormation.Mobilize )]"
			tooltip = "MOBILIZE_ARMY_TOOLTIP"

			block "button_size" {
				size = { 310 75% }
			}

			textbox = {
				parentanchor = center
				text = "MOBILIZE_ARMY"
				autoresize = yes
				align = nobaseline
				
				block "fontsize" {
					using = fontsize_xxl
				}
			}
		}

		### IS MOBILIZED
		button = {
			visible = "[MilitaryFormation.IsFullyMobilized]"
			using = default_button_action
			parentanchor = right|vcenter
			enabled = "[IsValid( MilitaryFormation.Demobilize )]"
			onclick = "[Execute( MilitaryFormation.Demobilize )]"
			tooltip = "DEMOBILIZE_ARMY_TOOLTIP"

			block "button_size" {
				size = { 310 75% }
			}

			background = {
				using = paper_bg
			}

			textbox = {
				parentanchor = center
				text = "DEMOBILIZE_ARMY"
				autoresize = yes
				align = nobaseline

				block "fontsize" {
					using = fontsize_xxl
				}
			}

			icon = {
				using = highlighted_square_selection
			}
		}

		### IS MOBILIZING
		widget = {
			visible = "[MilitaryFormation.IsMobilizing]"
			parentanchor = right|vcenter

			block "button_size" {
				size = { 380 75% }
			}

			background = {
				using = default_bg_nofade
				margin = { -1 -1 }

				# Lighten color
				modify_texture = {
					visible = "[MilitaryFormation.IsFullyMobilized]"
					texture = "gfx/interface/backgrounds/white.dds" 
					spriteType = Corneredstretched
					spriteborder = { 0 0 }
					blend_mode = add
					alpha = 0.05
				}
			}

			# Mobilization progress, also used as lit frame
			progressbar_properties = {
				size = { 100% 100% }
				
				# Hide glow when bar is full
				blockoverride "glow_visible" { 
					visible = "[Not(MilitaryFormation.IsFullyMobilized)]"
				}

				blockoverride "glow_size" {
					size = { 380 100% }
				}

				blockoverride "values" {
					min = 0
					max = 1
					value = "[FixedPointToFloat( MilitaryFormation.GetMobilizationPercentage )]"
				}

				# Country color
				blockoverride "color" {
					color = "[MilitaryFormation.GetCountry.GetMapColor]"
				}

				# Unit frame with applied country colo
				blockoverride "progresstexture" {
					texture = "gfx/interface/backgrounds/entry_bg_unit.dds" 
					
					# Lighten color
					modify_texture = {
						texture = "gfx/interface/backgrounds/white.dds" 
						spriteType = Corneredstretched
						spriteborder = { 0 0 }
						blend_mode = add
						alpha = 0.5
					}
				}

				# White glow with applied country color
				blockoverride "glow" {
					texture = "gfx/interface/progressbar/progressbar_white_glow.dds"

					# Lighten color
					modify_texture = {
						texture = "gfx/interface/backgrounds/white.dds" 
						spriteType = Corneredstretched
						color = { 2.0 2.0 2.0 1.0 }
						spriteborder = { 0 0 }
						blend_mode = add
					}
				}	
				blockoverride "glow_alpha" {
					alpha = 0.4
				}
				blockoverride "glow_line" {
					texture = "gfx/interface/progressbar/progressbar_white_glow_line.dds"
					alpha = 1.0
				}

				# Remove elements
				blockoverride "frame" {}
				blockoverride "background" {}
				blockoverride "gradient" {}
			}

			textbox = {
				parentanchor = center
				text = "MILITARY_FORMATION_IS_MOBILIZING"
				autoresize = yes
				align = nobaseline
				
				block "fontsize" {
					using = fontsize_xxl
				}
			}
		}

		mobilization_icon_big = {
			parentanchor = vcenter

			block "mobilization_icon_size" {
				size = { 80 80 }
			}
		}
	}
}
