types banks_panel
{
	type banks_panel = international_org_window {
		visible = "[And(InformationPanelBar.IsPanelOpen('budget'), GetVariableSystem.Exists('banks_panel'))]"
		name = "banks_panel"
		size = { 700 0 }
		background = {
			using = dropdown_background
		}
		blockoverride "animation_state_block" {
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/outliner"
				}
			}

			state = {
				name = _hide
			}
		}
		blockoverride "header_close_button" {
			onclick = "[GetVariableSystem.Clear('banks_panel')]" 
		}

		blockoverride "window_header_name" {
			margin_left = 15
			raw_text = "[concept_central_bank]"
		}

		blockoverride "scrollarea_content"
		{
			scrollbox = {
				minimumsize = { 650 750 }
				layoutpolicy_horizontal = expanding
				layoutpolicy_vertical = expanding
				blockoverride "scrollbox_content" {
					vbox = {
						datamodel_wrap = 1
						spacing = 20
						datamodel = "[GetGlobalList('central_bank_ordered_list')]"
						item = {
							flowcontainer = {
								visible = "[Country.Exists]"
								margin_top = 10
								margin_bottom = 10
								layoutpolicy_horizontal = expanding
								direction = vertical
								datacontext = "[Scope.AccessCountry]"
								background = {
									margin = { 10 10 }
									using = dropdown_background
								}
								flowcontainer = {
									minimumsize = { 500 0 }
									margin_bottom = 5
									direction = horizontal
									flowcontainer = {
										margin = { 10 10 }
										small_flag = {
											scale = 1.3
											parentanchor = vcenter
											using = tooltip_above
											datacontext = "[Scope.AccessCountry]"						
											tooltip = "[ContextualDiplomaticPact.GetTooltip]"
										}
									}

									flowcontainer = {
										parentanchor = hcenter
										direction = horizontal
										spacing = 15
										textbox = {
											parentanchor = hcenter
											#align = left
											raw_text = "[Country.GetAdjectiveNoFlag] [concept_central_bank] | [Country.GetCustom('bank_credibility_loc')]"
										}
									}

									hbox = {
										maximumsize = { 500 -1 }
										layoutpolicy_horizontal = expanding
										margin_top = 20
										flowcontainer = {
											direction = vertical
											spacing = 25
											textbox = {
												parentanchor = hcenter
												align = center
												raw_text = "Currency"
											}
											textbox = {
												align = center
												raw_text = "#v [Country.GetCustom('currency_text_loc')][Country.MakeScope.Var('cwp_currency').GetFlagName]#!"
											}
										}
										flowcontainer = {
											direction = vertical
											spacing = 25
											textbox = {
												parentanchor = hcenter
												align = center
												raw_text = "Exchange Rate"
											}
											textbox = {
												margin_top = 20
												align = center
												text = "CURRENCY_VALUE_TOOLTIP"
											}
										}
										flowcontainer = {
											direction = vertical
											spacing = 25
											textbox = {
												align = center
												raw_text = "Value"
											}
											textbox = {
												align = center
												raw_text = "#v [Country.MakeScope.ScriptValue('currency_average_difference_to_global_AI')|d%]#!"
											}
											
										}
										flowcontainer = {
											direction = vertical
											spacing = 25
											textbox = {
												align = center
												raw_text = "Inflation"
											}
											textbox = {
												align = center
												raw_text = "#v [Country.MakeScope.ScriptValue('inflation_value')|d%]#!"
											}
											
										}
									}
									tooltip = "CURRENCY_TOOLTIP"
								}
								flowcontainer = {
									margin_top = 40
									parentanchor = hcenter
									direction = vertical
									button = {
										visible = "[GetScriptedGui('can_buy_currency_visible').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('currency_exchange_country',Country.MakeScope).End)]"
										using = default_button # Approve
										raw_text = "Buy Foreign Currency | #n [Country.MakeScope.ScriptValue('exchange_currency_difference_to_domestic')|d]#! > #p [Country.MakeScope.ScriptValue('buying_foreign_currency_rate')|d]#!"
										enabled = "[GetScriptedGui('can_buy_currency').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('currency_exchange_country',Country.MakeScope).End)]"
										onclick = "[GetScriptedGui('buy_foreign_currency').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('currency_exchange_country',Country.MakeScope).End)]"
										tooltip = "BUY_FOREIGN_CURRENCY_TOOLTIP"
										size = { 350 40 }
									}
									button = {
										visible = "[GetScriptedGui('can_peg_currency_shown').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('currency_exchange_country',Country.MakeScope).End)]"
										using = default_button # Approve
										raw_text = "Peg the [GetPlayer.GetCustom('currency_text_loc')][GetPlayer.MakeScope.Var('cwp_currency').GetFlagName] to [Country.GetCustom('currency_text_loc')][Country.MakeScope.Var('cwp_currency').GetFlagName]"
										enabled = "[GetScriptedGui('can_peg_currency_enabled').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('currency_exchange_country',Country.MakeScope).End)]"
										onclick = "[GetScriptedGui('peg_currency').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('currency_exchange_country',Country.MakeScope).End)]"
										size = { 350 40 }
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
