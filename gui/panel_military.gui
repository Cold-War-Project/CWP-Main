# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types panel_military {
	type tab_army = top_illu {
		size = { @panel_width_plus_20 180 }

		background = {
			block "illu" {
				texture = "gfx/interface/illustrations/top_illus/top_illu_army.dds"
			}
			using = top_illu_properties
		}

		vbox = {
			parentanchor = hcenter
			margin_top = 10
			margin_bottom = 20
		
			hbox = {
				visible = "[InformationPanel.IsTabSelected('army')]"
				layoutpolicy_horizontal = expanding
				margin = { 10 15 }

				# Battalions
				military_panel_unit_info = {}
			}

			big_mobilize_all_button = {}
		}
	}

	type tab_navy = top_illu {
		size = { @panel_width_plus_20 230 }

		background = {
			texture = "gfx/interface/illustrations/top_illus/top_illu_navy.dds"
			using = top_illu_properties
		}
		
		flowcontainer = {
			margin = { 0 20 }
			parentanchor = hcenter
			direction = vertical

			military_panel_flotilla_info = {
			}

			widget = { size = { 1 10 } }
			supply_network_information_small = {
			}
			widget = { size = { 1 10 } }
		}
	}

	type military_panel_unit_info = vbox {
		layoutpolicy_vertical = expanding
		tooltip = "PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP"

		textbox = {
			autoresize = yes
			margin_bottom = 10
			default_format = "#title"
			block "header" {
				text = "REGULARS_AND_CONSCRIPTS"
			}
		}

		hbox = {
			spacing = 30

			### ARMY / FORCELIMIT
			textbox = {
				block "current_unit_count" {
					raw_text = "@battalions![Country.GetRegularBattalions|v]"
				}
				autoresize = yes
				align = left|nobaseline
				using = fontsize_mega
			}

			### ARMY / FORCELIMIT
			textbox = {
				block "current_unit_count" {
					raw_text = "@conscripts!#v [Country.GetConscriptedBattalions]"
				}
				autoresize = yes
				align = left|nobaseline
				using = fontsize_mega
			}
		}

		widget = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
		}

		widget = {
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
		}
	}

	type military_panel_wmd_content = flowcontainer {
		direction = vertical
		tab_wmd = {}
	}

	type military_panel_flotilla_info = flowcontainer {
		parentanchor = hcenter
		direction = vertical 
		spacing = 5

		### ARMY / FORCELIMIT
		textbox = {
			text = "PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS"
			tooltip = "PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP"
			autoresize = yes
			align = left|nobaseline
			parentanchor = hcenter
			using = fontsize_mega
		}

		textbox = {
			text = TOTAL_FLOTILLAS
			parentanchor = hcenter
			autoresize = yes
			align = left|nobaseline
		}

	}

	### MOBILIZATION CONTROLS
	type mobilization_icon = widget {
		visible = no
		size = { 22 22 }
		
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/backgrounds/round_button_bg.dds"
		}
		icon = {
			size = { 100% 100% }
			framesize = { 120 120 }
			texture = "gfx/interface/icons/generic_icons/mobilize_icon.dds"
			block "frame" {
				frame = 0
			}
		}
	}
	
	type icon_with_background_big = widget {
		size = { 60 60 }
		
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/backgrounds/round_button_bg.dds"
		}
		
		icon = {
			parentanchor = center
			framesize = { 120 120 }

			block "icon_size" {
				size = { 100% 100% }
			}

			block "texture" {
				texture = "gfx/interface/icons/generic_icons/mobilize_icon.dds"
			}

			block "frame" {
				frame = 0
			}
		}
	}

	type conscription_icon_big = widget {
		size = { 60 60 }
		
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/backgrounds/round_button_bg.dds"
		}
		
		icon = {
			parentanchor = center
			framesize = { 120 120 }
			size = { 70% 70% }
			texture = "gfx/interface/icons/lens_toolbar_icons/activate_conscription_centers_lens_option.dds"
		}
	}

	type mobilization_controls = widget {
		size = { 535 60 }

		icon = {
			texture = "gfx/interface/animation/smoke.dds"
			size = { 560 180 }
			parentanchor = bottom|hcenter
			position = { 0 60 }
			alpha = 0
			
			modify_texture = {
				name = mask_01
				texture = "gfx/interface/animation/smoke.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = alphamultiply
				
				translate_uv = { 0 0 }
			}
			
			modify_texture = {
				name = mask_02
				texture = "gfx/interface/animation/smoke.dds"
				spriteType = Corneredstretched
				spriteborder = { 0 0 }
				blend_mode = alphamultiply
				
				translate_uv = { 0 -0.5 }
			}
		
			state = {
				name = mobilization_effect
				next = 2
				duration = 0.8
				alpha = 1
				
				modify_texture = {
					name = mask_01
					translate_uv = { 0 0.4 }
				}
				modify_texture = {
					name = mask_02
					translate_uv = { 0 0 }
				}
			}
		
			state = {
				name = 2
				next = reset
				duration = 2.5
				using = Animation_Curve_EaseOut
				alpha = 0
				
				modify_texture = {
					name = mask_01
					translate_uv = { 0 0.8 }
				}
				modify_texture = {
					name = mask_02
					translate_uv = { 0 1 }
				}
			}
			
			state = {
				name = reset
				
				modify_texture = {
					name = mask_01
					translate_uv = { 0 0 }
				}
				modify_texture = {
					name = mask_02
					translate_uv = { 0 -0.5 }
				}
			}		
		}
		
		margin_widget = {
			parentanchor = center
			margin = { 0 6 }
			size = { 0 50 }
			alpha = 0
			
			state = { 
				name = mobilization_effect
				next = effect2
				size = { 530 50 }
				duration = 0.2
				alpha = 0.5
				using = Animation_Curve_Default
			}
			state = { 
				name = effect2
				next = reset
				size = { 530 50 }
				duration = 0.4
				alpha = 0
				using = Animation_Curve_Default
			}
			state = { 
				name = reset
				size = { 0 50 }
			}
			
			icon = {
				size = { 50% 100% }
				texture = "gfx/interface/animation/mobilize_effect.dds"
			}
			icon = {				
				parentanchor = right
				mirror = horizontal
				size = { 50% 100% }
				texture = "gfx/interface/animation/mobilize_effect.dds"				
			}
			
			icon = {				
				parentanchor = hcenter
				size = { 60% 100% }
				texture = "gfx/interface/animation/mobilize_effect2.dds"
				alpha = 0.5
			}
		}
		
		icon_with_background_big = {
			parentanchor = vcenter
		}
	}

	type military_panel_army_content = flowcontainer {
		direction = vertical

		tab_army = {
			visible = "[Country.IsCommittedInDiplomaticPlay]"
		}

		tab_army = {
			visible = "[Not(Country.IsCommittedInDiplomaticPlay)]"
			size = { @panel_width_plus_20 120 }
		}

		default_header_2texts = {
			using = default_list_position
			
			blockoverride "text1" {
				text = "MILITARY_FORMATIONS_ARMY_HEADER"
			}
		}

		widget = { size = { 1 10 }}

		military_formation_list = {}

		widget = { size = { 1 10 }}
	}

	type military_panel_navy_content = flowcontainer {
		direction = vertical

		tab_navy = {}

		textbox = {
			margin_top = 10
			margin_bottom = 20
			parentanchor = hcenter
			autoresize = yes
			maximumsize = { @panel_width -1 }
			minimumsize = { @panel_width -1 }
			multiline = yes
			visible = "[Not(StringIsEmpty(Country.GetSeaNodesMightBeConvoyRaidedInDesc))]"
			text = "[Country.GetSeaNodesMightBeConvoyRaidedInDesc]"
		}

		default_header_2texts = {
			using = default_list_position
			
			blockoverride "text1" {
				text = "MILITARY_FORMATIONS_FLEET_HEADER"
			}
		}

		widget = { size = { 1 10 }}

		military_formation_list = {
			blockoverride "datamodel" {
				datamodel = "[Country.GetMilitaryFormationsFleet]"
			}
		}

		widget = { size = { 1 10 }}
	}

	type panel_military = default_block_window {
		name = "panel_military"
		datacontext = "[PanelMilitary.AccessCountry]"
			
		blockoverride "animation_state_block" {
			state = {
				name = _show
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/military"
				}
			}

			state = {
				name = _hide
				start_sound = {
					soundeffect = "event:/SFX/UI/SideBar/military_stop"
				}
			}
		}
		
		blockoverride "window_header_name"
		{
			text = "MILITARY_PANEL"
		}

		blockoverride "fixed_top"
		{
			tab_buttons = {
				# Army
				blockoverride "first_button" {
					text = "MILITARY_PANEL_TAB_ARMY"
				}
				blockoverride "first_button_tooltip" {
					tooltip = "MILITARY_PANEL_TAB_ARMY"
				}
				blockoverride "first_button_click" {
					onclick = "[InformationPanel.SelectTab('army')]"
				}
				blockoverride "first_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('army')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('army') )]"
				}
				blockoverride "first_button_selected" {
					text = "MILITARY_PANEL_TAB_ARMY_SELECTED"
				}

				# Mobilization
				blockoverride "second_button" {
					text = "MILITARY_FORMATION_PANEL_MOBILIZATION_TAB"
				}
				blockoverride "second_button_tooltip" {
					tooltip = "MILITARY_FORMATION_PANEL_MOBILIZATION_TAB"
				}
				blockoverride "second_button_click" {
					onclick = "[InformationPanel.SelectTab('mobilization')]"
				}
				blockoverride "second_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('mobilization')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('mobilization') )]"
				}
				blockoverride "second_button_selected" {
					text = "MILITARY_FORMATION_PANEL_MOBILIZATION_TAB_SELECTED"
				}

				# WMD
				blockoverride "third_button" {
					raw_text = "WMDs"
				}
				blockoverride "third_button_tooltip" {
					tooltip = "MILITARY_PANEL_TAB_WMD_TOOLTIP"
				}
				blockoverride "third_button_click" {
					onclick = "[InformationPanel.SelectTab('wmd')]"
				}
				blockoverride "third_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('wmd')]"
				}
				blockoverride "third_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('wmd') )]"
				}
				blockoverride "third_button_selected" {
					raw_text = "WMDs"
				}
				
				# Navy
				blockoverride "fourth_button" {
					text = "MILITARY_PANEL_TAB_NAVY"
				}
				blockoverride "fourth_button_tooltip" {
					tooltip = "MILITARY_PANEL_TAB_NAVY"
				}
				blockoverride "fourth_button_click" {
					onclick = "[InformationPanel.SelectTab('navy')]"
				}
				blockoverride "fourth_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('navy')]"
				}
				blockoverride "fourth_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('navy') )]"
				}
				blockoverride "fourth_button_selected" {
					text = "MILITARY_PANEL_TAB_NAVY_SELECTED"
				}
			}
		}

		blockoverride "scrollarea_content" {
			flowcontainer = {
				using = default_list_position
				direction = vertical
				
				military_panel_army_content = {
					visible = "[InformationPanel.IsTabSelected('army')]"
					using = default_fade_in_out
				}
				military_panel_wmd_content = {
					visible = "[InformationPanel.IsTabSelected('wmd')]"
					using = default_fade_in_out
				}
				military_panel_navy_content = {
					visible = "[InformationPanel.IsTabSelected('navy')]"
					using = default_fade_in_out
				}

				flowcontainer = {
					visible = "[InformationPanel.IsTabSelected('mobilization')]"
					direction = vertical

					flowcontainer = {
						direction = vertical
						spacing = 5
						parentanchor = hcenter
						datamodel = "[Country.GetMilitaryFormationsArmy]"
						margin_top = 10
						margin_bottom = 5
						
						item = {
							flowcontainer = {
								direction = vertical
								minimumsize = { 540 -1 }
								margin_bottom = 10
					
								using = entry_bg_fancy
			
								# Name and info header
								container = {
									minimumsize = { @panel_width 35 }

									background = {
										using = fade_right_entry_fancy_header_colored
										color = "[MilitaryFormation.GetCountry.GetMapColor]"
									}
									
									flowcontainer = {
										position = { 12 0 }
										parentanchor = vcenter
										spacing = 2

										icon = {
											size = { 30 30 }
											texture = "[MilitaryFormation.GetFlag]"
											color = "[MilitaryFormation.GetFlagColor]"
											parentanchor = vcenter
										}

										textbox = {
											maximumsize = { 200 -1 }
											parentanchor = vcenter
											multiline = yes
											autoresize = yes
											text = "[MilitaryFormation.GetName]"
											align = nobaseline
											elide = right
											margin_right = 3
										}

										button_icon_goto = {
											parentanchor = vcenter
											size = { 25 25 }
											tooltip = "GO_TO_BUTTON_MILITARY_FORMATION"
											onclick = "[InformationPanelBar.OpenMilitaryFormationPanelTab( MilitaryFormation.AccessSelf, 'default' )]"
										}
									}

									# Formation status
									flowcontainer = {
										position = { -15 0 }
										parentanchor = right|vcenter

										textbox = {
											autoresize = yes
											text = "[MilitaryFormation.GetEstimatedMobilizationCostFormatted]"
											parentanchor = vcenter
											align = right|nobaseline
										}
									}
								}

								dynamicgridbox = {
									maximumsize = { 500 -1 }
									datamodel = "[GetMobilizationOptionGroups]"
									datamodel_wrap = 3
									flipdirection = yes
									parentanchor = hcenter

									item = {
										flowcontainer = {
											direction = vertical

											textbox = {
												text = "[MobilizationOptionGroup.GetNameNoFormatting]"
												autoresize = yes
												align = nobaseline
												default_format = "#title"
												margin_left = 2
											}

											flowcontainer = {
												datamodel = "[MobilizationOptionGroup.GetMobilizationOptions]"
												margin_right = 5
												margin_bottom = 5

												item = {
													mobilization_option_small = {}
												}
											}
										}
									}
								}

								widget = { size = { 5 5 }}
								divider_clean = {
									parentanchor = hcenter
									size = { 520 2 }
								}
								widget = { size = { 5 5 }}

								flowcontainer = {
									parentanchor = hcenter
									spacing = 10

									### UNIT NUMBERS AND MANPOWER
									flowcontainer = {
										parentanchor = vcenter
										spacing = 5
										tooltip = "MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_TOOLTIP"
										minimumsize = { 120 -1 }
										margin_left = 5

										### ARMY ICON
										icon = {
											visible = "[MilitaryFormation.IsArmy]"
											size = { 23 23 }
											parentanchor = vcenter
											texture = "gfx/interface/icons/generic_icons/battalions.dds"
										}

										### FLEET ICON
										icon = {
											visible = "[MilitaryFormation.IsFleet]"
											size = { 23 23 }
											parentanchor = vcenter
											texture = "gfx/interface/icons/generic_icons/flotillas.dds"
										}

										### ARMY - NUMBER OF UNITS
										textbox = {
											parentanchor = vcenter
											autoresize = yes
											align = nobaseline
											text = "MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS"
											using = fontsize_large
											maximumsize = { 90 -1 }
											fontsize_min = 12
										}

										widget = { size = { 1 1 }}

										manpower_bar = {}
									}

									flowcontainer = {
										minimumsize = { 80 -1 }
										spacing = 10 
										tooltip = "MILITARY_FORMATION_MORALE_TOOLTIP"
										parentanchor = vcenter

										### MORALE VALUE
										textbox = {
											parentanchor = vcenter
											autoresize = yes
											align = right|nobaseline

											text = "MILITARY_FORMATION_MORALE"
											minimumsize = { 70 -1 }
										}

										### MORALE BAR
										morale_bar = {
											size = { 6 24 }
											parentanchor = vcenter

											blockoverride "morale_value" {
												value = "[FixedPointToFloat( MilitaryFormation.GetMorale )]"
											}
											blockoverride "morale_color" {
												color = "[GetMoraleColorVec( MilitaryFormation.GetMorale )]"
											}
										}
									}

									flowcontainer = {
										tooltip = "MILITARY_FORMATION_ORGANIZATION_TOOLTIP"
										spacing = 10
										parentanchor = vcenter

										### ORGANIZATION
										textbox = {
											raw_text = "@organization! [MilitaryFormation.GetOrganizationPercentage|%v0]"
											parentanchor = vcenter
											align = right|nobaseline
											minimumsize = { 70 -1 }
										}

										### ORGANIZATION BAR
										organization_bar = {
											size = { 6 24 }
											parentanchor = vcenter
											
											blockoverride "organization_value" {
												value = "[FixedPointToFloat( MilitaryFormation.GetOrganizationPercentage )]"
											}
											blockoverride "organization_color" {
												color = "[GetOrganizationColorVec( MilitaryFormation.GetOrganizationPercentage )]"
											}
										}
									}

									widget = { size = { 1 1 }}
									vertical_divider = {}

									military_formation_mobilize_button = {
										parentanchor = vcenter
										visible = "[MilitaryFormation.IsArmy]"

										blockoverride "size" {
											size = { 180 50 }
										}

										blockoverride "button_size" {
											size = { 160 75% }
										}

										blockoverride "fontsize" {}

										blockoverride "mobilization_icon_size" {
											size = { 50 50 }
										}
									}
								}
							}
						}
					}
				}

				widget = { size = { 1 10 } }
			}
		}

		blockoverride "fixed_bottom" {	
			flowcontainer = {
				direction = vertical
				spacing = 5

				divider_clean = {
					size = { @panel_width_plus_14 4 }
				}

				background = {
					using = dark_area
				}

				widget = {
					size = { 5 5 }
				}

				### CREATE FORMATIONS
				button = {
					using = default_button_map_interaction
					parentanchor = hcenter
					size = { 520 50 }
					using = fontsize_large
					onclick = "[PanelMilitary.OnClickRecruitArmyFormation]"
					enabled = yes
					visible = "[InformationPanel.IsTabSelected('army')]"
					using = default_content_fade

					flowcontainer = {
						parentanchor = center

						icon = {
							size = { 30 30 }
							texture = "gfx/interface/buttons/button_icons/plus.dds"
							parentanchor = vcenter
						}
						
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = center|nobaseline
							text = "CREATE_ARMY_FORMATION"
						}

					}
				}
				button = {
					using = default_button_map_interaction
					parentanchor = hcenter
					size = { 520 50 }
					using = fontsize_large
					enabled = "[GetScriptedGui('wmd_nuclear_can_fire_warheads').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					onclick = "[GetScriptedGui('wmd_fire_nuclear_warheads').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					visible = "[InformationPanel.IsTabSelected('wmd')]"
					using = default_content_fade


					flowcontainer = {
						parentanchor = center

						icon = {
							size = { 30 30 }
							texture = "gfx/interface/icons/goods_icons/nuclear_weapons.dds"
							parentanchor = vcenter
						}
						
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = center|nobaseline
							raw_text = "Fire Warheads"
						}

					}
					tooltip = "FIRE_WARHEADS_TOOLTIP"
				}

				button = {
					using = default_button_map_interaction
					parentanchor = hcenter
					size = { 520 50 }
					using = fontsize_large
					onclick = "[PanelMilitary.OnClickRecruitFleetFormation]"
					enabled = yes
					visible = "[InformationPanel.IsTabSelected('navy')]"
					using = default_content_fade

					flowcontainer = {
						parentanchor = center

						icon = {
							size = { 30 30 }
							texture = "gfx/interface/buttons/button_icons/plus.dds"
							parentanchor = vcenter
						}
						
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = center|nobaseline
							text = "CREATE_FLEET_FORMATION"
						}

					}
				}

				flowcontainer = {
					visible = "[InformationPanel.IsTabSelected('mobilization')]"
					parentanchor = hcenter
					
					big_mobilize_all_button = {}
				}
			}
		}
	}

	type tab_wmd = top_illu {
		maximumsize = { @panel_width_plus_20 -1 }
		minimumsize = { @panel_width_plus_20 1900 }
		background = {
			using = dropdown_background
		}
		wmd_entry = {
			visible = "[GetScriptedGui('can_open_wmd_screen').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			blockoverride "header" {
				raw_text = "Nuclear Weapons"
			}
			blockoverride "header2" {
				raw_text = "[GetPlayer.MakeScope.ScriptValue('nuclear_stockpile_sv')] [concept_nuclear_weapons]"
			}
			wmd_subentry = {
				blockoverride "title" {
					parentanchor = hcenter
					align = center
					raw_text = "Readiness"
					using = header_font_fancy
					fontsize = 30
				}
				blockoverride "entrycontainer" { 
					parentanchor = hcenter
					readiness = {}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "[GetPlayer.GetName] Status"
				}
				blockoverride "entrycontainer" {
					textbox = {
						raw_text = "Active #gold Nuclear Weapons Facilities#!: [GetPlayer.MakeScope.ScriptValue('nuclear_weapons_facility_size_national')|v0] "
					}
					textbox = {
						raw_text = "Monthly [concept_nuclear_weapons]: [GetPlayer.MakeScope.ScriptValue('nuclear_stockpile_sum')|v0] "
					}
					textbox = {
						raw_text = "Active #gold Strategic Airbases#!: [GetPlayer.MakeScope.ScriptValue('strategic_airbase_size_national')|v0] "
					}
					textbox = {
						raw_text = "Active #gold Missile Silos#!: [GetPlayer.MakeScope.ScriptValue('missile_silo_size_national')|v0] "
					}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "Nuclear Attack Strength"
				}
				blockoverride "entrycontainer" {
					textbox = {
						raw_text = "[concept_nuclear_weapons] Arsenal: [GetPlayer.MakeScope.ScriptValue('nuclear_stockpile_sv')|v0] #gold Warheads#!"
					}
					textbox = {
						raw_text = "#v [GetPlayer.MakeScope.Var('nuclear_yield').GetValue|0]kt#! Per Warhead | #v [GetPlayer.MakeScope.ScriptValue('nuclear_strike_values')|0d]#! Total"
					}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "Nuclear Capabilities"
				}
				blockoverride "entrycontainer" {
					textbox = {
						text = "HAS_ATOMIC_CAPABILITY"
					}
					textbox = {
						text = "HAS_THERMONUCLEAR_CAPABILITY"
					}
					textbox = {
						text = "HAS_ICBM_CAPABILITY"
					}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "Global Coverage"
				}
				blockoverride "entrycontainer" {
					flowcontainer = {
						direction = vertical
						spacing = 0
						datamodel = "[GetPlayer.MakeScope.GetList('strategic_regions')]"
						button = {
							size = { 450 40 }
							using = default_button_action
							parentanchor = hcenter
							raw_text = "Average Coverage: [GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('nuclear_strike_global_coverage_avg')|v1% )]"
							onclick = "[GetVariableSystem.Toggle('showcoverageregions')]"
							tooltip = "AVERAGE_NUCLEAR_COVERAGE_TOOLTIP"
						}
						item = {
							button = {
								visible = "[GetVariableSystem.Exists('showcoverageregions')]"
								size = { 450 40 }
								using = default_button_map_interaction
								parentanchor = hcenter
								datacontext = "[Scope.AccessStrategicRegion]"
								raw_text = "[StrategicRegion.GetName]: [GuiScope.SetRoot( StrategicRegion.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('nuclear_strike_strategic_region_coverage')|v1% )] "
								tooltip = "NUCLEAR_STRATEGIC_REGION_TOOLTIP"
							}
						}
					}
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					parentanchor = hcenter
					align = center
					text = "NUCLEAR_DETONATION_FOCUS"
				}
				blockoverride "entrycontainer" {
					parentanchor = hcenter
					flowcontainer = {
						parentanchor = hcenter
						direction = horizontal
						spacing = 10
						button = {
							using = default_button
							text = "AIR_BURST"
							enabled = "[Not(GetPlayer.MakeScope.Var('air_burst_focus').IsSet)]"
							onclick = "[GetScriptedGui('wmd_nuclear_detonation_focus_air').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 195 40 }
							tooltip = "AIR_BURST_TOOLTIP"
						}
						button = {
							using = default_button
							text = "GROUND_BURST"
							enabled = "[Not(GetPlayer.MakeScope.Var('ground_burst_focus').IsSet)]"
							onclick = "[GetScriptedGui('wmd_nuclear_detonation_focus_ground').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 195 40 }
							tooltip = "GROUND_BURST_TOOLTIP"
						}
					}
	
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					parentanchor = hcenter
					align = center
					raw_text = "Deployment"
				}
				blockoverride "entrycontainer" {
					parentanchor = hcenter
					flowcontainer = {
						parentanchor = hcenter
						direction = horizontal
						spacing = 10
						button = {
							using = default_button
							raw_text = "20%"
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)20'))]"
							onclick = "[GetScriptedGui('wmd_deployment_20').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
						button = {
							using = default_button
							raw_text = "40%"
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)40'))]"
							onclick = "[GetScriptedGui('wmd_deployment_40').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
						button = {
							using = default_button
							raw_text = "60%"
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)60'))]"
							onclick = "[GetScriptedGui('wmd_deployment_60').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
						button = {
							using = default_button
							raw_text = "80%"
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)80'))]"
							onclick = "[GetScriptedGui('wmd_deployment_80').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
						button = {
							using = default_button
							raw_text = "100%"
							enabled = "[Not(EqualTo_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_deployment_percentage').GetValue, '(CFixedPoint)100'))]"
							onclick = "[GetScriptedGui('wmd_deployment_100').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
							size = { 60 40 }
						}
					}
					button = {
						parentanchor = hcenter
						using = default_button_map_interaction
						enabled = "[GreaterThan_CFixedPoint(GetPlayer.MakeScope.Var('nuclear_stockpile').GetValue, '(CFixedPoint)0')]"
						onclick = "[GetScriptedGui('wmd_autotarget').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						text = "AUTOMATIC_TARGET_SELECTION"
						tooltip = "NUCLEAR_AUTOTARGET_TOOLTIP"
						size = { 350 40 }
					}
				}
			}
			wmd_targetlist = {}
		}
		wmd_entry = {
			visible = "[Not(GetScriptedGui('can_open_wmd_screen').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			blockoverride "header" {
				raw_text = "Nuclear Weapons"
			}
			blockoverride "header2" {
				raw_text = ""
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "[GetPlayer.GetName] Status"
				}
				blockoverride "info" {
					raw_text = "Does not currently possess [concept_nuclear_weapons]"
				}
			}
			wmd_subentry = {
				blockoverride "title" {
					raw_text = "Nuclear Capabilities"
				}
				blockoverride "entrycontainer" {
					textbox = {
						text = "HAS_ATOMIC_CAPABILITY"
					}
					textbox = {
						text = "HAS_THERMONUCLEAR_CAPABILITY"
					}
					textbox = {
						text = "HAS_ICBM_CAPABILITY"
					}
				}
			}
		}
	}
	type wmd_entry = flowcontainer {
		visible = "[InformationPanel.IsTabSelected('wmd')]"
		parentanchor = hcenter
		minimumsize = { 550 200 }
		margin = { 15 15 }
		spacing = 20
		direction = vertical
		background = {
			using = dropdown_background
		}
		widget = {
			parentanchor = hcenter
			minimumsize = { 520 40 }
			flowcontainer = {
				margin = { 15 15 }
				parentanchor = left
				textbox = {
					block "header" {
						raw_text = "Nuclear Weapons"
					}
					using = header_font_fancy
					fontsize = 30
				}
			}
			flowcontainer = {
				margin = { 15 15 }
				parentanchor = right
				textbox = {
					align = right
					block "header2" {
						raw_text = "[GetPlayer.MakeScope.ScriptValue('nuclear_stockpile_sv')] [concept_nuclear_weapons]"
					}
					using = fontsize_large
				}
			}
	
			background = {
				using = dropdown_background
			}
		}
	}
	type wmd_subentry = flowcontainer {
		parentanchor = hcenter
		minimumsize = { 500 40 }
		direction = vertical
		margin = { 20 20 }
		flowcontainer = {
			parentanchor = left
			direction = vertical
			spacing = 30
			textbox = {
				block "title" {
					raw_text = ""
				}
				using = fontsize_large
			}
			block "entrycontainer" {
				textbox = {
					block "info" {
						raw_text = ""
					}
				}
			}
		}
		background = {
			using = entry_bg_simple
		}
	}
	type wmd_targetlist = flowcontainer {
		parentanchor = hcenter
		margin = { 15 15 }
		spacing = 25
		direction = vertical
		background = {
			using = dropdown_background
		}
		textbox = {
			raw_text = "Target List"
			using = header_font_fancy
			fontsize = 30
		}
		textbox = {
			visible = "[GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			raw_text = "Nuclear Strike Effectiveness: #v [GetPlayer.MakeScope.ScriptValue('nuclear_strike_effectiveness_total')|d]#! per state"
		}
		textbox = {
			visible = "[GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			raw_text = "Average Delivery Effectiveness: #v [GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('wmd_target_list_states_delivery_effectiveness_total')|d%]"
		}
		textbox = {
			visible = "[GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			raw_text = "Estimated Total Casualties: [GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('wmd_target_list_states_estimated_casualties_total')|-d]"
		}
		scrollbox = {
			visible = "[GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			minimumsize = { 450 500 }
			blockoverride "scrollbox_content" {
				vbox = {
					layoutpolicy_vertical = fixed
					layoutpolicy_horizontal = expanding
					datamodel_wrap = 1
					spacing = 25
					datamodel = "[GetPlayer.MakeScope.GetList('wmd_target_list_c')]"
					item = {
						flowcontainer = {
							parentanchor = hcenter
							direction = vertical
							minimumsize = { 420 60 }
							datacontext = "[Scope.AccessCountry]"
							flowcontainer = {
								parentanchor = left
								direction = vertical
								spacing = 20
								section_header_button = {
									visible = "[Not(GetPlayer.MakeScope.Var('targetlist_expanded_country').IsSet)]"
									blockoverride "layout" {
										size = { 350 30 }
									}
									blockoverride "left_text" {
										raw_text = "[Country.GetName]"
									}
									blockoverride "onclick" {
										onclick = "[GetScriptedGui('targetlist_expand_info').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
									}
									blockoverride "onclick_showless" {
										visible = "[Not(GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End))]"
									}
									blockoverride "onclick_showmore" {
										visible = "[GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
									}
								}
								section_header_button = {
									visible = "[GetPlayer.MakeScope.Var('targetlist_expanded_country').IsSet]"
									blockoverride "layout" {
										size = { 350 30 }
									}
									blockoverride "left_text" {
										raw_text = "[Country.GetName]"
									}
									blockoverride "onclick" {
										onclick = "[GetScriptedGui('targetlist_contract_info').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
									}
									blockoverride "onclick_showless" {
										visible = "[GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
									}
									blockoverride "onclick_showmore" {
										visible = "[Not(GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End))]"
									}
								}
								textbox = {
									raw_text = "[GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Country.MakeScope ).ScriptValue('wmd_target_list_states_count_per_country')|v0 )] States - [GuiScope.SetRoot( GetPlayer.MakeScope ).AddScope('target', Country.MakeScope ).ScriptValue('wmd_target_list_states_population_per_country')|vd )] Population Targeted"
								}
								textbox = {
									raw_text = "Estimated Casualties - [GuiScope.SetRoot( Country.MakeScope ).AddScope('initiator', GetPlayer.MakeScope ).ScriptValue('wmd_target_list_states_estimated_casualties_per_country')|-d]"
								}
							}
							flowcontainer = {
								parentanchor = right
								direction = horizontal
								spacing = 5
								button_icon_round_map_interaction = {
									size = { 35 35 }
									onclick = "[GetScriptedGui('targetlist_remove_country').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"		
									blockoverride "icon" {
										texture = "gfx/interface/icons/generic_icons/red_cross.dds"
									}
									blockoverride "icon_size" {
										size = { 50% 50% }
									}												
								}
								button_icon_round_map_interaction = {
									size = { 35 35 }
									onclick = "[Country.AccessCapital.ZoomToCapital]"
									tooltip = "ZOOM_TO_COUNTRY_CAPITAL"
									blockoverride "icon" {
										texture = "gfx/interface/buttons/button_icons/location_finder.dds"
									}
									blockoverride "icon_size" {
										size = { 90% 90% }
									}												
								}
							}
							flowcontainer = {
								margin_top = 20
								visible = "[GetScriptedGui('targetlist_expanded_visible_c').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_country',Country.MakeScope).End)]"
								direction = vertical
								spacing = 25
								datamodel = "[GetPlayer.MakeScope.GetList('wmd_target_list')]"
								item = {
									flowcontainer = {
										visible = "[GetScriptedGui('targetlist_expanded_visible_s').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_state',State.MakeScope).End)]"
										parentanchor = hcenter
										direction = horizontal
										minimumsize = { 420 30 }
										spacing = 30
										datacontext = "[Scope.AccessState]"
										flowcontainer = {
											minimumsize = { 300 70 }
											margin = { 15 15 }
											parentanchor = left
											direction = vertical
											spacing = 20
											textbox = {
												align = left
												raw_text = "[State.GetName] - [State.GetPopulationSize|vD]"
												using = tooltip_above
												fontsize = 20
											}
											textbox = {
												align = left
												text = "nuclear_strategic_region_coverage"
											}
											textbox = {
												align = left
												text = "nuclear_state_delivery_effectiveness"
												using = tooltip_above
											}
											textbox = {
												align = left
												text = "nuclear_state_strike_effectiveness"
												using = tooltip_above
											}
											tooltip = "NUCLEAR_TARGETED_STATE_TOOLTIP"
											background = {
												using = entry_bg_simple
											}
										}
										flowcontainer = {
											parentanchor = right|vcenter
											direction = horizontal
											spacing = 5
											button_icon_round_map_interaction = {
												size = { 35 35 }
												onclick = "[GetScriptedGui('targetlist_remove_state').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).AddScope('target_list_selected_state',State.MakeScope).End)]"
												onrightclick = "[RightClickMenuManager.ShowForGoods(Goods.AccessSelf)]"				
												blockoverride "icon" {
													texture = "gfx/interface/icons/generic_icons/red_cross.dds"
												}
												blockoverride "icon_size" {
													size = { 50% 50% }
												}												
											}
											button_icon_round_map_interaction = {
												size = { 35 35 }
												onclick = "[State.ZoomToCapital]"
												tooltip = "ZOOM_TO_EVENT_WINDOW_STATE"
												blockoverride "icon" {
													texture = "gfx/interface/buttons/button_icons/location_finder.dds"
												}
												blockoverride "icon_size" {
													size = { 90% 90% }
												}											
											}
										}
										background = {
											using = dropdown_background
											margin = { 15 15 }
										}
									}
								}
							}
	
	
							background = {
								using = dropdown_background
								margin = { 15 15 }
							}
						}
					}
				}
			}
			flowcontainer = {
				margin = { 0 10 }
				parentanchor = bottom|right
				direction = horizontal
				spacing = 10
				textbox = {
					margin_top = 15
					align = right
					raw_text = "Show Targeted States on Map"
				}
				checkbutton = {
					onclick = "[GetScriptedGui('show_targeted_states_on_map').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
					checked = "[GetPlayer.MakeScope.Var('show_targeted_states_map').IsSet]"
					using = check_button
					size = { 25 25 }
				}
			}
		}
		flowcontainer = {
			visible = "[Not(GetScriptedGui('targetlist_is_set').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			minimumsize = { 450 150 }
			flowcontainer = {
				margin_left = 150
				parentanchor = center
				textbox = {
					parentanchor = center
					raw_text = "#n No Targets Set#!"
					using = header_font_fancy
					using = fontsize_mega
				}
			}
			background = {
				using = entry_bg_simple
			}
	
		}
	
	}
	type readiness = flowcontainer {
		direction = horizontal
		button = {
			parentanchor = vcenter
			size = { 35 35 }
			enabled = "[GetScriptedGui('can_lower_readiness').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			onclick = "[GetScriptedGui('lower_readiness').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			flowcontainer = {
				parentanchor = center
				icon = {
					size = { 35 35 }
					texture = "gfx/interface/buttons/button_icons/move_left.dds"
					parentanchor = vcenter
				}
			}
			tooltip = "LOWER_READINESS"
		}
		button = {
			block "size" {
				size = { 70 35 }
			}
			blockoverride "selectedcolor" {
				color = { 0 0.57 0.16 }
			}
			blockoverride "selectedcolorvisible" {
				visible = "[GetScriptedGui('is_at_readiness_1').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			blockoverride "hovercolorvisible" {
				visible = "[Not(GetScriptedGui('is_at_readiness_1').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			}
			raw_text = "1"
			using = header_font_fancy
			tooltip = "READINESS_TOOLTIP_LEVEL_1"
			using = colored_button_bg
		}
		button = {
			block "size" {
				size = { 70 35 }
			}
			blockoverride "selectedcolor" {
				color = { 0.19 0.39 0.65 }
			}
			blockoverride "selectedcolorvisible" {
				visible = "[GetScriptedGui('is_at_readiness_2').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			blockoverride "hovercolorvisible" {
				visible = "[Not(GetScriptedGui('is_at_readiness_2').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			}
			raw_text = "2"
			using = header_font_fancy
			tooltip = "READINESS_TOOLTIP_LEVEL_2"
			using = colored_button_bg
		}
		button = {
			block "size" {
				size = { 70 35 }
			}
			blockoverride "selectedcolor" {
				color = { 0.55 0.55 0.0 }
			}
			blockoverride "selectedcolorvisible" {
				visible = "[GetScriptedGui('is_at_readiness_3').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			blockoverride "hovercolorvisible" {
				visible = "[Not(GetScriptedGui('is_at_readiness_3').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			}
			raw_text = "3"
			using = header_font_fancy
			tooltip = "READINESS_TOOLTIP_LEVEL_3"
			using = colored_button_bg
		}
		button = {
			block "size" {
				size = { 70 35 }
			}
			blockoverride "selectedcolor" {
				color = { 0.70 0.45 0.0 }
			}
			blockoverride "selectedcolorvisible" {
				visible = "[GetScriptedGui('is_at_readiness_4').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			blockoverride "hovercolorvisible" {
				visible = "[Not(GetScriptedGui('is_at_readiness_4').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			}
			raw_text = "4"
			using = header_font_fancy
			tooltip = "READINESS_TOOLTIP_LEVEL_4"
			using = colored_button_bg
		}
		button = {
			block "size" {
				size = { 70 35 }
			}
			blockoverride "selectedcolor" {
				color = { 0.7 0.2 0.2 }
			}
			blockoverride "selectedcolorvisible" {
				visible = "[GetScriptedGui('is_at_readiness_5').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			}
			blockoverride "hovercolorvisible" {
				visible = "[Not(GetScriptedGui('is_at_readiness_5').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End))]"
			}
			raw_text = "5"
			using = header_font_fancy
			tooltip = "READINESS_TOOLTIP_LEVEL_5"
			using = colored_button_bg
		}
		button = {
			parentanchor = vcenter
			size = { 35 35 }
			enabled = "[GetScriptedGui('can_raise_readiness').IsShown( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			onclick = "[GetScriptedGui('raise_readiness').Execute( GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
			flowcontainer = {
				parentanchor = center
				icon = {
					size = { 35 35 }
					texture = "gfx/interface/buttons/button_icons/move_right.dds"
					parentanchor = vcenter
				}
			}
			tooltip = "INCREASE_READINESS"
		}
		background = {
			using = entry_bg_simple
			margin = { 5 5 }
		}
	}
}

types mobilization_options {
	type mobilization_option_small = widget {
		alpha = "[TransparentIfFalse(Or(MobilizationOption.IsActivated(MilitaryFormation.AccessSelf),IsValid(MobilizationOption.Toggle(MilitaryFormation.AccessSelf))))]"
		#visible = "[Or(MobilizationOption.IsActivated(MilitaryFormation.AccessSelf),IsValid(MobilizationOption.Toggle(MilitaryFormation.AccessSelf)))]"
		size = { 30 30 }

		widget = {
			size = { 30 30 }

			# Activate
			widget = {
				visible = "[Not(MobilizationOption.IsActivated(MilitaryFormation.AccessSelf))]"
				size = { 100% 100% }

				# Activate button - show confirmation popup
				button = {
					using = default_button
					size = { 100% 100% }
					visible = "[ShouldAskConfirmation(MobilizationOption.Toggle(MilitaryFormation.AccessSelf))]"
					
					enabled = "[And(Not(MobilizationOption.IsActivated(MilitaryFormation.AccessSelf)), IsValid(MobilizationOption.Toggle(MilitaryFormation.AccessSelf)))]"
					onclick = "[PopupManager.AskConfirmation(MobilizationOption.Toggle(MilitaryFormation.AccessSelf))]"
					tooltip = "ACTIVATE_MOBILIZATION_OPTION_BUTTON_TOOLTIP"
				}
				
				# Activate button - no confirmation popup
				button = {
					using = default_button
					size = { 100% 100% }
					visible = "[Not(ShouldAskConfirmation(MobilizationOption.Toggle(MilitaryFormation.AccessSelf)))]"
					
					enabled = "[And(Not(MobilizationOption.IsActivated(MilitaryFormation.AccessSelf)), IsValid(MobilizationOption.Toggle(MilitaryFormation.AccessSelf)))]"
					onclick = "[Execute(MobilizationOption.Toggle(MilitaryFormation.AccessSelf))]"
					tooltip = "ACTIVATE_MOBILIZATION_OPTION_BUTTON_TOOLTIP"
				}
			}

			# Deactivate
			widget = {
				visible = "[MobilizationOption.IsActivated(MilitaryFormation.AccessSelf)]"
				size = { 100% 100% }
				
				# Deactivate button - show confirmation popup
				button = {
					using = default_button
					size = { 100% 100% }
					visible = "[ShouldAskConfirmation(MobilizationOption.Toggle(MilitaryFormation.AccessSelf))]"
					
					enabled = "[And(MobilizationOption.IsActivated(MilitaryFormation.AccessSelf), IsValid(MobilizationOption.Toggle(MilitaryFormation.AccessSelf)))]"
					onclick = "[PopupManager.AskConfirmation(MobilizationOption.Toggle(MilitaryFormation.AccessSelf))]"
					tooltip = "DEACTIVATE_MOBILIZATION_OPTION_BUTTON_TOOLTIP"
				}

				# Deactivate button - no confirmation popup
				button = {
					using = default_button
					size = { 100% 100% }
					visible = "[Not(ShouldAskConfirmation(MobilizationOption.Toggle(MilitaryFormation.AccessSelf)))]"
					
					enabled = "[And(MobilizationOption.IsActivated(MilitaryFormation.AccessSelf), IsValid(MobilizationOption.Toggle(MilitaryFormation.AccessSelf)))]"
					onclick = "[Execute(MobilizationOption.Toggle(MilitaryFormation.AccessSelf))]"
					tooltip = "DEACTIVATE_MOBILIZATION_OPTION_BUTTON_TOOLTIP"
				}
			}
		}

		icon = {
			size = { 19 19 }
			texture = "[MobilizationOption.GetTexture]"
			parentanchor = center
		}

		icon = {
			visible = "[MobilizationOption.IsActivated(MilitaryFormation.AccessSelf)]"
			using = highlighted_square_selection
		}
	}

	type big_mobilize_all_button = flowcontainer {

		### Mobilize button
		widget = {
			size = { 500 50 }
			visible = "[And(IsValid( Country.MobilizeAllArmies ), Country.IsCommittedInDiplomaticPlay)]"

			button = {
				enabled = "[IsValid( Country.MobilizeAllArmies )]"

				parentanchor = right|vcenter
				using = default_button
				using = diplomatic_play_mobilize_button_sound
				size = { 470 50 }
				using = fontsize_large

				onclick = "[PopupManager.AskConfirmation( Country.MobilizeAllArmies )]"
				tooltip = "MOBILIZE_ALL_MILITARY_FORMATIONS_BUTTON_TOOLTIP"

				textbox = {
					text = "MOBILIZE_ALL_MILITARY_FORMATIONS"
					align = center|nobaseline
					parentanchor = center
					margin_right = 30
					size = { 470 30 }
					fontsize_min = 12
					elide = right
					using = fontsize_large
				}
			}

			icon_with_background_big = {
				parentanchor = left|vcenter
			}
		}

		### Demobilize button
		widget = {
			size = { 500 50 }
			visible = "[And(Not(IsValid( Country.MobilizeAllArmies )), Country.IsCommittedInDiplomaticPlay)]"

			button = {
				enabled = "[IsValid( Country.DemobilizeAllArmies )]"

				parentanchor = right|vcenter
				using = default_button
				using = diplomatic_play_mobilize_button_sound
				size = { 470 50 }
				using = fontsize_large

				onclick = "[PopupManager.AskConfirmation( Country.DemobilizeAllArmies )]"
				tooltip = "DEMOBILIZE_ALL_MILITARY_FORMATIONS_BUTTON_TOOLTIP"

				textbox = {
					text = "DEMOBILIZE_ALL_MILITARY_FORMATIONS"
					align = center|nobaseline
					parentanchor = center
					margin_right = 30
					size = { 470 30 }
					fontsize_min = 12
					elide = right
					using = fontsize_large
				}
			}

			icon_with_background_big = {
				parentanchor = left|vcenter
			}
		}
	}
}

