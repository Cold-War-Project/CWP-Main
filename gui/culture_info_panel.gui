# COPY-PASTED FOR NOW
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

@portrait_size = 316
@portrait_box_height = 276

types culture_info_panel_types
{
	type culture_info_pop_label = hbox {
		icon = {
			block "icon" {
			}
			size = { 28 28 }
		}
		textbox = {
			block "label" {
			}
			fontsize = 16
			align = nobaseline
			autoresize = yes
			margin_left = 5
		}
	}

	type culture_info_avg_sol_label = textbox {

		block "text" {
			text = "CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_CLASS"
		}

		block "tooltip" {
			tooltip = "COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP"
		}
		
		using = tooltip_se

		align = nobaseline
		autoresize = yes
	}

	type culture_info_pop_portrait = pop_portrait_base {
		layoutpolicy_horizontal = expanding
		layoutpolicy_vertical = preferred
		size = { -1 @portrait_box_height }
		blockoverride "portrait_size" {
			size = { @portrait_size @portrait_size }
		}
		blockoverride "pop_portrait_texture" {
			portrait_texture = "[Pop.GetAnimatedTypedPortrait('environment_standard', 'camera_body', 'idle', GetPortraitRenderSize(PdxGuiWidget.Self), 'random_adult', '(int32)-1')]"
		}

		visible = "[Pop.IsValid]"
		blockoverride "portrait_button" {}
		tooltipwidget = { FancyTooltip_Pop = {} }
	}

	type culture_info_panel = default_block_window_two_lines {
		name = "culture_info_panel"
		
		blockoverride "window_header_name" {
			text = "[CultureInfoPanel.GetCulture.GetName]"
		}

		blockoverride "window_header_name_line_two" {
			text = "[concept_culture]"
		}

		blockoverride "fixed_top" {
			tab_buttons = {
				blockoverride "first_button" {
					text = "PLAYER_CULTURE"
				}
				blockoverride "first_button_tooltip" {
					tooltip = "PLAYER_CULTURE"
				}
				blockoverride "first_button_click" {
					onclick = "[InformationPanel.SelectTab('default')]"
					onclick = "[CultureInfoPanel.ToggleShowNationalOnly]"
				}
				blockoverride "first_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('default')]"
				}
				blockoverride "first_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('default') )]"
				}
				blockoverride "first_button_selected" {
					text = "PLAYER_CULTURE"
				}

				blockoverride "second_button" {
					text = "GLOBAL_CULTURE"
				}
				blockoverride "second_button_tooltip" {
					tooltip = "GLOBAL_CULTURE"
				}
				blockoverride "second_button_click" {
					onclick = "[InformationPanel.SelectTab('global')]"
					onclick = "[CultureInfoPanel.ToggleShowNationalOnly]"
				}
				blockoverride "second_button_visibility" {
					visible = "[InformationPanel.IsTabSelected('global')]"
				}
				blockoverride "second_button_visibility_checked" {
					visible = "[Not( InformationPanel.IsTabSelected('global') )]"
				}
				blockoverride "second_button_selected" {
					text = "GLOBAL_CULTURE"
				}
			}
		}
		
		blockoverride "scrollarea_content" {

			empty_state = {
				datacontext = "[CultureInfoPanel.AccessCulture]"
				margin_top = 50
				blockoverride "visible" {
					visible = "[IsDataModelEmpty(CultureInfoPanel.AccessPopsList.AccessPopList)]"
				}
				blockoverride "text" {
					text = "POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION"
				}
			}

			flowcontainer = {
				visible = "[Not(IsDataModelEmpty(CultureInfoPanel.AccessPopsList.AccessPopList))]"
				using = default_content_fade

				using = default_list_position
				datacontext = "[CultureInfoPanel.AccessCulture]"
				direction = vertical
				
				default_header = {
					blockoverride "text" {
						text = "[concept_sol]"
					}
				}

				widget = {
					minimumsize = { @panel_width 380 }
					datacontext = "[GetPlayer]"

					vbox = {
						resizeparent = yes
						margin_left = 6
						margin_top = 6

						spacing = 20

						# All classes in country
						vbox = {
							visible = "[InformationPanel.IsTabSelected('default')]"
							using = default_content_fade
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
							minimumsize = { -1 40 }
							
							tooltip = "COUNTRY_AVG_STANDARD_OF_LIVING_TOOLTIP"

							background = {
								using = entry_bg
							}

							textbox = {
								using = fontsize_large
								align = center|nobaseline
								text = "CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING"
							}
						}

						# All classes globally
						vbox = {
							visible = "[InformationPanel.IsTabSelected('global')]"
							using = default_content_fade
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = fixed
							minimumsize = { -1 40 }
							
							tooltip = "GLOBAL_AVG_STANDARD_OF_LIVING_TOOLTIP"

							background = {
								using = entry_bg
							}

							textbox = {
								using = fontsize_large
								align = center|nobaseline
								text = "CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING"
							}
						}

						### POP PORTRAITS AND SoL
						widget = {
							layoutpolicy_horizontal = expanding
							layoutpolicy_vertical = expanding

							minimumsize = { -1 @portrait_box_height }

							background = {
								using = entry_bg
							}

							background = {
								texture = "gfx/interface/illustrations/top_illus/top_illu_population.dds"
								using = top_illu_properties
								margin = { -2 0 }
							}

							### Portraits local
							# Draw these first to prevent the portrait overlaying the group name
							hbox = {
								margin_top = 30
								margin_bottom = -4

								visible = "[InformationPanel.IsTabSelected('default')]"
								using = default_content_fade
								
								culture_info_pop_portrait = {
									datacontext = "[GetPlayer.GetSampleLowerStrataPopForCulture( Culture.Self )]"
								}

								culture_info_pop_portrait = {
									datacontext = "[GetPlayer.GetSampleMiddleStrataPopForCulture( Culture.Self )]"
								}

								culture_info_pop_portrait = {
									datacontext = "[GetPlayer.GetSampleUpperStrataPopForCulture( Culture.Self )]"
								}
							}

							### Portraits global
							hbox = {
								margin_top = 30
								margin_bottom = -4

								visible = "[InformationPanel.IsTabSelected('global')]"
								using = default_content_fade

								culture_info_pop_portrait = {
									datacontext = "[Culture.GetSampleGlobalLowerStrataPop]"
								}

								culture_info_pop_portrait = {
									datacontext = "[Culture.GetSampleGlobalMiddleStrataPop]"
								}

								culture_info_pop_portrait = {
									datacontext = "[Culture.GetSampleGlobalUpperStrataPop]"
								}
							}
							
							### Group name
							widget = {
								# Float widget top left
								size = { 100% 0 }
								minimumsize = { -1 34 }

								hbox = {
									margin_top = 10

									culture_info_pop_label = {
										blockoverride "icon" {
											texture = "gfx/interface/icons/pops_icons/sol_poor_icon.dds"
										}
										blockoverride "label" {
											text = "LOWER_NO_ICON"
										}
									}

									culture_info_pop_label = {
										blockoverride "icon" {
											texture = "gfx/interface/icons/pops_icons/sol_middle_icon.dds"
										}
										blockoverride "label" {
											text = "MIDDLE_NO_ICON"
										}
									}

									culture_info_pop_label = {
										blockoverride "icon" {
											texture = "gfx/interface/icons/pops_icons/sol_upper_icon.dds"
										}
										blockoverride "label" {
											text = "UPPER_NO_ICON"
										}
									}
								}
							}

							### Avg info
							widget = {
								# Float widget bottom left
								size = { 100% 0 }
								minimumsize = { -1 34 }
								parentanchor = bottom

								### Avg info
								hbox = {
									margin_bottom = 10

									visible = "[InformationPanel.IsTabSelected('default')]"
									using = default_content_fade
									
									culture_info_avg_sol_label = {
										text = "CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_CLASS"
										tooltip = "COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP"
									}
									culture_info_avg_sol_label = {
										text = "CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS"
										tooltip = "COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP"
									}
									culture_info_avg_sol_label = {
										text = "CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_CLASS"
										tooltip = "COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP"
									}
								}

								### Avg info globally
								hbox = {
									margin_bottom = 10

									visible = "[InformationPanel.IsTabSelected('global')]"
									using = default_content_fade
									
									culture_info_avg_sol_label = {
										text = "CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_CLASS"
										tooltip = "GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP"
									}
									culture_info_avg_sol_label = {
										text = "CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS"
										tooltip = "GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP"
									}
									culture_info_avg_sol_label = {
										text = "CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_CLASS"
										tooltip = "GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP"
									}
								}
							}
						}

						spacer = {
							layoutpolicy_vertical = expanding
						}
					}
				}
				
				default_header = {
					blockoverride "text" {
						text = "STATISTICS"
					}
				}

				container = {
					parentanchor = hcenter
					minimumsize = { @panel_width -1 }
					
					### LEFT INFO
					flowcontainer = {
						direction = vertical
						position = { 0 0 }
						minimumsize = { 250 -1 }
						margin = { 10 10 }

						flowcontainer = {
							direction = vertical
							
							textbox = {
								autoresize = yes
								text = "TURMOIL"
								align = left|nobaseline
								default_format = "#title"
							}

							textbox = {
								autoresize = yes
								raw_text = "#variable [Culture.GetTurmoil|-0%]#!"
								align = left|nobaseline
								tooltip = CULTURAL_TURMOIL_TOOLTIP
							}
						}
						
						widget = { size = { 5 5 }}
						divider_clean = {}
						widget = { size = { 5 5 }}

						textbox = {
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "MIGRATION_TARGETS"
							align = left|nobaseline
							default_format = "#title"
						}

						textbox = {
							name = "tutorial_highlight_culture_migration_targets"
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "[Culture.GetMigrationTargetsDesc]"
							align = left|nobaseline
						}
						
						widget = { size = { 5 5 }}
						divider_clean = {}
						widget = { size = { 5 5 }}
						
						textbox = {
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "CULTURAL_TRAITS"
							align = left|nobaseline
							default_format = "#title"
						}
						
						textbox = {
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "[Culture.GetCulturalTraitsDesc]"
							align = left|nobaseline
						}
						
						widget = { size = { 5 5 }}
						divider_clean = {}
						widget = { size = { 5 5 }}
					}


					### RIGHT INFO
					flowcontainer = {
						direction = vertical
						position = { 280 0 }
						minimumsize = { 250 -1 }
						margin = { 0 10 }
						
						textbox = {
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "CULTURE_OBSESSIONS"
							align = left|nobaseline
							default_format = "#title"
						}
						textbox = {
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "[Culture.GetObsessionsDesc]"
							align = left|nobaseline
						}
						
						widget = { size = { 5 5 }}
						divider_clean = {}
						widget = { size = { 5 5 }}

						textbox = {
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "CULTURE_TABOOS"
							align = left|nobaseline
							default_format = "#title"
						}
						textbox = {
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "[Culture.GetTaboosDesc]"
							align = left|nobaseline
						}
						
						widget = { size = { 5 5 }}
						divider_clean = {}
						widget = { size = { 5 5 }}
							
						textbox = {
							autoresize = yes
							multiline = yes
							minimumsize = { @panel_width_half -1 }
							maximumsize = { @panel_width_half -1 }
							text = "[Culture.GetCountryDiscriminationStatus(GetPlayer.Self)]"
							align = left|nobaseline
						}
					}
				}

				widget = {
					 size = { 10 10 }
				}

				section_header_button = {
					blockoverride "left_text" {
						text = "HOMELANDS_HEADER"
					}
					
					blockoverride "onclick" {
						onclick = "[GetVariableSystem.Toggle('homelands')]"
					}
					
					blockoverride "onclick_showmore" {
						visible = "[Not(GetVariableSystem.Exists('homelands'))]"
					}

					blockoverride "onclick_showless" {
						visible = "[GetVariableSystem.Exists('homelands')]"
					}
				}

				widget = {
					size = { @panel_width 23 }
					parentanchor = hcenter
					visible = "[GetVariableSystem.Exists('homelands')]"
					using = default_content_fade
					
					textbox = {
						text = "NAME"
						autoresize = yes
						align = left|nobaseline
						default_format = "#title"
					}

					textbox = {
						text = "OWNER"
						default_format = "#title"
						autoresize = yes
						align = left|nobaseline
						parentanchor = right|top
						tooltip = "TURMOIL_OF_CULTURE"
					}
				}
				
				dynamicgridbox = {
					datamodel = "[Culture.AccessHomelands]"
					visible = "[GetVariableSystem.Exists('homelands')]"
					using = default_content_fade
					using = default_list_position
					item = {
						button = {
							parentanchor = hcenter
							using = default_button
							size = { @panel_width 40 }
							onclick = "[InformationPanelBar.OpenStatePanel( State.AccessSelf )]"

							textbox = {
								text = "[State.GetName]"
								parentanchor = left|vcenter
								align = left|nobaseline
								autoresize = yes
								margin_left = 10
							}
							
							tiny_flag = {
								datacontext = "[State.GetOwner]"
								#blockoverride "tooltip" {}
								parentanchor = right|vcenter
								position = { -10 0 }
							}
							
						}
					}
				}

				section_header_button = {
					blockoverride "left_text" {
						text = "CULTURE_OF_SAME_HERITAGE"
					}
					
					blockoverride "onclick" {
						onclick = "[GetVariableSystem.Toggle('cultures_of_same_heritage')]"
					}
					
					blockoverride "onclick_showmore" {
						visible = "[Not(GetVariableSystem.Exists('cultures_of_same_heritage'))]"
					}

					blockoverride "onclick_showless" {
						visible = "[GetVariableSystem.Exists('cultures_of_same_heritage')]"
					}
				}
				
				widget = {
					size = { @panel_width 40 }
					parentanchor = hcenter
					visible = "[GetVariableSystem.Exists('cultures_of_same_heritage')]"
					using = default_content_fade
					
					textbox = {
						text = "NAME"
						autoresize = yes
						align = left|nobaseline
						default_format = "#title"
					}

					textbox = {
						text = "TURMOIL_TITLE"
						default_format = "#title"
						autoresize = yes
						align = left|nobaseline
						parentanchor = right|top
						tooltip = "TURMOIL_OF_CULTURE"
					}
				}
				
				dynamicgridbox = {
					visible = "[GetVariableSystem.Exists('cultures_of_same_heritage')]"
					using = default_content_fade
					datamodel = "[Culture.AccessSameHeritageCultures]"
					using = default_list_position
					item = {
						button = {
							parentanchor = hcenter
							using = default_button
							size = { @panel_width 40 }
							onclick = "[InformationPanelBar.OpenCultureInfoPanel(Culture.AccessSelf)]"

							textbox = {
								text = "[Culture.GetName]"
								parentanchor = left|vcenter
								align = left|nobaseline
								autoresize = yes
								margin_left = 10
							}

							textbox = {
								raw_text = "#variable [Culture.GetTurmoil|-0%]#!"
								parentanchor = right|vcenter
								align = right|nobaseline
								autoresize = yes
								tooltip = "CULTURAL_TURMOIL_TOOLTIP"
								margin_right = 10
							}
						}
					}
				}

				widget = { size = { 10 10 } }
				divider_clean = {}
				widget = { size = { 10 10 } }

				pop_list = {
					using = default_content_fade
					blockoverride "pop_list_context" {
						datacontext = "[CultureInfoPanel.AccessPopsList]"
					}

					blockoverride "tooltipwidget" {
						tooltipwidget = {
							FancyTooltip_PopTypeCulture = {}
						}
					}
				}
			}
		}
	}
}
