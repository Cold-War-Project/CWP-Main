# COPY-PASTED FOR NOW
@panel_width_minus_30 = 510
@panel_width_minus_20 = 520			# used to be 450
@panel_width_minus_10 = 530			# used to be 450
@panel_width = 540  				# used to be 460
@panel_width_half = 270				# used to be 230
@panel_width_plus_10 = 550  		# used to be 470
@panel_width_plus_14 = 554			# used to be 474
@panel_width_plus_14_half = 277		# used to be 237
@panel_width_plus_20 = 560			# used to be 480
@panel_width_plus_30 = 570			# used to be 490
@panel_width_plus_70 = 610			# used to be 530

types MilitaryPanelCharacters {

	### MOBILIZATION CONTROLS
	type rank_icon = widget {
		block "icon_size" {
			size = { 34 34 }
		}
	
		# Background 
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/backgrounds/round_button_bg.dds"
		}

		# Rank
		icon = {
			size = { 75% 75% }
			parentanchor = center
			texture = "[Character.GetCommanderRank.GetTexture]"
			datacontext = "[Character]"
			datacontext = "[Character.GetCommanderRank]"
			tooltipwidget = {
				FancyTooltip_CommanderRank = {}
			}
		}
	}

	type morale_bar = white_progressbar_vertical {
		size = { 6 24 }

		blockoverride "values" {
			min = 0
			max = 1
			block "morale_value" {
			}
		}
		blockoverride "color" {
			block "morale_color" {
			}
		}
	}

	type formation_order_toggle = container {		
		# Selected Formation Order
		widget = {
			using = default_fade_in_out
			using = tooltip_above
			### TODO PRCAL-28648 Needs to add functionality for Military Formations in Loc Key ###
			#tooltip = "FORMATION_PANEL_CURRENT_ORDER"
			### TODO PRCAL-28648 REMOVE NEXT LINE ONCE FUNCTIONALITY IS IN ###
			tooltip = "COMMANDER_PANEL_CURRENT_ORDER"

			block "selected_visibility" {
				### TODO  PRCAL-28648 Needs to change selected visible state to account for Military formations instead of characters ###
				#visible = "[MilitaryFormation.GetFormationOrder.GetType.IsDefendFront]"
				### TODO PRCAL-28648 REMOVE NEXT LINE ONCE FUNCTIONALITY IS IN ###
				visible = "[Character.GetCommanderOrder.GetType.IsDefendFront]"
			}

			block "button_size" {
				size = { 60 60 }
			}

			icon = {
				size = { 100% 100% }
				using = circle_bg_simple_dark
			}
			icon = {
				block "order_icon_texture" {
					texture = "gfx/interface/icons/commander_order_icons/defend.dds"
				}

				size = { 60% 60% }
				parentanchor = center
			}
			icon = {
				using = highlighted_circle_selection_small
			}

			### ARROW BOTTOM
			icon = {
				texture = "gfx/interface/budget/set_level_bar_arrow.dds"
				size = { 21 12 }
				scale = 1.2
				parentanchor = bottom|hcenter
				mirror = vertical
				
				state = {
					name = _show
					next = show_2
					position = { 0 7 }
					duration = 0
					alpha = 1
				}
				state = {
					name = show_2
					next = show_3
					position = { 0 3 }
					duration = 0
					alpha = 1
				}
				state = {
					name = show_3
					next = show_4
					position = { 0 -2 }
					duration = 0.2
					alpha = 1
				}
				state = {
					name = show_4
					position = { 0 0 }
					duration = 0.1
					alpha = 1
				}
				
				state = {
					name = _hide
					position = { 0 0 }
					duration = 0
					alpha = 0
				}
			}
		}

		# Other Formation Order
		button_icon_round_action = {
			block "order_tooltip" {
				### TODO PRCAL-28648 Needs to add functionality for Military Formations in Loc Key ###
				#tooltip = "FORMATION_PANEL_ORDER_TOGGLE_DEFEND_TOOLTIP"
				### TODO PRCAL-28648 REMOVE NEXT LINE ONCE FUNCTIONALITY IS IN ###
				tooltip = "COMMANDER_PANEL_ORDER_TOGGLE_DEFEND_TOOLTIP"
			}

			block "button_size" {
				size = { 60 60 }
			}

			block "order_button_properties" {
				### TODO PRCAL-28648 Needs functionality to change Characters to Military Formations ###
				#enabled = "[IsValid( MilitaryFormation.DefendCurrentFront )]"
				#onclick = "[Execute(MilitaryFormation.DefendCurrentFront)]"
				#visible = "[MilitaryFormation.GetFormationOrder.GetType.IsAdvanceFront]"
				### TODO PRCAL-28648 REMOVE NEXT THREE LINEs ONCE FUNCTIONALITY IS IN ###
				enabled = "[IsValid( Character.DefendCurrentFront )]"
				onclick = "[Execute(Character.DefendCurrentFront)]"
				visible = "[Character.GetCommanderOrder.GetType.IsAdvanceFront]"
			}

			blockoverride "icon" {
				block "order_icon_texture" {
					texture = "gfx/interface/icons/commander_order_icons/defend.dds"
				}
			}

			blockoverride "icon_size" {
				size = { 65% 65% }
			}
		}
	}

	type commander_order_button = container {
		button_icon_round_map_interaction = {

			tooltip = "COMMANDER_PANEL_ORDER_TOOLTIP"
			enabled = "[Character.CanSelectOrder( CommanderOrderType.Self )]"
			onclick = "[Character.SelectOrder( CommanderOrderType.Self )]"

			visible = "[Not(CommanderOrderType.HasMapInteraction)]"
			clicksound = "[CommanderOrderType.GetClickSound]"

			block "button_size" {
				size = { 60 60 }
			}

			blockoverride "icon" {
				texture = "[CommanderOrderType.GetTexture]"
			}
			blockoverride "icon_size" {
				size = { 75% 75% }
			}
		}

		button_icon_round_map_interaction = {
			block "button_size" {
				size = { 60 60 }
			}
			tooltip = "COMMANDER_PANEL_ORDER_TOOLTIP"
			enabled = "[Character.CanSelectOrder( CommanderOrderType.Self )]"
			onclick = "[Character.SelectOrder( CommanderOrderType.Self )]"

			visible = "[CommanderOrderType.HasMapInteraction]"

			blockoverride "icon" {
				texture = "[CommanderOrderType.GetTexture]"
			}
			blockoverride "icon_size" {
				size = { 75% 75% }
			}
		}

		button_icon_round_action = {
			block "button_size" {
				size = { 60 60 }
			}
			tooltip = "COMMANDER_PANEL_ORDER_TOOLTIP"
			enabled = "[Character.CanSelectOrder( CommanderOrderType.Self )]"
			onclick = "[Character.SelectOrder( CommanderOrderType.Self )]"

			visible = "[CommanderOrderType.IsStandBy]"
			clicksound = "[CommanderOrderType.GetClickSound]"

			blockoverride "icon" {
				texture = "[CommanderOrderType.GetTexture]"
			}
			blockoverride "icon_size" {
				size = { 75% 75% }
			}
		}
	}

	### MILITARY FORMATIONS LIST
	type military_panel_formation_entry = flowcontainer
	{
		minimumsize = { @panel_width 90 }
		parentanchor = hcenter
		direction = vertical

		# Formation info box
		flowcontainer = {
			minimumsize = { @panel_width -1 }
			maximumsize = { @panel_width -1 }
			direction = vertical
			spacing = 5
			margin_bottom = 14

			using = entry_bg_fancy
			
			# Name and info header
			container = {
				minimumsize = { @panel_width 35 }

				background = {
					using = fade_right_entry_fancy_header_colored
					color = "[MilitaryFormation.GetCountry.GetMapColor]"
				}
				
				flowcontainer = {
					position = { 12 0 }
					parentanchor = vcenter
					spacing = 5

					tiny_flag = {
						parentanchor = vcenter
					}

					textbox = {
						maximumsize = { 200 -1 }
						parentanchor = vcenter
						multiline = yes
						autoresize = yes
						text = "[MilitaryFormation.GetName]"
						align = nobaseline
						elide = right
						margin_left = 5
					}

					button_icon_goto = {
						size = { 28 28 }
						tooltip = "GO_TO_BUTTON_MILITARY_FORMATION"
						onclick = "[InformationPanelBar.OpenMilitaryFormationPanelTab( MilitaryFormation.AccessSelf, 'default' )]"
					}
				}

				# Formation status
				flowcontainer = {
					position = { -34 0 }
					parentanchor = right|vcenter

					textbox = {
						maximumsize = { 260 -1 }
						multiline = yes
						autoresize = yes
						margin = { 0 3 }
						text = "[MilitaryFormation.GetShortFormationStatusDesc]"
						align = nobaseline
						elide = right
						margin_right = 5
					}
				}

				# Zoom-to button
				widget = {
					position = { -6 0 }
					parentanchor = right|vcenter
					size = { 28 28 }

					button_icon_zoom = {
						size = { 100% 100% }
						block "goto_properties" {
							### TODO add a function to zoom to the current location of the Military Formation + tooltip
							onclick = "[MilitaryFormation.ZoomToMapMarkerPosition]"
							tooltip = "ZOOM_TO_MILITARY_FORMATION"
							enabled = "[Not( MilitaryFormation.IsZoomingToMapMarkerPosition )]"
						}
					}
				}
			}

			# MILITARY FORMATION INFO
			container = {
				minimumsize = { @panel_width_minus_20 -1 }
				maximumsize = { @panel_width_minus_20 -1 }
				parentanchor = hcenter

				button_icon_round = {
					visible = "[MilitaryFormation.IsArmy]"
					parentanchor = vcenter
					position = { 10 0 }
					tooltip = "GO_TO_BUTTON_MILITARY_FORMATION"

					blockoverride "size" {
						size = { 100 100 }
					}
					blockoverride "icon_size" {
						size = { 75% 75% }
					}

					block "onclick" {
						onclick = "[InformationPanelBar.OpenMilitaryFormationPanelTab( MilitaryFormation.AccessSelf, 'default' )]"
						onrightclick = "[RightClickMenuManager.ShowForMilitaryFormation(MilitaryFormation.AccessSelf)]"
					}

					blockoverride "icon" {
						texture = "gfx/interface/icons/military_icons/military_formation_identity_icons/army_01.dds"
					}
				}

				button_icon_round = {
					visible = "[MilitaryFormation.IsFleet]"
					parentanchor = vcenter
					position = { 10 0 }
					tooltip = "GO_TO_BUTTON_MILITARY_FORMATION"

					blockoverride "size" {
						size = { 100 100 }
					}
					blockoverride "icon_size" {
						size = { 75% 75% }
					}

					block "onclick" {
						onclick = "[InformationPanelBar.OpenMilitaryFormationPanelTab( MilitaryFormation.AccessSelf, 'default' )]"
					}

					blockoverride "icon" {
						texture = "gfx/interface/icons/military_icons/military_formation_identity_icons/fleet_01.dds"
					}
				}

				flowcontainer = {
					direction = vertical
					parentanchor = right|vcenter
					position = { -10 0 }
					spacing = 5
					margin = { 2 2 }

					# NUMBERS
					flowcontainer = {
						spacing = 5
						parentanchor = right
						margin = { 5 5 }

						background = {
							using = entry_bg_simple
						}

						### ARMY ICON
						icon = {
							visible = "[MilitaryFormation.IsArmy]"
							size = { 30 30 }
							parentanchor = vcenter
							texture = "gfx/interface/icons/generic_icons/battalions.dds"
						}

						### FLEET ICON
						icon = {
							visible = "[MilitaryFormation.IsFleet]"
							size = { 30 30 }
							parentanchor = vcenter
							texture = "gfx/interface/icons/generic_icons/flotillas.dds"
						}

						### NUMBER OF UNITS
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = center|nobaseline
							text = "MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS"
							tooltip = "MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS_TOOLTIP"
						}

						widget = {
							size = { 20 0 }
						}

						### ATTRITION ICON
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = left|nobaseline
							tooltip = "[MilitaryFormation.GetAttritionRiskDesc]"
							
							text = "MILITARY_FORMATION_ATTRITION"

							alpha = "[TransparentIfZero(MilitaryFormation.GetAttritionRaw)]"
						}

						widget = {
							size = { 20 0 }
						}

						### MORALE VALUE
						textbox = {
							parentanchor = vcenter
							autoresize = yes
							align = left|nobaseline
							tooltip = "MILITARY_FORMATION_MORALE_TOOLTIP"
							
							text = "MILITARY_FORMATION_MORALE"
						}

						### MORALE BAR
						morale_bar = {
							size = { 6 24 }
							parentanchor = vcenter
							tooltip = "MILITARY_FORMATION_MORALE_TOOLTIP"
							
							blockoverride "morale_value" {
								value = "[FixedPointToFloat( MilitaryFormation.GetMorale )]"
							}
							blockoverride "morale_color" {
								color = "[GetMoraleColorVec( MilitaryFormation.GetMorale )]"
							}
						}

						widget = {
							size = { 20 0 }
						}

						### EXPENSES
						textbox = {
							parentanchor = vcenter
							text = "MILITARY_FORMATION_EXPENSE"
							autoresize = yes
							align = left|nobaseline
							tooltip = "MILITARY_FORMATION_EXPENSE_TOOLTIP_TAG"
							alpha = "[TransparentIfZero(MilitaryFormation.GetGoodsConsumptionCostRaw)]"
						}
					}

					flowcontainer = {
						spacing = 5
						parentanchor = right

						# station
						button_icon_round_map_interaction = {
							visible = "[MilitaryFormation.IsArmy]"
							size = { 50 50 }
							parentanchor = vcenter
							tooltip = "STATION_MILITARY_FORMATION_TOOLTIP"
							onclick = "[MilitaryFormation.OnStationClicked]"
							
							blockoverride "icon_size" { 
								size = { 75% 75% }
							}

							blockoverride "icon" {
								### PLACEHOLDER ICON
								texture = "gfx/interface/icons/alert_icons/has_army_in_reserve.dds"
							}
						}

						# deploy to front
						button_icon_round_map_interaction = {
							visible = "[MilitaryFormation.IsArmy]"
							size = { 50 50 }
							parentanchor = vcenter
							tooltip = "DEPLOY_MILITARY_FORMATION_TO_FRONT_TOOLTIP"
							onclick = "[MilitaryFormation.OnDeployToFrontClicked]"
							enabled = "[MilitaryFormation.IsMobilized]"

							blockoverride "icon_size" { 
								size = { 75% 75% }
							}

							blockoverride "icon" {
								### PLACEHOLDER ICON
								texture = "gfx/interface/icons/commander_order_icons/unused/move.dds"
							}
						}

						# deploy to sea node
						button_icon_round_map_interaction = {
							visible = "[MilitaryFormation.IsFleet]"
							blockoverride "icon_size" { size = { 75% 75% } }
							size = { 50 50 }
							parentanchor = vcenter
							tooltip = "DEPLOY_MILITARY_FORMATION_TO_SEA_NODE_TOOLTIP"
							onclick = "[MilitaryFormation.OnDeployToSeaNodeClicked]"

							blockoverride "icon" {
								### PLACEHOLDER ICON
								texture = "gfx/interface/icons/generic_icons/unused/sea_region_mm_battle.dds"
							}
						}

						# station
						button_icon_round_map_interaction = {
							visible = "[MilitaryFormation.IsFleet]"
							blockoverride "icon_size" { size = { 75% 75% } }
							size = { 50 50 }
							parentanchor = vcenter
							tooltip = "STATION_MILITARY_FORMATION_TOOLTIP"
							onclick = "[MilitaryFormation.OnStationClicked]"

							blockoverride "icon" {
								### PLACEHOLDER ICON
								texture = "gfx/interface/icons/alert_icons/has_army_in_reserve.dds"
							}
						}

						military_formation_mobilize_button = {
							parentanchor = vcenter
							visible = "[MilitaryFormation.IsArmy]"

							blockoverride "size" {
								size = { 200 50 }
							}

							blockoverride "button_size" {
								size = { 175 75% }
							}

							blockoverride "fontsize" {}

							blockoverride "mobilization_icon_size" {
								size = { 50 50 }
							}
						}
					}
				}

				# pin button
				widget = {
					size = { 30 30 }
					parentanchor = top|left

					button_icon_round_toggle = {
						name = "military_formation_pin_button"
						using = check_button_sound
						size = { 100% 100% }
						parentanchor = center

						blockoverride "icon_1" {
							texture = "gfx/interface/outliner/unpinned_icon.dds"
						}

						blockoverride "view_1" {
							#todo
							#visible = "[Not(MilitaryFormation.IsPinnedInOutliner)]"
						}

						blockoverride "tooltip_1" {
							tooltip = "PIN"
						}

						blockoverride "icon_2" {
							texture = "gfx/interface/outliner/pinned_icon.dds"
						}

						blockoverride "view_2" {
							#todo
							#visible = "[MilitaryFormation.IsPinnedInOutliner]"
						}

						blockoverride "tooltip_2" {
							tooltip = "UNPIN"
						}

						blockoverride "on_click" {
							#todo
							#onclick = "[MilitaryFormation.TogglePinInOutliner]"
						}
						
						blockoverride "wood_texture" {
							texture = "gfx/interface/buttons/round_button_small_wood_action.dds"
						}

						blockoverride "frame_visible" {}
					}
				}
			}
			
			# BATTALIONS / FLOTILLAS
			section_header_button = {
				parentanchor = hcenter
				size = { 95% 38 }
			
				visible = "[GreaterThan_int32(GetDataModelSize(MilitaryFormation.GetCombatUnitEntries), '(int32)0')]"
				enabled = "[Not(IsDataModelEmpty( MilitaryFormation.GetCombatUnitEntries ))]"
				
				blockoverride "onclick" {
					onclick = "[GetVariableSystem.Toggle( Concatenate( 'combat_units_', MilitaryFormation.GetName ) )]"
				}

				blockoverride "onclick_showmore" {
					visible = "[Not(GetVariableSystem.Exists( Concatenate( 'combat_units_', MilitaryFormation.GetName ) ))]"
				}

				blockoverride "onclick_showless" {
					visible = "[GetVariableSystem.Exists( Concatenate( 'combat_units_', MilitaryFormation.GetName ) )]"
				}

				flowcontainer = {
					visible = "[MilitaryFormation.IsArmy]"
					parentanchor = vcenter
					margin_left = 35
					spacing = 10

					textbox = {
						visible = "[MilitaryFormation.IsFullyMobilized]"
						parentanchor = vcenter
						elide = right
						max_width = 350
						align = left|nobaseline
						autoresize = yes
						text = "MILITARY_FORMATION_MOBILIZED_COMBAT_UNIT_GROUPS"
						tooltip = "MILITARY_FORMATION_MOBILIZED_TOOLTIP"
					}

					textbox = {
						visible = "[MilitaryFormation.IsMobilizing]" 
						parentanchor = vcenter
						elide = right
						max_width = 350
						align = left|nobaseline
						autoresize = yes
						text = "MILITARY_FORMATION_IS_MOBILIZING_COMBAT_UNIT_GROUPS"
						tooltip = "MILITARY_FORMATION_IS_MOBILIZING_TOOLTIP"
					}

					textbox = {
						visible = "[Not(MilitaryFormation.IsMobilized)]"
						parentanchor = vcenter
						elide = right
						max_width = 350
						align = left|nobaseline
						autoresize = yes
						text = "MILITARY_FORMATION_GARRISONED_COMBAT_UNIT_GROUPS"
					}
				}

				flowcontainer = {
					visible = "[MilitaryFormation.IsFleet]"
					parentanchor = vcenter
					margin_left = 35
					spacing = 10

					textbox = {
						parentanchor = vcenter
						elide = right
						align = left|nobaseline
						autoresize = yes
						text = "MILITARY_FORMATION_NUMBER_OF_FLEET_COMBAT_UNIT_GROUPS"
					}
				}

				flowcontainer = {
					parentanchor = right|vcenter
					spacing = 10

					textbox = {
						### TODO
						#visible = "[MilitaryFormation.HasShippingLane]"
						visible = no
						parentanchor = vcenter
						elide = right
						align = right|nobaseline
						autoresize = yes
						#text = "[MilitaryFormation.GetShippingLane.GetConvoyCostFormattedShort]"
					}

					# Attrition
					textbox = {
						visible = "[Or(MilitaryFormation.IsMobilized, NotEqualTo_CFixedPoint(MilitaryFormation.GetAttritionRaw,'(CFixedPoint)0'))]"
						parentanchor = vcenter
						autoresize = yes
						align = nobaseline
						text = "MILITARY_FORMATION_TROOP_ATTRITION_LEVEL"
						tooltip = "[MilitaryFormation.GetAttritionRiskDesc]"
					}

					flowcontainer = {
						parentanchor = vcenter
						spacing = 5

						### ARMY ICON
						icon = {
							visible = "[MilitaryFormation.IsArmy]"
							size = { 30 30 }
							parentanchor = vcenter
							texture = "gfx/interface/icons/generic_icons/battalions.dds"
						}

						### FLEET ICON
						icon = {
							visible = "[MilitaryFormation.IsFleet]"
							size = { 30 30 }
							parentanchor = vcenter
							texture = "gfx/interface/icons/generic_icons/flotillas.dds"
						}

						# Units
						textbox = {
							parentanchor = vcenter
							elide = right
							align = right|nobaseline
							autoresize = yes
							text = "MILITARY_FORMATION_TOTAL_NUMBER_OF_UNITS"
						}
					}

					### MORALE BAR
					morale_bar = {
						size = { 6 24 }
						parentanchor = vcenter
						tooltip = "MILITARY_FORMATION_MORALE_TOOLTIP"
						
						blockoverride "morale_value" {
							value = "[FixedPointToFloat( MilitaryFormation.GetMorale )]"
						}
						blockoverride "morale_color" {
							color = "[GetMoraleColorVec( MilitaryFormation.GetMorale )]"
						}
					}
				}
			}

			### MANPOWER PACKAGES
			flowcontainer = {
				parentanchor = hcenter
				direction = vertical
				minimumsize = { @panel_width_minus_10 -1 }
				maximumsize = { @panel_width_minus_10 -1 }
				margin = { 0 6 }

				### TODO: Replace GetName with GetIDString
				visible = "[GetVariableSystem.Exists( Concatenate( 'combat_units_', MilitaryFormation.GetName ) )]"

				background = {
					using = dark_area
				}
			
				dynamicgridbox = {
					datamodel = "[MilitaryFormation.GetCombatUnitEntries]"
					parentanchor = hcenter

					item = {
						military_formation_combat_unit = {

							blockoverride "minimumsize" {
								minimumsize = { @panel_width_minus_30 100 }
							}

							blockoverride "info_minimumsize" {
								minimumsize = { 380 -1 }
							}

							blockoverride "section_header_size" {
								size = { 500 40 }
								parentanchor = right
							}
						}
					}
				}
			}
		}
	}

	type military_formation_list = flowcontainer {
		direction = vertical
		parentanchor = hcenter

		flowcontainer = {
			direction = vertical
			spacing = 5
			parentanchor = hcenter
			
			block "datamodel" {
				datamodel = "[Country.GetMilitaryFormationsArmy]"
			}

			item = {
				container = {
					military_panel_formation_entry = {}
				}
			}
		}
	}

	### COMMANDER LIST
	type commander_list = flowcontainer {
		direction = vertical
		parentanchor = hcenter

		flowcontainer = {
			direction = vertical
			spacing = 5
			parentanchor = hcenter
			
			block "datamodel" {
				datamodel = "[Country.AccessGenerals]"
			}

			item = {
				container = {
					military_panel_commander_entry = {}
				}
			}
		}
	}
	
	### COMMANDER LIST ITEM 
	type military_panel_commander_entry = flowcontainer {
		# Commanders in Military Formations should show up in Formations Panel instead
		visible = "[Not(Character.HasMilitaryFormation)]"

		minimumsize = { @panel_width 90 }
		parentanchor = hcenter
		direction = vertical

		# General info box
		flowcontainer = {
			minimumsize = { @panel_width -1 }
			maximumsize = { @panel_width -1 }
			direction = vertical
			spacing = 5
			margin_bottom = 14

			using = entry_bg_fancy
			
			# Name and info header
			container = {
				minimumsize = { @panel_width 35 }

				background = {
					using = fade_right_entry_fancy_header_colored
					color = "[Character.GetCountry.GetMapColor]"
				}
				
				flowcontainer = {
					position = { 12 0 }
					parentanchor = vcenter
					spacing = 5

					tiny_flag = {
						parentanchor = vcenter
					}

					textbox = {
						maximumsize = { 200 -1 }
						parentanchor = vcenter
						multiline = yes
						autoresize = yes
						text = "[Character.GetFullName]"
						align = left|nobaseline
						elide = right
						margin_left = 5
					}
				}

				# General status
				flowcontainer = {
					position = { -34 0 }
					parentanchor = right|vcenter

					textbox = {
						maximumsize = { 260 -1 }
						multiline = yes
						autoresize = yes
						margin = { 0 3 }
						text = "MILITARY_PANEL_COMMANDER_STATUS_FORMAT"
						align = nobaseline
						elide = right
						margin_right = 5
					}
				}

				# Zoom-to button
				widget = {
					position = { -6 6 }
					parentanchor = right
					size = { 28 28 }

					button_icon_zoom = {
						size = { 100% 100% }
						block "goto_properties" {
							onclick = "[Character.ZoomToOrderTarget]"
							tooltip = "ZOOM_TO_ORDERTARGET"
							enabled = "[Not(Character.IsZoomingToOrderTarget)]"
						}
					}
				}
			}

			# Portrait
			container = {
				minimumsize = { @panel_width_minus_20 -1 }
				maximumsize = { @panel_width_minus_20 -1 }
				parentanchor = hcenter

				character_portrait_base_head = {
					position = { 3 0 }
					parentanchor = vcenter
					size = { 100 100 }

					blockoverride "portrait_size" {
						size = { 100 110 }
					}

					blockoverride "highlight" {}

				}

				# Traits
				flowcontainer = {
					position = { 110 0 }
					direction = vertical
					spacing = 10
					margin = { 2 2 }
					parentanchor = vcenter

					dynamicgridbox = {
						datamodel = "[Character.AccessTraits]"
						flipdirection = yes
						datamodel_wrap = 1
			
						item = {
							flowcontainer = {
								spacing = 10
								margin = { 0 2 }

								tooltipwidget = {
									FancyTooltip_CharacterTrait = {}
								}

								icon = {
									parentanchor = left|vcenter
									size = { 20 28 }
									texture = "[CharacterTrait.GetTexture]"
									using = tooltip_above
								}

								textbox = {
									parentanchor = vcenter
									text = "[CharacterTrait.GetNameNoFormatting]"
									maximumsize = { 150 64 }
									autoresize = yes
									align = left|nobaseline
									multiline = yes
								}
							}
						}
					}
				}

				# Mobilize this general button
				flowcontainer = {
					position = { 335 0 }
					parentanchor = vcenter
					spacing = 5
					margin = { 2 2 }
					visible = "[And(Character.IsGeneral, Not(Character.IsMobilized))]"
					enabled = "[IsValid( Character.Mobilize )]"
					
					button = {
						using = default_button_action
						using = commander_mobilize_button_sound
						size = { 160 40 }
						
						onclick = "[Execute( Character.Mobilize )]"
						tooltip = "MOBILIZE_GENERAL_TOOLTIP"

						mobilization_icon_big = {
							visible = yes
							parentanchor = left|vcenter
							widgetanchor = center
							size = { 50 50 }
						}

						textbox = {
							parentanchor = center
							text = "MOBILIZE_GENERAL"
							autoresize = yes
							align = nobaseline
						}
					}
				} 

				# General order buttons
				dynamicgridbox = {
					position = { 315 0 }
					parentanchor = vcenter
					visible = "[And(Character.IsGeneral, Character.IsMobilized)]"
					enabled = "[Not(Character.HasNavalInvasionPlan)]"
					datamodel = "[Character.AccessOrders]"
					datamodel_wrap = 3
					flipdirection = yes

					item = {
						flowcontainer = {
							margin = { 2 2 }
							widget = {
								size = { 60 60 }
								tooltip = "COMMANDER_PANEL_ORDER_TOOLTIP"
								using = tooltip_above

								icon = {
									using = rotate_glow_blue
									parentanchor = center
									size = { 90 90 }
									visible = "[Character.HasOrder( CommanderOrderType.Self )]"
								}

								commander_order_button = {
									
									blockoverride "button_selected" {
										visible = "[Character.HasOrder( CommanderOrderType.Self )]"
									}
								}
							}
						}
					}
				}

				# Admiral order buttons
				dynamicgridbox = {
					position = { 315 0 }
					parentanchor = vcenter
					layoutanchor = topright
					visible = "[Character.IsAdmiral]"
					datamodel = "[Character.AccessOrders]"
					datamodel_wrap = 3
					flipdirection = yes

					item = {
						flowcontainer = {
							margin = { 2 2 }
							widget = {
								size = { 60 60 }
								tooltip = "COMMANDER_PANEL_ORDER_TOOLTIP"
								using = tooltip_above

								icon = {
									using = rotate_glow_blue
									parentanchor = center
									size = { 90 90 }
									visible = "[Character.HasOrder( CommanderOrderType.Self )]"
								}

								commander_order_button = {
									visible = "[Character.HasOrder( CommanderOrderType.Self )]"

									blockoverride "button_selected" {
										visible = yes
									}
								}

								commander_order_button = {
									visible = "[Not(Character.HasOrder( CommanderOrderType.Self ))]"
									
									blockoverride "button_selected" {
										visible = no
									}
								}
							}
						}
					}
				}

				# pin button
				widget = {
					size = { 30 30 }
					parentanchor = top|left

					button_icon_round_toggle = {
						name = "commander_pin_button"
						using = check_button_sound
						size = { 100% 100% }
						parentanchor = center

						blockoverride "icon_1" {
							texture = "gfx/interface/outliner/unpinned_icon.dds"
						}

						blockoverride "view_1" {
							visible = "[Not(Character.IsPinnedInOutliner)]"
						}

						blockoverride "tooltip_1" {
							tooltip = "PIN"
						}

						blockoverride "icon_2" {
							texture = "gfx/interface/outliner/pinned_icon.dds"
						}

						blockoverride "view_2" {
							visible = "[Character.IsPinnedInOutliner]"
						}

						blockoverride "tooltip_2" {
							tooltip = "UNPIN"
						}

						blockoverride "on_click" {
							onclick = "[Character.TogglePinInOutliner]"
						}
						
						blockoverride "wood_texture" {
							texture = "gfx/interface/buttons/round_button_small_wood_action.dds"
						}

						blockoverride "frame_visible" {}
					}
				}
			}
			
			# BATTALIONS / WARSHIPS
			section_header_button = {
				parentanchor = hcenter
				size = { 95% 38 }
			
				visible = "[GreaterThan_int32(Character.GetNumCombatUnits, '(int32)0')]"
				enabled = "[And( Not( Character.IsOffer ), Not(IsDataModelEmpty( Character.GetCombatUnits )))]"
				
				blockoverride "onclick" {
					onclick = "[GetVariableSystem.Toggle( Concatenate( 'combat_units_', Character.GetIDString ) )]"
				}

				blockoverride "onclick_showmore" {
					visible = "[Not(GetVariableSystem.Exists( Concatenate( 'combat_units_', Character.GetIDString ) ))]"
				}

				blockoverride "onclick_showless" {
					visible = "[GetVariableSystem.Exists( Concatenate( 'combat_units_', Character.GetIDString ) )]"
				}

				flowcontainer = {
					parentanchor = vcenter
					margin_left = 35
					spacing = 10

					textbox = {
						visible = "[And(Character.IsFullyMobilized, Character.IsGeneral)]"
						parentanchor = vcenter
						elide = right
						align = left|nobaseline
						autoresize = yes

						text = "MILITARY_PANEL_MOBILIZED"
						tooltip = "GENERAL_IS_MOBILIZED_TOOLTIP"
					}

					textbox = {
						visible = "[And(Character.IsMobilizing, Character.IsGeneral)]" 
						parentanchor = vcenter
						elide = right
						align = left|nobaseline
						autoresize = yes

						text = "[Character.GetMobilizationPercentageFormatted]"
						tooltip = "GENERAL_MOBILIZING_TOOLTIP"
					}

					textbox = {
						visible = "[And(Not(Character.IsMobilized), Character.IsGeneral)]"
						parentanchor = vcenter
						elide = right
						align = left|nobaseline
						autoresize = yes

						text = "GARRISONED_CONCEPT"
					}
				}

				flowcontainer = {
					parentanchor = right|vcenter
					spacing = 10

					textbox = {
						visible = "[Character.HasShippingLane]"
						parentanchor = vcenter
						elide = right
						align = right|nobaseline
						autoresize = yes

						text = "[Character.GetShippingLane.GetConvoyCostFormattedShort]"
					}

					# Attrition
					textbox = {
						visible = "[Or(Character.IsMobilized, NotEqualTo_CFixedPoint(Character.GetAttritionRaw,'(CFixedPoint)0'))]"
						parentanchor = vcenter
						autoresize = yes
						align = nobaseline
						text = "MILITARY_PANEL_TROOP_ATTRITION_LEVEL"
						tooltip = "[Character.GetAttritionDesc]"
					}

					# Units
					textbox = {
						visible = "[Character.IsMobilized]"
						parentanchor = vcenter
						elide = right
						align = right|nobaseline
						autoresize = yes
						text = "MILITARY_PANEL_COMMANDER_UNITS"
					}
					textbox = {
						visible = "[Not(Character.IsMobilized)]"
						parentanchor = vcenter
						elide = right
						align = right|nobaseline
						autoresize = yes
						text = "MILITARY_PANEL_COMMANDER_UNITS_UNMOBILIZED"
					}

					# Morale
					morale_bar = {
						size = { 6 24 }
						parentanchor = vcenter
						tooltip = "COMMANDER_MORALE_TOOLTIP"
						
						blockoverride "morale_value" {
							value = "[FixedPointToFloat( Character.GetMorale )]"
						}
						blockoverride "morale_color" {
							color = "[GetMoraleColorVec( Character.GetMorale )]"
						}
					}
				}
			}

			### MANPOWER PACKAGES
			flowcontainer = {
				parentanchor = hcenter
				direction = vertical
				minimumsize = { @panel_width_minus_10 -1 }
				maximumsize = { @panel_width_minus_10 -1 }
				margin = { 0 6 }

				visible = "[And( GetVariableSystem.Exists( Concatenate( 'combat_units_', Character.GetIDString ) ), Not( Character.IsOffer ))]"

				background = {
					using = dark_area
				}
			
				dynamicgridbox = {
					datamodel = "[Character.AccessExpandedBuildingEntries]"

					datamodel_wrap = 1
					flipdirection = yes
					parentanchor = hcenter

					item = {
						flowcontainer = {
							margin_bottom = 5

							combat_unit_building = {
								blockoverride "datacontext" {
									datacontext = "[MilitaryPanelBuildingEntry.GetBuilding]"
								}

								#TODO PRCAL-16920: Add toggles for building expand units
								blockoverride "onclick" {
									onclick = "[MilitaryPanelBuildingEntry.ToggleExpand]"
								}
								
								blockoverride "onclick_showmore" {
									visible = "[Not(MilitaryPanelBuildingEntry.IsExpanded)]"
								}
								
								blockoverride "onclick_showless" {
									visible = "[MilitaryPanelBuildingEntry.IsExpanded]"
								}

								blockoverride "combat_units_visible" {
									visible = "[MilitaryPanelBuildingEntry.IsExpanded]"
								}

								blockoverride "units_datamodel" {
									datamodel = "[Character.GetCombatUnitsFromBuilding(Building.Self)]"
								}
							}
						}
					}
				}
			}
		}
	}
}