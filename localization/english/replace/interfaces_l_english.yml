l_english:
  TAB: "   "
  DASH_WITH_SPACING: " - "
  POP_WORKPLACE_DAY_LABOURER: "Day Laborer"
  POP_WORKPLACE_UNEMPLOYED: "[concept_unemployed]"
  POP_WORKPLACE_EMPLOYED: "$NAME$"
  POP_WORKPLACE_DAY_LABOURER_LIST_ENTRY: "$WORKPLACE$: $WORKERS|v$"
  POP_WORKPLACE_DAY_LABOURER_LIST: "Works at:\n$LIST$"
  POP_WORKPLACE_EMPLOYED_TOOLTIP: "Have $WORKERS|v$ in industry."
  POP_WORKPLACE_UNEMPLOYED_TOOLTIP: "Is [concept_unemployed]."
  LOBBYVIEW_SELECT_PLAYABLE: "@red_cross! No country selected\n\nSelect a country on the map"
  LOBBYVIEW_NO_CROSSPLAY: "Disable cross-platform play"
  LOBBYVIEW_NO_CROSSPLAY_TOOLTIP: "Only allow players in your current platform"
  JOIN_MULTIPLAYER_PASTE_SERVER_ID: "Paste server ID"

  CONSTRUCTION_CURRENT_PAGE: "Page [ProductionMethodsPanel.AccessCurrentGovernmentConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]/[ProductionMethodsPanel.GetNumGovernmentConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry)]"
  CONSTRUCTION_CURRENT_PAGE_PRIVATE: "Page [ProductionMethodsPanel.AccessCurrentPrivateConstructionQueuePage(GetMetaPlayer.GetPlayedOrObservedCountry)]/[ProductionMethodsPanel.GetNumPrivateConstructionQueuePages(GetMetaPlayer.GetPlayedOrObservedCountry)]"
  CONSTRUCTION_NEXT_PAGE: "Next Page"
  CONSTRUCTION_PREVIOUS_PAGE: "Previous Page"
  PRIVATELY_FUNDED_CONSTRUCTION: "#header [concept_private_construction]#!\n$TOOLTIP_DELIMITER$\nThis [concept_construction_queue] item is a [concept_private_construction] and cannot be cancelled or reprioritized."
  GOVERNMENT_FUNDED_CONSTRUCTION: "#header [concept_government_construction]#!\n$TOOLTIP_DELIMITER$\nThis [concept_construction_queue] item is a [concept_government_construction] and can be freely cancelled or reprioritized."
  CANNOT_ALTER_PRIVATE_CONSTRUCTION: "[Concept('concept_private_construction', '$concept_private_constructions$')] cannot be cancelled or reprioritized."
  TROOP_ALLOCATION_CHANGES_PROMOTION: "[AddTextIf( Character.GetHomeHQ.HasTroopAllocationChangeFromPromotion( Character.Self ), Concatenate( '\n\n', Character.GetHomeHQ.GetTroopAllocationChangeFromPromotion( Character.Self ) ) )]"
  TROOP_ALLOCATION_CHANGES_RETIRE: "[AddTextIf( Character.GetHomeHQ.HasTroopAllocationChangeFromRetirement( Character.Self ), Concatenate( '\n\n', Character.GetHomeHQ.GetTroopAllocationChangeFromRetirement( Character.Self ) ) )]"
  TROOP_ALLOCATION_CHANGES_RECRUIT: "[AddTextIf( PopupManager.GetRecruitHQ.HasTroopAllocationChangeFromRecruitment( Character.Self ), Concatenate( '\n\n', PopupManager.GetRecruitHQ.GetTroopAllocationChangeFromRecruitment( Character.Self ) ) )]"
  TROOP_ALLOCATION_CHANGES_DOWNSIZE: "[AddTextIf( Building.GetHQ.HasTroopAllocationChangeFromDownsizeBuilding( Building.Self ), Concatenate( '\n\n', Building.GetHQ.GetTroopAllocationChangeFromDownsizeBuilding( Building.Self ) ) )]"
  RADICALIZATION_CHANGES_DOWNSIZE: "#warning @warning! Downsizing this [concept_building] will turn some of the fired [Concept('concept_individual','$concept_individuals$')] into [Concept('concept_radical', '$concept_radicals$')], especially if they have had [Concept('concept_ownership_share', '$concept_ownership_shares$')]#!"
  TROOP_ALLOCATION_CHANGES_EXPAND: "[AddTextIf( HQ.HasTroopAllocationChangeFromExpandBuilding( STATE.Self, BUILDING_TYPE.Self ), Concatenate( '\n\n', HQ.GetTroopAllocationChangeFromExpandBuilding( STATE.Self, BUILDING_TYPE.Self ) ) )]"
  TROOP_ALLOCATION_CHANGES_ACTIVATE_CONSCRIPTION_CENTER: "[AddTextIf( Hq.HasTroopAllocationChangeFromActivateConscriptionCenter( Building.Self ), Concatenate( '\n\n', Hq.GetTroopAllocationChangeFromActivateConscriptionCenter( Building.Self ) ) )]"
  COMMAND_CONFIRMATION_RETIRE_CHARACTER: "Do you want to retire [CHARACTER.GetFullName] from active service?\n\n@warning! This cannot be undone!\n\nThe [Character.GetInterestGroup.GetName] would immediately get:\n[Modifier.GetDesc]\nEffects decay over #v [GetDefine('NPolitics','RETIRE_COMMANDER_CONSEQUENCE_DURATION')] years#!.$TROOP_ALLOCATION_CHANGES_RETIRE$"
  COMMAND_CONFIRMATION_PROMOTE_CHARACTER: "Do you want to promote [CHARACTER.GetFullName]?\n$TOOLTIP_DELIMITER$\n[CHARACTER.GetNextCommanderRankBenefits]$TROOP_ALLOCATION_CHANGES_PROMOTION$\n\nThis cannot be undone."
  COMMAND_CONFIRMATION_CAPITULATE: "Do you want to capitulate in the [WAR.GetName] war? All [Concept('concept_war_goal', '$concept_war_goals$')] against your country and subjects will be automatically enforced."
  COMMAND_CONFIRMATION_YIELD: "Do you want to back down in the [concept_diplomatic_play] against [TARGET_COUNTRY.GetName]? Their [Concept('concept_primary_demand','$concept_primary_demands$')] against us will be enforced."
  COMMAND_CONFIRMATION_DECLARE_NEUTRALITY: "Do you want to declare neutrality in this [concept_diplomatic_play]? It will not be possible to rejoin the play later."
  COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY: "Do you want to start a [DiplomaticPlayType.GetName] [concept_diplomatic_play]? This can result in a war."
  COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_COUNTRY_WITH_DEFINITION: "[DiplomaticPlayType.GetStartTooltipCountryWithDefinition(GetPlayer,Country.Self,CountryDefinition.Self)]\n\nThis [concept_diplomatic_play] may escalate into a [concept_war]"
  COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_COUNTRY: "[DiplomaticPlayType.GetStartTooltipCountry(GetPlayer,Country.Self)]\n\nThis [concept_diplomatic_play] may escalate into a [concept_war]"
  COMMAND_CONFIRMATION_START_DIPLOMATIC_PLAY_STATE: "[DiplomaticPlayType.GetStartTooltipState(GetPlayer,State.Self)]\n\nThis [concept_diplomatic_play] may escalate into a [concept_war]"
  COMMAND_CONFIRMATION_MOBILIZE_GENERAL: "Do you want to [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilize$')] [CHARACTER.GetFullName]? They will only demobilize once the country is at peace."
  COMMAND_CONFIRMATION_MOBILIZE_GENERALS: "Do you want to [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilize$')] all of your [Concept('concept_general', '$concept_generals$')]? They will only demobilize once the country is at peace."
  COMMAND_CONFIRMATION_REMOVE_INCORPORATE_STATE: "Are you sure you want to stop incorporating [STATE.GetName]?"
  COMMAND_CONFIRMATION_REMOVE_INCORPORATE_STATE_UNSPECIFIED: "Are you sure you want to stop incorporating this state?"

  COMMAND_CONFIRMATION_DOWNSIZE_LAST_EXIT_PORT: "This would destroy the [GetBuildingType('building_port').GetName]. Are you sure you wish to continue?\n\n@information! Demolishing this [GetBuildingType('building_port').GetNameNoFormatting] might isolate [Concept('concept_state','$concept_states$')] from their [concept_market] if they cannot access the [concept_market_capital] through another [GetBuildingType('building_port').GetNameNoFormatting]."

  AGE: "Age"
  CHARACTER_AGE: "#v [Character.GetAge]#!"
  CHARACTER_AGE_TOOLTIP: "#header [Character.GetFullName]#! is #v [Character.GetAge]#! years old\n$TOOLTIP_DELIMITER$\n[Character.GetFirstName] was born on #v [Character.GetBirthday]#!"
  RELEASE_COUNTRY_HEADER: "Release [CountryCreation.GetName]"
  RELEASE_COUNTRY_SUBJECT_DESC: "Are you sure you want to release [COUNTRY_CREATION.GetName] as a [concept_subject] [concept_country] to [COUNTRY.GetName]?\n\n$COUNTRY_REWARDS$"
  RELEASE_COUNTRY_INDEPENDENT_DESC: "Are you sure you want to release [COUNTRY_CREATION.GetName] as an independent [concept_country]?\n\n$COUNTRY_REWARDS$"
  RELEASE_COUNTRY_WILL_RECEIVE_STATES: "They will receive the following states:\n[COUNTRY_CREATION.ListReleasableStates(GetPlayer)]"
  RELEASE_COUNTRY_WILL_RECEIVE_PROVINCES: "They will receive [COUNTRY_CREATION.GetNumProvincesToRelease|v] province(s) in the [COUNTRY_CREATION.GetCapital.GetName] [concept_state_region]"
  RELEASE_COUNTRY_AS_INDEPENDENT: "Release as Independent"
  RELEASE_COUNTRY_AS_OWN_SUBJECT: "Release as own [concept_subject] [concept_country]"
  RELEASE_COUNTRY_PLAY_AS: "Play as [CountryCreation.GetName]"
  COMMANDER_RECRUIT_BUTTON_TOOLTIP_EFFECTS: "Recruit [Character.GetFullName]\n$TOOLTIP_DELIMITER$[ConcatIfNeitherEmpty('\n', Character.GetCommanderRank.GetModifiers( Character.Self ))]"
  COMMANDER_RECRUIT_BUTTON_TOOLTIP: "[GetDesc(Character.GetRecruitCommand( PopupManager.GetRecruitHQ ))]$COMMANDER_RECRUIT_BUTTON_TOOLTIP_EFFECTS$ $TROOP_ALLOCATION_CHANGES_RECRUIT$"
  NO_ASSIGNED_BATTALIONS: "There are no [Concept('concept_battalion', '$concept_battalions$')] available in [PopupManager.GetRecruitHQ.GetName] for [Character.GetFullNameWithTitle]"
  NO_ASSIGNED_FLOTILLAS: "There are no [Concept('concept_flotilla','$concept_flotillas$')] available in [PopupManager.GetRecruitHQ.GetName] for [Character.GetFullNameWithTitle]"
  NO_ASSIGNED_BATTALIONS_TO_CHARACTER: "No [Concept('concept_battalion', '$concept_battalions$')] available in [Character.GetHomeHQ.GetName] for [Character.GetFullNameWithTitle]"
  NO_ASSIGNED_FLOTILLAS_TO_CHARACTER: "No [Concept('concept_flotilla','$concept_flotillas$')] available in [Character.GetHomeHQ.GetName] for [Character.GetFullNameWithTitle]"
  YES_CHECK: "@green_checkmark_box!"
  NO_CHECK: "@simple_box!"
  CONFIRM_YES: "Yes"
  CONFIRM_NO: "No"
  UNLOCK_TOPBAR: "Click to #bold Unlock#!"
  LOCK_TOPBAR: "Click to #bold Lock#!"
  BASE_SCRIPT_VALUE_FORMAT: "$KEY$: $VALUE|+=0$"
  DECIMAL_SCRIPT_VALUE_FORMAT: "$KEY$: $VALUE|+=$"
  NEUTRAL_SCRIPT_VALUE_FORMAT: "$KEY$: $VALUE|=0v$"
  NEUTRAL_DECIMAL_SCRIPT_VALUE_FORMAT: "$KEY$: $VALUE|=2v$"
  SCRIPT_VALUE_KEY_AFTER_FORMAT: "$VALUE|+=0$: $KEY$"
  incorporated_state: "[concept_incorporated_state]"
  unincorporated_state: "[concept_unincorporated_state]"
  colonial_state: "[concept_colony]"
  state_type_colony: "[concept_colony]"
  state_type_unincorporated: "[concept_unincorporated_state]"
  state_type_incorporated: "[concept_incorporated_state]"
  state_type_treaty_port: "[concept_treaty_port]"
  STATE_GOODS_POTENTIAL_SUMMARY: "Can support $POTENTIAL|v$ [BUILDING_TYPE.GetName] (Current Amount: $CUR|v$): Each building of this type can produce at most $AMOUNT|0v$ [GOODS.GetTextIcon][GOODS.GetName] at base throughput with our current technologies and laws."
  STATE_GOODS_POTENTIALS_TOOLTIP: "[GOODS.GetTextIcon][GOODS.GetName] in [STATE.GetName]\nPotential Base Production: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n$TOOLTIP_DELIMITER$\nProduction: [STATE.GetNumProduced(GOODS.Self)|1v]\nConsumption: [STATE.GetNumConsumed(GOODS.Self)|1v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
  STATE_GOODS_PRODUCTION_TOOLTIP: "[GOODS.GetTextIcon][GOODS.GetName] in [STATE.GetName]\nProduction: [STATE.GetNumProduced(GOODS.Self)|1v]\n$TOOLTIP_DELIMITER$\nConsumption: [STATE.GetNumConsumed(GOODS.Self)|1v]\nPotential Base Production: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
  STATE_GOODS_CONSUMPTION_TOOLTIP: "[GOODS.GetTextIcon][GOODS.GetName] in [STATE.GetName]\nConsumption: [STATE.GetNumConsumed(GOODS.Self)|1v]\n$TOOLTIP_DELIMITER$\nProduction: [STATE.GetNumProduced(GOODS.Self)|1v]\nPotential Base Production: [STATE.GetPotentialProductionForCountry(GOODS.Self, GetPlayer)|0v]\n\n[STATE.GetPotentialProductionForCountryDesc(GOODS.Self, GetPlayer)]"
  DIPLOMACY_HOVER_ATTITUDE_COUNTRY: "#header Viewing [concept_attitude] from the perspective of [Country.GetName]#!"
  DIPLOMACY_HOVER_RELATIONS_COUNTRY: "#header Viewing [concept_relations] from the perspective of [Country.GetName]#!"
  MULT_ICON: "#bold ×#!"
  PROFITABILITY_SHORT: "Prof"
  SIZE: "Size"
  TOOLTIP_AI_STRATEGY: "#header [AIStrategy.GetName]#!\n$TOOLTIP_DELIMITER$\n[AIStrategy.GetDesc(Country.Self)]"
  TOOLTIP_DELIMITER: "@divider_start!@divider_mid!@divider_mid!@divider_mid!@divider_end!"
  MARKETABLE_GOODS_TOOLTIP: "#header Marketable Goods#!\n$TOOLTIP_DELIMITER$\nBecause of its relatively low trading volume, the price of #variable [Goods.GetName]#! is affected by Market pricing to a greater degree than other goods, and thus is less affected by a state having low [concept_market_access]."
  NON_MARKETABLE_GOODS_TOOLTIP: "#header Non-Marketable Goods#!\n$TOOLTIP_DELIMITER$\nBecause of its relatively high trading volume, the price of #variable [Goods.GetName]#! is affected by Market pricing to a lesser degree than other goods, and thus is more affected by a state having low [concept_market_access]."
  NON_NEGOTIATORS: "Non-Negotiating Participants"
  RESOURCES: "Resources"
  BUILDINGS: "Buildings"
  POWER_STRUCTURE: "Power Structure"
  ECONOMY: "Economy"
  HUMAN_RIGHTS: "Human Rights"
  UPGRADE: "@arrow_up! Upgrading"
  DOWNGRADE: "@arrow_down! Downgrading"
  EXCESS: "excess"
  LACK: "lack of"
  INTEREST_IN: "[concept_interest] in"
  PRESTIGE: "Prestige"
  RANK: "Rank"
  PROGRESS: "Progress"
  INSTITUTION_EMPTY_STATE: "You have no [Concept('concept_law', '$concept_laws$')] providing any [Concept('concept_institution', 'Institutions')]"
  SHRINK: "< Shrink"
  GROW: "Grow >"
  TECH_TREE: "Technology Tree"
  GRAPHLAYOUT_NODE_DEBUG: "#D Key: $KEY$\nLayout node id: $LAYOUT_NODE_ID$\nBase node id: $BASE_NODE_ID$\nIncoming nodes: $INCOMING$\nOutgoing nodes: $OUTGOING$\nLayer: $LAYER$\nWidth: $WIDTH$\nCenterX: $CENTER_X$\nPriority: $PRIORITY$\nPosition: $POSITION$ #!"
  urban_capacity: "State [concept_urbanization]"
  BUILDING_GROUP_TITLE: "#title $BUILDING_GROUP$#!"
  BUILDING_GROUP_ENTRY_UNCAPPED: "$BUILDING$"
  BUILDING_GROUP_ENTRY_CAPPED: "$BUILDING$ (Max: #variable $NUM$#!)"
  MILITARY_PANEL_MUNITION_CONTENTS: "#title Contents of [Country.GetAcquiredMunitionCrates|1] Munition Crates#!"
  YEARS_COUNT_RANGE: "#v $MIN$-$MAX$ years#!"
  YEARS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ years"
  MONTHS_COUNT_RANGE: "#v $MIN$-$MAX$ months#!"
  MONTHS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ months"
  WEEKS_COUNT_RANGE: "#v $MIN$-$MAX$ weeks#!"
  WEEKS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ weeks"
  DAYS_COUNT_RANGE: "#v $MIN$-$MAX$ days#!"
  DAYS_COUNT_RANGE_NO_FORMAT: "$MIN$-$MAX$ days"
  YEARS_COUNT_SINGULAR: "#v 1 year#!"
  YEARS_COUNT_PLURAL: "#v $VALUE$ years#!"
  YEARS_COUNT_SINGULAR_NO_FORMAT: "1 year"
  YEARS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ years"
  MONTHS_COUNT_SINGULAR: "#v 1 month#!"
  MONTHS_COUNT_PLURAL: "#v $VALUE$ months#!"
  MONTHS_COUNT_SINGULAR_NO_FORMAT: "1 month"
  MONTHS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ months"
  WEEKS_COUNT_SINGULAR: "#v 1 week#!"
  WEEKS_COUNT_PLURAL: "#v $VALUE$ weeks#!"
  WEEKS_COUNT_SINGULAR_NO_FORMAT: "1 week"
  WEEKS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ weeks"
  DAYS_COUNT_SINGULAR: "#v 1 day#!"
  DAYS_COUNT_PLURAL: "#v $VALUE$ days#!"
  DAYS_COUNT_SINGULAR_NO_FORMAT: "1 day"
  DAYS_COUNT_PLURAL_NO_FORMAT: "$VALUE$ days"
  MARKET_STATES_PANEL_MARKET_ACCESS_TOOLTIP: "#header [concept_market_access] to the [State.GetMarket.GetName]#!\n[State.GetMarketAccessDesc]"
  STATES_PANEL_MARKET_ACCESS_ISOLATED: "[concept_market_access]: [concept_isolated_state]"
  ISOLATED_STATE: "[concept_isolated_state]"
  DEBUG_MODIFIERS: "#title Debug - Modifiers#!"
  STATE_REGION_MARKET_CONNECTION_PATH_ENTRY: "Connection at $PATH_STRENGTH|v0$ in [StateRegion.GetName] ([concept_infrastructure]: $ENTRY_INFRA|v0$)"
  STATE_REGION_MARKET_CONNECTION_PATH_WEAK_POINT: "Connection becomes $PREV_PATH_STRENGTH|v0$ @arrow_right! $PATH_STRENGTH|v0$ in [StateRegion.GetName] ([concept_infrastructure]: $ENTRY_INFRA|v0$)"
  STATE_REGION_STATE_ITEM: "$TAB$[STATE.GetName] ([STATE.GetOwner.GetName])\n"
  COUNTRY_PANEL_MODIFIERS_TAB: "$MODIFIERS$"
  MODIFIERS: "Modifiers"
  COUNTRY_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modifiers#!"
  COUNTRY_PANEL_INFORMATION_TAB: "Information"
  COUNTRY_PANEL_INFORMATION_TAB_SELECTED: "#bold Information#!"
  COUNTRY_PANEL_DIPLOMACY_TAB: "Diplomacy"
  COUNTRY_PANEL_DIPLOMACY_TAB_SELECTED: "#bold Diplomacy#!"
  COUNTRY_PANEL_POLITICS_TAB: "Politics"
  COUNTRY_PANEL_POLITICS_TAB_SELECTED: "#bold Politics#!"
  COUNTRY_PANEL_INTERACTIONS_TAB: "Interactions"
  COUNTRY_PANEL_INTERACTIONS_TAB_SELECTED: "#bold Interactions#!"
  COUNTRY_DIPLOMACY_PANEL_OPEN_SELF: "Can't do diplomacy with yourself"
  MODIFIERS_PANEL_NO_TIMED_MODIFIERS: "#bold No Timed Modifiers#!"
  MODIFIERS_PANEL_TIMED_MODIFIERS: "#bold Timed Modifiers#!"
  DECAYING_DESC: "([Concept('concept_decay','$concept_decaying$')])"
  DECAYING_DESC_WITH_SPACE_BEFORE: " $DECAYING_DESC$"
  DECAYING_DESC_WITH_SPACE_AFTER: "$DECAYING_DESC$ "
  DATA_TIMED_MODIFIER_TITLE: "#header $NAME$#!"
  DATA_TIMED_MODIFIER_DURATION: "Duration: $DURATION$$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
  DATA_TIMED_MODIFIER_REMAINING: "Remaining Time: $DURATION$$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
  DATA_TIMED_MODIFIER_ONELINE: "$MODIFIERDESC$ from #title $NAME$#! ($DURATION$)$MAYBE_DECAYING_WITH_SPACE_BEFORE$"
  MODIFIERS_PANEL_MODIFIER_ENTRIES: "#bold Modifier Entries#!"
  RELIGION_INFO_PANEL_SHOW_GLOBAL: "Listing [ReligionInfoPanel.GetReligion.GetName] [Concept('concept_pop', '$concept_pops$')] Globally"
  RELIGION_INFO_PANEL_SHOW_NATIONAL_ONLY: "Listing [ReligionInfoPanel.GetReligion.GetName] [Concept('concept_pop', '$concept_pops$')] in [GetPlayer.GetName]"
  BUILDING_DETAILS_PANEL_INFORMATION_TAB: "Information"
  BUILDING_DETAILS_PANEL_INFORMATION_TAB_SELECTED: "#bold Information#!"
  BUILDING_DETAILS_PANEL_MODIFIERS_TAB: "Modifiers"
  BUILDING_DETAILS_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modifiers#!"
  CLICK_TO_CHANGE_RESPONSE: "#instruction Click to change our response#!"
  COUNTRY_IN_MARKET_SUBTITLE: "[concept_country] in [CountryPanel.AccessCountry.AccessFirstMarket.GetName]"
  STATE_IN_COUNTRY_SUBTITLE: "[concept_state] in [State.GetCountry.GetName]"
  BATTLE_ON_FRONT_SUBTITLE: "[concept_battle] on [Battle.GetFront.GetName]"
  FRONT_IN_WAR_SUBTITLE: "[concept_front] in [Front.AccessDiplomaticPlay.AccessWar.GetName]"
  INTEREST_GROUP_PANEL_MODIFIERS_TAB: "Modifiers"
  INTEREST_GROUP_PANEL_MODIFIERS_TAB_SELECTED: "#bold Modifiers#!"
  BUILDING_DETAILS_LINE_TWO: "[concept_building] in [Building.GetState.GetName]"
  GOODS_PANEL_LINE_TWO: "on the [GoodsPanel.GetGoods.GetMarket.GetName]"
  GOODS_STATE_PANEL_LINE_TWO: "[concept_good] in [GoodsStatePanel.GetGoods.GetState.GetName] (Part of the [GoodsStatePanel.GetGoods.GetMarket.GetName])"
  POP_DETAILS_LINE_TWO: "[SelectLocalization(Pop.GetBuilding.IsValid,'POP_DETAILS_LINE_TWO_EMPLOYED','POP_DETAILS_LINE_TWO_UNEMPLOYED')]"
  POP_DETAILS_LINE_TWO_EMPLOYED: "[concept_pop] in [Pop.GetWorksAt] in [Pop.GetState.GetName]"
  POP_DETAILS_LINE_TWO_UNEMPLOYED: "[concept_unemployed] [concept_pop] in [Pop.GetState.GetName]"
  POP_OVERVIEW_HEADER: "Overview"
  POP_ECONOMY_HEADER: "Economy"
  POP_CONSUMPTION_HEADER: "Consumption"
  PERCENTAGE_OF_BUDGET: "% of Budget"
  POP_AMOUNT: "Amount"
  POP_TOP_GOODS_EXPENDITURES_HEADER: "#title Top [GetDefine('NGUI','NUM_TOP_CONSUMPTION_GOODS_SHOWN')|0] [Concept('concept_good','$concept_goods$')] expenditures#!"
  STATE_POPULATION_PANEL_LINE_TWO: "in [StatePopulationPanel.GetState.GetName]"
  BASE_FROM_POPS: "Base from Population: #v $VAL|D=+$#!"
  LEGITIMACY_BASE_VALUE: "Base Value: #bold #P $VAL|=+$#!#!"
  LEGITIMACY_GOVT_SIZE: "Size of [concept_government]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|=+$#!#!#!"
  LEGITIMACY_GOVT_SIZE_BREAKDOWN: "#header [concept_legitimacy] from size of [concept_government]: #v $VAL|=+$#!#!\nAllowed size: #p $MODIFIER_VALUE|0$#!\n$MODIFIER_DESC$\nActual size: #n $SIZE|0$#!\n$TOOLTIP_DELIMITER$\nExcess [Concept('concept_party','$concept_parties$')] and [Concept('concept_interest_group','$concept_interest_groups$')]\n$BREAKDOWN$#!"
  LEGITIMACY_GOVT_SIZE_PARTY_ENTRY: "[Party.GetName]: #variable $VAL|-$#!"
  LEGITIMACY_GOVT_SIZE_IG_ENTRY: "[InterestGroup.GetName]: #variable $VAL|-$#!"

  IDEOLOGICAL_INCOHERENCE_ALIAS: "Government Ideology Penalty"
  IDEOLOGICAL_INCOHERENCE: "#header $IDEOLOGICAL_INCOHERENCE_ALIAS$: #variable $VALUE|-$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  LEGITIMACY_IDEOLOGICAL_INCOHERENCE: "$IDEOLOGICAL_INCOHERENCE_ALIAS$: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|=+$#!#!#!"

  INTEREST_GROUP_INCOHERENCE_ENTRY_POSITIVE: "$INTEREST_GROUP$: #positive_value +$VALUE$#!"
  INTEREST_GROUP_INCOHERENCE_ENTRY_NEGATIVE: "$INTEREST_GROUP$: #negative_value -$VALUE$#!"
  INTEREST_GROUP_INCOHERENCE_ENTRY_PARTY: " ($PARTY$$WHIP$)"
  PARTY_WHIP: " - [Concept('concept_party_whip','$concept_party_whip_short$')]"
  INCOHERENCE_GROUP_BREAKDOWN: "#tooltip_header [LawGroup.GetName]: #n $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  IDEOLOGICAL_INCOHERENCE_ENTRY: "[LawType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #n $VALUE$#!#!#!"
  IDEOLOGICAL_INCOHERENCE_GROUP_ENTRY: "[LawGroup.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #n $VALUE$#!#!#!"
  INCOHERENCE_ENTRY_BREAKDOWN: "#header [LawType.GetName]: #negative_value $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n@approves! $concept_interest_groups$: #v $SUM_POSITIVE|+$#!\n$BREAKDOWN_POSITIVE$\n\n@disapproves! $concept_interest_groups$: #v $SUM_NEGATIVE|-$#!\n$BREAKDOWN_NEGATIVE$"
  INCOHERENCE_LAW_ENTRY_FIRST_FORMAT: "#active $BREAKDOWN$#!"
  INCOHERENCE_LAW_ENTRY_OTHERS_FORMAT: "#inactive $BREAKDOWN$#!"

  LEGITIMACY_HEAD_OF_STATE_VALUE: "Head of State's [concept_interest_group] #variable [InterestGroup.GetName]#! [concept_in_government]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $VAL|+=0$#!#!#!"
  LEGITIMACY_HEAD_OF_STATE_MODIFIER_BREAKDOWN: "Including the [GetPlayer.GetRuler.GetFullName]s [concept_interest_group], [GetPlayer.GetRuler.GetInterestGroup.GetName], [concept_in_government] gives:\n$BREAKDOWN$"
  LEGITIMACY_GOVT_LEADER_CLOUT_VALUE: "[concept_clout] of Government Leader: #variable $VAL|+=0$#!\n$TAB$#variable [INTEREST_GROUP.GetName]#! with Clout #variable [INTEREST_GROUP.GetClout|%+2]#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|0+$#!#!#!"
  LEGITIMACY_GOVERNMENT_CLOUT_MODIFIER_BREAKDOWN: "$BREAKDOWN$"
  LEGITIMACY_GOVT_TOTAL_CLOUT_VALUE: "Total [concept_clout] of [concept_government]: #variable $VAL|+=0$#!\n$TAB$[concept_government] [concept_clout] #variable $CLOUT|%+1$#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|2+$#!#!#!"
  LEGITIMACY_GOVT_TOTAL_CLOUT_VALUE_BREAKDOWN: "$BREAKDOWN$"
  LEGITIMACY_GOVT_TOTAL_VOTES_VALUE: "Total percentage of [concept_votes] of [concept_government]: #variable $VAL|+=0$#!\n$TAB$[concept_government] [concept_votes] #variable $VOTES|%+1$#! × #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $FACTOR|2+$#!#!#!"
  LEGITIMACY_GOVT_TOTAL_VOTES_VALUE_BREAKDOWN: "$BREAKDOWN$"
  LEGITIMACY_GOVT_STRENGTH_ENTRY: "#variable $FACTION$#!: #variable $VAL|=$%#!"
  LEGITIMACY_GOVT_STRENGTH_IG_ENTRY: "#variable [INTEREST_GROUP.GetName]#! #variable [INTEREST_GROUP.GetClout|=%]#!"
  GOVERNMENT_OPTION_TOOLTIP: "#header Government Option#!\n[concept_legitimacy]: #tooltippable #tooltip:$LEGITIMACY_BREAKDOWN_TAG$ $LEGITIMACY|v0$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  GOVERNMENT_OPTION_ENTRY: "[InterestGroup.GetName][AddTextIf(Not(StringIsEmpty('$PARTY$')),' ($PARTY$)')]"
  GOVERNMENT_OPTION_TEXT: "$LEGITIMACY|v0$: $BREAKDOWN$"
  GOVERNMENT_OPTION_LIST_ENTRY: "[InterestGroup.GetTextIcon]"
  GOVERNMENT_OPTION_LIST_ENTRY_DELIMITER: " "
  NUM_STATES_TOOLTIP_incorporated: "#header [SelectLocalization($MULTIPLE$,'[concept_incorporated_state]','[Concept('concept_incorporated_state','$concept_incorporated_states$')]')] in [Country.GetNameNoFlag]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  NUM_STATES_TOOLTIP_unincorporated: "#header [SelectLocalization($MULTIPLE$,'[concept_unincorporated_state]','[Concept('concept_unincorporated_state','$concept_unincorporated_states$')]')] in [Country.GetNameNoFlag]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  NUM_STATES_TOOLTIP_treaty_port: "#header [SelectLocalization($MULTIPLE$,'[concept_treaty_port]','[Concept('concept_treaty_port','$concept_treaty_ports$')]')] in [Country.GetNameNoFlag]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  NUM_STATES_TOOLTIP_count: "#header [SelectLocalization($MULTIPLE$,'[concept_state]','[Concept('concept_state','$concept_states$')]')] in [Country.GetNameNoFlag]: $VAL|0v$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  PROCESS_EXPENSES: "Expenses:"
  PROCESS_REVENUE: "Revenue:"
  PROCESS_BALANCE: "Weekly [concept_building_balance]:"
  VACANCIES: "Vacancies"
  NO_VACANCIES: "Building Is Fully Employed"
  NOTIFICATION_BUILDING_FULLY_EMPLOYED: "[Building.GetName|v] is fully employed in [State.GetName]"
  NOTIFICATION_STATE_AVERAGE_SOL_INCREASED: "[concept_sol|v] increased to $VAL|+$ in [State.GetName|v]"
  NOTIFICATION_STATE_AVERAGE_SOL_DECREASED: "[concept_sol|v] decreased to $VAL|-$ in [State.GetName|v]"
  NOTIFICATION_STATE_JOINED_MARKET: "[State.GetName|v] joined [State.GetMarket.GetName|v]"
  NOTIFICATION_STATE_LITERACY_INCREASED: "[concept_literacy] increased to $VAL|%+0$ in [State.GetName|v]"
  NOTIFICATION_STATE_POPULATION_INCREASED: "[Concept('concept_pop','$concept_population$')] increased to $VAL|K+$ in [State.GetName|v]"
  NOTIFICATION_STATE_POPULATION_DECREASED: "[Concept('concept_pop','$concept_population$')] decreased to $VAL|K-$ in [State.GetName|v]"
  NOTIFICATION_STATE_IN_TURMOIL: "[concept_turmoil] started in [State.GetName|v]"
  INFRASTRUCTURE: "[concept_infrastructure]"
  ARABLE_LAND_AVAILABLE: "[concept_arable_land] (should be presented like other resources)"
  FREE_ARABLE_LAND: "FAL: $NUM|v$"
  LENS_OPTION_TEXT: "[LensOption.GetText]"
  LENS_OPTION_TOOLTIP: "[LensOption.GetTooltip]"
  BUILDING_MODIFIERS_PER_LEVEL_COLON: "#title Building Modifiers (per level):#!"
  COUNTRY_MODIFIERS_PER_LEVEL_COLON: "#title Country Modifiers (per level):#!"
  STATE_MODIFIERS_PER_LEVEL_COLON: "#title State Modifiers (per level):#!"
  APPLIES_TO_BUILDING_TYPE: "Applies to $BUILDING_TYPE$ ([ProductionMethodGroup.GetName] [concept_production_method])"
  GOODS_PRODUCTION_COLON: "#title Goods Production:#!"
  GOODS_CONSUMPTION_COLON: "#title Goods Consumption:#!"
  BUILDING_WAGE_PER_LEVEL: "Approximately #variable @money!$PER_LEVEL_WAGE|k$#! per Level in Government Wages"
  BUILDING_WAGE_TOTAL: "Approximately #variable @money!$TOTAL_WAGE|k$#! Total in Government Wages"
  BUILDING_WAGE_RANGE_PER_LEVEL: "Approximately #variable @money!$MIN_PER_LEVEL_WAGE$#! - #variable @money!$MAX_PER_LEVEL_WAGE$#! per Level in Government Wages"
  BUILDING_WAGE_RANGE_TOTAL: "Approximately #variable @money!$MIN_TOTAL_WAGE$#! - #variable @money!$MAX_TOTAL_WAGE$#! Total in Government Wages"
  BUILDING_TYPE_NAME_FORMAT: "#bold #v $NAME$#!#!"
  CONSTRUCTION_MATERIALS_COLON: "#title Construction Cost:#!"
  BUILDING_PROVIDES_URBANIZATION_PER_LEVEL: "#variable #P +$URBANIZATION$#!#! [concept_urbanization] per Level"
  BUILDING_PROVIDES_URBANIZATION_TOTAL: "#variable #P +$URBANIZATION$#!#! [concept_urbanization] Total"
  BUILDING_USES_INFRASTRUCTURE_PER_LEVEL: "#variable #N +$USAGE|0$#!#! [concept_infrastructure_usage] per Level"
  BUILDING_USES_INFRASTRUCTURE_TOTAL: "#variable #N +$USAGE|0$#!#! [concept_infrastructure_usage] Total"
  BUILDING_ARABLE_CAPACITY_PER_LEVEL: "#variable #N -$ARABLE_CAPACITY$#!#! [concept_arable_land] per Level"
  BUILDING_ARABLE_CAPACITY_TOTAL: "#variable #N -$ARABLE_CAPACITY$#!#! [concept_arable_land] Total"
  GDP_TOOLTIP: "#header [concept_gdp]#!\n[Country.GetAdjective] $GDP_SHORT$: #N @money![SelectLocalization(LessThan_CFixedPoint(Country.MakeScope.ScriptValue('cwp_gdp'), '(CFixedPoint)1000000000000'), 'CWP_NORMAL', 'CWP_TRILLION')]#! [Country.GetGDPRanking]\n$TOOLTIP_DELIMITER$\nGDP per Capita: #variable @money![Country.MakeScope.ScriptValue('cwp_gdp_per_capita')|2*]#! [Country.GetGDPPerCapitaRanking]\n\n"
  MARKET_GDP_PERCENTAGE: "#title [GetPlayer.GetAdjectiveNoFormatting] $GDP_SHORT$ Contribution#!\n[Market.GetMarketSharePercentageFor( GetPlayer )|%1v]"
  MARKET_GDP_PERCENTAGE_TOOLTIP: "#header Contribution to GDP#!\n[Market.GetName] contributes [Market.GetGDPContributionPercentage( GetPlayer )|%1v] of the GDP in [GetPlayer.GetName]"
  ACTIVE_PRODUCTION_METHOD_HEAD: "#header $NAME$#!"
  SWITCH_PRODUCTION_METHOD_HEAD: "#header Switch to $NAME$#!"
  PRICE_ICON_ITEM_STATE: "([Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )] in [Goods.GetState.GetName])"
  PRICE_ICON_ITEM_RANGE: "(#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON_MIN$#!#!-#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON_MAX$#!#! in $NUM$ State Regions)"
  MARKET_TRADE_ROUTE_TOOLTIP: "#header [Concept('concept_trade_route', '$concept_trade_routes$')] in [Market.GetName]#!"
  PRICE_ICON_ITEM_RANGE_SAME: "(#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON$#!#! in $NUM$ State Regions)"
  PRICE_ICON_ITEM_MARKET: "([Goods.GetCompareIconAgainstBasePrice( Goods.GetMarketPrice )] in [Goods.GetMarket.GetName])"
  DEFAULT_EVENT_OPTION: "This option will be picked automatically after $EVENT_REMAINING_DAYS$."
  NO_PROGRESS: "No Progress"
  INVALID_OPTIONS: "Invalid Options: [GetDataModelSize(MapListPanel.AccessInvalidOptions)|v]"
  FAILED_OPTIONS: "Unavailable Options: [GetDataModelSize(MapListPanel.AccessFailedOptions)|v]"
  BUILDING_TYPE_COUNTRY_BREAKDOWN: "[SelectLocalization( GreaterThan_int32( BuildingType.GetLevelCountInCountry(GetPlayer.Self), '(int32)0' ), 'BUILDING_TYPE_COUNTRY_BREAKDOWN_NONEMPTY', 'BUILDING_TYPE_COUNTRY_BREAKDOWN_EMPTY' )]"
  BUILDING_TYPE_COUNTRY_BREAKDOWN_NONEMPTY: "There are #tooltippable #tooltip:[BuildingType.GetTooltipTag],BUILDING_TYPE_COUNTRY_BREAKDOWN_TOOLTIP [BuildingType.GetLevelCountInCountry(GetPlayer.Self)]#!#! Levels of [BuildingType.GetNameNoFormatting] in [GetPlayer.GetName][SelectLocalization(And(Not(BuildingType.IsGovernmentFunded), Not(BuildingType.IsSubsistenceBuilding)), 'BUILDING_TYPE_PRODUCTIVITY', '')]"
  BUILDING_TYPE_COUNTRY_BREAKDOWN_TOOLTIP: "#header [BuildingType.GetName] in [GetPlayer.GetName]#!\n[BuildingType.GetBreakdownInCountry(GetPlayer.Self)]"
  BUILDING_TYPE_COUNTRY_BREAKDOWN_ITEM: "Size [BUILDING.GetExpansionLevel|v] [BUILDING.GetName] in [BUILDING.GetState.GetName]"
  BUILDING_TYPE_CONSTRUCTION_COUNTRY_BREAKDOWN_ITEM: "[BUILDING.GetExpansionLevelsInQueue|v] levels of [BUILDING.GetName] under construction in [BUILDING.GetState.GetName]"
  BUILDING_TYPE_COUNT: "#tooltippable #tooltip:[BuildingType.GetTooltipTag],BUILDING_TYPE_COUNTRY_BREAKDOWN_TOOLTIP [SelectLocalization( GreaterThan_int32( BuildingType.GetUnderConstructionCountInCountry(GetPlayer.Self), '(int32)0' ), 'BUILDING_TYPE_COUNT_ACTIVE_CONSTRUCTIONS', 'BUILDING_TYPE_COUNT_NO_CONSTRUCTION')]#!#!"
  BUILDING_TYPE_COUNTRY_BREAKDOWN_EMPTY: "There are no [BuildingType.GetNameNoFormatting] in [GetPlayer.GetName]"
  BUILDING_TYPE_PRODUCTIVITY: "\n[concept_productivity]: [BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
  BUILDING_TYPE_COUNT_NO_CONSTRUCTION: "[BuildingType.GetLevelCountInCountry(GetPlayer.Self)]"
  BUILDING_TYPE_COUNT_ACTIVE_CONSTRUCTIONS: "[BuildingType.GetLevelCountInCountry(GetPlayer.Self)]+[BuildingType.GetUnderConstructionCountInCountry(GetPlayer.Self)]"
  PRODUCTION_METHODS_HEADER: "Buildings"
  COUNTRY_TOOLTIP: "#HEADER [Country.GetName]#!"
  COMMANDER_RANK: "Rank: [Character.GetRankName]"
  commander_specific_rank_desc: "$NAME$ - $RANK$"
  CULTURE: "Culture"
  COUNTRY_CULTURES: "#title [Concept('concept_culture', '$concept_cultures$')]#!:\n#variable [Country.GetPrimaryCulturesDesc]#!"
  COUNTRY_CULTURES_ONE_LINE: "#title [concept_primary_cultures]#!"
  POP_COUNTRY_CULTURES: "[concept_primary_cultures] in [Pop.GetCountry.GetName]:#indent_newline: \n#variable [Pop.GetCountry.GetPrimaryCulturesDesc]#!#!"
  COUNTRY_RELIGIONS: "#title [concept_state_religion]#!:\n#variable [Country.GetStateReligion.GetName]#!"
  COUNTRY_RELIGIONS_ONE_LINE: "#title [concept_state_religion]#!"
  COUNTRY_ARABLE_LAND: "#title [concept_arable_land]#!:\n#variable [Country.GetArableLand|D]#!"
  COUNTRY_ARABLE_LAND_ONE_LINE: "#title [concept_arable_land]#!"
  POP_COUNTRY_RELIGIONS: "[concept_state_religion]: #variable [Pop.GetCountry.GetStateReligion.GetName]#!"
  COUNTRY_GOVERNMENT: "#title [concept_government]#!:\n#tooltippable #tooltip:[Country.GetGovernment.GetTooltipTag],GOVERNMENT_TYPE_TOOLTIP_DESC [Country.GetGovernment.GetName]#!#!"
  COUNTRY_GOVERNMENT_NO_LINE_BREAK: "#title [concept_government]#!: #tooltippable #tooltip:[Country.GetGovernment.GetTooltipTag],GOVERNMENT_TYPE_TOOLTIP_DESC [Country.GetGovernment.GetName]#!#!"
  COUNTRY_RULER: "#title [concept_ruler]#!:\n#variable [Country.GetRuler.GetFullName]#!"
  COUNTRY_RANK: "#title [concept_rank]#!:\n#variable [Country.GetRank]#! #variable (##[Country.GetCountryScorePositionDesc])#!"
  COUNTRY_RANK_ONE_LINE: "#title [concept_rank]#!: [Country.GetRank|v] #variable (##[Country.GetCountryScorePositionDesc])#!"
  COUNTRY_POPULATION: "#title [Concept('concept_pop','$concept_population$')]#!:\n#variable [Country.GetTotalPopulation|D]#!"
  COUNTRY_POPULATION_ONE_LINE: "#title [Concept('concept_pop','$concept_population$')]#!"
  COUNTRY_SOL_ONE_LINE: "#title [concept_sol]#!"
  COUNTRY_GDP: "#title $GDP_SHORT$#!:\n#variable @money![SelectLocalization(LessThan_CFixedPoint(Country.MakeScope.ScriptValue('cwp_gdp'), '(CFixedPoint)1000000000000'), 'CWP_NORMAL', 'CWP_TRILLION')]#!"
  COUNTRY_GDP_ONE_LINE: "#title $GDP_SHORT$#!"
  NO_POP_TYPES_POL_STR: "No [concept_pop] with [concept_political_strength]"
  NO_RELIGIONS: "No [Concept('concept_religion', '$concept_religions$')]"
  NO_CULTURES_POL_STR: "No [Concept('concept_culture', '$concept_cultures$')] with [concept_political_strength]"
  NO_RELIGIONS_POL_STR: "No [Concept('concept_religion', '$concept_religions$')] with [concept_political_strength]"
  NO_INTEREST_GROUPS: "No [Concept('concept_interest_group', '$concept_interest_groups$')]"
  NO_POP_TYPES: "No [Concept('concept_pop', '$concept_pops$')]"
  GOVERNMENT_TYPE_TOOLTIP_DESC: "[GovernmentType.GetDesc]"
  POP_CULTURE_CHANGE_ENTRY_POSITIVE: "#v $CHANGE|=+$#! assimilating [Pop.GetName] in [Pop.GetState.GetName]"
  POP_CULTURE_CHANGE_ENTRY_NEGATIVE: "#v $CHANGE|=+$#! [Pop.GetName] in [Pop.GetState.GetName] assimilating to [Pop.GetAssimilatingCulture.GetName]"
  CULTURE_IN_COUNTRY_DESC: "\nPopulation in [GetPlayer.GetName]: [Culture.GetPopulation(GetPlayer.Self)|Kv] [SelectLocalization(NotEqualTo_int32(Culture.GetPopulationChange(GetPlayer.Self),'(int32)0'),'CULTURE_POPULATION_CHANGE_IN_COUNTRY','')]\n[concept_primary_cultures] in [GetPlayer.GetName]: [Culture.IsPrimaryCultureInYesNo(GetPlayer.Self)]\n[concept_migration_target]: [Culture.GetMigrationTargetsDesc]\n[concept_turmoil] of [Culture.GetName] Pops:\n$TAB$#variable [GetPlayer.CalcCulturalTurmoil( Culture.Self )|-0%]#! in [GetPlayer.GetName]\n$TAB$#variable [Culture.GetTurmoil|-0%]#! worldwide"
  CULTURE_POPULATION_CHANGE: "[Culture.GetName] in [Country.GetName] Monthly Change: #v $CHANGE|=+$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  POP_RELIGION_CHANGE_ENTRY_POSITIVE: "#v $CHANGE|=+$#! converting [Pop.GetName] in [Pop.GetState.GetName]"
  POP_RELIGION_CHANGE_ENTRY_NEGATIVE: "#v $CHANGE|=+$#! [Pop.GetName] in [Pop.GetState.GetName] converting to [Pop.GetConvertingReligion.GetName]"
  RELIGION_NAME_AND_PERCENTAGE: "[Religion.GetName] (#v $VAL|2%$#!)"
  RELIGION_IN_COUNTRY_DESC: "\nPopulation in [GetPlayer.GetName]: [Religion.GetPopulation( GetPlayer.Self)|kv] [SelectLocalization(NotEqualTo_int32(Religion.GetPopulationChange(GetPlayer.Self),'(int32)0'),'RELIGION_POPULATION_CHANGE_IN_COUNTRY','')]\nPolitical Strength in [GetPlayer.GetName]: [Religion.GetPolStr( GetPlayer.Self )|kv]"
  RELIGION_POPULATION_CHANGE: "[Religion.GetName] in [Country.GetName] Monthly Change: #v $CHANGE|=+$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  DISCRIMINATION_TRAIT_CULTURES: "[Concept('concept_culture', '$concept_cultures$')]: [DiscriminationTrait.GetCulturesDesc]"
  DISCRIMINATION_TRAIT_RELIGIONS: "[Concept('concept_religion', '$concept_religions$')]: [DiscriminationTrait.GetReligionsDesc]"
  METRICS_OF_PROGRESS_HEADER: "#title 'Metrics of progress'#! (test)"
  COUNTRY_URBANISATION: "#title [concept_urbanization]:#!"
  COUNTRY_INDUSTRIALISATION: "#title Industrialisation:#!"
  MILITARY: "Military"
  NAVY: "Navy"
  PRICE_REPORT_SHORT: "$DETAILS$"
  PRICE_REPORT_LONG: "$DETAILS$\n#tooltippable #tooltip:$BREAKDOWN_TAG$ Hover to see $NUM_ADDITIONAL|v$ more significant [concept_market_price] changes#!#!"
  PRICE_REPORT_NO_CHANGES: "There were no significant [concept_market_price] changes in the [GetPlayer.GetCapital.GetMarket.GetName] over the last month."
  PRICE_REPORT_GOODS_ENTRY: "$DIRECTION$ [Goods.GetTextIcon] @money!$PREV_PRICE|v1$ ($PREV_ICON$) @arrow_right! @money!$CUR_PRICE|v1$ ($CUR_ICON$) for [Goods.GetName]"
  PRICE_REPORT_DIRECTION_INCREASE: "@arrow_up!"
  PRICE_REPORT_DIRECTION_DECREASE: "@arrow_down!"
  MAP_MODE: "Map Mode"
  LOCAL_PRICE_IN: "Local Prices in [GoodsPanel.GetGoods.GetMarket.GetName]"
  LOCAL_PRICE_IN_STATE: "Local Prices in [State.GetMarket.GetName]"
  USAGE: "Applications"
  LOCAL_PRICE_STATE: "Local Prices in [GoodsStatePanel.GetGoods.GetMarket.GetName]"
  TRADE_ROUTES: "$concept_trade_routes$"
  TRADE_ROUTES_CONCEPT: "[Concept('concept_trade_route','$concept_trade_routes$')]"
  TRADE_ROUTES_HEADER: "[GetPlayer.GetFlagTextIcon] [GetPlayer.GetAdjectiveNoFormatting] [Concept('concept_trade_route', '$concept_trade_routes$')]"
  MARKET_TRADE_ROUTES_SUMMARY: "#title $TRADE_ROUTES_HEADER$#!"
  NO_IMPORT_TRADE_ROUTES: "You Currently Have No Import Trade Routes"
  NO_EXPORT_TRADE_ROUTES: "You Currently Have No Export Trade Routes"
  NO_TRADE_ROUTES: "No [MarketGoods.GetGoods.GetName] Trade Routes"
  REMOVE_TRADE_ROUTE: "Remove this [concept_trade_route]"
  TRADE_ROUTE_NAME_OF_GOODS: "Sort by name of the traded [concept_good]"
  TRADE_ROUTE_NUMBER_OF_GOODS: "Sort by number of [Concept('concept_good', '$concept_goods$')] moved"
  TRADE_ROUTE_DIRECTION: "Sort by the direction of each [concept_trade_route], @import! #b import#! or @export! #b export#!"
  TRADE_ROUTE_COUNTRY: "Sort by [concept_country]"
  TRADE_ROUTE_CONVOY_COST: "Sort by the cost of @convoys! [concept_convoys]"
  TRADE_ROUTE_PRODUCTIVITY: "Sort by [concept_productivity] of the [GetBuildingType('building_trade_center').GetName]"
  TRADE_ROUTE_REVENUE: "Sort by [concept_trade_revenue] for the [GetBuildingType('building_trade_center').GetName]"
  OUTLINER_PANEL_DESCRIPTION: "Pin any of the below lists or list items to the Outliner to the right of the screen by hovering any of them and clicking the star (@unpinned_star!) in the right corner.\n\nClick the star (@pinned_star!) again to unpin them."
  COUNTRY_LITERACY: "#title [concept_literacy]:#!\n#variable [Country.GetIncorporatedLiteracyRate|%1]#!"
  COUNTRY_LITERACY_ONE_LINE: "#title [concept_literacy]#!"
  LITERACY_TOOLTIP: "#header [concept_literacy]#!\n#variable [Country.GetNumIncorporatedLiteratePops|*]#! out of #variable [Country.GetIncorporatedPopulation|*]#! living in the [concept_incorporated_state]s of #variable [Country.GetName]#! are well educated, resulting in a education level of [Country.GetIncorporatedLiteracyRate|%v] [Country.GetIncorporatedLiteracyRanking]\n$TOOLTIP_DELIMITER$\nThis results in an [concept_innovation] cap of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INNOVATION_POINTS_MAX_BREAKDOWN @innovation![Country.GetWeeklyMaxInnovation|1]#!#!\nWe are currently generating #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INNOVATION_POINTS_CURRENT_BREAKDOWN #v @innovation![Country.GetWeeklyInnovation|+=1]#!#!#! each week (@innovation![Country.GetWeeklyRawInnovation|+=1] uncapped)\n\nAdditionally, our current [concept_literacy] rate provides us with a [concept_technology_spread] rate of #P #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TECHNOLOGY_SPREAD_RATE_BREAKDOWN [Country.GetMinWeeklyTechnologySpread|1] to [Country.GetMaxWeeklyTechnologySpread|1]#!#!#! worth of @innovation![concept_innovation] each week[SelectLocalization(EqualTo_int32(GetPlayer.GetTotalPopulation,GetPlayer.GetIncorporatedPopulation),'','LITERACY_UNINCORPORATED_TOOLTIP')]"
  LITERACY_UNINCORPORATED_TOOLTIP: "\n$TOOLTIP_DELIMITER$\nWhen also factoring in [Concept('concept_unincorporated_state','$concept_unincorporated_states$')], #variable [Country.GetNumTotalLiteratePops|*]#! out of #variable [Country.GetTotalPopulation|*]#! ([Country.GetTotalLiteracyRate|%v]) [Concept('concept_pop','$concept_pops$')] in #variable [Country.GetName]#! are literate [Country.GetTotalLiteracyRanking]"
  INNOVATION_POINTS_CURRENT_BREAKDOWN: "#header @innovation![concept_innovation] generation#!\nWe generate #v @innovation![Country.GetWeeklyInnovation|+2]#!, due to:\n[Country.GetWeeklyInnovationDesc]"
  INNOVATION_POINTS_MAX_BREAKDOWN: "#header @innovation![concept_innovation] cap#!\nOur cap of @innovation![Country.GetWeeklyMaxInnovation|v2] is due to:\n[Country.GetWeeklyMaxInnovationDesc]"
  INNOVATION_CAP_BREAKDOWN_ENTRY_TITLE: "[concept_innovation] Cap"
  GOVERNMENT_TRANSFER_OF_POWER_TOOLTIP: "#header [GovernmentType.GetTransferOfPowerName]#!\n[GovernmentType.GetTransferOfPowerDesc]"
  CUL_DISCRIMINATED_IN_COUNTRY: "[CULTURE.GetName] Culture is discriminated in [COUNTRY.GetName]"
  CUL_NOT_DISCRIMINATED_IN_COUNTRY: "[CULTURE.GetName] Culture is not discriminated in [COUNTRY.GetName]"
  CUL_DISCRIMINATED_NOT_IN_COUNTRY: "[CULTURE.GetName] Culture would be discriminated, but is not present in [COUNTRY.GetName]"
  CUL_NOT_DISCRIMINATED_NOT_IN_COUNTRY: "[CULTURE.GetName] Culture would not be discriminated, but is not present in [COUNTRY.GetName]"
  REL_DISCRIMINATED_IN_COUNTRY: "[RELIGION.GetName] is discriminated in [COUNTRY.GetName]"
  REL_NOT_DISCRIMINATED_IN_COUNTRY: "[RELIGION.GetName] is not discriminated in [COUNTRY.GetName]"
  REL_DISCRIMINATED_NOT_IN_COUNTRY: "[RELIGION.GetName] would be discriminated, but is not present in [COUNTRY.GetName]"
  REL_NOT_DISCRIMINATED_NOT_IN_COUNTRY: "[RELIGION.GetName] would not be discriminated, but is not present in [COUNTRY.GetName]"
  DISCRIMINATION_TOOLTIP: "#header This Pop is Discriminated Against in [Pop.GetCountry.GetName]#!\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(Pop.IsSlave, 'DISCRIMINATION_TOOLTIP_SLAVE_DISCRIMINATION')][AddLocalizationIf(Pop.GetCulture.IsDiscriminatedIn(Pop.GetCountry.Self), 'DISCRIMINATION_TOOLTIP_CULTURAL_DISCRIMINATION')][AddLocalizationIf(Pop.GetReligion.IsDiscriminatedIn(Pop.GetCountry.Self), 'DISCRIMINATION_TOOLTIP_RELIGIOUS_DISCRIMINATION')]"
  DISCRIMINATION_TOOLTIP_RELIGIOUS_DISCRIMINATION: "\n[Pop.GetReligion.GetName] is [Concept('concept_discrimination','$concept_discriminated_against$')] due to the [concept_law] [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetName] for [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetGroup.GetName]\n"
  DISCRIMINATION_TOOLTIP_CULTURAL_DISCRIMINATION: "[Pop.GetCulture.GetName] is [Concept('concept_discrimination','$concept_discriminated_against$')] due to the [concept_law] [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_citizenship').GetName] for [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetGroup.GetName]\n"
  DISCRIMINATION_TOOLTIP_SLAVE_DISCRIMINATION: "This Pop is [Concept('concept_slavery', '$concept_enslaved$')] and they will always be discriminated against regardless of [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetGroup.GetName] or [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_citizenship').GetGroup.GetName] laws\n\n"
  ACCEPTED_TOOLTIP: "#header This Pop is Accepted in [Pop.GetCountry.GetName]#!\n$TOOLTIP_DELIMITER$\n[AddLocalizationIf(Pop.GetCulture.IsPrimaryCultureIn(Pop.GetCountry.Self), 'ACCEPTED_TOOLTIP_PRIMARY_CULTURE')][AddLocalizationIf(Not(Pop.GetCulture.IsDiscriminatedIn(Pop.GetCountry.Self)), 'ACCEPTED_TOOLTIP_CULTURAL_ACCEPTANCE')][AddLocalizationIf(Not(Pop.GetReligion.IsDiscriminatedIn(Pop.GetCountry.Self)), 'ACCEPTED_TOOLTIP_RELIGIOUS_ACCEPTANCE')]"
  ACCEPTED_TOOLTIP_RELIGIOUS_ACCEPTANCE: "\n[Pop.GetReligion.GetName] is [Concept('concept_accepted_religion','$concept_accepted_religion_short$')] due to the [concept_law] [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetName] for [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetGroup.GetName]\n"
  ACCEPTED_TOOLTIP_CULTURAL_ACCEPTANCE: "[Pop.GetCulture.GetName] is [Concept('concept_accepted_culture','$concept_accepted_culture_short$')] due to the [concept_law] [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_citizenship').GetName] for [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_citizenship').GetGroup.GetName]\n"
  ACCEPTED_TOOLTIP_PRIMARY_CULTURE: "As this Pop is of the [Concept('concept_primary_cultures','$concept_primary_culture$')] they will always be Accepted\n\n"
  LOYALISTS_TOOLTIP_POP: "#header $LOYALISTS$#!\nThere are #v [Pop.GetNumLoyalists|K]#! $LOYALISTS$ in this [concept_pop]"
  RADICALS_TOOLTIP_POP: "#header $RADICALS$#!\nThere are #v [Pop.GetNumRadicals|K]#! $RADICALS$ in this [concept_pop]"
  LOYALISTS_TOOLTIP_POP_LIST: "#header $LOYALISTS$#!\nThere are #v [PopListItem.GetNumLoyalists|d]#! $LOYALISTS$ among these [PopListItem.GetTotalPopSize|dv] [PopListItem.GetPopType.GetName]"
  RADICALS_TOOLTIP_POP_LIST: "#header $RADICALS$#!\nThere are #v [PopListItem.GetNumRadicals|d]#! $RADICALS$ among these [PopListItem.GetTotalPopSize|dv] [PopListItem.GetPopType.GetName]"
  CULTURAL_POSSIBLE_SECESSION_ICON_TOOLTIP: "Has a [Culture.GetChanceForSecessionMovement( GetPlayer.Self )|%1v] chance every week to start a #variable [concept_secession] movement#! due to being a non-[concept_primary_cultures] with high [concept_turmoil]!\n$TOOLTIP_DELIMITER$\n[concept_secession_desc]"
  CULTURAL_GROWING_SECESSION_ICON_TOOLTIP: "The [Culture.GetName] has started a #variable [concept_secession] movement#! against us!\n$TOOLTIP_DELIMITER$\n[concept_secession_desc]"
  CULTURAL_TURMOIL_TOOLTIP: "#header Cultural [concept_turmoil]#!\n$TOOLTIP_DELIMITER$\nGlobal [Culture.GetName] [concept_turmoil]: [Culture.GetTurmoil|-0%]\n[Culture.GetName] [concept_turmoil] in [GetPlayer.GetName]: [GetPlayer.CalcCulturalTurmoil( Culture.Self )|-%]"
  STATE_POP_PANEL_HEADER: "#bold [Concept('concept_pop','$concept_population$')]#!"
  STATE_POP_PANEL_HEADER_LINE_TWO: "in [StatePopulationPanel.GetState.GetName]"
  POP_CULTURE_TEXT: "Pop Culture: #variable [Pop.GetCulture.GetName]#!"
  POP_RELIGION_TEXT: "Pop Religion: #variable [Pop.GetReligion.GetName]#!"
  POP_POL_STR_TEXT: "[concept_political_strength]: #variable [Pop.GetPoliticalStrength|1*]#!"
  CURRENT_GDP_STATE: "#header [State.GetOwner.GetAdjectiveNoFormatting] [concept_gdp] from [State.GetName]#!\n$TOOLTIP_DELIMITER$\nCurrent annual GDP contribution: #variable @money![State.GetGDPContribution|K]#!\n\n[State.GetName] is contributing #variable [State.GetGDPContributionPercentage|%1]#! of [State.GetOwner.GetAdjectiveNoFormatting] $GDP_SHORT$\n\n[State.GetGDPGoodsContributionBreakdown]"
  STATE_GDP_GOODS: "Top $GDP_SHORT$ contributing [Concept('concept_good','$concept_goods$')] in [State.GetName] per week\n$BREAKDOWN$"
  STATE_GDP_GOODS_ENTRY: "[Goods.GetTextIcon][Nbsp][Goods.GetName]: @money!$VAL|vD$ ($RATIO|v%0$)"
  POL_STR_MODIFIER_DESC: "$DESC$ / Pop"
  TOP_PRODUCED: "#title Top Produced#!"
  TOP_DEMANDED: "#title Top Demanded#!"
  SEE_ALL_GOODS: "See all Goods"
  EXPAND_BUILDING_TOOLTIP: "#header [BUILDING_TYPE.GetNameNoFormatting]#!\n[BUILDING_TYPE.GetTooltip]"
  TRADE_LENS_RETARGET_LINK_TOOLTIP: "#bold #v Retarget Link #!#!\n$TOOLTIP_DELIMITER$\n[concept_retarget_market_desc]"
  TRADE_LENS_MERGE_MARKET_TOOLTIP: "#bold #v Merge Markets#!#!\n$TOOLTIP_DELIMITER$\n[concept_merge_market_desc]"
  GOODS_POOL_ENTRY: "#variable $AMOUNT|D$#! [Goods.GetName]"
  BROWSE_GOODS: "Browse [Concept('concept_good', '$concept_goods$')]"
  OPEN_SPECIFIC_MARKET: "Open [TradeOverviewPanel.AccessFirstMarket.GetName] details"
  FILTER_STAPLE: "$GOOD_CATEGORY_STAPLE$ Goods"
  FILTER_INDUSTRIAL_GOODS: "$GOOD_CATEGORY_INDUSTRIAL$ Goods"
  FILTER_MILITARY_GOODS: "$GOOD_CATEGORY_MILITARY$ Goods"
  FILTER_LUXURY_GOODS: "$GOOD_CATEGORY_LUXURY$ Goods"
  GOOD_CATEGORY_MILITARY: "Military"
  GOOD_CATEGORY_STAPLE: "Staple"
  GOOD_CATEGORY_INDUSTRIAL: "Industrial"
  GOOD_CATEGORY_LUXURY: "Luxury"
  DIPLOMATIC_OVERVIEW_TITLE: "#bold Diplomacy#!"
  OPEN_DIPLOMATIC_BROWSER: "Open Country Browser"
  COUNTRIES_TITLE: "#bold Countries#!"
  POTENTIAL_MAP_MARKER_TOOLTIP: "#header [State.GetName] has potential for [Building.GetName]#!\nCurrent size: [State.GetBuilding( BuildingPotentialMarker.GetBuildingType.GetKey).GetExpansionLevelBreakdownDesc]"
  BASE_PRICE: "[concept_base_price]"
  MARKET_GOODS: "Goods"
  MARKET_TRADED_AMOUNT: "Traded Amount"
  MARKET_LEVEL: "Level"
  MARKET_CONNECTION: "Connection"
  MARKET_DIFFERENCE: "Difference"
  MARKET_PRICE: "Price"
  CONSOLE_ADD_DISAPPROVAL: "From console command"
  PRODUCTION_BUILDING_TOOLTIP: "#bold #v [Building.GetName]#!#!"
  BUILDINGS_DETAILS_HEADER: "#bold Buildings in [State.GetName]#!"
  PLAYER_MONEY: "#bold [GetPlayer.GetGoldReserves|K]#! [GetPlayer.GetPowerDeltaIcon('money')]"
  PLAYER_MONEY_BALANCE: "#bold [AccessPlayer.PredictWeeklyBalance|1=D]#!"
  WEEKLY_BALANCE_GOOD: "#P $PLAYER_MONEY_BALANCE$#!"
  WEEKLY_BALANCE_BAD: "#N $PLAYER_MONEY_BALANCE$#!"
  WEEKLY_BALANCE_OKAY: "#v $PLAYER_MONEY_BALANCE$#!"
  INTEREST_GROUP_ITEM_TOOLTIP: "ID: [InterestGroup.GetID]"
  CULTURES: "#bold Country Cultures#!"
  NO_CULTURES: "#bold No [concept_country] [Concept('concept_culture', '$concept_cultures$')]#!"
  NO_DIPLO_INFO: "#bold No Active Diplomacy#!"
  FORMABLE_COUNTRIES: "#bold Formable Countries#!"
  NO_FORMABLE_COUNTRIES: "#bold No Possible Country-Formations#!"
  NO_JOURNAL_ENTRIES: "Currently no active [Concept('concept_journal_entry', '$concept_journal_entries$')]"
  NO_JOURNAL_ENTRIES_OUTLINER: "Currently no active $concept_journal_entries$"
  NO_DECISIONS: "#bold No Decisions can be taken#!"
  ACTIVE_JOURNAL_ENTRIES: "[Concept('concept_journal_entry', '$concept_journal_entries$')]"
  OTHER_ACTIVE_JOURNAL_ENTRIES: "Other [Concept('concept_journal_entry', '$concept_journal_entries$')]"
  INACTIVE_JOURNAL_ENTRIES: "Potential [Concept('concept_journal_entry', '$concept_journal_entries$')]"
  RELEASE_COUNTRY_NAME: "#HEADER [CountryCreation.GetDefinition.GetName]#!"
  RELEASE_COUNTRY_TIER: "[CountryCreation.GetDefinition.GetTier]"
  RELEASE_COUNTRY_NUM_STATES: "#bold [CountryCreation.GetNumReleasableStates(GetPlayer)]#!"
  RELEASE_COUNTRY_REQ_STATES: "#bold [CountryCreation.GetNumReleasableStates(GetPlayer)]/[CountryCreation.GetNumRequiredStates]#!"
  RELEASE_COUNTRY_TOOLTIP: "#title Release [concept_subject]#!\nCultures: #variable [CountryCreation.ListCultures]#!\n$TOOLTIP_DELIMITER$\n[CountryCreation.GetReleaseDesc(GetPlayer)]"
  RELEASE_COUNTRY_DESC: "Release #variable [COUNTRY_CREATION.GetName]#! as either a [concept_subject] or as an independent [concept_country].\n\nThey will receive [COUNTRY_CREATION.GetNumReleasableStates(GetPlayer)|v] out of [COUNTRY_CREATION.GetTotalNumStates|v] possible states:\n[COUNTRY_CREATION.ListPotentialStates(GetPlayer)]"
  RELEASE_COUNTRY_PROVINCES_DESC: "Release #variable [COUNTRY_CREATION.GetName]#! as either a [concept_subject] or as an independent [concept_country].\n\nThey will receive [COUNTRY_CREATION.GetNumProvincesToRelease|v] province(s) in the [COUNTRY_CREATION.GetCapital.GetName] [concept_state_region]."
  RELEASABLE_COUNTRIES: "#bold Releasable Countries#!"
  NO_RELEASABLE_COUNTRIES: "#bold No Releasable Countries#!"
  CANNOT_RELEASE_COUNTRY_AS_INDEPENDENT: "We cannot make [COUNTRY_CREATION.GetName] independent due to our diplomatic relationship with [GetPlayer.TryGetOverlordTooltipEntry]"
  CANNOT_RELEASE_COUNTRY_AS_OWN_SUBJECT: "We cannot make [COUNTRY_CREATION.GetName] our [concept_subject] [concept_country] due to our diplomatic relationship with [GetPlayer.TryGetOverlordTooltipEntry]"
  CANNOT_RELEASE_COUNTRY_AS_OWN_SUBJECT_NO_SUBJECT_TYPE: "We cannot make [COUNTRY_CREATION.GetName] our [concept_subject] [concept_country] because there is no valid subject relation that allows that."
  CANNOT_RELEASE_COUNTRY_SAME_CAPITAL: "We cannot release [COUNTRY_CREATION.GetName] because their capital of [COUNTRY_CREATION.GetCapital.GetName] is also our capital"
  CANNOT_RELEASE_COUNTRY_NO_CAPITAL: "We must control the [COUNTRY_CREATION.GetAdjective] [concept_capital_state] of [COUNTRY_CREATION.GetCapital.GetName] in order to release [COUNTRY_CREATION.GetName]"
  CANNOT_RELEASE_COUNTRY_NOT_ENOUGH_STATES: "We need to fully control #variable [COUNTRY_CREATION.GetNumRequiredStates]#! [COUNTRY_CREATION.GetAdjective] core states in order to release #variable [COUNTRY_CREATION.GetName]#!. There are a total of #variable [COUNTRY_CREATION.GetTotalNumStates]#! [COUNTRY_CREATION.GetAdjective] core states in the world:\n[COUNTRY_CREATION.ListPotentialStates(GetPlayer)]"
  RELEASABLE_STATE: "[STATE_REGION.GetName]"
  COUNTRY_FORMATION_HEADER: "Nation Formation"
  COUNTRY_FORMATION_TYPE: "[SelectLocalization(CountryFormation.IsMajorFormation, Concept('concept_unification', '$concept_major_unification$'), Concept('concept_unification', '$concept_minor_unification$'))]"
  GO_TO_COUNTRY_FORMATION: "Go to #header [CountryFormation.GetAdjective]#! [concept_nation_formation]"
  FORM_COUNTRY: "Form [CountryFormation.GetName]"
  FORM_COUNTRY_REQUIRED: "Control over at least #v [CountryFormation.GetNumRequiredStates]#! [Concept('concept_state_region', '$concept_state_regions$')] is required to form [CountryFormation.GetName]"
  FORM_COUNTRY_CULTURES: "[Concept('concept_culture', '$concept_cultures$')]: [CountryFormation.ListCultures]"
  FORM_COUNTRY_NAME: "#HEADER [CountryFormation.GetName]#!"
  FORM_COUNTRY_TIER: "[CountryFormation.GetDefinition.GetTier]"
  CANNOT_FORM_COUNTRY_NOT_ENOUGH_STATES: "We only control #v [COUNTRY_FORMATION.GetNumControlledStates(GetPlayer)]#! out of #v [COUNTRY_FORMATION.GetNumRequiredStates]#! required [Concept('concept_state_region', '$concept_state_regions$')] to form #v [COUNTRY_FORMATION.GetName]#!:\n[COUNTRY_FORMATION.ListRequiredStates(GetPlayer)]"
  CANNOT_FORM_COUNTRY_INDEPENDENCE_WAR_ONGOING_TITLE: "Independence war ongoing against $NUM_COUNTRIES$ [Concept('concept_country', '$concept_countries$')]:"
  CANNOT_FORM_COUNTRY_INDEPENDENCE_WAR_ONGOING_ELEMENT: "$TAB$[COUNTRY.GetName]"
  FORM_COUNTRY_REQ_STATES: "#bold [CountryFormation.GetNumControlledStates(GetPlayer)]/[CountryFormation.GetNumRequiredStates]#!"
  CAN_FORM_COUNTRY_DESC: "We fully control #v [COUNTRY_FORMATION.GetNumControlledStates(GetPlayer)]#! out of the #v [COUNTRY_FORMATION.GetNumRequiredStates]#! required [Concept('concept_state_region', '$concept_state_regions$')] to form #v [COUNTRY_FORMATION.GetName]#!:\n[COUNTRY_FORMATION.ListRequiredStates(GetPlayer)]"
  FORM_COUNTRY_TOOLTIP: "#header $FORM_COUNTRY$#!\n$FORM_COUNTRY_REQUIRED$\n$TOOLTIP_DELIMITER$\n[CountryFormation.GetFormDesc(GetPlayer)]"
  REQUIRED_STATE_CONTROLLED: "@green_checkmark_box! [STATE_REGION.GetName]"
  REQUIRED_STATE_NON_CONTROLLED: "@simple_box! [STATE_REGION.GetName]"
  REQUIRED_STATE_NON_CONTROLLED_OPTIONAL: "@simple_box! [STATE_REGION.GetName] (Optional)"
  FORM_COUNTRY_SPLIT_STATE: "[Concept('concept_split_state','$concept_split_state_short$')]"
  FORM_COUNTRY_CANDIDATES_HEADER: "[Concept('concept_unification_candidate', '$concept_unification_candidates$')]"
  FORM_COUNTRY_CANDIDATES_EMPTY: "No Candidates"
  FORM_COUNTRY_STATE_REGIONS_HEADER: "We control #v [CountryFormation.GetNumControlledStates(GetPlayer)]#!/#v [CountryFormation.GetTotalNumStates]#! [CountryFormation.GetAdjective] [Concept('concept_state_region', '$concept_state_regions$')]"
  FORM_COUNTRY_STATE_REGIONS_REQUIRED: "[CountryFormation.GetNumRequiredStates|v] controlled [Concept('concept_state_region', '$concept_state_regions$')] required to form [CountryFormation.GetName]"
  FORM_COUNTRY_CULTURE_COUNTRIES_HEADER: "[CountryFormation.ListCultures] [Concept('concept_country', '$concept_countries$')]"
  FORM_COUNTRY_SUPPORT_CANDIDATE: "Support"
  FORM_COUNTRY_SUPPORT_CANDIDATE_TOOLTIP: "#header [Concept('concept_unification_supporter', '$concept_unification_support$')] [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nDeclare our support for [Country.GetName] as the unifier of [CountryFormation.GetName][ConcatIfNeitherEmpty('\n',CountryFormation.GetSupportCandidateDesc(GetPlayer, Country.Self))]"
  FORM_COUNTRY_STOP_SUPPORTING_CANDIDATE: "Stop Supporting"
  FORM_COUNTRY_STOP_SUPPORTING_CANDIDATE_TOOLTIP: "#header Stop [Concept('concept_unification_supporter', '$concept_unification_supporting$')] [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nEnd our support for [Country.GetName] as the unifier of [CountryFormation.GetName][ConcatIfNeitherEmpty('\n',CountryFormation.GetSupportCandidateDesc(GetPlayer, Country.Self))]"
  FORM_COUNTRY_SUPPORT_DOES_NOT_HAVE_VALID_CULTURE: "[Country.GetName] does not share any [concept_primary_cultures] with [CountryFormation.GetName]"
  FORM_COUNTRY_SUPPORT_IS_CANDIDATE: "[Country.GetName] is a candidate for unifying [CountryFormation.GetName]"
  FORM_COUNTRY_SUPPORT_IS_ALREADY_SUPPORTING_CANDIDATE: "[Country.GetName] is already supporting [CountryFormation.GetSupportedCandidateCountry(Country.Self).GetName]"
  FORM_COUNTRY_SUPPORTING_COUNTRY: "[Country.GetName] is supporting [CountryFormation.GetSupportedCandidateCountry(Country.Self).GetName] as unifier of [CountryFormation.GetName]"
  FORM_COUNTRY_SUPPORTING_COUNTRIES: "Supporters: #v [CountryFormation.GetNumSupportingCountries(Country.Self)]#!"
  FORM_COUNTRY_SUPPORTING_COUNTRIES_TOOLTIP: "#header Unification [Concept('concept_unification_supporter', '$concept_unification_support$')] for [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nSupported by #v [CountryFormation.GetNumSupportingCountries(Country.Self)]#! [Concept('concept_country', '$concept_countries$')] as unifier of [CountryFormation.GetName]:\n[CountryFormation.GetSupportingCountriesDesc(Country.Self)]"
  FORM_COUNTRY_NO_SUPPORTING_COUNTRIES: "No Supporters"
  FORM_COUNTRY_NO_SUPPORTING_COUNTRIES_TOOLTIP: "#header Unification [Concept('concept_unification_supporter', '$concept_unification_support$')] for [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nNot supported by any other [concept_country] as unifier of [CountryFormation.GetName]"
  FORM_COUNTRY_SUPPORT_BREAKDOWN: "[CountryFormation.GetSupportForAllCandidatesDesc(Country.Self)]"
  UNIFICATION_SUPPORT_IS_CANDIDATE: "[Country.GetName] is a [concept_unification_candidate] for [CountryFormation.GetName]"
  UNIFICATION_SUPPORT_NO_CANDIDATES: "There are currently no [Concept('concept_unification_candidate', '$concept_unification_candidates$')] for [CountryFormation.GetName]"
  UNIFICATION_SUPPORT_IS_PLAYER: "[Country.GetName] is a human player, and who they support to unify [CountryFormation.GetName] is up to them"
  FORM_COUNTRY_LAUNCH_UNIFICATION_PLAY: "Launch Unification [Concept('concept_diplomatic_play', '$concept_diplomatic_play_short$')]"
  FORM_COUNTRY_LAUNCH_UNIFICATION_PLAY_TOOLTIP: "[CountryFormation.GetTriggerUnificationPlayDesc(GetPlayer)]"
  FORM_COUNTRY_LAUNCH_LEADERSHIP_PLAY: "Launch Leadership [Concept('concept_diplomatic_play', '$concept_diplomatic_play_short$')]"
  FORM_COUNTRY_LAUNCH_LEADERSHIP_PLAY_TOOLTIP: "[CountryFormation.GetTriggerLeadershipPlayDesc(GetPlayer,Country.Self)]"
  PRODUCTION_AMOUNT: "#bold [GoodsProductionInfo.GetAmount|D]#! "
  PRODUCTION_AMOUNT_MARKER: "#bold [GoodsProductionInfo.GetAmount|D]#!"
  PRODUCTION_PRICE: "@money![GoodsProductionInfo.GetPrice|1]"
  PRODUCTION_SOLD_FOR: "@money![GoodsProductionInfo.GetSoldFor|D]"
  PRODUCTION_PANEL_HEADER: "#bold Production in [State.GetName]#!"
  PRODUCTION_AMOUNT_TITLE: "#title Amount#!"
  PRODUCTION_SOLD_FOR_TITLE: "#title Sold For#!"
  PRODUCTION_GOOD_TITLE: "#title Good#!"
  MARKET: "Market"
  MARKETS: "Markets"
  TRADE_OVERVIEW_TITLE: "#bold Markets#!"
  POPS_OVERVIEW_TITLE: "#bold Population#!"
  TRADE_OVERVIEW_MOST_IMPORTED: "#title Most Imported#!"
  TRADE_OVERVIEW_MOST_CONSUMPTION_INEFFICIENT: "#title Consumption inefficiencies#!"
  TRADE_OVERVIEW_MOST_EXPORTED: "#title Most Exported#!"
  TRADE_OVERVIEW_MOST_PRODUCTION_INEFFICIENT: "#title Production inefficiencies#!"
  POPS_OVERVIEW_STATISTICS_TAB: "Overview"
  POPS_OVERVIEW_POP_LIST_TAB: "Detailed List"
  POPS_OVERVIEW_CHARTS: "Charts"
  BUILDING_GOVERNMENT_EXPENSES: "[concept_government_expenses]:"
  BUILDING_INFRA_USAGE: "#variable [Building.CalcInfrastructureUsage|=0]#! [concept_infrastructure_usage]"
  BUILDING_URBANIZATION: "[concept_urbanization]:"
  BUILDING_INFRA_USAGE_TOOLTIP: "[Building.GetInfrastructureUsageBreakdown]"
  BUILDING_URBANIZATION_TOOLTIP: "[Building.GetUrbanizationProvidedBreakdown]"
  BUILDING_BATTALIONS_MOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalions_mobilized$')]:"

  PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP: "[Country.GetArmyPowerProjectionDesc]"
  PANEL_MILITARY_ARMY_POWER_PROJECTION: "Number and technological sophistication of [Country.GetAdjective] [Concept('concept_battalion', '$concept_battalions$')] results in an Army [concept_power_projection] of #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP [Country.GetArmyPowerProjection|v0]#!#!"
  PANEL_MILITARY_NAVY_POWER_PROJECTION_TOOLTIP: "[Country.GetNavyPowerProjectionDesc]"
  PANEL_MILITARY_NAVY_POWER_PROJECTION: "Number and technological sophistication of [Country.GetAdjective] [Concept('concept_flotilla', '$concept_flotillas$')] results in a Navy [concept_power_projection] of #tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_POWER_PROJECTION_TOOLTIP [Country.GetNavyPowerProjection|v0]#!#!"
  PANEL_MILITARY_ARMY_CURRENT_REGULARS: "@battalions![Country.GetRegularBattalions|0v]"
  PANEL_MILITARY_ARMY_CURRENT_CONSCRIPTS: "@battalions![Country.GetConscriptedBattalions|0v]/[Country.CalcConscriptableBattalions|0]"
  PANEL_MILITARY_ARMY_CURRENT_BATTALIONS: "@battalions![Country.GetBattalions|0v]"
  PANEL_MILITARY_NATIVE_POTENTIAL_BATTALIONS_TOOLTIP: "In the event of [Concept('concept_tension', '$concept_tensions$')] escalating into a [concept_native_uprising], [Country.GetName] will be able to field up to @battalions![Country.CalcConscriptableBattalions|0] [Concept('concept_battalion', '$concept_battalions$')] of warriors."
  PANEL_MILITARY_ARMY_OVERVIEW_TOOLTIP: "#header [Country.GetAdjective] [Concept('concept_battalion', '$concept_battalions$')] and [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]#!\n$TOOLTIP_DELIMITER$\n[Country.GetName] has @battalions!#tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_TOOLTIP  [Country.GetRegularBattalions|v]#!#! regular [Concept('concept_battalion', '$concept_battalions$')] and can raise up to @battalions!#tooltippable #tooltip:[Country.GetTooltipTag],PANEL_MILITARY_ARMY_CURRENT_CONSCRIPTS_TOOLTIP [Country.CalcConscriptableBattalions|v]#!#! [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]\n$PANEL_MILITARY_ARMY_POWER_PROJECTION$"
  PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_TOOLTIP: "#header Total amount of [Concept('concept_battalion', '$concept_battalions$')]: [Country.GetBattalions|v]#!\n$TOOLTIP_DELIMITER$\n[Country.GetBattalionsDesc]\n[Country.GetBattalionsBreakdown]"
  PANEL_MILITARY_ARMY_CURRENT_CONSCRIPTS_TOOLTIP: "#header Total amount of [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]: [Country.CalcConscriptableBattalions|v]#!\n$TOOLTIP_DELIMITER$\n[Country.GetConscriptsDesc]\n\n[Country.GetConscriptsBreakdown]"
  PANEL_MILITARY_ARMY_CURRENT_REGULARS_TOOLTIP: "#header Total amount of Regular [Concept('concept_battalion','$concept_battalions$')]#!\n$TOOLTIP_DELIMITER$\n[Country.GetRegularsDesc]\n\n[Country.GetRegularsBreakdown]"
  PANEL_MILITARY_ARMY_CURRENT_TOTAL_BATTALIONS_DESC: "$COUNTRY$ currently has @battalions!$BATTALIONS|v$ [Country.GetBattalionsRanking]\n$PANEL_MILITARY_ARMY_POWER_PROJECTION$\n\nThey can field a total of $POTENTIAL|v$ [concept_potential_battalions]"
  PANEL_MILITARY_ARMY_CURRENT_CONSCRIPTS_DESC: "$COUNTRY$ has raised @battalions!$CONSCRIPTS|v$ Conscripts out of their maximum of $POTENTIAL|v$ [Concept('concept_potential_battalions','$concept_potential_conscripts$')]."
  PANEL_MILITARY_ARMY_CURRENT_REGULARS_DESC: "$COUNTRY$ currently has @battalions!$REGULAR_BATTALIONS|v$ out of their maximum of $POTENTIAL|v$ [Concept('concept_potential_battalions','$concept_potential_regulars$')]."
  PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_MOBILIZED_DESC: "$COUNTRY$ currently has @battalions!$REGULAR_BATTALIONS|v$ Regular Battalions and @battalions!$CONSCRIPT_BATTALIONS|v$ Conscript Battalions."
  PANEL_MILITARY_ARMY_FIELDED_BATTALIONS: "[Country.GetBattalionsFielded|0v]"
  PANEL_MILITARY_ARMY_FIELDED_BATTALIONS_TOOLTIP: "#header Assigned and Fielded [Concept('concept_battalion', '$concept_battalions$')] #!\n$TOOLTIP_DELIMITER$\n[Country.GetBattalionsFieldedBreakdown]"
  PANEL_MILITARY_ARMY_IN_RESERVE: "[Country.GetBattalionsInReserve|0v]"
  PANEL_MILITARY_ARMY_IN_RESERVE_TOOLTIP: "#header Unassigned Battalions#!\n$TOOLTIP_DELIMITER$\n[Country.GetBattalionsInReserveBreakdown]"
  PANEL_MILITARY_ARMY_SIZE_CAPACITY_TOOLTIP: "The amount of #variable Battalions#! we could potentially train"
  PANEL_MILITARY_ARMY_BATTALIONS_CAPACITY: "[Country.GetBattalionsCapacity]"
  PANEL_MILITARY_ARMY_BATTALIONS_CAPACITY_TOOLTIP: "#header Potential Army Size#!\n$TOOLTIP_DELIMITER$\n[Country.GetBattalionsCapacityDesc]\n\n#title Current Barrack Capacity#!\n[Country.GetBattalionCapacityBreakdown]"
  PANEL_MILITARY_NAVY_FLOTILLA_CAPACITY_TOOLTIP: "#header Potential Navy Size#!\n$TOOLTIP_DELIMITER$\nn[GetPlayer.GetName] can supply @flotillas!#v [Country.GetWarshipsCapacity]#! Warships\n\n#title Current Naval Base Capacity#!\n[Country.GetWarshipsCapacityBreakdown]"
  PANEL_MILITARY_ARMY_BATTALIONS_CAPACITY_DESC: "$COUNTRY$ can supply @battalions!$REGULAR_BATTALIONS|v$ Battalions."
  BATTALION_TRAVEL_DESC: "#variable +[CHARACTER.GetCombatUnitsTypeIcon] $VALUE|v$#! in #variable $DAYS$#! days"
  BATTALION_TRAVEL_BREAKDOWN: "[CHARACTER.GetCombatUnitsTypeIcon] #variable $VALUE$#! from [BUILDING.GetState.GetName]"
  BATTALION_SOURCES_BREAKDOWN_SUPPLY: "#bold #$COLOR$ $VALUE|%0$#!#! [concept_supply]"
  BATTALION_SOURCES_UNIT_NAME_ARMY: "[Concept('concept_battalion', '$concept_battalions$')]"
  BATTALION_SOURCES_UNIT_NAME_NAVY: "[Concept('concept_flotilla','$concept_flotillas$')]"
  BATTALION_SOURCES_BREAKDOWN_UNITS: "[GetUnitStrengthHeader( $CURRENT$, $MAX$, $ICON$ )]"
  BATTALION_SOURCES_BREAKDOWN: "[GetUnitStrengthHeader( '(int32)$CURRENT$', '(int32)$MAX$', '$ICON$' )] $UNIT_NAME$ from [BUILDING.GetState.GetName] (#bold #$MORALE_COLOR$ $MORALE|%0$#!#! [concept_morale] and $SUPPLY$)"
  BATTALION_SOURCES_BREAKDOWN_CLEAN: "[GetUnitStrengthHeader( '(int32)$CURRENT$', '(int32)$MAX$', '$ICON$' )] $UNIT_NAME$ from [BUILDING.GetState.GetName]"
  BATTALION_CAPACITY_DESC: "@battalions! $COUNT|v$ [Concept('concept_battalion', '$concept_battalions$')]"
  FLOTILLAS_CAPACITY_DESC: "@flotillas! $COUNT|v$ [Concept('concept_flotilla','$concept_flotillas$')]"
  BATTALION_CAPACITY_SOURCES_BREAKDOWN: "@battalions! $COUNT|v$ in [STATE.GetName]"
  FLOTILLAS_CAPACITY_SOURCES_BREAKDOWN: "@flotillas! $COUNT|v$ in [STATE.GetName]"
  BATTALION_CAPACITY_SOURCES_BREAKDOWN_UNUSED: " (room for #variable @$ICON_STR$! $REMAINING_CAPACITY|1$#! more)"
  PANEL_MILITARY_FIELDED: "Fielded"
  PANEL_MILITARY_IN_RESERVE: "[concept_in_reserve]"
  MILITARY_PANEL_ACTIVATE_CONSCRIPTS: "Activate conscripts"
  MILITARY_PANEL_CURRENT_GARRISON: "@battalions![Country.GetNumGarrisonUnits|0v]"
  MILITARY_PANEL_IN_GARRISON: "In Garrison: [Country.GetNumGarrisonUnits|0v]"
  MILITARY_PANEL_POTENTIAL_GARRISON: "[Country.GetNumGarrisonMaxUnits]"
  MILITARY_PANEL_POTENTIAL_GARRISON_TOOLTIP: "Potential Garrisons from Army: #variable [Country.GetNumGarrisonMaxUnitsFromRegulars] @army_SP!#!\nPotential Garrisons from Conscripts: #variable [Country.GetNumGarrisonMaxUnitsFromConscripts] @army_SP!#!"
  MILITARY_PANEL_GARRISON_TOTAL_DEFENSES: "Total defenses"
  MILITARY_PANEL_HQ_HEADER_FORMAT: "#variable [Hq.GetName]#!"
  MILITARY_PANEL_HQ_UNITS_FORMAT: "[Hq.GetHomeGarrisonUnits|v0]/[Hq.GetHomeGarrisonMaxUnits] [Hq.GetCombatUnitsIcon]"
  MILITARY_PANEL_HQ_UNITS_TOOLTIP: "#header [Hq.GetName] [concept_garrison]#!\nThere are currently [Hq.GetGarrisonUnitsHeader] in [Hq.GetNameNoFlag]\n\n[Hq.GetHomeGarrisonUnitsDesc]"
  MILITARY_PANEL_HQ_UNITS_IN_RESERVE_FORMAT: "#variable [Hq.GetReserveUnitsRaw]#! [Hq.GetCombatUnitsIcon]"
  MILITARY_PANEL_BUILDING_UNITS_IN_RESERVE_FORMAT: "#variable [Building.GetNumCombatUnitsInReserve]#!/[Building.GetCombatUnitCapacity] [Building.GetCombatUnitsIcon]"
  MILITARY_PANEL_HQ_AVAILABLE: "Available"
  MILITARY_PANEL_BUILDING_UNITS_IN_RESERVE_TOOLTIP: "There are currently #variable [Building.GetNumCombatUnitsInReserve]#! [Building.GetCombatUnitsIcon] [concept_in_reserve]"
  MILITARY_PANEL_NOT_GARRISONED: "Not garrisoned"
  MILITARY_PANEL_NOT_GARRISONED_UNITS_FORMAT: "#variable [Hq.GetNumNotGarrisonedUnits]#! [Hq.GetCombatUnitsIcon]"
  MILITARY_PANEL_HQ_STATE_NAME_FORMAT: "[State.GetName]"
  MILITARY_PANEL_HQ_STATE_BATTALIONS_FORMAT: "#variable [State.GetNumBattalions]#!/[State.GetMaxBattalions] @army_SP!"
  MILITARY_PANEL_NO_BATTALIONS: "No [Concept('concept_battalion', '$concept_battalions$')] available in this [concept_hq]"
  MILITARY_PANEL_COMMANDER_NAME_FORMAT: "[Character.GetFullName]"
  MILITARY_PANEL_COMMANDER_STATUS_FORMAT: "[Character.GetLocationFormatted]"
  MILITARY_PANEL_BUILDING_TROOP_NAME: "[Building.GetCustom('troop_name')] in [Building.GetState.GetName]"
  MILITARY_PANEL_UNITS_FROM_BUILDING_FORMAT: "#variable [Character.GetNumCombatUnitsFromBuilding(Building.Self)]#!/[Building.GetCombatUnitCapacity] [Building.GetCombatUnitsIcon]"
  MILITARY_PANEL_UNITS_FROM_BUILDING_FORMAT_UNMOBILIZED: "#variable [Character.GetNumCombatUnitsFromBuilding(Building.Self)]#! [Building.GetCombatUnitsIcon]"
  MILITARY_PANEL_UNITS_FROM_BUILDING_TOOLTIP: "There are currently #variable [Character.GetNumCombatUnitsFromBuilding(Building.Self)]#! [Building.GetCombatUnitsIcon] in this unit"
  MILITARY_PANEL_COMMANDER_UNITS: "[Character.GetNumCombatUnits|0v]/[Character.GetMaxNumCombatUnits] [Character.GetCombatUnitsTypeIcon]"
  MILITARY_PANEL_COMMANDER_UNITS_UNMOBILIZED: "[Character.GetNumCombatUnits|0v] [Character.GetCombatUnitsTypeIcon]"
  MILITARY_PANEL_MOBILIZED: "[Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]"
  GARRISONED_CONCEPT: "[Concept('concept_mobilize_general', '$GARRISONED$')]"
  GARRISONED: "Garrisoned"
  BUILDING_PANEL_COMMANDER_UNITS: "[Character.GetNumCombatUnitsFromBuilding(Building.Self)|0v] [Building.GetCombatUnitsIcon]"
  BUILDING_PANEL_RESERVE_UNITS: "[Building.GetNumCombatUnitsInReserve|0v] [Building.GetCombatUnitsIcon]"
  GARRISON_MAP_MARKER_HQ_GARRISON: "[Hq.GetCombatUnitsIcon] #variable [Hq.GetHomeGarrisonUnits]#!"
  GARRISON_MAP_MARKER_HQ_GARRISON_TOOLTIP: "There are currently [Hq.GetGarrisonUnitsHeader] in [Hq.GetNameNoFlag]\n\n[Hq.GetHomeGarrisonUnitsDesc]"
  SUPPLY_NETWORK_MAPMARKER_HEADER: "#header [GetPlayer.GetAdjectiveNoFormatting] [concept_supply_network]#!"
  SUPPLY_NETWORK_MAPMARKER_IS_RAIDED: "@warning! [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] has sunk $NUM_SUNK_CONVOYS|-v$ [concept_convoys] belonging to our [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] passing through this node, reducing their efficiency by an average of $DAMAGE|v-%$"
  SUPPLY_NETWORK_TOOLTIP: "$SUPPLY_NETWORK_MAPMARKER_HEADER$\n$NUM_CONVOYS_NO_DAMAGE$\n$USED_CONVOYS$\n$NUM_SEA_NODES$\n$SUPPLY_NETWORK_STRENGTH$"
  SUPPLY_NETWORK_DAMAGED_TOOLTIP: "$SUPPLY_NETWORK_MAPMARKER_HEADER$\n$USED_CONVOYS$\n$NUM_SEA_NODES$\n$SUPPLY_NETWORK_STRENGTH$\n\n$IS_BEING_RAIDED_DESC$"
  NUM_CONVOYS_NO_DAMAGE: "Available Convoys: #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP @convoys![Country.GetNumConvoys|D]#!#!"
  NUM_CONVOYS_NO_DAMAGE_NUMBER: "@convoys![Country.GetRequiredConvoys|vD]/[Country.GetNumConvoys|vD]"
  NUM_CONVOYS_DAMAGE: "Usable Convoys: #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP @convoys![Country.GetNumUsableConvoys|D]#!#! (#R @convoys![Country.GetNumDamagedConvoys] sunk#!)"
  NUM_CONVOYS_TOOLTIP: "#header Number of [concept_convoys] produced#!\n$TOOLTIP_DELIMITER$\n[Country.GetNumConvoysDesc][ConcatIfNeitherEmpty( '\n', Country.GetNumConvoysDamagedDesc )]"
  NUM_CONVOYS_TOOLTIP_EXTENDED: "#header @convoys! [concept_convoys]#!\nBalance: [Country.GetNumAvailableConvoys|=+D]\n$TOOLTIP_DELIMITER$\nYour total generation of #v [Country.GetNumConvoys|D+=]#! @convoys! [concept_convoys] are due to:\n[Country.GetNumConvoysDesc][ConcatIfNeitherEmpty( '\n', Country.GetNumConvoysDamagedDesc )]\n\n$USED_CONVOYS_TOOLTIP_SHORT$"
  CONVOY_DAMAGE_TOOLTIP_ENTRY: "[Character.GetCountry.GetFlagTextIcon] [Character.GetFullName] convoy raiding in [Character.GetCommanderOrder.GetStrategicRegion.GetName]: #bold @convoys!$VALUE|+=$#!"
  CONVOY_DAMAGE_TOOLTIP_ENTRY_LINGERING: "[Country.GetFlagTextIcon] lingering convoy raiding damage: #bold @convoys!$VALUE|+=$#!"
  USED_CONVOYS: "Required Convoys: #tooltippable #tooltip:[Country.GetTooltipTag],USED_CONVOYS_TOOLTIP @convoys![Country.GetRequiredConvoys|D]#!#!"
  USED_AVAILABLE_CONVOYS_TEXT: "Required Convoys:"
  USED_AVAILABLE_CONVOYS_VALUE: "@convoys! #tooltippable #tooltip:[Country.GetTooltipTag],USED_CONVOYS_TOOLTIP [Country.GetRequiredConvoys|D]#!#! / #tooltippable #tooltip:[Country.GetTooltipTag],NUM_CONVOYS_TOOLTIP [Country.GetNumUsableConvoys|D]#!#!"
  USED_CONVOYS_TOOLTIP: "Number of Convoys required by the [Country.GetAdjective|v] [concept_supply_network]\n[Country.GetRequiredConvoysBreakdown]"
  USED_CONVOYS_TOOLTIP_SHORT: "Your total usages of #v [Negate_int32(Country.GetRequiredConvoys)|D+=]#! @convoys! [concept_convoys] are due to:\n[Country.GetRequiredConvoysBreakdown]"
  SUPPLY_NETWORK_STRENGTH_COLOR: "[GetSupplyNetworkColorstring( Country.GetSupplyNetworkStrength )]"
  SUPPLY_NETWORK_STRENGTH: "Supply Network Strength: #$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
  SUPPLY_NETWORK_STRENGTH_TEXT: "Supply Network Strength:"
  SUPPLY_NETWORK_STRENGTH_VALUE: "#$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
  SUPPLY_NETWORK_STRENGTH_TOOLTIP: "How many [concept_convoys] are available versus required"
  NUM_SEA_NODES: "Sea Nodes: #v [Country.GetSupplyNetworkNumSeaNodes]#!"
  NUM_SEA_NODES_TEXT: "Sea Nodes:"
  NUM_SEA_NODES_VALUE: "[Country.GetSupplyNetworkNumSeaNodes]"
  NUM_SEA_NODES_TOOLTIP: "The [Country.GetAdjectiveNoFormatting|v] [concept_supply_network] spans across [Country.GetSupplyNetworkNumSeaNodes] Sea Nodes.\n\n[Country.GetSupplyNetworkNumSeaNodesDesc]"
  REQUIRED_CONVOYS_BREAKDOWN: "$TAB$#v [Negate_int32('(int32)$TRADE_ROUTE_CONVOYS$')|=+]#! from [Concept('concept_trade_route', '$concept_trade_routes$')]\n$TAB$#v [Negate_int32('(int32)$PORT_CONNECTION_CONVOYS$')|=+]#! from [Concept('concept_port_connection', '$concept_port_connections$')]\n$TAB$#v [Negate_int32('(int32)$SUPPLY_ROUTE_CONVOYS$')|=+]#! from [Concept('concept_supply_route', '$concept_supply_routes$')]"
  NO_SUPPLY_NETWORK: "No [Concept('concept_country', '$concept_countries$')] use this [concept_supply_network]"
  CONVOYS_FROM_SUBJECT_DESC: "$AMOUNT|+=$ from [Country.GetName] ($SUBJECT_TYPE$, #v $CONTRIBUTION|%0$#! contribution)"
  CONVOYS_TO_OVERLORD_DESC: "$AMOUNT|+=$ to [Country.GetName] ($SUBJECT_TYPE$, #v $CONTRIBUTION|%0$#! contribution)"
  TRADE_ROUTE_CONVOY_COST_TOOLTIP: "#header [TradeRoute.GetGoods.GetName] Route Convoy Usage#!\nThe total use of @convoys! #v [TradeRoute.GetNumUsedConvoys]#! is due to:\n[TradeRoute.GetNumUsedConvoysBreakdown]"
  SUPPLY_NETWORK_HEADER: "#title [concept_supply_network]#!"
  ACTIVE_BATTLES_HEADER: "#title Active Battles#!"
  ACTIVE_SEA_BATTLES_HEADER: "#title Active Sea Battles#!"
  ENDED_BATTLES_HEADER: "#title Ended Battles#!"
  ENDED_SEA_BATTLES_HEADER: "#title Ended Sea Battles#!"
  SEA_REGION_PANEL_ADMIRALS: "#title Admiral Activity#!"
  NO_ACTIVE_SEA_BATTLES: "No Active Sea Battles"
  NO_ENDED_SEA_BATTLES: "No Ended Sea Battles"
  SHIPPING_LANES: "Shipping Lanes"
  NO_CONVOY_RAIDING_ADMIRALS: "No [Concept('concept_admiral', '$concept_admirals$')] are [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] here"
  NO_INTERCEPTING_ADMIRALS: "No [Concept('concept_admiral', '$concept_admirals$')] are patrolling here"
  NO_FLOTILLAS_IN_HQ: "No @flotillas! [Concept('concept_flotilla', '$concept_flotillas$')] in this [concept_hq]"
  NO_BATTALIONS_IN_HQ: "No @battalions! [Concept('concept_battalion', '$concept_battalions$')] in this [concept_hq]"
  ORIGIN_STATE_NAME: "[State.GetName]"
  ORIGIN_STATE_NUMBER_OF_SHIPPING_LANES: "(#v [GetDataModelSize( State.AccessShippingLanesFromThisState )]#!)"
  ORIGIN_STATE_NUMBER_OF_SHIPPING_LANES_TOOLTIP: "The total number of [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] to/from [State.GetName] through this sea region"
  ORIGIN_STATE_TOTAL_CONVOYS_USED: "@convoys! #v [State.GetTotalConvoysFromShippingLanesViaState|D]#!"
  ORIGIN_STATE_TOTAL_CONVOYS_USED_TOOLTIP: "Total number of [concept_convoys] used by [Concept('concept_shipping_lane', '$concept_shipping_lanes$')] to/from [State.GetName] through this sea region"
  ORIGIN_STATE_TOTAL_NUMBER_OF_PORT_CONNECTIONS: "#v [State.GetTotalPortConnectionsViaState]#! [SelectLocalization(GreaterThan_int32( State.GetTotalPortConnectionsViaState, '(int32)1'), Concept('concept_port_connection', '$concept_port_connections$'), concept_port_connection )]"
  COUNTRY_SHIPPING_LANES: "[Country.GetAdjectiveNoFlag] [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]"
  COUNTRY_SHIPPING_LANES_NETWORK_STRENGTH: "#$SUPPLY_NETWORK_STRENGTH_COLOR$ [Country.GetSupplyNetworkStrength|%0]#!"
  SHIPPING_LANE_GOODS_TRADED: "[TradeRoute.GetGoods.GetName]"
  SHIPPING_LANE_NUMBER_GOODS_TRADED: "#v [TradeRoute.GetTradeQuantity|D]#! [TradeRoute.GetGoods.GetTextIcon]"
  SHIPPING_LANE_END_STATE: "[SelectLocalization(TradeRoute.IsImport, 'From', 'To')] [ShippingLane.GetEndState.GetName]"
  SHIPPING_LANE_SUPPLIED_STATE: "In [ShippingLane.GetEndState.GetName]"
  PORT_CONNECTION: "$concept_port_connection$"
  CONVOY_COST: "Convoys"
  SHIPPING_LANE_EFFECTIVENESS_SHORTHAND: "Effectiveness"
  SHIPPING_LANE_STATE_BEGIN_END: "[concept_shipping_lane] From [ShippingLane.GetBeginState.GetName] to [ShippingLane.GetEndState.GetName]"
  SHIPPING_LANE_NAME_TRADE_ROUTE: "[TradeRoute.GetDescriptionForActingMarket]"
  SHIPPING_LANE_NAME_SUPPLY_ROUTE: "[Character.GetFullName] [concept_supply_route]"
  SHIPPING_LANE_NAME_PORT_CONNECTION: "Overseas Port Connection"
  SHIPPING_LANE_NAME_INVALID: "Invalid Shipping Lane"
  SHIPPING_LANE_CONVOY_COST: "[Concept('concept_convoys', '$CONVOY_COST$')]: #tooltippable #tooltip:$BREAKDOWN_TAG$  @convoys!$VALUE$#!#!"
  SHIPPING_LANE_CONVOY_COST_SHORT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$VALUE|v$#!#!"
  SHIPPING_LANE_EFFECTIVENESS_BASE: "#header [concept_shipping_lane_effectiveness]#!\n#$COLOR_TAG$ $VALUE|%0$#! Supply Network Strength"
  SHIPPING_LANE_FULL_EFFECT: "This [concept_shipping_lane] is working at full effect"
  SHIPPING_LANE_NOT_FULL_EFFECT: "This [concept_shipping_lane] is not working at full effect. Depending of the type of $concept_shipping_lane$, this means it is either reducing [concept_supply], [concept_market_access], or the amount of [Concept('concept_good', '$concept_goods$')] being moved."
  SHIPPING_LANE_EFFECTIVENESS_CONVOY_RAIDING_DMG: "[Concept('concept_raid_convoys', '$concept_convoy_raiding$')]: $VALUE|%2+$"
  SHIPPING_LANE_EFFECTIVENESS: "#$COLOR_TAG$ #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|%0$#!#!#!"
  SHIPPING_LANE_TRADE_ROUTE_BREAKDOWN_GOODS_QUANTITY: "Traded Quantity: $VALUE|Dv$"
  SHIPPING_LANE_TRADE_ROUTE_BREAKDOWN_LAND_TRADE_CAPACITY: "[concept_land_trade_capacity]: $VALUE|1v$"
  SHIPPING_LANE_TRADE_ROUTE_BREAKDOWN_GOODS_MULTIPLIER: "Convoy Multiplier: #variable x$VALUE|2$#!"
  SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_NUM_BATTALIONS: "[Concept('concept_battalion', '$concept_battalions$')]: $VALUE|v$"
  SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_BASE_BATTALION_COST: "Base Battalion cost: #variable x$VALUE|1$#!"
  SHIPPING_LANE_SUPPLY_ROUTE_BREAKDOWN_EFFICIENCY: "Commander Supply Efficiency: #variable x$VALUE|1$#!"
  SHIPPING_LANE_PORT_CONNECTION_BREAKDOWN_INFRA: "Overseas [concept_infrastructure_usage]: $VALUE|0v$"
  SHIPPING_LANE_PORT_CONNECTION_BREAKDOWN_DEFINE: "[concept_infrastructure_usage] Cost: #variable x$VALUE|1$#!"
  SHIPPING_LANE_BREAKDOWN_NUM_SEA_NODES: "Passing through #v $NUM_NODES$#! Sea Nodes: #variable x$VALUE$#! (#v +x$MULT$#! for each Sea Node after the first)"
  SHIPPING_LANE_PREDICTION_ESTABLISH_PORT_CONNECTION: "Will establish a [concept_port_connection] between [STATE.GetName] and [STATE_OTHER.GetName]"
  SHIPPING_LANE_PREDICTION_REMOVE_PORT_CONNECTION: "Will remove [concept_port_connection] between [STATE.GetName] and [STATE_OTHER.GetName]"
  SHIPPING_LANE_PREDICTION_INCREASE_DESC: "Will use #tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$CONVOYS|-$#!#! between [STATE.GetName] and [STATE_OTHER.GetName] for [COUNTRY.GetName]"
  SHIPPING_LANE_PREDICTION_DECREASE_DESC: "Will free up #tooltippable #tooltip:$BREAKDOWN_TAG$ @convoys!$CONVOYS|+$#!#! for [COUNTRY.GetName]"
  SHIPPING_LANE_PREDICTION_SUPPLY_STRENGTH: "Estimated new [COUNTRY.GetAdjectiveNoFormatting] [concept_supply_network] strength: #$SUPPLY_NETWORK_STRENGTH_COLOR$ $NEW_STRENGTH|%0$#!"
  SHIPPING_LANE_LAST_CAPITAL_MARKET_PORT: "#N This is the last [GetBuildingType('building_port').GetName] in the [concept_market_capital] region. Removing this will invalidate all [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]"
  SEA_REGION_PANEL_ADMIRAL_DELAY: "Base Interception delay is [GetDefine('NMilitary', 'INTERCEPTION_DELAY_BASE_DAYS')|v] days plus up to [GetDefine('NMilitary', 'INTERCEPTION_DELAY_MAX_RANDOM_DAYS_FACTOR')|v] random days"
  SEA_REGION_PANEL_INTERCEPTION_CHANCE: "There is a [GetDefine('NMilitary', 'INTERCEPTION_BASE_CHANCE')|v%0] chance each attempt to start a Naval Battle"
  SEA_REGION_PANEL_CONVOY_RAIDERS: "Convoy Raiding $concept_admirals$"
  SEA_REGION_PANEL_INTERCEPTING_ADMIRALS: "$concept_admirals$ Patrolling their Coast here"
  SEA_REGION_PANEL_ENTRY_HEADER: "[SeaRegionSupplyNetworkEntry.AccessCountry.GetName] has Supply Network in this Sea Node"
  SEA_REGION_PANEL_ENTRY_IS_RAIDED: "[SeaRegionSupplyNetworkEntry.AccessCountry.GetName] #N is losing [concept_convoys] here to enemy [Concept('concept_flotilla','$concept_flotillas$')]!#!"
  SEA_REGION_PANEL_ENTRY_TRADE_ROUTE: "[TradeRoute.GetDirectionName] [TradeRoute.GetGoods.GetTextIcon] [TradeRoute.GetGoods.GetName] from [SelectLocalization(TradeRoute.IsExport, TradeRoute.GetActingMarket.GetName, TradeRoute.GetRemoteMarket.GetName)] to [SelectLocalization(TradeRoute.IsExport, TradeRoute.GetRemoteMarket.GetName, TradeRoute.GetActingMarket.GetName)]"
  SEA_REGION_PANEL_ENTRY_COMMANDER: "Commander [Character.GetFullName] is tracing [concept_supply]"
  CONVOYS_ENTRY_NAME: "$NAME$: $NUM_CONVOYS|v$"
  SUPPLY_NETWORK_NUM_NODES_ENTRY_MARKET_NAME: "[FIRSTMARKET.GetName] to [SECONDMARKET.GetName]: $NUM_NODES|v$ Sea Nodes"
  SUPPLY_NETWORK_NUM_NODES_ENTRY_COMMANDER_NAME: "[Character.GetFullName]: $NUM_NODES|v$ Sea Nodes"
  SUPPLY_NETWORK_STRENGTH_ENTRY_MARKET_NAME: "Trade Route [FIRSTMARKET.GetName] to [SECONDMARKET.GetName]"
  SUPPLY_NETWORK_STRENGTH_ENTRY_COMMANDER_NAME: "Supply Line for [Character.GetFullName]"
  SUPPLY_NETWORK_STRENGTH_ENTRY_TOOLTIP_BASE: "Base Supply Network Strength is #$COLOR_FORMAT$ $VALUE|%0$#!"
  SUPPLY_NETWORK_STRENGTH_ENTRY_TOOLTIP_LOCAL: "This is reduced by #bold $VALUE|%+=0$#! due to [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] by enemy [Concept( 'concept_admiral', '$concept_admirals$' )]"
  SUPPLY_NETWORK_DELTA_HEADER: "Supply Network Changes: $DELTA_NUM_CHANGES|v$ Sea Nodes"
  SUPPLY_NETWORK_DELTA_ADDED: "Will add [StrategicRegion.GetName]"
  SUPPLY_NETWORK_DELTA_REMOVED: "Will remove [StrategicRegion.GetName]"
  SUPPLY_NETWORK_DELTA_STRENGTH: "Supply Network Strength: $NEW_STRENGTH|%0v$ ($STRENGTH_DELTA|%0+=$)"
  EVENT_REMAINING_DAYS: "#v [Event.GetRemainingDays]#! days"
  DAYS_UNTIL_ELECTION: "[concept_election]"
  ELECTION_REMAINING_DAYS: "@clock! #v [AccessPlayer.GetDaysUntilElection]#! days"
  ADVANCEMENT_COMMANDER_CONTRIBUTION_ADD: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $ADVANCEMENT_CONTRIBUTION|2+=$#!#!#!"
  ADVANCEMENT_COMMANDER_CONTRIBUTION_MULT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #v $ADVANCEMENT_CONTRIBUTION|%0=$#!#!#!"
  ADVANCEMENT_COMMANDER_CONTRIBUTION_ORIGIN: "from [Character.GetFullName]"
  ADVANCEMENT_CONTRIBUTION_BREAKDOWN_ADD: "#v $NUM_UNITS|0$#! mobilized [Concept('concept_battalion', '$concept_battalions$')], #v $ADVANCEMENT_MODIFIER_VALUE|2+=$#!"
  ADVANCEMENT_CONTRIBUTION_BREAKDOWN_MULT: "#v $NUM_UNITS|0$#! mobilized [Concept('concept_battalion', '$concept_battalions$')], #v $ADVANCEMENT_MODIFIER_VALUE|%0=$#!"
  ADVANCEMENT_PROGRESS_BAR_TOOLTIP_INFO: "[concept_advancement_progress] out of a required #v [Front.GetRequiredAdvanceProgressForBattle|0+]#! to launch a new [concept_battle]. Will only advance once war has broken out."
  ADVANCEMENT_PROGRESS_BAR_FIRST_TOOLTIP: "#header [concept_advancement_progress] for [Front.GetFirstLeadingCommander.GetCountry.GetFlagTextIcon] [Front.GetFirstLeadingCommander.GetFullName]#!\nProgress: #v [Front.GetFirstAdvanceProgress|1+] / [Front.GetRequiredAdvanceProgressForBattle|0+]#!#!\n$TOOLTIP_DELIMITER$\n[Front.GetFirstLeadingCommander.GetFirstName] is accumulating #v [Front.GetFirstCommanderAdvanceIncrementRaw|1]#! progress per day on this [concept_front].[ConcatIfNeitherEmpty('\n\n', Front.GetFirstCommanderAdvanceBreakdown)]"
  ADVANCEMENT_PROGRESS_BAR_SECOND_TOOLTIP: "#header [concept_advancement_progress] for [Front.GetSecondLeadingCommander.GetCountry.GetFlagTextIcon] [Front.GetSecondLeadingCommander.GetFullName]#!\nProgress: #v [Front.GetSecondAdvanceProgress|1+] / [Front.GetRequiredAdvanceProgressForBattle|0+]#!\n$TOOLTIP_DELIMITER$\n[Front.GetSecondLeadingCommander.GetFirstName] is accumulating #v [Front.GetSecondCommanderAdvanceIncrementRaw|1]#! progress per day on this [concept_front].[ConcatIfNeitherEmpty('\n\n', Front.GetSecondCommanderAdvanceBreakdown)]"
  CHANGE_ORDER_REDUCE_ADVANCE_PROGRESS: "#italic Switching from advance order will reduce [concept_advancement_progress] in current [concept_front] by [GetDefine('NMilitary', 'BATTLE_PLAN_SWITCH_ORDER_LOST_PROGRESS_PERCENT')|%0-]#!"
  ADVANCEMENT_PROGRESS_NUM_ENTRY: "@battalions! $NUM$"
  ADVANCEMENT_PROGRESS_MIN_MAX_ENTRY: "@battalions! $MIN$ - $MAX$"
  HAS_GENERALS_TOOLTIP: "This side has at least one Commander"
  ALLIES: "Allies:"
  ALLIES_TRAVELING: "Allies Traveling:"
  SELECT_COMMANDER_ORDER: "#title Commander Orders#!"
  GENERAL_LOCATION_TITLE: "#title General Location (Debug)#!"
  GENERAL_LOCATION_PRESENT_DESC: "[Character.GetCommanderOrder.GetType.GetNameGerund|v] at $LOCATION|v$$ADDITIONAL_LOCATION_INFO$"
  GENERAL_LOCATION_PRESENT_DESC_WITHOUT_EXTRA_INFO: "[Character.GetCommanderOrder.GetType.GetNameGerund|v] at $LOCATION|v$"
  GENERAL_LOCATION_TRAVELING_DESC: "Traveling to #variable $DESTINATION$#! [SelectLocalization( GreaterThan_int32( Character.GetDaysToCompleteTravelRaw, '(int32)0' ), 'GENERAL_LOCATION_TRAVELING_DAYS', '' )]"
  GENERAL_LOCATION_TRAVELING_DAYS: "(+[Character.GetDaysToCompleteTravelFormatted|v])"
  GENERAL_TRAVELING_DAYS_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL$#!#! "
  GENERAL_TRAVELING_ARRIVAL: "#header Arrival at Front#!\nWill arrive at $DATE$"
  GENERAL_NAVAL_INVASION_TOOLTIP: "#header $naval_invasion$#!\nAccompanying #variable $naval_invasion$#! order on [Character.GetNavalInvasion.GetAdmiral.GetCommanderOrder.GetState.GetName|v]\n\n[Character.GetNavalInvasion.GetStatus]"
  GENERAL_BUSY_NAVAL_INVASION: "Accompanying #variable $naval_invasion$#! order on [Character.GetNavalInvasion.GetAdmiral.GetCommanderOrder.GetState.GetName|v]"
  COMMANDER_BUSY_BATTLE: "[Character.GetFullName] is currently engaged in battle"
  COMMANDER_BUSY: "[Character.GetFullName] is busy"
  ADMIRAL_BUSY_NAVAL_INVASION: "#warning @warning! Changing orders will cancel #variable $naval_invasion$#! order on [Character.GetNavalInvasion.GetEnemyState.GetName|v] accompanied by [Character.GetNavalInvasion.GetGeneral.GetFullName].#!"
  COMMANDER_HAS_NO_BATTALIONS: "$NAME$ has no [Concept('concept_battalion', '$concept_battalions$')]"
  COMMANDER_HAS_NO_FLOTILLAS: "$NAME$ has no [Concept('concept_flotilla','$concept_flotillas$')]"
  COMMANDER_LOCATION_ADDITIONAL_INFO_FORMAT: "\n($INFO$)"
  COMMANDER_ORDER_STATUS_PREPARING: "#v Preparing#! - [LabelingHelper.GetDaysLoc(Character.GetOrderPreparationDaysLeft, '')]"
  FRONT_ORDER_NAME: "[Character.GetCommanderOrder.GetType.GetNameGerund] the [concept_front]"
  defend: "Defend Front"
  defend_gerund: "Defending"
  defend_desc: "#header $defend$#!\nOrder this Commander to defend a [concept_front], trying to hold all of its provinces.[ConcatIfNeitherEmpty( '\n\n', COMMANDER_ORDER_TYPE.GetModifier.GetDesc )]"
  defend_tooltip: "#header $defend$#!\nIs targeting [SCOPE.GetRootScope.GetFront.GetName]"
  naval_invasion: "Naval Invasion"
  naval_invasion_gerund: "Naval Invading"
  naval_invasion_desc: "#header $naval_invasion$#!\nOrder this [concept_admiral] to support an amphibious landing. Requires an accompanying [concept_general] from the same [concept_hq] for landing."
  naval_invasion_tooltip: "#header $naval_invasion$#!\nHas #variable $naval_invasion$#! order on [SCOPE.GetRootScope.GetState.GetName|v]\n\n[Character.GetNavalInvasion.GetStatus]"
  advance: "Advance Front"
  advance_gerund: "Advancing"
  advance_desc: "#header $advance$#!\nOrder this Commander to advance a [concept_front], trying to invade enemy territory.\nA Commander with an Advance Order can still partake in defensive battles.[ConcatIfNeitherEmpty( '\n\n', COMMANDER_ORDER_TYPE.GetModifier.GetDesc )]"
  advance_tooltip: "#header $advance$#!\nIs targeting [SCOPE.GetRootScope.GetFront.GetName]"
  stand_by: "Stand By"
  stand_by_gerund: "Standing by"
  stand_by_desc: "#header Stand By#!\nOrder [Character.GetFullName] to leave the [concept_front] and move back to the [Character.GetHomeHQ.GetName|v].\n\nTheir [Concept('concept_battalion', '$concept_battalions$')] will still be able to participate in defensive [Concept('concept_battle', '$concept_battles$')], but without the benefit of their General. While at the [concept_hq] the troops will not take any [concept_attrition].[ConcatIfNeitherEmpty( '\n\n', Character.GetDaysToTravelHomeHQFormatted )]"
  patrol_coast: "Patrol Coast"
  patrol_coast_gerund: "Patrolling Coast"
  patrol_coast_desc: "#header $patrol_coast$#!\nSeek out and destroy any enemy vessels along the coastline."
  patrol_coast_tooltip: "#header $patrol_coast$#!\nIs targeting [SCOPE.GetRootScope.GetHQ.GetName]"
  raid_convoys: "Raid Convoys"
  raid_convoys_gerund: "Raiding Convoys"
  raid_convoys_desc: "#header $raid_convoys$#!\nReduce the strength of an enemy [concept_supply_network] by raiding their [concept_convoys]"
  raid_convoys_tooltip: "#header $raid_convoys$\nIs targeting [SCOPE.GetRootScope.GetStrategicRegion.GetName]"
  escort_convoys: "Escort Convoys"
  escort_convoys_gerund: "Escorting Convoys"
  escort_convoys_desc: "#header $escort_convoys$#!\nProtect [Concept('concept_shipping_lane','$concept_shipping_lanes$')] against convoy raiders"
  escort_convoys_tooltip: "#header $escort_convoys$#!\nIs patrolling between [Character.GetLocationHQ.GetName] and [SCOPE.GetRootScope.GetHQ.GetName]"
  commander_status_traveling_time_days: "[Character.GetDaysToCompleteTravelRaw|v] [SelectLocalization( GreaterThan_int32( Character.GetDaysToCompleteTravelRaw, '(int32)1' ), 'GENERAL_TRAVEL_DAYS', 'GENERAL_TRAVEL_DAY' )]"
  commander_status_traveling_time_less_than_day: "less than #variable 1#! day"
  commander_status_traveling_time: "[SelectLocalization( GreaterThan_int32( Character.GetDaysToCompleteTravelRaw, '(int32)0' ), 'commander_status_traveling_time_days', 'commander_status_traveling_time_less_than_day' )]"
  commander_status_idle: "Idle in [Character.GetCurrentHQ.GetName]"
  commander_status_traveling_hq: "Traveling to [Character.GetCurrentHQ.GetName] ($commander_status_traveling_time$)"
  commander_status_traveling_front: "Traveling to [Character.GetCommanderOrder.GetFrontTarget.GetName] ($commander_status_traveling_time$)"
  commander_status_order_in_hq: "[Character.GetCommanderOrder.GetType.GetName] in [Character.GetCommanderOrder.GetHQTarget.GetName]"
  commander_status_order_on_front: "[Character.GetCommanderOrder.GetType.GetName] on [Character.GetCommanderOrder.GetFrontTarget.GetName]"
  commander_status_order_in_strategic_region: "[Character.GetCommanderOrder.GetType.GetName] in [Character.GetCommanderOrder.GetStrategicRegion.GetName]"
  commander_status_attacking_in_battle: "Is Attacking in the [Character.GetBattle.GetName|v] on the [Character.GetBattle.GetFront.GetName]"
  commander_status_defending_in_battle: "Is Defending in the [Character.GetBattle.GetName|v] on the [Character.GetBattle.GetFront.GetName]"
  troop_name_regular: "Regular Troops"
  troop_name_conscript: "Conscript Troops"
  combat_unit_regular: "Regular"
  combat_unit_conscript: "Conscript"
  combat_unit_flotilla: "Flotilla"

  CONVOY_RAIDING_ENEMIES_TOOLTIP: "Hostile Supply Networks:"
  CONVOY_RAIDING_ENEMIES_TOOLTIP_ENTRY: "[Country.GetName]"
  NAVAL_BATTLE_MARKER: "$SEA_REGION$"
  NAVAL_INVASION_WAITING_FOR_GENERAL: "Waiting for [Character.GetFullName] to return to [Character.GetHomeHQ.GetName] $TRAVEL_DESC$."
  NAVAL_INVASION_WAITING_FOR_ADMIRAL: "Waiting for [Character.GetFullName] to prepare their forces - [LabelingHelper.GetDaysLoc(Character.GetOrderPreparationDaysLeft, '')]"
  NAVAL_INVASION_WAITING_FOR_TROOPS: "Waiting for [Character.GetFullNamePossessive] troops to [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilize$')] ([Character.GetMobilizationPercentageFormatted])."
  NAVAL_INVASION_NAVAL_BATTLE: "Fighting off enemy interception in [Battle.GetName]!"
  NAVAL_INVASION_LAND_BATTLE: "Fighting in [Battle.GetName|v] to establish a new [concept_front]!"
  WAR_PANEL_PARTICIPANT_DEAD: "[concept_dead]: #variable #N -[WarParticipant.GetNumDead|K-]#!#!"
  WAR_PANEL_PARTICIPANT_WOUNDED: "[concept_wounded]: #variable #N -[WarParticipant.GetNumWounded|K-]#!#!"
  WAR_PANEL_PARTICIPANT_DEAD_TOOLTIP: "#header [concept_dead]#!\n[WarParticipant.GetNumDead|K-] [WarParticipant.GetCountry.GetAdjectiveNoFormatting] have died in the #v [War.GetName] War#!:\n$TAB$[WarParticipant.GetNumDeadFromBattle|-] in [concept_battle]\n$TAB$[WarParticipant.GetNumDeadFromAttrition|-] due to [concept_attrition]"
  WAR_PANEL_PARTICIPANT_WOUNDED_TOOLTIP: "#header [concept_wounded]#!\n[WarParticipant.GetNumWounded|K-] [WarParticipant.GetCountry.GetAdjectiveNoFormatting] have been wounded in the #v [War.GetName] War#!:\n$TAB$[WarParticipant.GetNumWoundedFromBattle|-] in [concept_battle]\n$TAB$[WarParticipant.GetNumWoundedFromAttrition|-] due to [concept_attrition]"
  WOUNDED_BREAKDOWN: "#header Total number of [concept_wounded]: $NUM|-D$#!\n$TOTALS_HEADER$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  WOUNDED_HEADER_ENTRY_ATTRITION: "From [concept_attrition]: $NUM|-D$"
  WOUNDED_HEADER_ENTRY_BATTLE: "From [concept_battle]: $NUM|-D$"
  WOUNDED_BREAKDOWN_ENTRY_ATTRITION: "[Country.GetName] $concept_attrition$: $NUM|-K$"
  WOUNDED_BREAKDOWN_ENTRY_BATTLE: "[Country.GetName] $concept_battle$: $NUM|-K$"
  DEAD_BREAKDOWN: "#header Total number of [concept_dead]: $NUM|-D$#!\n$TOTALS_HEADER$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  DEAD_HEADER_ENTRY_ATTRITION: "From [concept_attrition]: $NUM|-D$"
  DEAD_HEADER_ENTRY_BATTLE: "From [concept_battle]: $NUM|-D$"
  DEAD_BREAKDOWN_ENTRY_ATTRITION: "[Country.GetName] $concept_attrition$: $NUM|-K$"
  DEAD_BREAKDOWN_ENTRY_BATTLE: "[Country.GetName] $concept_battle$: $NUM|-K$"
  PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS: "@flotillas! [Country.GetWarships|0v]"
  PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP: "#header Total amount of [Concept('concept_flotilla','$concept_flotillas$')]#!\n$TOOLTIP_DELIMITER$\n[Country.GetName] currently has @flotillas![Country.GetWarships|v] War Ships [Country.GetFlotillasRanking]\n$PANEL_MILITARY_NAVY_POWER_PROJECTION$\n\n[Country.GetWarshipsBreakdown]"
  PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP_LEFT: "#header Total amount of [Concept('concept_flotilla','$concept_flotillas$')]#!\n[WarPanel.GetLeftLeader.GetName] currently has @flotillas![WarPanel.GetLeftLeader.GetWarships|v] War Ships\n\n[WarPanel.GetLeftLeader.GetWarshipsBreakdown]"
  PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP_RIGHT: "#header Total amount of [Concept('concept_flotilla','$concept_flotillas$')]#!\n[WarPanel.GetRightLeader.GetName] currently has @flotillas![WarPanel.GetRightLeader.GetWarships|v] War Ships\n\n[WarPanel.GetRightLeader.GetWarshipsBreakdown]"
  PANEL_MILITARY_NAVY_FIELDED_FLOTILLAS: "[Country.GetWarshipsFielded|0v]'#header Total amount of [Concept('concept_flotilla','$concept_flotillas$')]#!\n[Country.GetName] currently has @flotillas![Country.GetWarships|v] War Ships\n\n[Country.GetWarshipsBreakdown]'"
  PANEL_MILITARY_NAVY_FIELDED_FLOTILLAS_TOOLTIP: "#header Assigned and Fielded [Concept('concept_flotilla','$concept_flotillas$')]#!\n[Country.GetWarshipsFieldedBreakdown]"
  PANEL_MILITARY_NAVY_FLOTILLAS_IN_RESERVE: "[Country.GetWarshipsInReserve|0v]"
  PANEL_MILITARY_NAVY_FLOTILLAS_IN_RESERVE_TOOLTIP: "#header Unassigned @flotillas! Warships#!\n[Country.GetWarshipsInReserveBreakdown]"
  MILITARY_UNITS_PRODUCTION: "#header [SelectLocalization(Building.IsBuildingType('building_naval_base'), Concept('concept_flotilla', '$concept_flotillas$'), Concept('concept_battalion', '$concept_battalions$'))]#!\n$TOOLTIP_DELIMITER$\n[Building.GetCombatUnitProduction] to [Building.GetState.GetOwner.GetName]"
  PANEL_MILITARY_NAVY_FLOTILLAS_CAPACITY: "[Country.GetWarshipsCapacity]"
  FLOTILLAS_SOURCES_BREAKDOWN: "From $SOURCE|v$: @flotillas! #variable $VALUE|0$#!"
  PANEL_MILITARY_NAVY_FLOTILLAS_CAPACITY_TOOLTIP: "The amount of [Concept('concept_flotilla','$concept_flotillas$')] we could potentially train"
  UNITS_HEADER: "#title Combat Units#!"
  OFFENSE: "[concept_offense]"
  OFFENSE_RIGHT_VALUE: "#v [FrontPanel.AccessFront.GetAverageRightBattalionOffenseRaw|0]#!"
  OFFENSE_LEFT_VALUE: "#v [FrontPanel.AccessFront.GetAverageLeftBattalionOffenseRaw|0]#!"
  DEFENSE: "[concept_defense]"
  DEFENSE_RIGHT_VALUE: "#v [FrontPanel.AccessFront.GetAverageRightBattalionDefenseRaw|0]#!"
  DEFENSE_LEFT_VALUE: "#v [FrontPanel.AccessFront.GetAverageLeftBattalionDefenseRaw|0]#!"
  COMBAT_UNIT_OFFENSE_FORMATTED: "@unit_offense! $VALUE|0v$"
  COMBAT_UNIT_DEFENSE_FORMATTED: "@unit_defense! $VALUE|0v$"
  COMBAT_UNIT_MANPOWER_TOOLTIP: "$NAME$ has $COMBAT_UNIT_MANPOWER$ manpower available"
  COMBAT_UNITS_BUILDING_HEADER: "#title [SelectLocalization(Building.IsBuildingType('building_naval_base'), '@flotillas!', '@battalions!')] #v #tooltippable #tooltip:MILITARY_UNITS_PRODUCTION [Building.GetNumberOfCombatUnits]#!#!#! [SelectLocalization(Building.IsBuildingType('building_naval_base'), '$concept_flotillas$', '$concept_battalions$')]#!"
  COMBAT_UNITS_CHARACTER_HEADER: "#title [SelectLocalization(Character.IsGeneral, 'COMBAT_UNITS_CHARACTER_BATTALIONS_HEADER', 'COMBAT_UNITS_CHARACTER_FLOTILLAS_HEADER')]#! from the [Character.GetHomeHQ.GetNameNoFlag|v]"
  COMBAT_UNITS_CHARACTER_BATTALIONS_HEADER: "@battalions! #v #tooltippable #tooltip:MILITARY_PANEL_COMMAND_LIMIT_BREAKDOWN_TOOLTIP [Character.GetNumCombatUnits]#!#!#! $concept_battalions$"
  COMBAT_UNITS_CHARACTER_FLOTILLAS_HEADER: "@flotillas! #v #tooltippable #tooltip:MILITARY_PANEL_COMMAND_LIMIT_BREAKDOWN_TOOLTIP [Character.GetNumCombatUnits]#!#!#! $concept_flotillas$"
  COMBAT_UNIT_BATTLE_TOOLTIP: "In the Battle of #variable [CombatUnit.GetBattle.GetName]#!"
  COMBAT_UNIT_MORALE_ONE_DAY_TOOLTIP: "(#variable 1#! day remaining)"
  COMBAT_UNIT_MORALE_DAYS_TOOLTIP: "($DAYS|v$ days remaining)"
  COMBAT_UNIT_MORALE_TOOLTIP: "Current [concept_morale]: #$COLOR_STR$ $MORALE|0%$#!\n[ConcatIfNeitherEmpty(CombatUnit.GetMoraleModifierBreakdown,'\n')]Trending towards: [Character.GetSupplyFormatted] $DAYS_HINT$\n$TOOLTIP_DELIMITER$\nTotal manpower: $MANPOWER$\nDemoralized: $DEMORALIZED|v$"
  COMBAT_UNIT_ENEMY_MORALE_DAMAGE_DESC: "$VALUE|=-0%$ from enemy side $modifier_unit_morale_damage_mult$"
  COMMANDER_SUPPLY_TOOLTIP_HEADER: "Supply of $NAME$: #$COLOR_STRING$ $VALUE|0%$#!"
  COMMANDER_SUPPLY_FORMATTED: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #$COLOR_STRING$ $VALUE|0%$#!#!#!"
  COMMANDER_SUPPLY_ISOLATED: "#R Unable to reach [HQ.GetName]#!"
  COMMANDER_SUPPLY_REACH_BY_LAND: "Has overland supply route to [HQ.GetName]"
  SHIPPING_LANE_CHARACTER_HEADER: "#title [concept_supply_route]#!"
  SHIPPING_LANES_HEADER: "#title [Concept('concept_shipping_lane', '$concept_shipping_lanes$')]#!"
  COMBAT_UNIT_SOURCES_BREAKDOWN_SUPPLY: "#bold #$COLOR$ $VALUE|%0$#!#! [concept_supply]"
  COMBAT_UNIT_SOURCES_BREAKDOWN_VERBOSE: "[GetUnitStrengthHeader( '(int32)$CURRENT$', '(int32)$MAX$', '$ICON$' )] $UNIT_NAME$ from [STATE.GetName] (#bold #$MORALE_COLOR$ $MORALE|%0$#!#! [concept_morale] and $SUPPLY$)"
  COMBAT_UNIT_SOURCES_BREAKDOWN_CLEAN: "[GetUnitStrengthHeader( '(int32)$CURRENT$', '(int32)$MAX$', '$ICON$' )] $UNIT_NAME$ from [STATE.GetName]"
  COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_demobilized$')]"
  COMBAT_UNIT_MOBILIZATION_STATUS_DEMOBILIZED_TOOLTIP: "[CombatUnit.GetName] is currently [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_demobilized$')]"
  COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilizing$')] ([CombatUnit.GetMobilization|v%0])"
  COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZING_TOOLTIP: "[CombatUnit.GetName] is currently [CombatUnit.GetMobilization|v%0] done [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilizing$')]"
  COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')]"
  COMBAT_UNIT_MOBILIZATION_STATUS_MOBILIZED_TOOLTIP: "[CombatUnit.GetName] is fully [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')]"
  COMBAT_UNIT_BATTALION_CONSCRIPTS: "Conscripts"
  COMBAT_UNIT_BATTALION_NAME_ONE: "$NUM|O$ $CULTURE$"
  COMBAT_UNIT_BATTALION_NAME_TWO: "$BUILDING_PM$[ConcatIfNeitherEmpty(' ', '$CONSCRIPT$')]"
  COMBAT_UNIT_BATTALION_FULL_NAME: "$COMBAT_UNIT_BATTALION_NAME_ONE$ $COMBAT_UNIT_BATTALION_NAME_TWO$"
  COMBAT_UNIT_FLOTILLA_NAME_ONE: "[ConcatIfNeitherEmpty('$PREFIX$', ' ')]$NAME$[ConcatIfNeitherEmpty(' ', '$NUM_STR$')]"
  COMBAT_UNIT_FLOTILLA_NAME_TWO: "$BUILDING_PM$"
  COMBAT_UNIT_FLOTILLA_FULL_NAME: "$COMBAT_UNIT_FLOTILLA_NAME_ONE$ $COMBAT_UNIT_FLOTILLA_NAME_TWO$"
  HQ_HEADER: "#title [Concept('concept_hq', 'Headquarters')]#!"
  HQ_HEADER_CHARACTER: "$HQ_HEADER$"
  HQ_HEADER_MILITARY_PANEL: "$HQ_HEADER$"
  HQ_HEADER_EMPTY_HQS: "Empty Headquarters"
  HOME_HQ: "[Concept('concept_hq', 'Home HQ')]: [Character.GetHomeHQ.GetName]"
  LOCATION_HQ: "[Concept('concept_hq', 'Location HQ')]: [Character.GetLocationHQ.GetName]"
  CURRENT_HQ: "[Character.GetLocationHQ.GetName] [SelectLocalization( ObjectsEqual(Character.GetLocationHQ.Self, Character.GetHomeHQ.Self), '', 'HOME_HQ_NAME' )]"
  HOME_HQ_NAME: "([Concept('concept_hq', 'Home HQ')]: [Character.GetHomeHQ.GetName])"
  FRONT_PARTICIPANT_COMBATUNITS: "@battalions! $NUM_UNITS|v$"
  FRONT_PARTICIPANT_COMBATUNITS_TOOLTIP: "[Character.GetFirstName|v] has @battalions! $NUM_UNITS|v$ in [Front.GetName]"
  FRONT_SIDE_COMBATUNITS: "#header [COUNTRY.GetFlagTextIcon] [Front.GetName]#!\n@battalions! $NUM_UNITS|v$ in total at the [FRONT.GetName]\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\n$NUM_GARRISONS|v$ of these are from [Concept('concept_garrison', '$concept_garrisons$')], only partaking in defensive battles"
  FRONT_SIDE_COMBATUNITS_TRAVELING: "There are @battalions! $NUM_UNITS|v$ more traveling towards [FRONT.GetName]"
  FRONT_COUNTRY_COMBATUNITS: "[Country.GetName] has @battalions! $NUM_UNITS|v$ at the [FRONT.GetName]"
  FRONT_COUNTRY_COMBATUNITS_TRAVELING: "[Country.GetName] has @battalions! $NUM_UNITS|v$ more traveling towards [FRONT.GetName]"
  FRONT_PARTICIPANT_GENERALS_BEYOND_FIVE_HEADER: "$NUM_GENERALS|v=$ additional [Concept('concept_general', '$concept_generals$')] at $FRONT_NAME$"
  FRONT_PARTICIPANT_GENERALS_BEYOND_FIVE_ENTRY: "[Character.GetFullName] - @battalions! $MOB_STRING$ [concept_fully_mobilized_battalions]"
  COMMANDER_NUM_UNITS_FORMAT: "[Character.GetCombatUnitsTypeIcon] #variable $NUM_UNITS$#!"
  FRONT_PARTICIPANT_COMMANDER_NUM_UNITS_TRAVELING_TOOLTIP: "[Character.GetFirstName|v] has #variable [Character.GetNumCombatUnits]#![Character.GetCombatUnitsTypeIcon] traveling to [FrontParticipant.GetFront.GetName]"
  ACTIVE_BATTLES: "Active [Concept('concept_battle', '$concept_battles$')]"
  ENDED_BATTLES: "Ended [Concept('concept_battle', '$concept_battles$')]"
  ENDED_LAND_BATTLES: "Ended Land [Concept('concept_battle', '$concept_battles$')]"
  ENDED_SEA_BATTLES: "Ended Sea [Concept('concept_battle', '$concept_battles$')]"
  BATTLE_VICTORY: "Victory!"
  BATTLE_DEFEAT: "Defeat!"
  BATTLE_DRAW: "Draw!"
  BATTLE_VICTOR: "Victor:"
  BATTLE_TERRAIN: "[concept_terrain]: [Battle.GetTerrain]"
  BATTLE_ADVANCING: "Advancing"
  BATTLE_DEFENDING: "Defending"
  BATTLE_OFFENSE_TITLE: "Offense"
  BATTLE_DEFENSE_TITLE: "Defense"
  ADVANCEMENT_PROGRESS_HEADER: "Advancement"
  BATTLE_DAYS_DURATION: "The battle lasted [Battle.GetDurationInDaysRaw] days"
  SUCCESSFUL_ADVANCE: "#G Successful attack#!"
  SUCCESSFUL_DEFENSE: "#G Successful defense#!"
  FAILED_ADVANCE: "#R Failed attack#!"
  FAILED_DEFENSE: "#R Failed defense#!"
  BATTLE_END_LEFT_SIDE: "[SelectLocalization( Battle.IsWinner( Battle.GetAttacker ), '$SUCCESSFUL_ADVANCE$', '$FAILED_ADVANCE$' )]"
  BATTLE_END_RIGHT_SIDE: "[SelectLocalization( Battle.IsWinner( Battle.GetDefender ), '$SUCCESSFUL_DEFENSE$', '$FAILED_DEFENSE$' )]"
  BATTLE_LAND_MAX_OFFENSE: "[GetGlobalMaxLandOffense|v]"
  BATTLE_LAND_MAX_DEFENSE: "[GetGlobalMaxLandDefense|v]"
  BATTLE_NAVAL_MAX_OFFENSE: "[GetGlobalMaxNavalOffense|v]"
  BATTLE_NAVAL_MAX_DEFENSE: "[GetGlobalMaxNavalDefense|v]"
  BATTLE_OFFENSE_TOOLTIP: "#header Offense#!\nThe Offense of attacking [SelectLocalization( Battle.IsNavalBattle, '$concept_flotillas$', '$concept_battalions$' )] is [Battle.GetOffenseRaw|v].\n[Battle.GetOffenseBreakdown]\nThe highest Offense in the world is [SelectLocalization( Battle.IsNavalBattle, 'BATTLE_NAVAL_MAX_OFFENSE', 'BATTLE_LAND_MAX_OFFENSE' )]"
  BATTLE_DEFENSE_TOOLTIP: "#header Defense#!\nThe Defense of defending [SelectLocalization( Battle.IsNavalBattle, '$concept_flotillas$', '$concept_battalions$' )] is [Battle.GetDefenseRaw|v].\n[Battle.GetDefenseBreakdown]\nThe highest Defense in the world is [SelectLocalization( Battle.IsNavalBattle, 'BATTLE_NAVAL_MAX_DEFENSE', 'BATTLE_LAND_MAX_DEFENSE' )]"
  BATTLE_ARMY_OFFENSE_TOOLTIP: "Average Offense of attacking $concept_battalions$ is [Battle.GetOffenseRaw|v]. The highest Offense in the world is [GetGlobalMaxLandOffense|v]"
  BATTLE_ARMY_DEFENSE_TOOLTIP: "Average Defense of defending $concept_battalions$ is [Battle.GetDefenseRaw|v]. The highest Defense in the world is [GetGlobalMaxLandDefense|v]"
  BATTLE_NAVAL_OFFENSE_TOOLTIP: "Average Offense of attacking $concept_flotillas$ is [Battle.GetOffenseRaw|v]. The highest Offense in the world is [GetGlobalMaxNavalOffense|v]"
  BATTLE_NAVAL_DEFENSE_TOOLTIP: "Average Defense of defending $concept_flotillas$ is [Battle.GetDefenseRaw|v]. The highest Defense in the world is [GetGlobalMaxNavalDefense|v]"
  FRONT_UNITS: "The number of units [COUNTRY.GetName] has on this Front"
  ATTACKING_MEN_STILL_FIGHTING: "Men still fighting: [Battle.CalcCurrentAttackerManpower|v]"
  DEFENDING_MEN_STILL_FIGHTING: "Men still fighting: [Battle.CalcCurrentDefenderManpower|v]"
  WAR_SUPPORT_ATTACKER_SIDE: "#variable [War.GetWarSupport(War.AccessLeftSideLeaderParticipant.GetCountry)|1+=]#!"
  WAR_SUPPORT_DEFENDER_SIDE: "#variable [War.GetWarSupport(War.AccessRightSideLeaderParticipant.GetCountry)|1+=]#!"
  WAR_SUPPORT_LEFT_SIDE: "#variable [War.GetWarSupport(War.AccessLeftSideLeaderParticipant.GetCountry)|1+=]#!"
  WAR_SUPPORT_RIGHT_SIDE: "#variable [War.GetWarSupport(War.AccessRightSideLeaderParticipant.GetCountry)|1+=]#!"
  NO_ALLIES: "No Allies"
  WAR_LEADER: "[concept_war_leader]"
  WAR_LEFT_SIDE_NUM_BATTALIONS: "@battalions! #variable [WarPanel.GetLeftMobilizedBattalionsRaw]#!/#maximum [WarPanel.GetLeftAvailableBattalionsRaw]#! (@mobilization![WarPanel.GetLeftMobilizationRatioRaw|0%])"
  WAR_LEFT_SIDE_NUM_BATTALIONS_TOOLTIP: "#HEADER @battalions! #variable [WarPanel.GetLeftMobilizedBattalionsRaw]#! [concept_fully_mobilized_battalions]#!\n$TOOLTIP_DELIMITER$\nThis is the total number of $concept_mobilize_battalion_mobilized$ $concept_battalions$ for the [WarPanel.GetLeftLeader.GetAdjective] side in this [concept_war].\n\n@battalions! #variable [WarPanel.GetLeftMobilizedBattalionsRaw]#! ([WarPanel.GetLeftMobilizationRatioRaw|0%]) [concept_fully_mobilized_battalions]\n@battalions! #variable [WarPanel.GetLeftAvailableBattalionsRaw]#! [concept_available_battalions]\n@battalions! #variable [WarPanel.GetLeftPotentialBattalionsRaw]#! [concept_potential_battalions]"
  WAR_RIGHT_SIDE_NUM_BATTALIONS: "(@mobilization![WarPanel.GetRightMobilizationRatioRaw|0%]) #variable [WarPanel.GetRightMobilizedBattalionsRaw]#!/#maximum [WarPanel.GetRightAvailableBattalionsRaw]#! @battalions!"
  WAR_RIGHT_SIDE_NUM_BATTALIONS_TOOLTIP: "#HEADER @battalions! #variable [WarPanel.GetRightMobilizedBattalionsRaw]#! [concept_fully_mobilized_battalions]#!\n$TOOLTIP_DELIMITER$\nThis is the total number of $concept_mobilize_battalion_mobilized$ $concept_battalions$ for the [WarPanel.GetRightLeader.GetAdjective] side in this [concept_war].\n\n@battalions! #variable [WarPanel.GetRightMobilizedBattalionsRaw]#! ([WarPanel.GetRightMobilizationRatioRaw|0%]) [concept_fully_mobilized_battalions]\n@battalions! #variable [WarPanel.GetRightAvailableBattalionsRaw]#! [concept_available_battalions]\n@battalions! #variable [WarPanel.GetRightPotentialBattalionsRaw]#! [concept_potential_battalions]"
  WAR_LEADER_LEFT_NUM_BATTALIONS: "@battalions! #variable [WarPanel.GetLeftLeader.GetBattalionsFullyMobilized]#!/#maximum [WarPanel.GetLeftLeader.GetBattalions]#!"
  WAR_LEADER_RIGHT_NUM_BATTALIONS: "#variable [WarPanel.GetRightLeader.GetBattalionsFullyMobilized]#!/#maximum [WarPanel.GetRightLeader.GetBattalions]#! @battalions!"
  WAR_LEADER_LEFT_NUM_FLOTILLAS: "@combat_unit_flotilla! #variable [WarPanel.GetLeftLeader.GetWarships]#!"
  WAR_LEADER_RIGHT_NUM_FLOTILLAS: "#variable [WarPanel.GetRightLeader.GetWarships]#! @combat_unit_flotilla!"
  WAR_LEFT_SIDE_NUM_FLOTILLAS: "@combat_unit_flotilla! #variable [WarPanel.GetLeftFlotillasRaw]#!"
  WAR_LEFT_SIDE_NUM_FLOTILLAS_TOOLTIP: "#HEADER @combat_unit_flotilla! #variable [WarPanel.GetLeftFlotillasRaw]#! [Concept('concept_flotilla', '$concept_flotillas$')]#!\n$TOOLTIP_DELIMITER$\nThis is the total number of $concept_flotillas$ for the [WarPanel.GetLeftLeader.GetAdjective] side in this [concept_war]."
  WAR_RIGHT_SIDE_NUM_FLOTILLAS: "#variable [WarPanel.GetRightFlotillasRaw]#! @combat_unit_flotilla!"
  WAR_RIGHT_SIDE_NUM_FLOTILLAS_TOOLTIP: "#HEADER @combat_unit_flotilla! #variable [WarPanel.GetRightFlotillasRaw]#! [Concept('concept_flotilla', '$concept_flotillas$')]#!\n$TOOLTIP_DELIMITER$\nThis is the total number of $concept_flotillas$ for the [WarPanel.GetRightLeader.GetAdjective] side in this [concept_war]."
  WAR_LEFT_SIDE_DEAD_NUMBER: "#variable [WarPanel.GetLeftDeadRaw|-D]#!"
  WAR_LEFT_SIDE_WOUNDED_NUMBER: "#variable [WarPanel.GetLeftWoundedRaw|-D]#!"
  WAR_RIGHT_SIDE_DEAD_NUMBER: "#variable [WarPanel.GetRightDeadRaw|-D]#!"
  WAR_RIGHT_SIDE_WOUNDED_NUMBER: "#variable [WarPanel.GetRightWoundedRaw|-D]#!"
  COST_OF_WAR: "Cost of War:"
  COST_OF_WAR_LEFT_SIDE_NUMBER: "#variable @money![WarPanel.GetLeftCostOfWarRaw|-D]#!"
  COST_OF_WAR_RIGHT_SIDE_NUMBER: "#variable @money![WarPanel.GetRightCostOfWarRaw|-D]#!"
  WAR_ALLIES: "Your Allies"
  WAR_ENEMIES: "Enemy Allies"
  WAR_TARGET_ALLIES: "[Country.GetAdjectiveNoFlag] Allies"
  WAR_INITIATOR_ALLIES: "[Country.GetAdjectiveNoFlag] Allies"
  ACTIVE_FRONTS: "Active [Concept('concept_front', '$concept_fronts$')]"
  FRONT_UNDEFENDED: "#header @warning! This [concept_front] may be undefended!#!\n$TOOLTIP_DELIMITER$\nYou have no [Concept('concept_battalion', '$concept_battalions$')] present on the [Front.GetName], neither from your [Concept('concept_general', '$concept_generals$')] or [concept_garrison]. If none of your allies have any $concept_battalions$ on this $concept_front$, your enemy may advance this $concept_front$ without any resistance.\n\nConsider sending a $concept_general$ with $concept_battalions$ here."
  FIRST_ADVANCING_UNITS: "Advancing: [Front.GetNumFirstAdvancingUnitsFormatted]"
  FIRST_DEFENDING_UNITS: "Defending: [Front.GetNumFirstDefendingUnitsFormatted]"
  SECOND_ADVANCING_UNITS: "Advancing: [Front.GetNumSecondAdvancingUnitsFormatted]"
  SECOND_DEFENDING_UNITS: "Defending: [Front.GetNumSecondDefendingUnitsFormatted]"
  FRONT_SIDE_NUM_UNITS_FORMAT: "@battalions! #variable #tooltippable #tooltip:$BREAKDOWN_TAG$ $NUM_UNITS$#!#!#!"
  FRONT_SIDE_FIRST_NUM_UNITS: "@battalions! [Front.GetNumFirstCombatUnits|0v]"
  FRONT_SIDE_SECOND_NUM_UNITS: "[Front.GetNumSecondCombatUnits|0v] @battalions!"
  FRONT_SIDE_LEFT_NUM_UNITS: "@battalions! [Front.GetNumLeftCombatUnitsFromGeneralsRaw|0v] From Generals"
  FRONT_SIDE_LEFT_ADDITIONAL_GENERALS: "[Front.GetPlayerAdvantageDesc]\n\n[Front.GetLeftNumBattalionsBeyondTopFiveGeneralsTooltip]"
  FRONT_SIDE_RIGHT_NUM_UNITS: "From Generals [Front.GetNumRightCombatUnitsFromGeneralsRaw|0v] @battalions!"
  FRONT_SIDE_ADVANCING_UNITS_DESC: "#header @battalions! advancing#!\n\n$UNITS_BREAKDOWN$"
  FRONT_SIDE_DEFENDING_UNITS_DESC: "#header @battalions! defending#!\n\n$UNITS_BREAKDOWN$"
  FRONT_SIDE_UNIT_ENTRY: "@battalions!$NUM_UNITS|v$ from $UNIT_ORIGIN|v$"
  FRONT_SIDE_UNIT_GARRISON: "@battalions!$NUM_UNITS|v$ from [concept_garrison]"
  FRONT_SIDE_TOTAL_UNITS: "Total: @battalions!$NUM_UNITS|v$"
  FRONT_COUNTRIES_PRESENT: "Countries Present"
  FRONT_YOUR_SIDE: "Your side"
  FRONT_ENEMY_SIDE: "Enemy side"
  FRONT_LEFT_ADJECTIVE_SIDE: "[WarPanel.GetLeftLeader.GetAdjectiveNoFlag] side"
  FRONT_RIGHT_ADJECTIVE_SIDE: "[WarPanel.GetRightLeader.GetAdjectiveNoFlag] side"
  FRONT_NO_ACTIVE_BATTLES: "No active [concept_battle]"
  FRONT_NO_ENDED_BATTLES: "No ended [Concept('concept_battle', '$concept_battles$')]"
  FRONT_PRESENT_GENERALS_PLAYER: "#variable [GetDataModelSize(Front.AccessLeftParticipants)]#! [Concept( 'concept_general', '$concept_generals$' )] (You)"
  FRONT_PRESENT_GENERALS_ENEMY: "#variable [GetDataModelSize(Front.AccessRightParticipants)]#! [Concept( 'concept_general', '$concept_generals$' )] (Enemy)"
  FRONT_PRESENT_GENERALS_INITIATOR: "#variable [GetDataModelSize(Front.AccessLeftParticipants)]#! [Concept( 'concept_general', '$concept_generals$' )] (Initiator)"
  FRONT_PRESENT_GENERALS_TARGET: "#variable [GetDataModelSize(Front.AccessRightParticipants)]#! [Concept( 'concept_general', '$concept_generals$' )] (Target)"
  NO_ACTIVE_FRONTS: "Currently no active [Concept('concept_front', '$concept_fronts$')]"
  FRONT_PANEL_BATTLES: "Battles"
  FIRST_GARRISONED_UNITS: "@battalions! #variable [Front.GetNumFirstGarrisonUnitsRaw]#! Garrisoned"
  SECOND_GARRISONED_UNITS: "#variable [Front.GetNumSecondGarrisonUnitsRaw]#! Garrisoned @battalions!"
  LEFT_GARRISONED_UNITS: "@battalions! #variable [Front.GetNumLeftGarrisonUnitsRaw]#! Garrisoned"
  RIGHT_GARRISONED_UNITS: "Garrisoned #variable [Front.GetNumRightGarrisonUnitsRaw]#! @battalions!"
  FRONT_SIDE_GARRISON_UNITS_FORMAT: "@battalions! #variable #tooltippable #tooltip:$BREAKDOWN_TAG$ $NUM_UNITS$#!#!#!"
  FRONT_SIDE_GARRISON_DESC: "#header [concept_garrison]#!\nThe number of units in [concept_garrison] who may still defend in [concept_battle] is @battalions! $VAL|v$ due to:\n$BREAKDOWN$"
  FRONT_SIDE_GARRISON_DESC_ZERO: "The number of units in [concept_garrison] who may still defend in [concept_battle] is @battalions! $VAL|v$"
  FRONT_SIDE_GARRISON_BREAKDOWN: "$FROM_COMMANDER$[ConcatIfNeitherEmpty('\n', '$FROM_RESERVE$')]"
  NUM_UNITS_FROM_COMMANDER_HEADER: "From Stand By commanders:"
  NUM_UNITS_FROM_COMMANDER_ENTRY: "$TAB$@battalions! $VAL|v$ from [CHARACTER.GetFullName]"
  NUM_UNITS_FROM_RESERVE_HEADER: "Units [concept_in_reserve]:"
  NUM_UNITS_FROM_RESERVE_ENTRY: "$TAB$[HQ.GetCombatUnitsIcon] $VAL|v$ from [HQ.GetName]"
  FRONT_MORALE_TOOLTIP: "$COUNTRY_NAME|v$ morale is #bold #$MORALE_COLOR$ $VAL|0%$#!#! in $FRONT_NAME$"
  COMMANDER_MORALE_TOOLTIP: "#header Morale#!\n[Character.GetFullName] troops morale is #bold #[GetMoraleColorString( Character.GetMorale )] [Character.GetMorale|0%]#!#!\n\n$MILITARY_PANEL_CHARACTER_SUPPLY_TOOLTIP$"
  MORALE_TOOLTIP: "[Country.GetAdjectiveNoFormatting|v] morale is #bold #[GetMoraleColorString( FrontMarker.GetFront.GetMorale( Country.Self ) )] [FrontMarker.GetFront.GetMorale( Country.Self )|0%]#!#! in [FrontMarker.GetFront.GetName]"
  STRENGTH_SUPPLY_TOOLTIP: "[SeaRegionNavalPresence.GetCountry.GetAdjectiveNoFormatting|v] Supply Flotillas at #bold #[GetMoraleColorString( SeaRegionNavalPresence.GetStrength )] [SeaRegionNavalPresence.GetStrength|0%]#!#! strength in [SeaRegionNavalPresence.GetProvince.GetStateRegion.GetName]"
  BATTLE_MORALE_TOOLTIP: "[BattleParticipant.GetCountry.GetAdjectiveNoFormatting|v] morale is #bold #[GetMoraleColorString( BattleParticipant.GetMorale )] [BattleParticipant.GetMorale|0%]#!#!"
  BATTLE_ATTACKER_LIST_NAME: "Attacking Units"
  BATTLE_DEFENDER_LIST_NAME: "Defending Units"
  BATTLE_ATTACKER_STARTING_UNITS: "[Battle.GetAttacker.GetAdjectiveNoFormatting] side: @battalions! [Battle.GetStartingAttackerUnits|v]#!"
  BATTLE_ATTACKER_ENDING_UNITS: "[Battle.GetAttacker.GetAdjectiveNoFormatting] side: @battalions! [Battle.GetFinalAttackerUnits|v]#!"
  BATTLE_DEFENDER_STARTING_UNITS: "[Battle.GetDefender.GetAdjectiveNoFormatting] side: @battalions! [Battle.GetStartingDefenderUnits|v]#!"
  BATTLE_DEFENDER_ENDING_UNITS: "[Battle.GetDefender.GetAdjectiveNoFormatting] side: @battalions! [Battle.GetFinalDefenderUnits|v]#!"
  BATTLE_NO_ATTACKER_MODIFIERS: "No Attacker Modifiers"
  BATTLE_NO_DEFENDER_MODIFIERS: "No Defender Modifiers"
  BATTLE_NO_UNITS_UNDER_COMMAND: "No Units Under Command"
  BATTLE_NO_BORROWED_UNITS: "No Borrowed Units"
  COMBAT_UNIT_CURRENT_LESS_THAN_MAX: "#variable $CURRENT$#!/#maximum $MAX$#!"
  COMBAT_UNIT_CURRENT_EQUAL_MAX: "#variable $CURRENT$#!"
  MANPOWER_PACKAGE_COMMANDER_CE_BREAKDOWN: "#variable [CHARACTER.GetFullName]:#!"
  INTEREST_INACTIVE: "This is an [concept_inactive_interest]"
  INTEREST_ACTIVE: "This is an [concept_active_interest]"
  INTEREST_DECLARED: "This is a [concept_declared_interest]"

  INTEREST_SOURCE_DECLARED: "Maintained by [concept_declared_interest]"
  INTEREST_SOURCE_OWNED_STATES: "Maintained through territorial control of $STATES$"
  INTEREST_SOURCE_SUBJECT_STATES: "Maintained through [concept_subject] territorial control of $STATES$"
  INTEREST_MARKER_TOOLTIP: "#header [Interest.GetOwner.GetAdjectiveNoFormatting] [concept_interest] in [Interest.GetStrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\n[Interest.GetInterestStatusName][ConcatIfNeitherEmpty('\n',Interest.GetInterestSourceDesc)][ConcatIfNeitherEmpty('\n',Interest.GetProgressBarTooltip)]"
  NO_COUNTRIES_WITH_INTEREST: "No [concept_country] have an [concept_interest] in [StrategicRegion.GetNameNoFormatting]"
  COUNTRIES_WITH_INTEREST: "[Concept('concept_country', '$concept_countries$')] with an [concept_interest] in [StrategicRegion.GetNameNoFormatting]:"
  INTEREST_MARKER_HAS_PP: "Power Projection from the following Commander(s) supports the [concept_interest] here:"
  INTEREST_MARKER_PP_COMMANDER: "[CHARACTER.GetFullName]"
  INTEREST_MARKER_NO_UNITS_TOOLTIP: "[concept_interest] is currently not supported by any [Concept('concept_battalion', '$concept_battalions$')], [concept_power_projection] or #variable $INTEREST_DOMINANT_INTEREST$#!"
  INTEREST_SUPPORTED_BY_DOMINANT: "Is supported by [INTEREST.GetInterestStatusName|v] in [INTEREST.GetStrategicRegion.GetName]"
  INTEREST_ICON_TOOLTIP_HAS: "[INTEREST.GetOwner.GetName] has a #variable [INTEREST.GetInterestStatusName]#! in [INTEREST.GetStrategicRegion.GetName]\n$TOOLTIP_DELIMITER$"
  INTEREST_ICON_TOOLTIP_HAS_NOT: "[INTEREST.GetOwner.GetName] is establishing an [concept_interest] in [INTEREST.GetStrategicRegion.GetName]"
  INTEREST_PROGRESS_ACTIVATING_TOOLTIP: "Progress towards becoming an [concept_active_interest]: #variable [INTEREST.GetProgress|%0]#!"
  INTEREST_PROGRESS_DEACTIVATING_TOOLTIP: "Progress towards becoming an [concept_inactive_interest]: #variable [INTEREST.GetProgress|%0]#!"
  INTEREST_MAINTAIN_TOOLTIP: "Maintaining #variable [Interest.GetInterestStatusName]#!"
  TRADE_OVERVIEW_ENTRY_TOOLTIP_HEADER: "#header $GOODS_NAME$#!\n$TOOLTIP_DELIMITER$"
  TRADE_OVERVIEW_ENTRY_TOOLTIP_MARKET_ENTRY: "\n$MARKET_NAME$: #variable $VALUE|K$#! (Local Price: #variable @money!$PRICE|1$#!)"
  EXPECTED_SOL_SHORT: "[Concept('concept_expected_sol', '$concept_expected_sol_short$')]"
  SOL_LOWER: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingPoor,State.GetExpectedStandardOfLivingPoor)|v]"
  SOL_MIDDLE: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingMiddle,State.GetExpectedStandardOfLivingMiddle)|v]"
  SOL_UPPER: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingRich,State.GetExpectedStandardOfLivingRich)|v]"
  STANDARD_OF_LIVING_TOOLTIP: "#header [concept_sol]#!\n$TOOLTIP_DELIMITER$\n[concept_sol_desc]"
  AVG_STANDARD_OF_LIVING_POOR: "$AVG_SOL_HEADER$ for the $poor$ in [State.GetName]\n$TOOLTIP_DELIMITER$\nNumber of Pops: #variable [State.GetNumberOfPopsPoor|*]#!\nAverage Current: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingPoor)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_POOR [State.GetAverageStandardOfLivingPoor|1v]#!#!)\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingPoor)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_POOR [State.GetExpectedStandardOfLivingPoor|v1]#!#!)"
  AVG_STANDARD_OF_LIVING_MIDDLE: "$AVG_SOL_HEADER$ for the $middle$ in [State.GetName]\n$TOOLTIP_DELIMITER$\nNumber of Pops: #variable [State.GetNumberOfPopsMiddle|*]#!\nAverage Current: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_MIDDLE [State.GetAverageStandardOfLivingMiddle|1v]#!#!)\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_MIDDLE [State.GetExpectedStandardOfLivingMiddle|v1]#!#!)"
  AVG_STANDARD_OF_LIVING_RICH: "$AVG_SOL_HEADER$ for the $rich$ in [State.GetName]\n$TOOLTIP_DELIMITER$\nNumber of Pops: #variable [State.GetNumberOfPopsRich|*]#!\nAverage Current: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingRich)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_RICH [State.GetAverageStandardOfLivingRich|1v]#!#!)\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingRich)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_RICH [State.GetExpectedStandardOfLivingRich|v1]#!#!)"
  SOL_BY_POPULATION_AVERAGE_SHORT: "#title Avg. SoL:#!"
  SOL_BY_POPULATION_AVERAGE: "#title [concept_sol]:#!\n[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageSoLByPopulation)|v] ([Country.GetAverageSoLByPopulation|v1])"
  AVG_STANDARD_OF_LIVING_COUNTRY: "$AVG_SOL_HEADER$ in [Country.GetName]\nAverage Current: [Country.GetFormattedStandardOfLivingLabelAll|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_ALL [Country.GetFormattedStandardOfLivingAll|v]#!#!) [Country.GetStandardOfLivingRanking]\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedSoLByPopulation)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_ALL [Country.GetExpectedSoLByPopulation|v1]#!#!)\n$TOOLTIP_DELIMITER$\n$COUNTRY_STRATAS_AVG_SOL$"
  COUNTRY_STRATAS_AVG_SOL: "$poor$: [Country.GetFormattedStandardOfLivingLabelPoor|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_LOW,CountryStandardOfLivingLower #v [Country.GetFormattedStandardOfLivingPoor]#!#!#!) - ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingPoor)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_LOW [Country.GetExpectedStandardOfLivingPoor|v1]#!#! $EXPECTED_SOL_SHORT$)\n$middle$: #v [Country.GetFormattedStandardOfLivingLabelMiddle]#! (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_MIDDLE,CountryStandardOfLivingMiddle #v [Country.GetFormattedStandardOfLivingMiddle]#!#!#!) - ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingMiddle)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_MIDDLE [Country.GetExpectedStandardOfLivingMiddle|v1]#!#! $EXPECTED_SOL_SHORT$)\n$rich$: #v [Country.GetFormattedStandardOfLivingLabelRich]#! (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_SOL_UPPER,CountryStandardOfLivingUpper [Country.GetFormattedStandardOfLivingRich|v]#!#!) - ([LabelingHelper.GetIconForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingRich)|v] #tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_EXPECTED_SOL_UPPER [Country.GetExpectedStandardOfLivingRich|v1]#!#! $EXPECTED_SOL_SHORT$)"
  COUNTRY_AVG_STANDARD_OF_LIVING_STRATA: "$STRATA$: #v $LABEL_FOR_SOL$#! (#tooltippable #tooltip:$TOOLTIP_TAG$ #v $SOL_VALUE|1$#!#!#!)"
  COUNTRY_FACTORS_AFFECTING_STRATA: "#header Standard of Living for $STRATA$ in [GetPlayer.GetName]#!\n$ADDITIONAL_FACTORS$"
  AVG_STANDARD_OF_LIVING_COUNTRY_LOWER: "Average [concept_sol] for [concept_lower_strata] in [Country.GetName]"
  AVG_STANDARD_OF_LIVING_COUNTRY_MIDDLE: "Average [concept_sol] for [concept_middle_strata] in [Country.GetName]"
  AVG_STANDARD_OF_LIVING_COUNTRY_UPPER: "Average [concept_sol] for [concept_upper_strata] in [Country.GetName]"
  POPULATION_COUNTRY_LOWER: "[Concept('concept_pop','$concept_population$')] of the [concept_lower_strata] in [Country.GetName]"
  POPULATION_COUNTRY_MIDDLE: "[Concept('concept_pop','$concept_population$')] of the [concept_middle_strata] in [Country.GetName]"
  POPULATION_COUNTRY_UPPER: "[Concept('concept_pop','$concept_population$')] of the [concept_upper_strata] in [Country.GetName]"
  COUNTRY_SOL_ALL_LABEL: "[Country.GetFormattedStandardOfLivingLabelAll] ([Country.GetFormattedStandardOfLivingAll|v])"
  COUNTRY_SOL_LOW_LABEL: "[Country.GetFormattedStandardOfLivingLabelPoor] ([Country.GetFormattedStandardOfLivingPoor|v])"
  COUNTRY_SOL_MIDDLE_LABEL: "[Country.GetFormattedStandardOfLivingLabelMiddle] ([Country.GetFormattedStandardOfLivingMiddle|v])"
  COUNTRY_SOL_UPPER_LABEL: "[Country.GetFormattedStandardOfLivingLabelRich] ([Country.GetFormattedStandardOfLivingRich|v])"
  POPS_OVERVIEW_AVERAGE_INCOME_LOW_LABEL: "@money![PopsOverviewPanel.GetAverageIncomePoor|v1] Income"
  POPS_OVERVIEW_AVERAGE_INCOME_MIDDLE_LABEL: "@money![PopsOverviewPanel.GetAverageIncomeMiddle|v1] Income"
  POPS_OVERVIEW_AVERAGE_INCOME_UPPER_LABEL: "@money![PopsOverviewPanel.GetAverageIncomeRich|v1] Income"
  POPS_OVERVIEW_AVERAGE_INCOME_LOW_LABEL_TOOLTIP: "#header Average Income#!\nThese Pops make an average of @money![PopsOverviewPanel.GetAverageIncomePoor|v1]"
  POPS_OVERVIEW_AVERAGE_INCOME_MIDDLE_LABEL_TOOLTIP: "#header Average Income#!\nThese Pops make an average of @money![PopsOverviewPanel.GetAverageIncomeMiddle|v1]"
  POPS_OVERVIEW_AVERAGE_INCOME_UPPER_LABEL_TOOLTIP: "#header Average Income#!\nThese Pops make an average of @money![PopsOverviewPanel.GetAverageIncomeRich|v1]"
  POPS_OVERVIEW_TAX_BURDEN_LOW_LABEL: "[PopsOverviewPanel.GetTaxBurdenPoor|v1%] Taxes"
  POPS_OVERVIEW_TAX_BURDEN_MIDDLE_LABEL: "[PopsOverviewPanel.GetTaxBurdenMiddle|v1%] Taxes"
  POPS_OVERVIEW_TAX_BURDEN_UPPER_LABEL: "[PopsOverviewPanel.GetTaxBurdenRich|v1%] Taxes"
  POPS_OVERVIEW_TAX_BURDEN_LOW_LABEL_TOOLTIP: "#header Taxes#!\nThese Pops pay an average of [PopsOverviewPanel.GetTaxBurdenPoor|v1%] of their Income in Taxes"
  POPS_OVERVIEW_TAX_BURDEN_MIDDLE_LABEL_TOOLTIP: "#header Taxes#!\nThese Pops pay an average of [PopsOverviewPanel.GetTaxBurdenMiddle|v1%] of their Income in Taxes"
  POPS_OVERVIEW_TAX_BURDEN_UPPER_LABEL_TOOLTIP: "#header Taxes#!\nThese Pops pay an average of [PopsOverviewPanel.GetTaxBurdenRich|v1%] of their Income in Taxes"
  TAX_BURDEN_TYPE_INCOME: "$BUDGET_INCOME_TAXES$"
  TAX_BURDEN_TYPE_CONSUMPTION: "$BUDGET_CONSUMPTION_TAXES$"
  TAX_BURDEN_TYPE_DIVIDEND: "$BUDGET_DIVIDENDS_TAXES$"
  TAX_BURDEN_TYPE_POLL: "$BUDGET_POLL_TAXES$"
  TAX_BURDEN_ITEM_LABEL: "[TaxBurdenItem.GetValue|v1%]"
  TAX_BURDEN_ITEM_LABEL_TOOLTIP: "#header [TaxBurdenItem.GetTaxType]#!\nThese Pops pay an average of [TaxBurdenItem.GetValue|v1%] of their Income as [TaxBurdenItem.GetTaxType]"
  POPS_OVERVIEW_GOODS_EXPENSES_LOW_LABEL: "[PopsOverviewPanel.GetGoodsExpensesPoor|v1%] Needs"
  POPS_OVERVIEW_GOODS_EXPENSES_MIDDLE_LABEL: "[PopsOverviewPanel.GetGoodsExpensesMiddle|v1%] Needs"
  POPS_OVERVIEW_GOODS_EXPENSES_UPPER_LABEL: "[PopsOverviewPanel.GetGoodsExpensesRich|v1%] Needs"
  POPS_OVERVIEW_GOODS_EXPENSES_LOW_LABEL_TOOLTIP: "#header Needs#!\nThese Pops spend an average of [PopsOverviewPanel.GetGoodsExpensesPoor|v1%] of their Income on their Needs"
  POPS_OVERVIEW_GOODS_EXPENSES_MIDDLE_LABEL_TOOLTIP: "#header Needs#!\nThese Pops spend an average of [PopsOverviewPanel.GetGoodsExpensesMiddle|v1%] of their Income on their Needs"
  POPS_OVERVIEW_GOODS_EXPENSES_UPPER_LABEL_TOOLTIP: "#header Needs#!\nThese Pops spend an average of [PopsOverviewPanel.GetGoodsExpensesRich|v1%] of their Income on their Needs"
  GOODS_EXPENSE_ITEM_LABEL: "[GoodsExpenseItem.GetExpenseRatio|v1%]"
  GOODS_EXPENSE_ITEM_TOOLTIP: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName]#!\nThese Pops spend an average of [GoodsExpenseItem.GetExpenseRatio|v1%] of their Net Income on [Goods.GetName]. The average price is @money![GoodsExpenseItem.GetPrice|v1] #tooltippable #tooltip:COIN_STACK_TOOLTIP [LabelingHelper.GetPriceCompareIcon(GoodsExpenseItem.GetRelativePriceDiff)]#!#!, which is [GoodsExpenseItem.GetRelativePriceDiff|=-%1] compared to the Base Price for [Goods.GetName]"
  POPS_OVERVIEW_REMAINDER_POOR: "#v [PopsOverviewPanel.GetIncomeRemainderPoor|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderPoor, '(CFixedPoint)0'), 'Excess', 'Deficit')]"
  POPS_OVERVIEW_REMAINDER_MIDDLE: "#v [PopsOverviewPanel.GetIncomeRemainderMiddle|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderMiddle, '(CFixedPoint)0'), 'Excess', 'Deficit')]"
  POPS_OVERVIEW_REMAINDER_RICH: "#v [PopsOverviewPanel.GetIncomeRemainderRich|%=+1]#! [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderRich, '(CFixedPoint)0'), 'Excess', 'Deficit')]"
  POPS_OVERVIEW_REMAINDER_POOR_TOOLTIP: "#header Standard of Living Trend#!\n#v [PopsOverviewPanel.GetIncomeRemainderPoor|%=+1]#! of @money![PopsOverviewPanel.GetAverageIncomePoor|v1] goes towards [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderPoor, '(CFixedPoint)0'), 'increasing', 'decreasing')] the average Standard of Living for these Pops"
  POPS_OVERVIEW_REMAINDER_MIDDLE_TOOLTIP: "#header Standard of Living Trend#!\n#v [PopsOverviewPanel.GetIncomeRemainderMiddle|%=+1]#! of @money![PopsOverviewPanel.GetAverageIncomeMiddle|v1] goes towards [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderMiddle, '(CFixedPoint)0'), 'increasing', 'decreasing')] the average Standard of Living for these Pops"
  POPS_OVERVIEW_REMAINDER_RICH_TOOLTIP: "#header Standard of Living Trend#!\n#v [PopsOverviewPanel.GetIncomeRemainderRich|%=+1]#! of @money![PopsOverviewPanel.GetAverageIncomeRich|v1] goes towards [SelectLocalization(GreaterThan_CFixedPoint(PopsOverviewPanel.GetIncomeRemainderRich, '(CFixedPoint)0'), 'increasing', 'decreasing')] the average Standard of Living for these Pops"
  COUNTRY_SOL_ALL: "#header Average [concept_sol] for all [Concept('concept_pop', '$concept_pops$')] in [Country.GetName]#!\n#v [Country.GetFormattedStandardOfLivingLabelAll] ([Country.GetFormattedStandardOfLivingAll]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescAll]"
  COUNTRY_SOL_LOW: "#header [Country.GetAdjective] [concept_lower_strata] [concept_sol]#!\n[GetTrendValue(Country.GetLowerStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] with an average Standard of Living of #v [Country.GetFormattedStandardOfLivingLabelPoor] ([Country.GetFormattedStandardOfLivingPoor]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescPoor]"
  COUNTRY_SOL_MIDDLE: "#header [Country.GetAdjective] [concept_middle_strata] [concept_sol]#!\n[GetTrendValue(Country.GetMiddleStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] with an average Standard of Living of #v [Country.GetFormattedStandardOfLivingLabelMiddle] ([Country.GetFormattedStandardOfLivingMiddle]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescMiddle]"
  COUNTRY_SOL_UPPER: "#header [Country.GetAdjective] [concept_upper_strata] [concept_sol]#!\n[GetTrendValue(Country.GetUpperStrataPopulationTrend)|vD] [Concept('concept_pop', '$concept_pops$')] with an average Standard of Living of #v [Country.GetFormattedStandardOfLivingLabelRich] ([Country.GetFormattedStandardOfLivingRich]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetAdditionalSOLFactorsDescRich]"
  COUNTRY_EXPECTED_SOL_ALL: "#header Average [concept_expected_sol] for all [Concept('concept_pop', '$concept_pops$')] in [Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedSoLByPopulation)] ([Country.GetExpectedSoLByPopulation|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescAll]"
  COUNTRY_EXPECTED_SOL_LOW: "#header Average [concept_expected_sol] for the [concept_lower_strata] in [Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingPoor)] ([Country.GetExpectedStandardOfLivingPoor|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescPoor]"
  COUNTRY_EXPECTED_SOL_MIDDLE: "#header Average [concept_expected_sol] for the [concept_middle_strata] in [Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingMiddle)] ([Country.GetExpectedStandardOfLivingMiddle|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescMiddle]"
  COUNTRY_EXPECTED_SOL_UPPER: "#header Average [concept_expected_sol] for the [concept_upper_strata] in [Country.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetExpectedStandardOfLivingRich)] ([Country.GetExpectedStandardOfLivingRich|1]#!)\n$TOOLTIP_DELIMITER$\n[Country.GetExpectedSOLFactorsDescRich]"
  CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoL)|v] (#v [Culture.CalcAvgSoL|1]#!)"
  CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForPoor)|v] (#v [Culture.CalcAvgSoLForPoor|1]#!)"
  CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForMiddle)|v] (#v [Culture.CalcAvgSoLForMiddle|1]#!)"
  CULTURE_GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_CLASS: "[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Culture.CalcAvgSoLForRich)|v] (#v [Culture.CalcAvgSoLForRich|1]#!)"
  FACTORS_AFFECTING_SOL_GLOBALLY: ""
  GLOBAL_FACTORS_AFFECTING_POOR: ""
  GLOBAL_FACTORS_AFFECTING_MIDDLE: ""
  GLOBAL_FACTORS_AFFECTING_RICH: ""
  GLOBAL_AVERAGE_HEADER: "#bold Global Average:#!"
  GLOBAL_CLASS_AVERAGE_HEADER: "#bold Global Class Average:#!"
  COUNTRY_AVERAGE_HEADER: "#bold Average in [GetPlayer.GetName]:#!"
  COUNTRY_CLASS_AVERAGE_HEADER: "#bold Class Average in [GetPlayer.GetName]:#!"
  GLOBAL_AVG_STANDARD_OF_LIVING_TOOLTIP: "Average [concept_sol] of all [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] globally"
  GLOBAL_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP: "Average [concept_sol] of all [concept_lower_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] globally"
  GLOBAL_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP: "Average [concept_sol] of all [concept_middle_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] globally"
  GLOBAL_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP: "Average [concept_sol] of all [concept_upper_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] globally"
  COUNTRY_AVG_STANDARD_OF_LIVING_TOOLTIP: "Average [concept_sol] of all [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] in [GetPlayer.GetName]"
  COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_TOOLTIP: "Average [concept_sol] of all [concept_lower_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] in [GetPlayer.GetName]"
  COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_TOOLTIP: "Average [concept_sol] of all [concept_middle_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] in [GetPlayer.GetName]"
  COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_TOOLTIP: "Average [concept_sol] of all [concept_upper_strata] [Concept('concept_pop', '$concept_pops$')] of [Culture.GetName] [concept_culture] in [GetPlayer.GetName]"
  CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING: "#v [GetPlayer.GetFormattedStandardOfLivingLabelAllWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],FACTORS_AFFECTING_SOL_COUNTRY_CULTURE #v [GetPlayer.GetFormattedStandardOfLivingAllWithCulture(Culture.Self)]#!#!#!)"
  CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_LOWER_CLASS: "#v [GetPlayer.GetFormattedStandardOfLivingLabelPoorWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_POOR #v [GetPlayer.GetFormattedStandardOfLivingPoorWithCulture(Culture.Self)]#!#!#!)"
  CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE_CLASS: "#v [GetPlayer.GetFormattedStandardOfLivingLabelMiddleWithCulture(Culture.Self)]#! (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_MIDDLE #v [GetPlayer.GetFormattedStandardOfLivingMiddleWithCulture(Culture.Self)]#!#!#!)"
  CULTURE_COUNTRY_AVG_STANDARD_OF_LIVING_UPPER_CLASS: "[GetPlayer.GetFormattedStandardOfLivingLabelRichWithCulture(Culture.Self)|v] (#tooltippable #tooltip:[Culture.GetTooltipTag],COUNTRY_CULTURE_FACTORS_AFFECTING_RICH #v [GetPlayer.GetFormattedStandardOfLivingRichWithCulture(Culture.Self)]#!#!#!)"
  FACTORS_AFFECTING_SOL_COUNTRY: "#title Factors affecting the [concept_sol] in [Country.GetName]#!\n[Country.GetAdditionalSOLFactorsDesc]"
  COUNTRY_AVG_STANDARD_OF_LIVING_POOR: "$poor$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingPoor)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_POOR #v [Country.GetAverageStandardOfLivingPoor|1]#!#!#!)"
  COUNTRY_FACTORS_AFFECTING_POOR: "Factors affecting $poor$:\n[Country.GetAdditionalSOLFactorsDescPoor]"
  COUNTRY_AVG_STANDARD_OF_LIVING_MIDDLE: "$middle$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingMiddle)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_MIDDLE #v [Country.GetAverageStandardOfLivingMiddle|1]#!#!#!)"
  COUNTRY_FACTORS_AFFECTING_MIDDLE: "Factors affecting $middle$:\n[Country.GetAdditionalSOLFactorsDescMiddle]"
  COUNTRY_AVG_STANDARD_OF_LIVING_RICH: "$rich$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageStandardOfLivingRich)|v] (#tooltippable #tooltip:[Country.GetTooltipTag],COUNTRY_FACTORS_AFFECTING_RICH #v [Country.GetAverageStandardOfLivingRich|1]#!#!#!)"
  COUNTRY_FACTORS_AFFECTING_RICH: "Factors affecting $rich$:\n[Country.GetAdditionalSOLFactorsDescRich]"
  FACTORS_AFFECTING_SOL_COUNTRY_CULTURE: "#title Factors affecting the [concept_sol] for [Culture.GetName] in [GetPlayer.GetName]#!\n[GetPlayer.GetAdditionalSOLFactorsDescWithCulture(Culture.Self)]"
  COUNTRY_CULTURE_FACTORS_AFFECTING_POOR: "Factors affecting $poor$ for [Culture.GetName] in [GetPlayer.GetName]:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCulturePoor(Culture.Self)]"
  COUNTRY_CULTURE_FACTORS_AFFECTING_MIDDLE: "Factors affecting $middle$ for [Culture.GetName] in [GetPlayer.GetName]:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCultureMiddle(Culture.Self)]"
  COUNTRY_CULTURE_FACTORS_AFFECTING_RICH: "Factors affecting $rich$ for [Culture.GetName] in [GetPlayer.GetName]:\n[GetPlayer.GetAdditionalSOLFactorsDescWithCultureRich(Culture.Self)]"
  SOL_BY_CLOUT_AVERAGE: "#title [concept_sol] (by Clout):#!\n[LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(Country.GetAverageSoLByPoliticalStrength)|v] ([Country.GetAverageSoLByPoliticalStrength|v])"
  AVG_SOL_HEADER: "#header [concept_sol]#!"
  OVERVIEW: "Overview"
  OVERVIEW_BOLD: "#bold Overview#!"
  GOVERNMENT: "Government"
  GOVERNMENT_BOLD: "#bold $GOVERNMENT$#!"
  INTEREST_GROUPS: "[Concept('concept_interest_group', '$concept_interest_groups$')]"
  INTEREST_GROUPS_BOLD: "#bold [Concept('concept_interest_group', '$concept_interest_groups$')]#!"
  LAWS: "Laws"
  LAWS_BOLD: "#bold $LAWS$#!"
  INSTITUTIONS: "Institutions"
  INSTITUTIONS_BOLD: "#bold $INSTITUTIONS$#!"
  REFORM_GOVERNMENT: "Reform Government"
  EXIT_REFORM_GOVERNMENT: "Exit Reform Government"
  REFORM_GOVERNMENT_CIVIL_WAR_ERROR: "@red_cross! [Country.GetName] is in a [concept_civil_war]"
  REFORM_GOVERNMENT_MOVE_TO_GOVERNMENT_BUTTON_TOOLTIP: "@red_cross! [InterestGroup.GetName] supports an ongoing [concept_revolution]"
  REFORM_GOVERNMENT_BOLD: "#bold $REFORM_GOVERNMENT$#!"
  IN_OPPOSITION_TITLE: "#title Opposition#!"
  IN_GOVERNMENT_TITLE: "#title Government#!"
  ELECTION_TITLE: "#title Elections#!"
  MARGINAL_TITLE: "#title [concept_marginalized] [Concept('concept_interest_group', '$concept_interest_groups$')]#!"
  MARGINAL_TITLE_ACCORDION: "[concept_marginalized] [Concept('concept_interest_group', '$concept_interest_groups$')] (#v [GetDataModelSize( AccessPlayer.AccessMarginalInterestGroups)]#!)"
  LAWS_TITLE: "#title Enacted [Concept('concept_law', '$concept_laws$')]#!"
  ABOLISHED_LAWS_TITLE: "#title Abolished [Concept('concept_law', '$concept_laws$')]#!"
  STATE_TITLE: "#title [concept_state]#!"
  STATE_EXPLAINER: "#header State#!\n#instruction Click to sort on [concept_state] name#!"
  AVERAGE_POP_WAGE_EXPLAINER: "#header Average Wage for [concept_pop]s#!\n#instruction Click to sort on the average wage for the Pops in the [concept_state]#!"
  EXPENSES_EXPLAINER: "#header Expenses#!\n#instruction Click to sort on the total expenses for this [concept_state]#!"
  STATE_INCOME_TAX_REVENUE_EXPLAINER: "#header Income from Taxes#!\n#instruction Click to sort on the total income from the taxes in the [concept_state]#!"

  TAX_CAPACITY_USAGE: "#header [concept_tax_capacity] Usage#!\n[State.GetName] uses $USAGE|1v$ [concept_tax_capacity]\n$TOOLTIP_DELIMITER$\nOne point of [concept_tax_capacity] is required per $POPS_PER_CAPACITY|vK$ [Concept('concept_pop', '$concept_pops$')] and [State.GetName] has a total population of $TOTAL_POPS|vK$"
  STATE_TAX_CAPACITY: "[concept_tax_capacity]\n$STATE_TAX_CAPACITY_CONDENSED$"
  STATE_TAX_CAPACITY_DESC: "#header [concept_tax_capacity]#!\nThe [concept_tax_capacity] balance in [State.GetName] is [State.CalcTaxCapacityBalance|1+=]\n$TOOLTIP_DELIMITER$\n[concept_tax_capacity]: #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_TOOLTIP [State.CalcTaxCapacity|1+]#!#!\n[concept_tax_capacity] Usage: #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_USAGE_TOOLTIP [State.CalcTaxCapacityUsage|1-]#!#![SelectLocalization(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage, State.CalcTaxCapacity), 'STATE_TAX_CAPACITY_INSUFFICIENT_LONG', '')]"
  STATE_TAX_CAPACITY_USAGE_TOOLTIP: "[State.GetTaxCapacityUsageDesc]"
  STATE_TAX_CAPACITY_TOOLTIP: "#header [concept_tax_capacity]#!\n[State.GetName] has a [concept_tax_capacity] of [State.CalcTaxCapacity|+0]\n$TOOLTIP_DELIMITER$\n[State.GetTaxCapacityDesc]"
  STATE_TAX_CAPACITY_INSUFFICIENT: "\n[State.GetTaxCapacityEffectsDesc]"
  STATE_TAX_CAPACITY_INSUFFICIENT_LONG: "\n\n@warning! Because usage is higher than capacity, the following effects are applied to the [concept_state]:\n[State.GetTaxCapacityEffectsDesc]"
  EVENT_OPTION_TOOLTIP: "#header '[EventOption.GetText]'#!\n$TOOLTIP_DELIMITER$\n[EventOption.GetDesc]"
  POP_VOTING_POWER_WEALTH_TOO_LOW: "@warning! Not eligible to vote due to [concept_wealth] $WEALTH|v0$ below the cutoff of $THRESHOLD|v0$\n$TAB$$BREAKDOWN$"
  POP_VOTING_POWER_WEALTH_SUFFICIENT: "[concept_wealth] $WEALTH|v0$ meets the voting cutoff of $THRESHOLD|v0$\n$TAB$$BREAKDOWN$"
  POP_VOTING_POWER_POPULATION: "x$NUM|v0$ potentially eligible voters"
  POP_VOTING_INCORPORATION_LEVEL: "x$INCORPORATION|v%$ [Concept('concept_incorporated_state','$concept_incorporation$')] of [State.GetName]"
  POP_VOTING_POWER: "Number of [concept_votes]: #v $VAL|+D0$#!\n$BREAKDOWN$"
  NEXT_ELECTION_DATE: "Next [concept_election]: [AccessPlayer.GetNextElectionDate|v]"
  PREVIOUS_ELECTION_RESULTS: "Previous [concept_election] results"
  PARTY_ELECTION_TOOLTIP: "Candidates from [Party.GetNameNoFormatting|v] received [Party.GetCurrentVotingPower|Kv] votes last [concept_election] ([Party.GetCurrentVotingPowerShare|%1v])"
  ELECTION_ENTRY: "[Party.GetName]\n[concept_votes]: $VOTING_POWER|Kv$ ($VOTING_POWER_SHARE|%1v$)"
  ELECTION_POLL_ENTRY: "$ELECTION_ENTRY$\n[concept_momentum]: #tooltippable #tooltip:[Party.GetTooltipTag],MOMENTUM_BREAKDOWN [Party.GetMomentum|%=+0]#!#!\n\n"
  MOMENTUM_BREAKDOWN: "[Party.GetMomentumDesc]"
  IG_ELECTION_MOMENTUM: "#header [concept_momentum]#!\nCurrent value: $MOMENTUM|%=+0$\n$TOOLTIP_DELIMITER$\nA value that is randomized at start of Election + changes from Events: $RAW|%=+0$[ConcatIfNeitherEmpty(SelectLocalization(Not(EqualTo_CFixedPoint(Character.GetPopularity, '(CFixedPoint)0')),'CHARACTER_POPULARITY_HEADER',''), '$POPULARITY_ADJUSTMENT|%=+0$')]"
  CHARACTER_POPULARITY_HEADER: "\nAdjustment from [Character.GetFullName]'s [concept_popularity]: "
  CHARACTER_POPULARITY: "#v [LabelingHelper.GetLabelForPopularityCFixedPoint(Character.GetPopularity)]#! (#v [Character.GetPopularity|+0]#!)"
  POPULARITY: "[concept_popularity]"
  IDEOLOGY_CONCEPT: "[concept_ideology]"
  CHARACTER_IDEOLOGY: "#v [Ideology.GetNameNoFormatting]#!"
  RELIGION: "[concept_religion]"
  CHARACTER_RELIGION: "#v [Religion.GetNameNoFormatting]#!"
  CHARACTER_PANEL_CULTURE_LABEL: "[concept_culture]"
  CHARACTER_CULTURE: "#v [Culture.GetNameNoFormatting]#!"
  CHARACTER_PANEL_TAB_OVERVIEW: "Overview"
  CHARACTER_PANEL_TAB_OVERVIEW_SELECTED: "#b Overview#!"
  CHARACTER_PANEL_TAB_MODIFIERS: "Modifiers"
  CHARACTER_PANEL_TAB_MODIFIERS_SELECTED: "#b Modifiers#!"
  CHARACTER_PANEL_TRAITS_HEADER: "Character Traits"
  JOURNAL_ENTRY_PROGRESSBAR_FROM_ZERO: "Progress: [JournalEntry.GetGoalProgressPercent|%1v]  ([JournalEntry.GetGoalProgressValue|D]/[JournalEntry.GetTotalGoalValue|D])"
  JOURNAL_ENTRY_PROGRESSBAR_FROM_BASE: "Progress: [JournalEntry.GetGoalProgressPercent|%1v]  ([JournalEntry.GetBaselineValue|D][JournalEntry.GetGoalProgressValue|D=v]/[JournalEntry.GetTotalGoalValue|D])"
  URBANIZATION_TOOLTIP: "#header [concept_urbanization]#!\nTotal: #tooltippable #tooltip:[State.GetTooltipTag],URBANIZATION_BREAKDOWN [State.CalcTotalUrbanization|v]#!#!\n$TOOLTIP_DELIMITER$\nEach #b [GetDefine('NEconomy', 'URBANIZATION_PER_BUILDING')]#! levels of [concept_urbanization] will provide #b +1#! [GetBuildingType('building_urban_center').GetName] for the [concept_state]"
  URBANIZATION_BREAKDOWN: "#header [concept_urbanization] in [State.GetName]#!\nTotal: [State.CalcTotalUrbanization|v]\n$TOOLTIP_DELIMITER$\n[State.GetTotalUrbanizationDesc]"
  LAND_TEXT: "[concept_arable_land]: [State.GetNumFreeArableLand|v]"
  LAND_TEXT_TOOLTIP: "#header [concept_arable_land]#!\nAvailable: [State.GetNumFreeArableLand|v][ConcatIfNeitherEmpty( '\n', State.GetFreeArableLandAfterInactiveQueuedEntry )]\n$TOOLTIP_DELIMITER$\n$LAND_TEXT_TOOLTIP_BREAKDOWN$\n\n$LAND_TEXT_TOOLTIP_CONCEPT$"
  LAND_TEXT_TOOLTIP_AFTER_INACTIVE_QUEUED: "After [concept_construction_queue] finishes: $VALUE|v$"
  LAND_TEXT_TOOLTIP_BREAKDOWN: "[State.GetArableLandCapacity|v=] from local geography[ConcatIfNeitherEmpty( '\n', State.GetNumUsedArableLandFullyBuiltEntry )][ConcatIfNeitherEmpty( '\n', State.GetNumUsedArableLandUnderConstructionEntry )][ConcatIfNeitherEmpty( '\n', State.GetNumInactiveQueuedArableLandEntry )]"
  LAND_TEXT_TOOLTIP_BREAKDOWN_FULLY_BUILT: "-$VALUE|v$ from built buildings"
  LAND_TEST_TOOLTIP_BREAKDOWN_CONSTRUCTION_DETAIL: "-$VALUE|v$ from buildings under construction"
  LAND_TEXT_NUM_INACTIVE_QUEUED_ARABLE_LAND: "-$VALUE|v$ [concept_arable_land] reserved for queued buildings"
  LAND_TEXT_TOOLTIP_CONCEPT: "Any available [concept_arable_land] in [State.GetName] is occupied by [State.GetSubsistenceBuilding.GetName]."
  SUBSISTENCE_CONCEPT: "#concept $SUBSISTENCE_CONCEPT_CLEAN$#!"
  SUBSISTENCE_CONCEPT_CLEAN: "This is a [concept_subsistence_building], which is a highly inefficient Building that appears when there is unused [concept_arable_land] in a State. As soon as you start exploiting the potential it is using, this Building will automatically get downsized."
  SUBSISTENCE_CREATION_EXPLANATION: "One level of [concept_subsistence_building] is automatically created for each unused [concept_arable_land] in the [concept_state].\n[Building.GetState.GetName] has #tooltippable #tooltip:[Building.GetState.GetTooltipTag],LAND_TEXT_TOOLTIP [Building.GetState.GetNumFreeArableLand|v]#!#! unused [concept_arable_land]"
  URBAN_CENTER_EXPLANATION: "This is an [GetBuildingType('building_urban_center').GetName], which automatically appears when there is enough [concept_urbanization] in the [concept_state]. $URBAN_CENTER_CREATION_EXPLANATION$"
  URBAN_CENTER_CREATION_EXPLANATION: "One level of [GetBuildingType('building_urban_center').GetName] is created for each [GetDefine('NEconomy','URBANIZATION_PER_BUILDING')|v] [concept_urbanization] in the [concept_state].\n[Building.GetState.GetName] has #tooltippable #tooltip:[Building.GetState.GetTooltipTag],URBANIZATION_BREAKDOWN [Building.GetState.CalcTotalUrbanization|v]#!#! [concept_urbanization]"
  UNUSED_TRADE_ROUTES: "You have [Market.GetNumberOfUnusedTradeRoutes(GetPlayer.Self)|v] unused Levels of Trade Routes in [Market.GetName]"
  EXPENSIVE_GOODS_IN_MARKET_ELEMENT: "$TAB$[State.GetName] - [Goods.GetMarketPriceWithTooltip|1]"
  URBAN_PART_OF_STATE: "Urban Buildings"
  NON_URBAN_PART_OF_STATE: "Rural Buildings"
  INFRA_PART_OF_STATE: "Development"
  URBAN_CENTER: "Urban Center"
  LEVEL: "Size:"
  STANDARD_OF_LIVING_TITLE: "[concept_sol]:"
  UNEMPLOYED_TITLE: "[concept_unemployed]:"
  TOOLTIP_VIEW_GRID: "#header View Grid#!"
  TOOLTIP_VIEW_LIST: "#header View List#!"
  REFORM_PREV: "#bold [ReformGroup.GetPrevious.GetName]#!\n(#variable @aut![GetPlayer.GetEnactmentCost(Reform.Self)|2]#!)"
  REFORM_NEXT: "#bold [ReformGroup.GetNext.GetName]#!\n(#variable @aut![GetPlayer.GetEnactmentCost(Reform.Self)|2]#!)"
  HAS_DIPLO_POWER: "@inf! $COMPARATOR$ to #bold $NUM|0$#!"
  HAS_NOT_DIPLO_POWER: "#N $HAS_DIPLO_POWER$#!"
  EXPAND: "#header Expand#!"
  COLLAPSE: "#header Collapse#!"
  UNPIN: "#header Unpin#! from outliner"
  PIN: "#header Pin#! to outliner"
  buildings_expand: "Expand"
  buildings_expand_tooltip: "#bold #v Expand#!#!\n$TOOLTIP_DELIMITER$\n[concept_building_desc]"
  buildings_upgrade: "Upgrade"
  buildings_upgrade_tooltip: "#bold #v Upgrade#!#!"
  factorys_tooltip: "#bold #v Factories#!#!"
  rgos_tooltip: "#bold #v Resource Gathering Operations#!#!"
  MAP_LIST_NO_AVAILABLE_OPTIONS: "No available options"
  OUTLINER_ENTRY_INSTRUCTION_OPEN: "#instruction Click#! to expand or collapse"
  OUTLINER: "Outliner"
  OUTLINER_TOOLTIP: "#bold Outliner#!"
  MAP_LIST_DECREE_COST: "@aut! #v [MapListOption.GetDecreeData.GetDecree.GetCost]#!"
  MAP_LIST: "Ledger"
  MAP_LIST_TOOLTIP: "#bold Ledger#!"
  establish_colony: "Establish Colony"
  establish_colony_tooltip: "#HEADER Establish Colony#!\n$TOOLTIP_DELIMITER$\n[concept_colony_desc]"
  declare_interest: "Declare Interests"
  declare_interest_tooltip: "Create an [concept_interest] in a [concept_strategic_region] where we do not control any territory"
  diplomatic_plays: "Diplomatic Plays"
  diplomatic_plays_tooltip: "#header $diplomatic_plays$#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_play_desc]"
  diplomatic_actions: "Diplomatic Actions"
  diplomatic_actions_tooltip: "#header Propose [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_action_desc]"
  PARTIES_ALREADY_IN_GOV: "#N Is already the current government#!"
  PARTIES_NO_PARTIES_SELECTED: "#N No parties selected to form government#!"
  buildings_lens_tab: "Buildings"
  buildings_lens_tab_tooltip: "Build or Expand Buildings\n$TOOLTIP_DELIMITER$\n#concept You can Build new or Expand existing [Concept('concept_building', '$concept_buildings$')] to be able to employ more people.#!"
  special_buildings_lens_tab: "Special Buildings"
  special_buildings_lens_tab_tooltip: "Build Special Buildings\n$TOOLTIP_DELIMITER$\n#concept Special [Concept('concept_building', '$concept_buildings$')] include [Concept('concept_canal', '$concept_canals$')] and [Concept('concept_monument', '$concept_monuments$')].#!"
  agriculture_lens_tab: "Agriculture"
  agriculture_lens_tab_tooltip: "Build Agricultural Buildings\n$TOOLTIP_DELIMITER$\n#concept Agricultural [Concept('concept_building', '$concept_buildings$')] employ [Concept('concept_pop', '$concept_pops$')] to produce [Concept('concept_good', '$concept_goods$')] using the [concept_arable_land] in a [concept_state].#!"
  resources_lens_tab: "Resources"
  resources_lens_tab_tooltip: "Build Resource Buildings\n$TOOLTIP_DELIMITER$\n#concept Resource [Concept('concept_building', '$concept_buildings$')] employ [Concept('concept_pop', '$concept_pops$')] to produce [Concept('concept_good', '$concept_goods$')] using the [Concept('concept_resource_potential', '$concept_resource_potentials$')] in a [concept_state].#!"
  industry_lens_tab: "Industry"
  industry_lens_tab_tooltip: "Build Industrial Buildings\n$TOOLTIP_DELIMITER$\n#concept Industrial [Concept('concept_building', '$concept_buildings$')] employ [Concept('concept_pop', '$concept_pops$')] to convert one or many types of [Concept('concept_good', '$concept_goods$')] into one or many other types of $concept_goods$.#!"
  decrees_lens_tab: "Decrees"
  decrees_lens_tab_tooltip: "Enact Decrees\n$TOOLTIP_DELIMITER$\n#concept You can set a [concept_decree] in your states, providing a variety of benefits.#!"
  state_actions_lens_tab: "State Actions"
  state_actions_lens_tab_tooltip: "Interact with your [Concept( 'concept_state', '$concept_states$' )]"
  diplomatic_plays_lens_tab: "Diplomatic Plays"
  diplomatic_plays_lens_tab_tooltip: "#header $diplomatic_plays$#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_play_desc]"
  diplomatic_actions_lens_tab: "Diplomatic Actions"
  diplomatic_actions_lens_tab_tooltip: "#header Propose [Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')]#!\n$TOOLTIP_DELIMITER$\n[concept_diplomatic_action_desc]"
  army_lens_tab: "Army"
  army_lens_tab_tooltip: "Interact with your Army"
  navy_lens_tab: "Navy"
  navy_lens_tab_tooltip: "Interact with your Navy"
  show_supply_areas_lens_tab: "Show Supply Areas"
  show_supply_areas_lens_tab_tooltip: "Show Supply Areas\n$TOOLTIP_DELIMITER$\n#b DEBUG#!"
  trade_actions_lens_tab: "Trade Actions"
  trade_actions_lens_tab_tooltip: "Take actions pertaining to Trade"
  import_routes_lens_tab: "Import Trade Routes"
  import_routes_lens_tab_tooltip: "#header $import_routes_lens_tab$#!\n$TOOLTIP_DELIMITER$\nEstablish a semi-permanent trade route between two markets, importing goods to a market you own or control ports in"
  export_routes_lens_tab: "Export Trade Routes"
  export_routes_lens_tab_tooltip: "#header $export_routes_lens_tab$#!\n$TOOLTIP_DELIMITER$\nEstablish a semi-permanent trade route between two markets, exporting goods from a market you own or control ports in"
  interests_lens_tab: "Regional Actions"
  interests_lens_tab_tooltip: "Interact with [Concept('concept_strategic_region','$concept_strategic_regions$')]"
  JOURNAL_WINDOW_HEADER: "Journal"
  JOURNAL_ENTRY_HEADING: "[concept_journal_entry]"
  NUMBER_OF_PLAYER_OBJECTIVE_JOURNAL_ENTRIES: "You have #v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries))]#! unpinned [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries)), '(int32)1'), 'challenge', 'challenges')]"
  NUMBER_OF_PLAYER_OBJECTIVE_JOURNAL_ENTRIES_SHORT: "#v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActivePlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedPlayerObjectiveJournalEntries))]#! unpinned"
  NUMBER_OF_NON_PLAYER_OBJECTIVE_JOURNAL_ENTRIES: "You have #v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries))]#! unpinned [SelectLocalization(EqualTo_int32(Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries)), '(int32)1'), 'JOURNAL_ENTRY_HEADING', 'ACTIVE_JOURNAL_ENTRIES')]"
  NUMBER_OF_NON_PLAYER_OBJECTIVE_JOURNAL_ENTRIES_SHORT: "#v [Subtract_int32(GetDataModelSize(AccessPlayer.AccessActiveNonPlayerObjectiveJournalEntries), GetDataModelSize(AccessPlayer.AccessActivePinnedNonPlayerObjectiveJournalEntries))]#! unpinned"
  EFFECT_RATIO_BELOW_MAX: "#v $EFFECT_RATIO|0%$#!"
  EFFECT_RATIO_ABOVE_MAX: "#v $EFFECT_RATIO|0%$#! or more"
  POWER_TOOLTIP: "#tooltip_header $POWER_TYPE$#!\nBalance: #variable $VAL|+=0$#![ConcatIfNeitherEmpty( '\n', '$EFFECT$' )]"
  POWER_EXCESS_EFFECT_HEADER: "$TOOLTIP_DELIMITER$\nEffects from $EFFECT_RATIO_DESC$ #g excess#! $POWER_TYPE$ (generation is higher than usage):\n$BREAKDOWN$"
  POWER_DEFICIT_EFFECT_HEADER: "$TOOLTIP_DELIMITER$\nEffects from $EFFECT_RATIO_DESC$ $POWER_TYPE$ #n deficit#! (usage is higher than generation):\n$BREAKDOWN$"
  BUREAUCRACY_TOOLTIP: "[GetPlayer.GetPowerTooltip('bureaucracy')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'BUREAUCRACY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
  AUTHORITY_TOOLTIP: "[GetPlayer.GetPowerTooltip('authority')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'AUTHORITY_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
  INFLUENCE_TOOLTIP: "[GetPlayer.GetPowerTooltip('influence')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'INFLUENCE_TOOLTIP_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
  BUREAUCRACY_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nYour total generation of #v [GetPlayer.GetPowerIncome('bureaucracy')|D+0=]#! @bur![Nbsp][concept_bureaucracy] is due to:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('bureaucracy'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('bureaucracy'))]"
  AUTHORITY_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nYour total generation of #v [GetPlayer.GetPowerIncome('authority')|D+0=]#! @aut![Nbsp][concept_authority] is due to:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('authority'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('authority'))]"
  INFLUENCE_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\nYour total generation of #v [GetPlayer.GetPowerIncome('influence')|D+0=]#! @inf![Nbsp][concept_influence] is due to:[ConcatIfNeitherEmpty('\n', GetPlayer.GetPowerIncomeString('influence'))][ConcatIfNeitherEmpty('\n\n', GetPlayer.GetPowerExpensesString('influence'))]"
  BUREAUCRACY_LAWS: "Laws: #variable $COST|+=$#!\n"
  BUREAUCRACY_BUILDINGS: "Buildings: #variable $COST|+=$#!\n"
  AUTHORITY_FROM_RULER_POPULARITY: "#v $VAL|+=0$#! from [concept_popularity] of [Character.GetFullNameWithTitle]"
  CAPITAL_POLITICAL_EXPENSES_CHANGE_RELATIONS: "Changing our Peoples Opinion of $COUNTRY_NAME$: #N #bold -$POWER_COST|1$ #!#!\n"
  CAPITAL_MONEY: "#tooltip_header [concept_money]#!\nBalance: #variable @money![AccessPlayer.PredictWeeklyBalance|D=+]#![GetPlayer.GetPowerDeltaIcon('money')]\n[SelectLocalization(GreaterThan_CFixedPoint(GetPlayer.GetPrincipal, '(CFixedPoint)0'), 'CREDIT_DESC', 'GOLD_RESERVES_DESC')][SelectLocalization(GetMetaPlayer.GetPlayedOrObservedCountry.IsValid, 'CAPITAL_MONEY_DELAYED', 'OBSERVER_NO_COUNTRY_SELECTED') ]"
  GOLD_RESERVES_DESC: "[concept_gold_reserves]: #tooltippable #tooltip:GOLD_RESERVES_BREAKDOWN @money![GetPlayer.GetGoldReserves|Dv]#!#!"
  CREDIT_DESC: "[concept_credit]: #tooltippable #tooltip:CREDIT_PROGRESS #variable @money![GetPlayer.GetPrincipal|K]#!#!#! / #maximum [GetPlayer.GetMaxCredit|K]#!"
  CREDIT_LIMIT: "[concept_credit]: #variable [GetPlayer.GetMaxCredit|2*]#!"
  CAPITAL_MONEY_DELAYED: "\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL$\n$TOOLTIP_DELIMITER$\n[SelectLocalization(GreaterThan_CFixedPoint(GetPlayer.GetUnrealizedTaxes, '(CFixedPoint)0'), 'UNREALIZED_TAXES', '')][GetPlayer.GetIncomeBreakdown]\n\n[GetPlayer.GetExpensesBreakdown]"
  UNREALIZED_TAXES: "[concept_unrealized_taxes]: #tooltippable #tooltip:UNREALIZED_TAXES_BREAKDOWN #v @money![GetPlayer.GetUnrealizedTaxes|D-]#!#!#!\n$TOOLTIP_DELIMITER$\n"
  UNREALIZED_TAXES_BREAKDOWN: "#header [concept_unrealized_taxes]#!\nTotal: #v @money![GetPlayer.GetUnrealizedTaxes|D-]#!\n$TOOLTIP_DELIMITER$\nAverage Uncollected Taxes: #tooltippable #tooltip:AVG_STATE_COLLECTION_MULT_BREAKDOWN #v [GetPlayer.GetAverageStateTaxCollectionMult|+%0]#!#!#!\nAverage [concept_tax_waste]: #tooltippable #tooltip:AVG_TAX_WASTE_BREAKDOWN #v [GetPlayer.GetAverageTaxWaste|-%0]#!#!#!"
  AVG_STATE_COLLECTION_MULT_BREAKDOWN: "#header Average Uncollected Taxes: #v [GetPlayer.GetAverageStateTaxCollectionMult|+%0]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetAverageStateTaxCollectionMultBreakdown]"
  STATE_TAX_COLLECTION_MULT_SINGLE_STATE: "$STATE_NAME$: $UNCOLLECTED_TAX|D-$ (#tooltippable #tooltip:$STATE_TAX_COLLECTION_MULTIPLIER_SUMMARY_TAG$ $TAX_COLLECTION_MULT|+%0$#!#!)"
  STATE_TAX_COLLECTION_MULTIPLIER_SUMMARY: "#header Tax Collection Malus in $STATE_NAME$ is $TAX_COLLECTION_MULT|+%0$ due to#!:\n$TOOLTIP_DELIMITER$\n$SUMMARY$"
  AVG_TAX_WASTE_BREAKDOWN: "#header Average [concept_tax_waste]: #v [GetPlayer.GetAverageTaxWaste|-%0]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetAverageTaxWasteBreakdown]"
  STATE_TAX_WASTE_SINGLE_STATE: "$STATE_NAME$: $TAX_WASTE_VALUE|D-$ ($TAX_WASTE_PERCENT|-%0$)"
  GOLD_RESERVES_BREAKDOWN: "[AccessPlayer.GetGoldProgressDesc]"
  POWER_BASE_INCOME: "Base Income: #variable #P +$POWER_BASE_GENERATION|1$ #!#!\n"
  CAPITAL_TRUST: "#tooltip_header Trust#!\nCurrent: #HEADER [GetPlayer.GetTrust|2]#!\nMonthly decay: #bold #v [GetPlayer.GetMonthlyTrustChange|+=3]#!#!"
  CAPITAL_TRUST_DELAYED: "\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetTrustBreakdown]\nMax amount: #variable 100#!\n\n$TRUST_CONCEPT$"
  POP_TOOLTIP: "#tooltip_header [Concept('concept_pop','$concept_population$')]#!\nCurrent: [Country.GetTotalPopulation|*2v] [Country.GetPopulationRanking]\n[Country.GetPopGrowthDesc]$POP_TOOLTIP_DELAYED$"
  RADICALS_TOOLTIP: "#tooltip_header $RADICALS$#!\nThere are #v [Country.GetNumRadicals|D]#! $RADICALS$ in the total population of #v [Country.GetTotalPopulation|D]#! in [Country.GetName]\n$TOOLTIP_DELIMITER$\nThe number of $RADICALS$ changed by #v #tooltippable #tooltip:[Country.GetTooltipTag],RADICALS_CHANGE_TOOLTIP [Country.GetTotalNumRadicalsChange|D=-]#!#!#! since [Country.GetRadicalsLoyalistsChangeStartDate|v].\nThe most impactful factors are [Country.GetRadicalsChangeSummary]\n\n[Country.GetRadicalsSummaryDesc][ConcatIfNeitherEmpty('\n\n',SelectLocalization( GreaterThan_int32(Country.CalcNumStatesInTurmoil, '(int32)0'), 'STATES_IN_TURMOIL', '' ))][ConcatIfNeitherEmpty('\n\n',SelectLocalization( Country.HasIGApprovalFromRadicals, 'RADICALS_IG_APPROVAL', '' ))]"
  LOYALISTS_TOOLTIP: "#tooltip_header $LOYALISTS$#!\nThere are #v [Country.GetNumLoyalists|D]#! $LOYALISTS$ in the total population of #v [Country.GetTotalPopulation|D]#! in [Country.GetName]\n$TOOLTIP_DELIMITER$\nThe number of $LOYALISTS$ changed by #v #tooltippable #tooltip:[Country.GetTooltipTag],LOYALISTS_CHANGE_TOOLTIP [Country.GetTotalNumLoyalistsChange|D=+]#!#!#! since [Country.GetRadicalsLoyalistsChangeStartDate|v]\nThe most impactful factors are [Country.GetLoyalistsChangeSummary]\n\n[Country.GetLoyalistsSummaryDesc][ConcatIfNeitherEmpty('\n\n',SelectLocalization( Country.HasIGApprovalFromLoyalists, 'LOYALISTS_IG_APPROVAL', '' ))]"
  RADICALS_SUMMARY_IG_HEADER: "\n\n$concept_radicals$ by [concept_interest_group]:"
  LOYALISTS_SUMMARY_IG_HEADER: "\n\n$concept_loyalists$ by [concept_interest_group]:"
  RADICALS_SUMMARY_IG_LIST_ITEM: "\n$TAB$[InterestGroup.CalcNumRadicals|vD] [InterestGroup.GetName]"
  LOYALISTS_SUMMARY_IG_LIST_ITEM: "\n$TAB$[InterestGroup.CalcNumLoyalists|vD] [InterestGroup.GetName]"
  RADICALS_SUMMARY_IG_LIST_ITEM_NO_TAB: "\n[InterestGroup.CalcNumRadicals|vD] [InterestGroup.GetName]"
  LOYALISTS_SUMMARY_IG_LIST_ITEM_NO_TAB: "\n[InterestGroup.CalcNumLoyalists|vD] [InterestGroup.GetName]"
  RADICALS_LOYALISTS_SUMMARY_IG_OTHER_LIST_ITEM: "\n$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|vD$#!#! in other [Concept('concept_interest_group', '$concept_interest_groups$')]"
  RADICALS_SUMMARY_POP_TYPE_HEADER: "$concept_radicals$ by [concept_profession]:"
  LOYALISTS_SUMMARY_POP_TYPE_HEADER: "$concept_loyalists$ by [concept_profession]:"
  RADICALS_SUMMARY_POP_TYPE_LIST_ITEM: "\n$TAB$[PopType.GetRadicals(Country.Self)|vD] [PopType.GetName]"
  LOYALISTS_SUMMARY_POP_TYPE_LIST_ITEM: "\n$TAB$[PopType.GetLoyalists(Country.Self)|vD] [PopType.GetName]"
  RADICALS_SUMMARY_POP_TYPE_LIST_ITEM_NO_TAB: "\n[PopType.GetRadicals(Country.Self)|vD] [PopType.GetName]"
  LOYALISTS_SUMMARY_POP_TYPE_LIST_ITEM_NO_TAB: "\n[PopType.GetLoyalists(Country.Self)|vD] [PopType.GetName]"
  RADICALS_LOYALISTS_SUMMARY_POP_TYPE_OTHER_LIST_ITEM: "\n$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $VAL|vD$#!#! in other [Concept('concept_profession','$concept_professions$')]"
  RADICALS_LOYALISTS_SUMMARY_POLITICALLY_INACTIVE_LIST_ITEM: "\n$TAB$$VAL|vD$ [Concept('concept_politically_inactive_involved', '$concept_politically_inactive$')]"
  POP_TOOLTIP_DELAYED: "\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( SelectLocalization( GreaterThan_int32( GetPlayer.GetPeopleAbroad, '(int32)0' ), 'INCORPORATED_POPULATION', ''), '\n')][ConcatIfNeitherEmpty( SelectLocalization( GreaterThan_int32( GetPlayer.GetPeopleAbroad, '(int32)0' ), 'UNINCORPORATED_POPULATION', ''), '\n\n')]$POP_TOOLTIP_DELAYED_EMPLOYMENT_DETAIL$"
  POP_TOOLTIP_DELAYED_EMPLOYMENT_DETAIL: "Gainfully Employed: #variable [Country.GetSalariedWorkingAdults|K]#!\nPeasants: [Country.GetSubsistingWorkingAdults|Kv]\n[concept_unemployed]: [Country.GetUnemployedWorkingAdults|Kv]\n[concept_dependents]: #variable [Country.GetDependents|K]#!"
  COST_POLITICAL: "@aut!#bold #v $COST|1$#!#!"
  COST_DIPLOMATIC: "@inf!#bold #v $COST|1$#!#!"
  MISSING_RESOURCES_COLON: "#N Missing Resources:#! "
  CAPITAL_ADMINISTRATIVE_COLONIAL_MAINTENANCE: "Colonial maintenance: #N #bold -$MAINTENANCE|1$ #!#!\n"
  WEEKLY_GDP: "Weekly GDP"
  POPULATION: "$concept_population$"
  POPULATION_TOOLTIP: "[Concept('concept_pop', '$concept_population$')]"
  RADICALS: "[Concept('concept_radical', '$concept_radicals$')]"
  NO_RADICALS: "You currently have no [Concept('concept_radical', '$concept_radicals$')]"
  LOYALISTS: "[Concept('concept_loyalist', '$concept_loyalists$')]"
  NO_LOYALISTS: "You currently have no [Concept('concept_loyalist', '$concept_loyalists$')]"
  AVG_STANDARD_OF_LIVING: "Average [concept_sol]"
  MONEY: "[concept_gold_reserves]"
  TENSION: "[concept_tension]"
  INFAMY: "[concept_infamy]"
  TAXATION: "[Concept('concept_taxes','$concept_taxation$')]"
  STATES_IN_TURMOIL: "There are #tooltippable #tooltip:[Country.GetTooltipTag],STATES_IN_TURMOIL_TOOLTIP [Country.CalcNumStatesInTurmoil|v]#!#! [Concept('concept_state', '$concept_states$')] that are in [concept_turmoil] due to $RADICALS$"
  STATES_IN_TURMOIL_TOOLTIP: "#header [concept_turmoil]#!\n$TOOLTIP_DELIMITER$\n[Country.GetStatesInTurmoilBreakdown]"
  STATES_IN_TURMOIL_BREAKDOWN_NONE: "No [Concept('concept_state', '$concept_states$')] are in [concept_turmoil]"
  STATES_IN_TURMOIL_BREAKDOWN: "The following [Concept('concept_state', '$concept_states$')] are in [concept_turmoil]:\n$BREAKDOWN$"
  RADICALS_CHANGE_TOOLTIP: "#header $RADICALS$#![ConcatIfNeitherEmpty('\n', Country.GetRadicalsIncreaseBreakdown)][ConcatIfNeitherEmpty('\n', Country.GetRadicalsDecreaseBreakdown)][AddTextIf(And(Not(GreaterThan_int32(Country.GetTotalNumRadicalsIncrease, '(int32)0')),Not(GreaterThan_int32(Country.GetTotalNumRadicalsDecrease, '(int32)0'))), '\n$LOYALISTS_RADICALS_NO_CHANGE$')]"
  LOYALISTS_CHANGE_TOOLTIP: "#header $LOYALISTS$#![ConcatIfNeitherEmpty('\n', Country.GetLoyalistsIncreaseBreakdown)][ConcatIfNeitherEmpty('\n', Country.GetLoyalistsDecreaseBreakdown)][AddTextIf(And(Not(GreaterThan_int32(Country.GetTotalNumLoyalistsIncrease, '(int32)0')),Not(GreaterThan_int32(Country.GetTotalNumLoyalistsDecrease, '(int32)0'))), '\n$LOYALISTS_RADICALS_NO_CHANGE$')]"
  LOYALISTS_RADICALS_NO_CHANGE: "No recent changes"
  RADICALS_INCREASE_other: "#v #n +$AMOUNT|D$#!#! from events and other reasons"
  RADICALS_INCREASE_standard_of_living_reduction: "#v #n +$AMOUNT|D$#!#! from decreases in [concept_sol]"
  RADICALS_INCREASE_low_standard_of_living: "#v #n +$AMOUNT|D$#!#! from having a [concept_sol] below expected minimum"
  RADICALS_INCREASE_political_movement_demands: "#v #n +$AMOUNT|D$#!#! from unfulfilled [concept_political_movement] demands"
  RADICALS_INCREASE_discrimination: "#v #n +$AMOUNT|D$#!#! from [concept_discrimination]"
  RADICALS_INCREASE_slavery: "#v #n +$AMOUNT|D$#!#! from being [Concept('concept_slavery', '$concept_enslaved$')]"
  RADICALS_INCREASE_conquest: "#v #n +$AMOUNT|D$#!#! from being conquered by a foreign [concept_country]"
  RADICALS_INCREASE_bankruptcy: "#v #n +$AMOUNT|D$#!#! from declaring [concept_bankruptcy]"
  RADICALS_INCREASE_lost_job: "#v #n +$AMOUNT|D$#!#! from being fired from [Concept('concept_building', '$concept_buildings$')]"
  RADICALS_INCREASE_lost_ownership_job: "#v #n +$AMOUNT|D$#!#! from being fired from [Concept('concept_building', '$concept_buildings$')] where they had [Concept('concept_ownership_share', '$concept_ownership_shares$')]"
  RADICALS_INCREASE_building_downsized: "#v #n +$AMOUNT|D$#!#! from downsizing of [concept_state] [Concept('concept_building', '$concept_buildings$')] where their [concept_profession] has [Concept('concept_ownership_share', '$concept_ownership_shares$')]"
  RADICALS_INCREASE_legitimacy: "#v #n +$AMOUNT|D$#!#! from low [concept_legitimacy]"
  RADICALS_INCREASE_government_reform: "#v #n +$AMOUNT|D$#!#! from recent change of [concept_government]"
  RADICALS_DECREASE_other: "#v #p -$AMOUNT|D$#!#! from [Concept('concept_pop', '$concept_pops$')] dying, events and other reasons"
  RADICALS_DECREASE_standard_of_living_increase: "#v #p -$AMOUNT|D$#!#! from increases in [concept_sol]"
  RADICALS_DECREASE_political_movement_success: "#v #p -$AMOUNT|D$#!#! from successful [Concept('concept_political_movement', '$concept_political_movements$')]"
  RADICALS_DECREASE_legitimacy: "#v #p -$AMOUNT|D$#!#! from high [concept_legitimacy]"
  LOYALISTS_INCREASE_other: "#v #p +$AMOUNT|D$#!#! from events and other reasons"
  LOYALISTS_INCREASE_standard_of_living_increase: "#v #p +$AMOUNT|D$#!#! from increases in [concept_sol]"
  LOYALISTS_INCREASE_political_movement_success: "#v #p +$AMOUNT|D$#!#! from successful [Concept('concept_political_movement', '$concept_political_movements$')]"
  LOYALISTS_INCREASE_legitimacy: "#v #p +$AMOUNT|D$#!#! from high [concept_legitimacy]"
  LOYALISTS_DECREASE_other: "#v #n -$AMOUNT|D$#!#! from [Concept('concept_pop', '$concept_pops$')] dying, events and other reasons"
  LOYALISTS_DECREASE_standard_of_living_reduction: "#v #n -$AMOUNT|D$#!#! from decreases in [concept_sol]"
  LOYALISTS_DECREASE_low_standard_of_living: "#v #n -$AMOUNT|D$#!#! from having a [concept_sol] below expected minimum"
  LOYALISTS_DECREASE_political_movement_demands: "#v #n -$AMOUNT|D$#!#! from unfulfilled [concept_political_movement] demands"
  LOYALISTS_DECREASE_discrimination: "#v #n -$AMOUNT|D$#!#! from [concept_discrimination]"
  LOYALISTS_DECREASE_slavery: "#v #n -$AMOUNT|D$#!#! from being [Concept('concept_slavery', '$concept_enslaved$')]"
  LOYALISTS_DECREASE_conquest: "#v #n -$AMOUNT|D$#!#! from being conquered by a foreign [concept_country]"
  LOYALISTS_DECREASE_bankruptcy: "#v #n -$AMOUNT|D$#!#! from declaring [concept_bankruptcy]"
  LOYALISTS_DECREASE_lost_job: "#v #n -$AMOUNT|D$#!#! from losing their jobs"
  LOYALISTS_DECREASE_lost_ownership_job: "#v #n -$AMOUNT|D$#!#! from losing jobs in [Concept('concept_building', '$concept_buildings$')] where they had [Concept('concept_ownership_share', '$concept_ownership_shares$')]"
  LOYALISTS_DECREASE_building_downsized: "#v #n -$AMOUNT|D$#!#! from downsizing of [concept_state] [Concept('concept_building', '$concept_buildings$')] where their [concept_profession] has [Concept('concept_ownership_share', '$concept_ownership_shares$')]"
  LOYALISTS_DECREASE_government_reform: "#v #n -$AMOUNT|D$#!#! from [concept_government_reform]"
  LOYALISTS_DECREASE_legitimacy: "#v #n -$AMOUNT|D$#!#! from low [concept_legitimacy]"
  LOYALISTS_IG_APPROVAL: "Effects of $LOYALISTS$ on [concept_interest_group] approval:\n[Country.GetIGApprovalFromLoyalistsBreakdown]"
  RADICALS_IG_APPROVAL: "Effects of $RADICALS$ on [concept_interest_group] approval:\n[Country.GetIGApprovalFromRadicalsBreakdown]"
  LOYALISTS_OR_RADICALS_IG_APPROVAL_ENTRY: "[InterestGroup.GetName]: #v $VALUE|=+$#! approval"
  INCORPORATED_POPULATION: "Incorporated Population: [GetPlayer.GetIncorporatedPopulation|Kv]"
  UNINCORPORATED_POPULATION: "Unincorporated Population: [GetPlayer.GetPeopleAbroad|Kv]"
  POWER_EXPENSE_HEADER: "Your total usage of #v $VAL|D+=$#! $EXPENSE_ICON$ [$EXPENSE_CONCEPT$] is due to:\n$BREAKDOWN$"
  DIPLOMATIC_PACT_EXPENSE_LIST_ITEM: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $COST|+=0$#!#!#! from $PACT$ with [Country.GetName]"
  DIPLOMATIC_PACT_EXPENSE_LIST_ITEM_BREAKDOWN: "#header [Country.GetName] - $PACT$#!\nThe total cost of #variable $COST|0$#! is due to:\n$BREAKDOWN$"
  DIPLOMATIC_PACT_BASE_COST: "Base Cost: #variable $COST|0$#!"
  DIPLOMATIC_PACT_INFAMY_COST: "Our [concept_infamy]: #bold $COST|=-0$#!"
  DIPLOMATIC_PACT_RANK_COST: "$OTHER$ $RANK_NAME$ Rank: #bold $COST|=-0$#!"
  COUNTRY_INFAMY_MAP_TOOLTIP: "[SelectLocalization(State.GetCountry.IsColonizable, GetPlayer.GetTensionTooltip(State.GetCountry), State.GetCountry.GetInfamyDesc)]"
  BUREAUCRACY_EXPENSE_FROM_STATES_AND_POPULATION: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! from $POPULATION|Kv$ people in $NUM_INCORPORATED_STATES|v$ [Concept('concept_incorporated_state', '$concept_incorporated_states$')]"
  BUREAUCRACY_EXPENSE_FROM_INSTITUTIONS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! from [Concept('concept_institution', '$concept_institutions$')] across $NUM_INCORPORATED_STATES|v$ [Concept('concept_incorporated_state', '$concept_incorporated_states$')]"
  BUREAUCRACY_EXPENSE_FROM_TRADE_ROUTES: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! from $NUM_TRADE_ROUTES|v$ [Concept('concept_trade_route', '$concept_trade_routes$')]"
  BUREAUCRACY_EXPENSE_FROM_COMMANDERS: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|+=0$#!#! from $NUM_GENERALS|v$ [Concept('concept_general', '$concept_generals$')] and $NUM_ADMIRALS|v$ [Concept('concept_admiral', '$concept_admirals$')]"
  BUREAUCRACY_EXPENSE_PER_INSTITUTION: "$COST|+=0$ from [INSTITUTION.GetName] ([INSTITUTION.GetInvestmentLevel|v])"
  BUREAUCRACY_EXPENSE_FROM_INSTITUTIONS_TOOLTIP: "#header @bur![concept_bureaucracy] cost of [Concept('concept_institution', '$concept_institutions$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  TOTAL_INSTITUTIONS_INVESTMENT_LEVELS: "Total Institution [Concept('concept_investment_level', '$concept_investment_levels$')]: #v $LEVELS|+=0$#!"
  BUREAUCRACY_EXPENSE_INSTITUTIONS: "$INCORPORATEDCOST$\n$INSTITUTION_LEVELS$\n$BREAKDOWN$"
  BUREAUCRACY_EXPENSE_PER_STATE: "$TOTAL_COST|+=0$ from [State.GetName] ($STATE_COST|+=0$ base, $POPULATION_COST|+=0$ from $POPULATION|Kv$ people)"
  BUREAUCRACY_EXPENSE_FROM_STATES_AND_POPULATION_TOOLTIP: "#header @bur![concept_bureaucracy] cost of [Concept('concept_pop', '$concept_pops$')] in [Concept('concept_incorporated_state', '$concept_incorporated_states$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  BUREAUCRACY_EXPENSE_PER_TRADE_ROUTE: "$COST|+=0$ from [TradeRoute.GetName]"
  BUREAUCRACY_EXPENSE_FROM_TRADE_ROUTES_TOOLTIP: "#header @bur![concept_bureaucracy] cost of [Concept('concept_trade_route', '$concept_trade_routes$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  BUREAUCRACY_EXPENSE_PER_COMMANDER: "$COST|+=0$ from [Character.GetCombatUnitsTypeIcon] [Character.GetFullName]"
  BUREAUCRACY_EXPENSE_FROM_COMMANDERS_TOOLTIP: "#header @bur![concept_bureaucracy] cost of [Concept('concept_commander', '$concept_commanders$')]: $COST|+=0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  BUREAUCRACY_EXPENSE_LIST_ITEM: "#tooltippable #tooltip:$TOOLTIP_TAG$ #variable $COST|+0$#!#!#! from [State.GetName]"
  INSTITUTION_GROWING: "Growing: [Institution.GetGrowthProgress|+1%]"
  INSTITUTION_SHRINKING: "Shrinking: [Institution.GetGrowthProgress|+1%]"
  INSTITUTION_INVESTMENT_LEVEL: "Investment Level: [Institution.GetInvestmentLevel|v]"
  INSTITUTION_GROWTH_TOOLTIP: "This Institution is currently growing."
  INSTITUTION_SHRINKING_TOOLTIP: "This Institution is currently shrinking."
  IG_SUPPRESSED_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! from [Concept('concept_suppress','$concept_suppressing$')] the [INTEREST_GROUP.GetName]"
  IG_PROMOTED_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! from [Concept('concept_bolster','$concept_bolstering$')] the [INTEREST_GROUP.GetName]"
  GOODS_EMBARGO_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! from [Concept('concept_embargo', '$concept_embargoing$')] [GOODS.GetName]"
  GOODS_ENCOURAGE_CONSUMPTION_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! from [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [GOODS.GetName]"
  GOODS_DISCOURAGE_CONSUMPTION_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! from [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [GOODS.GetName]"
  GOODS_TAX_EXPENSE_LIST_ITEM: " #variable #N -$VAL|0$#!#! from Collecting [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [GOODS.GetName]"
  STATE_POP_GROWTH: "$concept_pop_growth$ #v [State.GetPopNetGrowth|K=+]#!"
  TOOLTIP_POP_GROWTH_COMMON: "Annual projected [concept_pop_growth]: #variable $NETGROWTHRATE|+=%$ #! (#variable $NETGROWTH|=*$#!)"
  TOOLTIP_COUNTRY_POP_GROWTH: "$TOOLTIP_POP_GROWTH_COMMON$"
  TOOLTIP_STATE_POP_GROWTH: "$TOOLTIP_POP_GROWTH_COMMON$"
  TOOLTIP_STATE_POP_MIGRATION: "Annual projected [concept_migration]: #variable $NETGROWTHRATE|+=%$#! (#variable $NETGROWTH|=*$#!)"
  MIGRATION_PULL_DESC: "[State.GetMigrationPullDesc]"
  STATE_MIGRATION_PULL_BREAKDOWN: "[State.GetMigrationPullDesc]"
  MIGRATION_PULL_FROM_EMPTY_STATE: "$TAB$Depopulated State: #v $VAL|+=1$#!"
  MIGRATION_PULL_FROM_SOL: "$TAB$[concept_sol]: #v $VAL|+=1$#!"
  MIGRATION_PULL_FROM_UNEMPLOYMENT: "$TAB$[Concept('concept_unemployed','$concept_unemployment$')]: #v $VAL|+=1$#!"
  MIGRATION_PULL_FROM_AVAILABLE_ARABLE_LAND: "$TAB$Unused [concept_arable_land]: #v $VAL|+=1$#!"
  MIGRATION_PULL_FROM_AVAILABLE_EMPLOYMENT: "$TAB$Available Employment: #v $VAL|+=1$#!"
  MIGRATION_PULL_FROM_COLONY: "$TAB$Is a Colony: #P #v ×$VAL|1$#!#!"
  TOOLTIP_STATE_MIGRATION_PULL_DESC: "#header [concept_migration_pull]#!\n$TOOLTIP_DELIMITER$\nThe [State.GetName] [concept_migration_pull] of #v [State.GetMigrationPull|1]#! is due to:\n$DETAILS$\n[State.GetMigrationDetailsDesc]"

  LABEL_STATE_MIGRATION_ISOLATED: "[concept_isolated_state]"
  LABEL_STATE_MIGRATION_PULL_HIGH: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #P #b High ($STATE_VALUE|1$)#!#!#!#!"
  LABEL_STATE_MIGRATION_PULL_MEDIUM: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #v #b Medium ($STATE_VALUE|1$)#!#!#!#!"
  LABEL_STATE_MIGRATION_PULL_LOW: "#tooltippable #tooltip:[STATE.GetTooltipTag],STATE_MIGRATION_PULL_BREAKDOWN #N #b Low ($STATE_VALUE|1$)#!#!#!#!"

  TOOLTIP_STATE_MIGRATION_ISOLATED: "[STATE.GetName] is an [concept_isolated_state], and will not experience any migration"
  TOOLTIP_STATE_MIGRATION_PULL_HIGH: "[STATE.GetName] has a $LABEL_STATE_MIGRATION_PULL_HIGH$ [concept_migration_pull] compared to the average ($MARKET_VALUE|1v$) in the [State.GetMarket.GetName], and may receive immigrants from other states in the [State.GetMarket.GetName]\n\n$concept_migration$ can be effected by your current [GetLawGroup('lawgroup_migration').GetName] [concept_law]"
  TOOLTIP_STATE_MIGRATION_PULL_MEDIUM: "[STATE.GetName] has a $LABEL_STATE_MIGRATION_PULL_MEDIUM$ [concept_migration_pull] compared to the average ($MARKET_VALUE|1v$) in the [State.GetMarket.GetName], and may send a limited number of emigrants to other states within the [State.GetMarket.GetName]\n\n$concept_migration$ can be effected by your current [GetLawGroup('lawgroup_migration').GetName] [concept_law]"
  TOOLTIP_STATE_MIGRATION_PULL_LOW: "[STATE.GetName] has a $LABEL_STATE_MIGRATION_PULL_LOW$ [concept_migration_pull] compared to the average ($MARKET_VALUE|1v$) in the [State.GetMarket.GetName], and may send emigrants to other states in the [State.GetMarket.GetName]\n\n$concept_migration$ can be effected by your current [GetLawGroup('lawgroup_migration').GetName] [concept_law]"

  TOOLTIP_STATE_IMMIGRATION_STATES: "[STATE.GetName] received a total of #variable $AMOUNT|D+$#! immigrants from $STATES_LIST$ last week"
  TOOLTIP_STATE_EMIGRATION_STATES: "[STATE.GetName] sent a total of #variable $AMOUNT|D+$#! emigrants to $STATES_LIST$ last week"
  TOOLTIP_STATE_CULTURAL_MIGRATION_TARGET: "[STATE.GetName] is the target of mass migration from the [CULTURE.GetName] culture and will receive vast numbers of migrants"
  TOOLTIP_STATE_CULTURAL_MIGRATION_TARGET_ADJACENCY: "[STATE.GetName] is adjacent to a target of mass migration from the [CULTURE.GetName] culture and will receive large numbers of migrants"
  CULTURE_OVERVIEW: "Cultures"
  COUNTRY_INFO: "Information"
  COUNTRY_INFO_BOLD: "#bold $COUNTRY_INFO$#!"
  DIPLOMATIC_ACTIONS: "Actions"
  DIPLOMATIC_ACTIONS_BOLD: "#bold $DIPLOMATIC_ACTIONS$#!"
  NATION_FORMATION: "Nation Formation"
  NATION_FORMATION_BOLD: "#bold $NATION_FORMATION$#!"
  RELEASE_SUBJECT: "Release Subject"
  RELEASE_SUBJECT_BOLD: "#bold $NATION_CREATION$#!"
  CULTURE_INFO: "Cultures"
  CULTURE_INFO_BOLD: "#bold $CULTURE_INFO$#!"

  FORM_NATION_STATE_REGION_CONTROL_DESC: "#header [Country.GetAdjective] control over [STATE_REGION.GetName]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  FORM_NATION_STATE_CONTROL_REASON_OWNERSHIP: "@green_checkmark! [State.GetName]: [Country.GetName] owns the [concept_state]"
  FORM_NATION_STATE_CONTROL_REASON_CANDIDATE_SUPPORT: "@green_checkmark! [State.GetName]: [State.GetName]: [State.GetOwner.GetName] supports [Country.GetName] as [concept_unification_candidate]"
  FORM_NATION_STATE_CONTROL_REASON_SUBJECT: "@green_checkmark! [State.GetName]: [State.GetOwner.GetName] is a non-autonomous [concept_subject] ($SUBJECT_TYPE$) of [Country.GetName]"
  FORM_NATION_STATE_NO_CONTROL_REASON_AUTONOMOUS_SUBJECT: "@red_cross! [State.GetName]: [State.GetOwner.GetName] is too autonomous a [concept_subject] ($SUBJECT_TYPE$) to count as being controlled by [Country.GetName]"
  FORM_NATION_STATE_NO_CONTROL_REASON_GENERIC: "@red_cross! [State.GetName]: [Country.GetName] does not exert any control over [State.GetOwner.GetName]"
  PLAYER_CULTURE: "In [GetPlayer.GetName]"
  GLOBAL_CULTURE: "Globally"
  HOMELANDS_HEADER: "Homelands ([GetDataModelSize(Culture.AccessHomelands)])"
  MUSIC_PLAYER_VOLUME_LABEL_V3: "$MUSIC_PLAYER_VOLUME_LABEL$:"
  SETTING_MUSIC_DENSITY_V3: "$SETTING_MUSIC_DENSITY$:"
  MUSIC_PLAYER_PLAY: "Play"
  MUSIC_PLAYER_PAUSE: "Pause"
  MUSIC_PLAYER_HEADER: "Music Player"
  MUSIC_PLAYER_PLAY_TRACK: "[SelectLocalization(ObjectsEqual(MusicPlayer.GetTrackName( MusicTrack.Self ), MusicPlayer.GetPlayingTrackName), 'MUSIC_PLAYER_IS_PLAYING_TRACK', 'MUSIC_PLAYER_CLICK_TO_PLAY_TRACK')]"
  MUSIC_PLAYER_CLICK_TO_PLAY_TRACK: "Click to play #v [MusicPlayer.GetTrackName( MusicTrack.Self )]#! now"
  MUSIC_PLAYER_IS_PLAYING_TRACK: "#v [MusicPlayer.GetTrackName( MusicTrack.Self )]#! is playing!"
  MUSIC_PLAYER_ENABLE_TRACK: "Enable/Disable #v [MusicPlayer.GetTrackName( MusicTrack.Self )]#! to be in the queue of music tracks"
  MUSIC_PLAYER_ENABLE_CATEGORY: "Enable/Disable all music tracks in the #v [MusicPlayer.GetCategoryName( MusicPlayerCategory.Self )]#! category"
  MUSIC_PLAYER_SKIP_TO_NEXT_TRACK: "Skip to the next track"
  MUSIC_PLAYER_SELECT_CATEGORY: "Select to see the music tracks in #v [MusicPlayer.GetCategoryName( MusicPlayerCategory.Self )]#!"
  MUSIC_PLAYER_CATEGORY_ENABLED_DISABLED_TEXT: "[MusicPlayer.GetCategoryName( MusicPlayerCategory.Self )] [SelectLocalization(ObjectsEqual('Enabled', MusicPlayer.GetCategoryEnabledText( MusicPlayerCategory.Self )), 'MUSIC_PLAYER_CATEGORY_ENABLED_V3', 'MUSIC_PLAYER_CATEGORY_DISABLED_V3')]"
  MUSIC_PLAYER_CATEGORY_ENABLED_V3: "#g [MusicPlayer.GetCategoryEnabledText( MusicPlayerCategory.Self )]#!"
  MUSIC_PLAYER_CATEGORY_DISABLED_V3: "#r [MusicPlayer.GetCategoryEnabledText( MusicPlayerCategory.Self )]#!"
  MUSIC_PLAYER_DENSITY: "#header Music Density#!\nControls the balance between full songs, silence, and mood music segments\n$TOOLTIP_DELIMITER$\n#b Intense#! - Mostly full songs playing one after the other, similar to a radio station\n\n#b Balanced#! - The perfect balance between songs, silence, and mood music segments\n\n#b Relaxed#! - Mostly mood music segments that provide a calmer experience and less sense of repetition after several hours of playing"
  AND_SPACED: " and "
  COMMA_SPACED: ", "
  MAP_INFO: "#header Map#!\n$TOOLTIP_DELIMITER$\nPress and hold #bold 'Tab'#! to zoom out fully. Releasing it will zoom you back in to your previous zoom level."
  MAP_INFO_MAP_MODE_LOCKED: "$MAP_INFO$\n\n#instruction Click to clear locked Map Mode.#!"
  LOCATION_FINDER: "#header Location Finder#!"
  ZOOM_TO_BUILDING_STATE: "Zoom to [Building.AccessState.GetName]"
  ZOOM_TO_EVENT_WINDOW_STATE: "Zoom to [EventWindow.GetEvent.GetState.GetName]"
  ZOOM_TO_COUNTRY_CAPITAL: "Zoom to [Country.AccessCapital.GetName]"
  ZOOM_TO_MARKET_CAPITAL: "Zoom to [Market.AccessMarketCapital.GetName] ([concept_market_capital])"
  ZOOM_TO_STATE: "Zoom to [State.GetName]"
  ZOOM_TO_LOCATION: "Zoom to location"
  POLITICS: "Politics"
  BUTTON_POLITICS: "#header Politics#!\n$LAW_ENACTMENT_PROGRESS_TOPBAR$"
  BUTTON_POPULATION: "#header Population#!"
  BUTTON_TRADE_OVERVIEW: "#header Market#!"
  BUTTON_CULTURE_OVERVIEW: "#header Cultures#!"
  BUTTON_BUDGET: "#header Budget#!"
  BUTTON_MILITARY: "#header Military#!"
  BUTTON_TECHNOLOGY: "#header Technology#!\n[SelectLocalization( Technology.IsValid, 'RESEARCHING', 'NOT_RESEARCHING' )]"
  UNLOCK_MAP_MODE: "Clear locked Map Mode"
  UNLOCK_MAP_MODE_TOOLTIP: "#header Clear locked Map Mode#!\n[GetSelectedMapModeName] Map Mode is currently locked."
  RESEARCHING: "[GetPlayer.GetName] is currently researching #variable [Technology.GetName]#!\nProgress: $TECHNOLOGY_PROGRESS_WITH_GAIN_AND_TIME_LEFT$"
  NOT_RESEARCHING: "[GetPlayer.GetName] is not actively researching anything."
  BUTTON_DETAILS: "Go to Details screen"
  BUTTON_DETAILS_FRONT: "Go to $concept_front$ panel"
  BUTTON_INTERACT: "Interact"
  NO_OF_UNREAD_PINS: "You have #bold #v [InformationPanelBar.GetNumberOfUnreadPins]#!#! unread pins"
  YOU_AND_ALLIES_FIRST: "You and Your Allies ([Front.GetFirstLeadingCommander.GetCountry.GetFlagTextIcon])"
  ENEMIES_FIRST: "Enemy ([Front.GetFirstLeadingCommander.GetCountry.GetFlagTextIcon])"
  YOU_AND_ALLIES_SECOND: "You and Your Allies ([Front.GetSecondLeadingCommander.GetCountry.GetFlagTextIcon])"
  ENEMIES_SECOND: "Enemy ([Front.GetSecondLeadingCommander.GetCountry.GetFlagTextIcon])"
  ALREADY_ACQUIRED_TITLE: "#bold Known Technology#!"
  RESEARCH_PANEL: "#bold Select New Research#!"
  SHOW_ON_MAP: "Show on map"
  TECHNOLOGY_HEADER: "#bold Technology#!"
  GET_UNDISCOVERED_TECHNOLOGY_COST: "Cost: #bold [Era.GetTechnologyCost] IP#!"
  ECONOMY_TYPE_DESCRIPTION: "Economy, Era [Era.GetNumber]"
  MILITARY_TYPE_DESCRIPTION: "Military, Era [Era.GetNumber]"
  CULTURE_TYPE_DESCRIPTION: "Culture, Era [Era.GetNumber]"
  ALREADY_ACQUIRED_BUTTON: "See Known Technologies"
  TECHNOLOGY_ACQUIRED_POPUP_HEADER: "#header [PlayerMessageItem.GetScopeTechnology.GetName] Unlocked#!"
  TECHNOLOGY_UNLOCKS_TEXT: "[Technology.GetTooltipWithoutRequirements(GetPlayer.Self)]"
  TECHNOLOGY_LORE_TEXT: "#lore [Technology.GetDesc]#!"
  NA: "Not available"
  JOURNAL_ENTRY_ON_ACTIVATION: "#title If activated:#!\n$EFFECT$"
  JOURNAL_ENTRY_ON_COMPLETION: "#title If completed:#!\n$EFFECT$"
  JOURNAL_ENTRY_ON_FAILURE: "#title If failed:#!\n$EFFECT$"
  JOURNAL_ENTRY_ON_INVALIDATION: "#title If invalidated:#!\n$EFFECT$"
  JOURNAL_ENTRY_ON_TIMEOUT: "#title If time runs out:#!\n$EFFECT$"

  HAS_ON_PULSE: "#debug Debug: This Journal Entry has some sort of OnPulse#!"
  DEBUG_NO_CHARACTER_IN_GBR_IS_VICTORIA: "#debug Debug: No character in GBR is Victoria#!"
  MARKET_PANEL_STATES_IN_MARKET: "#header Connected to Market#!\n[StateRegion.GetName] is connected to [Market.GetName]"
  WORKS_AT: "$NAME$($NUM|0*$)"
  MARKET_INFRASTRUCTURE_INFO: "[concept_infrastructure] to [MARKET.GetName]: #variable $VAL|+$#!"
  MARKET_STATE_REGION_LIST_IN: "In?"
  STATE_REGION: "[concept_state_region]"
  MARKET_ACCESS: "[concept_market_access]"
  GDP_CONTRIBUTION: "[Concept('concept_gdp','$concept_gdp_short$')] Contribution"
  TOTAL_URBAN_CENTERS: "[GetBuildingType('building_urban_center').GetName] Size:"
  TOTAL_URBANIZATION: "([concept_urbanization]: [Building.GetState.CalcTotalUrbanization|v])"
  UNUSED_ARABLE: "Unused [concept_arable_land]:"
  RESOURCE: "Resource"
  AGRICULTURE: "Agriculture"
  BUILDINGS_USING_THIS_LIST: "#title Used in#!\n$LIST$"
  BUILDINGS_PRODUCING_THIS_LIST: "#title Produced in#!\n$LIST$"
  OPEN_EXPANSION_LENS: "Expand in other State(s)"
  STATE_INFRASTRUCTURE: "[concept_infrastructure]\n$STATE_INFRASTRUCTURE_CONDENSED$"
  STATE_MARKET_CAPITAL_STATUS: "[concept_market_capital]\n$STATE_MARKET_CAPITAL_STATUS_CONDENSED$"
  STATE_CAPITAL_STATUS: "[concept_capital_state]\n[State.GetOwner.GetName]"
  STATE_SPLIT_STATE_STATUS: "[concept_split_state]\n[State.GetStateRegion.GetName]"
  STATE_MIGRATION_TARGET_STATUS: "[concept_migration_target]\n[State.GetMassMigrationCulture.GetName] from [State.GetMassMigrationOriginCountry.GetName]"
  STATE_MARKET_STATUS: "[State.GetMarket.GetName]\n[SelectLocalization(LessThan_CFixedPoint(State.GetInfrastructureBalance, '(CFixedPoint)0'), 'WARNING', '')][State.GetMarketAccess|%v0]"
  STATE_TRAIT_STATUS: "[StateTrait.GetName|v]\n#title State Trait#!"
  STATE_POPULATION_STATUS: "[Concept('concept_pop','$concept_population$')]\n$STATE_POPULATION_STATUS_CONDENSED$"
  STATE_SOL_STATUS: "[concept_sol]"
  STATE_GDP_STATUS: "$GDP_SHORT$\n$STATE_GDP_STATUS_CONDENSED$"
  STATE_DECREE_STATUS: "[Decree.GetName]"
  STATE_CONSTRUCTION: "[concept_construction]\n$STATE_CONSTRUCTION_CONDENSED$"
  STATE_CONSTRUCTION_CONDENSED: "[SelectLocalization(GreaterThan_int32(Country.GetNumBuildingsUnderConstructionInState(State.Self), '(int32)0'), 'STATE_CONSTRUCTION_ACTIVE', '')][SelectLocalization(GreaterThan_int32(Country.GetNumBuildingsInConstructionQueueInState(State.Self), '(int32)0'), 'STATE_CONSTRUCTION_IN_QUEUE', '')]"
  STATE_CONSTRUCTION_ACTIVE: "[Country.GetNumBuildingsUnderConstructionInState(State.Self)|v] active"
  STATE_CONSTRUCTION_IN_QUEUE: "\n[Country.GetNumBuildingsInConstructionQueueInState(State.Self)|v] queued"
  TOOLTIP_VIEW_CONDENSED: "#header View condensed State Panel#!"
  TOOLTIP_VIEW_DETAILED: "#header View detailed State Panel#!"
  WARNING: "@warning! "
  BUILDING_POPULATION_STATUS: "Employees\n[Building.GetNoOfEmployed|Kv]"
  UNDER_COLONIZATION: "Growing [concept_colony]"
  BEING_COLONIZED: "Being [Concept('concept_colony', '$concept_colonized$')] by\n[SelectLocalization(EqualTo_int32(State.GetNumColonizers,'(int32)1'),State.GetColonizers('STATE_REGION_COLONIZER_SINGLE_WIDGET'),State.GetColonizers('STATE_COLONIZER_WIDGET_ITEM'))]"
  TOOLTIP_COLONIZED: "#header Being [Concept('concept_colony', '$concept_colonized$')]#!\n$TOOLTIP_DELIMITER$\n[State.GetName] is being $concept_colonized$ by:\n[State.GetColonizers('STATE_REGION_COLONIZER_ITEM')]"
  STATE_REGION_COLONIZER_SINGLE_WIDGET: "[STATE.GetCountry.GetName]"
  STATE_REGION_COLONIZER_ITEM: "$TAB$[STATE.GetOwner.GetName] ([STATE.GetName])\n"
  STATE_COLONIZER_WIDGET_ITEM: "[STATE.GetCountry.GetFlagTextIcon] "
  STATE_INFRASTRUCTURE_USAGE_TOOLTIP: "#header [concept_infrastructure_usage]#!\n[State.GetName] uses #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#! [concept_infrastructure]\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureUsageDesc]"
  STATE_INFRASTRUCTURE_TOOLTIP: "#header [concept_infrastructure]#!\n[State.GetName] has [State.GetInfrastructure|+0] [concept_infrastructure]\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureDesc]"
  STATE_INFRASTRUCTURE_DESC: "#header [concept_infrastructure] Balance#!\nThe [concept_infrastructure] Balance in [State.GetName] is [State.GetInfrastructureBalance|0+=]\n$TOOLTIP_DELIMITER$\nThe [concept_infrastructure] of #v [State.GetInfrastructure|0+]#! is due to:\n[State.GetInfrastructureDesc]\n\nThe [concept_infrastructure_usage] of #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#! is due to:\n[State.GetInfrastructureUsageDesc]"
  STATE_PANEL_INFRASTRUCTURE_DESC: "#header [concept_infrastructure]#!\n[concept_infrastructure] in [State.GetName]: #v [State.GetInfrastructure|0]#!\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureDesc]"
  STATE_PANEL_INFRASTRUCTURE_USAGE_DESC: "#header [concept_infrastructure_usage]#!\n[concept_infrastructure_usage] in [State.GetName]: #v [Multiply_CFixedPoint(State.GetInfrastructureUsage,'(CFixedPoint)-1')|0+]#!\n$TOOLTIP_DELIMITER$\n[State.GetInfrastructureUsageDesc]"
  STATE_TRAIT_STATE_MODIFIER: "State Modifiers"
  STATE_TRAIT_STATE_REGION_MODIFIER: "State Region Modifiers"
  BUILDING_PROGRESS_TOOLTIP: "#header [Building.GetName]#!\nBuilding Progress: #VARIABLE [Building.GetConstructionProgressPercentage|%]#!\nWeekly [concept_construction] Allocation: #v #tooltippable #tooltip:[Building.GetTooltipTag],CONSTRUCTION_SPEED_TOOLTIP [Building.GetConstructionSpeedPerWeek|2]#!#!#!\nTime remaining: #VARIABLE [Building.GetConstructionRemainingWeeksDesc]#!"
  BUILDING_PROGRESS_TOOLTIP_QUEUED: "#header [Building.GetName]#!\nIn Construction Queue in [Country.GetName]"

  INFRASTRUCTURE_FROM_POPS: "$VALUE|+=1$ from [Concept('concept_pop', '$concept_pops$')]: "
  INFRASTRUCTURE_FROM_POPS_CAPPED: "$VALUE|+=1$ (Capped at maximum value of #tooltippable #tooltip:$BREAKDOWN_TAG$ $CAP|1v$#!#!) from [Concept('concept_pop', '$concept_pops$')] "
  NEXT_PAGE: "Next page"
  PREVIOUS_PAGE: "Previous page"

  CONSTRUCTION_QUEUE_HEADER: "Construction Queue"
  CONSTRUCTION_QUEUE_BUILDING_IN_STATE: "[ConstructionQueueElement.GetBuilding.GetName] in [ConstructionQueueElement.GetBuilding.GetState.GetName]"
  CONSTRUCTION_QUEUE_ITEM_VALID: "#header Expanding [Building.GetName] in [State.GetName]#!\n#v $WEEKS$#! week(s) until complete\n$TOOLTIP_DELIMITER$\n#v $PROGRESS|0$#!/#v $REQUIRED|0$#! [concept_construction] progress (#v $PERCENT_COMPLETE|%$#!)\n#v [ConstructionQueueElement.GetBaseConstructionSpeed|2]#! [concept_construction] provided by [Building.GetOwner.GetName] results in a total of #v #tooltippable #tooltip:[ConstructionQueueElement.GetTooltipTag],CONSTRUCTION_QUEUE_SPEED_TOOLTIP $SPEED$#!#!#! progress each week\n"
  CONSTRUCTION_QUEUE_ITEM_INVALID: "#header [Building.GetName] in [State.GetName]#!\n$TOOLTIP_DELIMITER$\n$INVALID_DESC$"
  CONSTRUCTION_SPEED_BASE_TOOLTIP: "#tooltip_header @construction![Nbsp][concept_construction]#![AddLocalizationIf(Country.IsConstructionPaused, '$CONSTRUCTION_IS_PAUSED$')]\nTotal: #v [Country.CalcBaseConstructionSpeed|2]#!\nBeing used: #v [Country.CalcUsedConstruction|0]/[Country.CalcBaseConstructionSpeed|0]#!\n$TOOLTIP_DELIMITER$\n[Country.GetBaseConstructionSpeedDesc]"
  CONSTRUCTION_QUEUE_TOOLTIP: "[Country.GetConstructionQueueDesc]"
  CONSTRUCTION_QUEUE_DESC: "#header [concept_construction]#! in [Country.GetName][AddLocalizationIf(Country.IsConstructionPaused, '$CONSTRUCTION_IS_PAUSED$')]\n$TOOLTIP_DELIMITER$\n[Country.GetName] is using #v #tooltippable #tooltip:[Country.GetTooltipTag],CONSTRUCTION_SPEED_USED_TOOLTIP [GetPlayer.CalcUsedConstruction|2]#!#!#! [concept_construction] each week and produces a total of #v #tooltippable #tooltip:[Country.GetTooltipTag],CONSTRUCTION_SPEED_BASE_TOOLTIP [Country.CalcBaseConstructionSpeed|2]#!#!#! $concept_construction$ each week.\n\nThere are #v #tooltippable #tooltip:[Country.GetTooltipTag],CONSTRUCTION_QUEUE_ACTIVE_PROJECTS [Country.GetNumActiveConstructionQueueElements]#!#!#! project(s) [concept_under_construction] and #v #tooltippable #tooltip:[Country.GetTooltipTag],CONSTRUCTION_QUEUE_INACTIVE_PROJECTS [Country.GetNumInactiveConstructionQueueElements]#!#!#! additional projects queued in the [concept_construction_queue]\n\n"
  CONSTRUCTION_IS_PAUSED: "\nAll $concept_construction$ is currently #b Paused#!"
  CONSTRUCTION_QUEUE_ACTIVE_PROJECTS: "[Country.GetActiveConstructionProjectsDesc]"
  CONSTRUCTION_QUEUE_ACTIVE_PROJECTS_NO_ITEMS: "No projects [concept_under_construction]"
  CONSTRUCTION_QUEUE_INACTIVE_PROJECTS: "[Country.GetInactiveConstructionProjectsDesc]"
  CONSTRUCTION_QUEUE_INACTIVE_PROJECTS_NO_ITEMS: "No additional projects in the [concept_construction_queue]"
  CONSTRUCTION_SPEED_USED_TOOLTIP: "#header [concept_under_construction]#! in [GetPlayer.GetName]\n$TOOLTIP_DELIMITER$\nThere are #v [Country.GetNumActiveConstructionQueueElements]#! project(s) using [concept_construction] this week:[ConcatIfNeitherEmpty('\n',GetPlayer.GetActiveConstructionProjectsDesc)]"
  CONSTRUCTION_SPEED_TOOLTIP: "[Building.GetConstructionSpeedPerWeekDesc]"
  CONSTRUCTION_QUEUE_SPEED_TOOLTIP: "[ConstructionQueueElement.GetConstructionSpeedPerWeekDesc]"
  CONSTRUCTION_QUEUE_DESC_ITEM: "#b $NUM$#!: [BUILDING.GetName] in [STATE.GetName]: #v $BASE_SPEED$#! (Max of #v $MAX_BASE_SPEED$#!) - #v $WEEKS_LEFT$#! week(s) until complete"
  CONSTRUCTION_QUEUE_DESC_BACKLOG_ITEM: "#b $NUM$#!: [BUILDING.GetName] in [STATE.GetName] (Queued) - #v $WEEKS_LEFT$#! week(s) until complete"
  CONSTRUCTION_QUEUE_DESC_INVALID_ITEM: "#b $NUM$#!: [BUILDING.GetName] in [STATE.GetName] #N (Invalid)#!"
  CONSTRUCTION_QUEUE: "[concept_construction_queue]"
  CONSTRUCTION_QUEUE_STATE: "[concept_construction] #v @construction! #tooltippable #tooltip:[State.GetOwner.GetTooltipTag],CONSTRUCTION_SPEED_BASE_TOOLTIP [State.GetOwner.CalcUsedConstruction|0]/[State.GetOwner.CalcBaseConstructionSpeed|0]#!#!#!"
  CONSTRUCTION_QUEUE_IS_EMPTY: "Nothing is [concept_under_construction]"
  CONSTRUCTION_QUEUE_HIDDEN_ELEMENTS: "+[Country.GetNumHiddenConstructionQueueElements|v] additional queued projects"
  CONSTRUCTION_BUTTON_IDLE: "Idle"
  CONSTRUCTION_BUTTON_IDLE_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_IDLE_DESC$"
  CONSTRUCTION_BUTTON_PAUSE: "Pause All"
  CONSTRUCTION_BUTTON_PAUSE_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_ACTIVE_DESC_DATA$\nClick to pause all [concept_construction]"
  CONSTRUCTION_BUTTON_RESUME: "Resume"
  CONSTRUCTION_BUTTON_RESUME_TOOLTIP: "$CONSTRUCTION_QUEUE_STATUS_PAUSED_DESC_DATA$\nClick to resume all [concept_construction]"
  CONSTRUCTION_ALREADY_PAUSED: "Construction is already paused."
  CONSTRUCTION_IN_DEFAULT: "Cannot resume construction while [COUNTRY.GetName] is in default."
  CONSTRUCTION_ALREADY_RUNNING: "Construction is already running."
  CONSTRUCTION_BUILDING_PER_WEEK: "@construction! [Building.GetConstructionSpeedPerWeek|0]"
  CONSTRUCTION_QUEUE_ELEMENT_ALLOCATION: "@construction! [ConstructionQueueElement.GetBaseConstructionSpeed|1]"
  CONSTRUCTION_VALUE: "[SelectLocalization(Country.IsConstructionPaused, 'CONSTRUCTION_DURATION_PAUSED', 'CONSTRUCTION_VALUE_WITHOUT_ICON')]"
  CONSTRUCTION_VALUE_WITHOUT_ICON: "#v [Country.CalcUsedConstruction|0]/[Country.CalcBaseConstructionSpeed|0]#!"
  CONSTRUCTION_VALUE_WITH_ICON: "@construction! #v [Country.CalcUsedConstruction|0]/[Country.CalcBaseConstructionSpeed|0]#!"
  NO_CONSTRUCTION: "Currently no [Concept('concept_building', '$concept_buildings$')] [concept_under_construction]"
  NOTHING_CONSTRUCTING: "Nothing [concept_under_construction]"
  USED_VS_UNUSED_CONSTRUCTION: "#v [GetPlayer.CalcUsedConstruction|0]/[GetPlayer.CalcBaseConstructionSpeed|0]#!"
  IN_CONSTRUCTION_QUEUE: "#v [GetPlayer.GetNumInactiveConstructionQueueElements|=]#!"
  IN_CONSTRUCTION_QUEUE_TOOLTIP: "#header [GetPlayer.GetNumInactiveConstructionQueueElements|=] [Concept('concept_building', '$concept_buildings$')] in the [concept_construction_queue]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInactiveConstructionProjectsDesc]"
  QUEUED: "Queued"

  SHOW_PRIVATE_CONSTRUCTIONS: "Show [Concept('concept_private_construction', '$concept_private_constructions$')] ([GetMetaPlayer.GetPlayedOrObservedCountry.GetNumPrivateConstructionsInQueue|v])"
  SHOW_GOVERNMENT_CONSTRUCTIONS: "Show [Concept('concept_government_construction', '$concept_government_constructions$')] ([GetMetaPlayer.GetPlayedOrObservedCountry.GetNumGovernmentConstructionsInQueue|v])"
  BUILDING_DETAILS_EMPLOYMENT_TOOLTIP: "#header [Building.GetName] in [Building.GetState.GetName]#!\nSize: [Building.GetExpansionLevelBreakdownDesc]\nEmployment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#bold #v [Building.GetEmploymentPercentage|0%]#!#!)\n$TOOLTIP_DELIMITER$\n[Building.GetInputOutputTooltip]"
  BUILDING_EMPLOYMENT_UNCAPPED_TOOLTIP: "#header [Building.GetName]#!\n$BUILDING_EMPLOYMENT_UNCAPPED$"
  BUILDING_EMPLOYMENT_TOOLTIP: "#header [Building.GetName]#!\n$BUILDING_EMPLOYMENT_CAPPED$"
  BUILDING_EMPLOYMENT_CAPPED: "Employment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#bold #v [Building.GetEmploymentPercentage|0%]#!#!)"
  BUILDING_EMPLOYMENT_UNCAPPED: "Employment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#bold #v [Building.GetEmploymentPercentage|0%]#!#!)"
  BUILDING_LEVEL: "[concept_building_level]"
  BUILDING_LEVEL_HEADER_TOOLTIP: "#header [concept_building_level]#!\n$TOOLTIP_DELIMITER$\nThe current $concept_building_level$."
  BUILDING_SIZE_TOOLTIP: "#header [Building.GetName]#!\nSize: [Building.GetExpansionLevel|v]"
  BUILDING_INFO_TOOLTIP: "$BUILDING_TOOLTIP_BASE_P1$\n[Building.GetTooltip]"
  BUILDING_TOOLTIP_BASE_P1: "#header [Building.GetName]#!"
  CASH_RESERVES_INFO: "[concept_cash_reserves]: #variable [Building.GetCurrentCashReserves|D]#! [GetTrendIcon(Building.GetCashReservesTrend)] / #maximum [Building.GetMaxCashReserves|k]#!"
  PRODUCTIVITY_INFO: "[concept_productivity]: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_PRODUCTIVITY,GraphTooltipProductivity @money![Building.GetAverageAnnualEarningsPerEmployeeFormatted|+]#!#! (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)"
  PRODUCTIVITY_INFO_LOWERCASE: "[concept_productivity]:\n$PRODUCTIVITY_INFO_NO_HEADER$"
  PRODUCTIVITY_INFO_NO_HEADER: "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_PRODUCTIVITY,GraphTooltipProductivity @money![Building.GetAverageAnnualEarningsPerEmployeeFormatted|+]#!#! (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)"
  BUILDING_CASH_RESERVES_TOOLTIP: "#header [concept_cash_reserves]#!\nValue: #variable [Building.GetCurrentCashReserves|D]#! [GetTrendIcon(Building.GetCashReservesTrend)] / #maximum [Building.GetMaxCashReserves|k]#!\n\n[concept_cash_reserves_desc]"
  BUILDING_CASH_RESERVES: "Cash Reserves: [Building.GetCurrentCashReserves|Dv] [GetTrendIcon(Building.GetCashReservesTrend)]"
  LOW_LEGITIMACY_GOVERNMENT_CONFIRMATION: "#header Illegitimate Government#!\nThis constellation has very low Legitimacy, are you sure you want to proceed?\n\n#title Effects:#!\n[GetLegitimacyLevel('legitimacy_level_illegitimate').GetEffects]"
  PRODUCTIVITY_SPAN_FORMAT: "@money!$MIN$ - @money!$MAX$"
  PRODUCTIVITY_SPAN_FORMAT_SAME: "@money!$MIN$"
  PRODUCTIVITY_SPAN_TOOLTIP: "#header [concept_productivity]#!\nThe [concept_productivity] in [BuildingType.GetName] in [GetPlayer.GetName] is [BuildingType.GetProductivitySpanDesc(GetPlayer.Self)]"
  EMPLOYMENT_BAR: "Employment: [Building.GetNoOfEmployed|1*v]"
  EARNINGS_PER_EMPLOYEE: "Earnings / Employee"
  WORLD_PROFITABILITY_HEADER: "$EARNINGS_PER_EMPLOYEE$ compared to all Buildings"
  BUILDING_PROFITABILITY_HEADER: "$EARNINGS_PER_EMPLOYEE$"
  BUILDING_PROFITABILITY_HEADER_TOOLTIP: "#header [concept_productivity]#!\n$TOOLTIP_DELIMITER$\nYearly average $EARNINGS_PER_EMPLOYEE$."
  BUILDING_PRODUCTIVITY_HEADER: "Yearly Avg. $EARNINGS_PER_EMPLOYEE$"
  GOVERNMENTAL_EXPENSES: "Governmental Expenses: #tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_GOVERNMENT_EXPENSES_DESC #N @money!-[Building.GetGovernmentExpenses|D-]#!#!#!"
  NOT_FULLY_EMPLOYED: "#header #red [Building.GetName] is unable to fully hire#!#!\n$TOOLTIP_DELIMITER$\nEmployment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#bold #v [Building.GetEmploymentPercentage|0%]#!#!)\n[Building.GetAllFailedHiresDesc]"
  NOT_HIRING: "#header #red [Building.GetName] is unable to hire!#!#!\n$TOOLTIP_DELIMITER$\nEmployment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#bold #v [Building.GetEmploymentPercentage|0%]#!#!)\n\nThis [concept_building] does not have the funds to hire anyone.\n\nCurrent Productivity: [Building.GetAverageAnnualEarningsPerEmployeeFormatted]"
  EMPLOYMENT_HINT: "\n\n@information! The [Concept('concept_building_wage', '$concept_building_wages$')] in the [Building.GetName] are based on its economic situation. In order to afford to attract more [Concept('concept_pop', '$concept_pops$')] to the Workforce its Weekly [concept_building_balance] should be improved. You can influence this by either making the [Concept('concept_good', '$concept_goods$')] it consumes cheaper, or by making the Goods it produces more expensive. This is done by increasing or decreasing supply and demand on the [Building.GetState.GetMarket.GetName]. You can guarantee that the Workforce is paid a competitive [concept_building_wage] by [Concept('concept_subsidies', '$concept_subsidizing$')] the building. This will keep it afloat by using [concept_money] from the [GetPlayer.GetAdjectiveNoFormatting] [concept_treasury], if necessary."
  INCOME_TAXES: "Taxes paid: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_TAXES_TOOLTIP #variable @money![Building.GetTaxationRevenue|D+=]#!#!#!"
  BUILDING_TOOLTIP_BASE_INFO: "Size: [Building.GetExpansionLevelBreakdownDesc][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int32(Building.GetNoOfEmployed, '(int32)0'), 'EMPLOYMENT_INFO', '' ))]"
  EMPLOYMENT_INFO: "Employment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#bold #v [Building.GetEmploymentPercentage|0%]#!#!)"
  BUILDING_TOOLTIP: "$BUILDING_TOOLTIP_BASE_INFO$[ConcatIfNeitherEmpty('\n', SelectLocalization( And(GreaterThan_int32(Building.GetNoOfEmployed, '(int32)0'), Not(Building.IsSubsistenceBuilding)), 'PRODUCTIVITY_INFO', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int32(Building.GetNoOfEmployed, '(int32)0'), 'CASH_RESERVES_INFO', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int32(Building.GetNoOfEmployed, '(int32)0'), 'INCOME_TAXES', '' ))][ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int32(Building.GetNoOfEmployed, '(int32)0'), 'BUILDING_AVERAGE_WAGE_FLIPPED', '' ))]"
  BUILDING_GOVERNMENT_TOOLTIP: "$BUILDING_TOOLTIP_BASE_INFO$[ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int32(Building.GetNoOfEmployed, '(int32)0'), 'INCOME_TAXES', '' ))]\n$GOVERNMENTAL_EXPENSES$[ConcatIfNeitherEmpty('\n', SelectLocalization( GreaterThan_int32(Building.GetNoOfEmployed, '(int32)0'), 'BUILDING_AVERAGE_WAGE_FLIPPED', '' ))]"
  DEBUG_BUILDING_TOOLTIP: "ID: #variable [Building.GetID]#!"
  EXPANSION_DESC: "$LEVEL|v$"
  EXPANSION_DESC_BUILDING: "#tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_LEVEL_TOOLTIP $LEVEL|v$#!#!"
  BUILDING_LEVEL_TOOLTIP: "[Building.GetSizeTooltip]"
  EXPANSION_DESC_QUEUE_STATE: "+#tooltippable #tooltip:[State.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE $IN_QUEUE$#!#!"
  EXPANSION_DESC_QUEUE_BUILDING: "+#tooltippable #tooltip:[Building.GetState.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE $IN_QUEUE$#!#!"
  EXPANSION_DESC_QUEUE_INVALID_STATE: "#red #tooltippable #tooltip:[State.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE +$IN_QUEUE$#!#!#!"
  EXPANSION_DESC_QUEUE_INVALID_BUILDING: "#red #tooltippable #tooltip:[Building.GetState.GetTooltipTag],CONSTRUCTION_QUEUE_IN_STATE +$IN_QUEUE$#!#!#!"
  CONSTRUCTION_QUEUE_IN_STATE: "Number of expansion levels for this [concept_building] either [concept_under_construction] or in the [concept_construction_queue] in [State.GetName]"
  EXPANSION_DESC_MAXIMUM: "/#maximum #tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_EXPANSION_LEVEL_BREAKDOWN_TOOLTIP $MAXIMUM$#!#!#!"
  URBAN_CAP_PER_LEVEL: "#variable #P +[GetDefine('NCountry', 'BASE_URBAN_CAPACITY')]#!#! $urban_capacity$"
  BATTALIONS_PER_LEVEL: "[Concept('concept_battalion', '$concept_battalions$')]: $UNIT_ICON$ #variable #P +$UNIT_COUNT$#!#! per Level"
  BATTALIONS_TOTAL: "[Concept('concept_battalion', '$concept_battalions$')]: $UNIT_ICON$ #variable #P +$UNIT_COUNT$#!#! Total"
  FLOTILLAS_PER_LEVEL: "[Concept('concept_flotilla','$concept_flotillas$')]: $UNIT_ICON$ #variable #P +$UNIT_COUNT$#!#! per Level"
  FLOTILLAS_TOTAL: "[Concept('concept_flotilla','$concept_flotillas$')]: $UNIT_ICON$ #variable #P +$UNIT_COUNT$#!#! Total"
  CANAL_TOOLTIP_DESC: "Allows passage between [PROVINCE.GetStateRegion.GetName] and [PROVINCE_OTHER.GetStateRegion.GetName]"
  GOV_EXPENSES_TITLE: "#title [concept_government_expenses]#!"
  INCOME_TAXES_TITLE: "#title Income Taxes#!"
  EMBARGO_GOODS: "Start Embargoing"
  UNEMBARGO_GOODS: "Stop Embargoing"
  ENCOURAGE_GOODS: "Encourage Consumption"
  UNENCOURAGE_GOODS: "End Encouragement"
  DISCOURAGE_GOODS: "Discourage Consumption"
  UNDISCOURAGE_GOODS: "End Discouragements"
  TAX_GOODS: "Add Consumption Tax"
  NO_GOODS_TO_TAX: "There are no goods on which you can collect [Concept('concept_consumption_tax', '$concept_consumption_taxes$')]"
  UNTAX_GOODS: "Remove Consumption Tax"
  SUBSIDIZE_SHORT: "Subsi:"
  TAX_WASTE: "[concept_tax_waste]: #v $VAL|-%$#!"
  RADICAL_IG_ITEM: "[InterestGroup.GetName]: #tooltippable #tooltip:[InterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [InterestGroup.GetApprovalRating] #bold ([InterestGroup.GetApprovalValue|+=])#!#!#!\n"
  BUILDING_STATUS: "Status:"
  BUILDING_ACTIVE: "#v Active#!"
  BUILDING_INACTIVE: "Inactive"
  BUILDING_INACTIVE_CONSUMPTION_EMPTY_STATE: "No [concept_building] Consumption since this $concept_building$ is inactive."
  LOCAL_PRICE_CONDENSED: "Local Price: #variable @money![ProductionInterfaceInfo.GetLocalPrice|1]#!"
  STATE_CONTROLLED_BY: "#bold #v [State.GetName]#!#! is controlled by #bold #v [State.GetController.GetName]#!#!"
  STATE_INVADED_BY: "#bold #v [State.GetInvader.GetName]#!#! has control over #v [State.GetControlledProvinceFractionFor(State.GetInvader)|%]#! of #bold #v [State.GetName]#!#!"
  STATE_CONTESTED: "Control of #bold #v [State.GetName]#!#! is contested!"
  CHANGE_PRODUCTION_METHOD_TOOLTIP: "#header Change [ChangeProductionMethodMenuItem.GetProductionMethodGroup.GetName] [concept_production_method] to [ProductionMethod.GetName]#!\n[ChangeProductionMethodMenuItem.GetTooltip(GetPlayer.Self)]"
  CHANGE_FROM_CURRENT_PRODUCTION_METHOD_TOOLTIP: "#header [ProductionMethodGroup.GetName] [concept_production_method]#!\nCurrent: [ProductionMethod.GetName]\n[ProductionMethod.GetTooltipForBuilding(GetPlayer.Self, Building.Self)]\n\n#instruction #bold Left-click#! to see available options#!"
  CHANGE_PRODUCTION_METHOD_IMPACT_ON_BALANCE: "Predicted impact on Weekly Balance with full employment after [concept_goods_substitution]: #v @money!$VAL|D+=$#!"
  CHANGE_PRODUCTION_NO_EFFECT: "This Production Method currently has no effects"
  BULK_CHANGE: "#header Switch [ProductionMethodGroup.GetName] [concept_production_method] for all [BuildingType.GetName]#!"
  BULK_CHANGE_MIXED: "$BULK_CHANGE$\n[BuildingType.GetName] in [GetPlayer.GetNameNoFlag] vary in the [ProductionMethodGroup.GetName] [Concept('concept_production_method','$concept_production_methods$')] they use"
  BULK_CHANGE_SAME: "$BULK_CHANGE$\nAll [BuildingType.GetName] currently has [ProductionMethod.GetName]\n$TOOLTIP$"
  SHOW_PER_LEVEL_VALUES: "Show per Level values"
  PER_LEVEL_VALUES_NESTED_TOOLTIP: "#tooltippable #tooltip:[GetRawTextTooltipTag('$PER_LEVEL_VALUES_OUTPUT$')] [AddTextIf(Not(StringIsEmpty('$PER_LEVEL_VALUES_OUTPUT$')), '$SHOW_PER_LEVEL_VALUES$')]#!#!"
  PRODUCTION_METHOD_TOOLTIP_FORMAT: "[ConcatIfNeitherEmpty('$PREDICTION$', '\n')][AddTextIf(Not(StringIsEmpty('$TOTAL_VALUES_OUTPUT$')),'$TOOLTIP_DELIMITER$\n')][ConcatIfNeitherEmpty('$TIMED_MODIFIERS$','\n\n')][ConcatIfNeitherEmpty('$TOTAL_VALUES_OUTPUT$','\n\n')]$PER_LEVEL_VALUES_NESTED_TOOLTIP$"
  PRODUCTION_METHOD_WITH_REQUIREMENTS_TOOLTIP_FORMAT: "[ConcatIfNeitherEmpty('$PREDICTION$', '\n')][AddTextIf(Not(StringIsEmpty('$TOTAL_VALUES_OUTPUT$')),'$TOOLTIP_DELIMITER$\n')][ConcatIfNeitherEmpty('$TIMED_MODIFIERS$','\n')][ConcatIfNeitherEmpty('$TOTAL_VALUES_OUTPUT$','\n\n')]$PER_LEVEL_VALUES_NESTED_TOOLTIP$[AddTextIf(Not(StringIsEmpty('$EMPTY_REQUIREMENTS$')), '\n$TOOLTIP_REQUIREMENTS_ANY$\n')]$REQUIREMENTS$[AddTextIf(Not(StringIsEmpty('$EMPTY_REQUIREMENTS$')), '\n')]$BUILDING_TYPE_INFO$"
  PER_LEVEL_VALUES_ONLY: "$VALUES$"
  COMPACT_PM_DESC_OUTPUT: " $ICON$#v $VAL|+^$#! "
  COMPACT_PM_DESC_INPUT: " $ICON$#v $VAL|-^$#! "
  COMPACT_PM_DESC_OUTPUT_MODIFIERS: "$NUM|v$ Modifiers"
  COMPACT_PM_DESC_MORE_EMPLOYEES: " #v $ICON$ $VAL|D$#! "
  COMPACT_PM_DESC_LESS_EMPLOYEES: " #v $ICON$ $VAL|=D$#! "
  COMPACT_PM_GOODS_DESC_FORMAT: "[AddTextIf(StringIsEmpty('$INPUT_GOODS$'), '#title No Goods #!')]$INPUT_GOODS$[ConcatIfNeitherEmpty(' @turns_into! ','$OUTPUT_GOODS$')]"
  COMPACT_PM_EMPLOYMENT_DESC_FORMAT: "$MORE_EMPLOYEES$[ConcatIfNeitherEmpty(' ','$LESS_EMPLOYEES$')]#!"
  MARKET_PARTICIPANT_SHARE: "#v [Country.GetName]#! has a [MarketPanel.GetMarket.GetMarketSharePercentageFor(Country.Self)|v%] [concept_market_share] in [MarketPanel.GetMarket.GetName]\n$TOOLTIP_DELIMITER$\n"
  COIN_01_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin1!#!#! #bold Very Much Cheaper#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_02_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin2!#!#! #bold Much Cheaper#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_03_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin3!#!#! #bold Cheap#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_04_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin4!#!#! #bold Cheap#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_05_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin5!#!#! #bold Slightly Cheaper#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_06_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin6!#!#! #bold Slightly Cheaper#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_07_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin7!#!#! #bold About the same price#! as [concept_base_price] ($VAL|v=1%$)"
  COIN_08_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin8!#!#! #bold Slightly More Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_09_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin9!#!#! #bold Slightly More Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_10_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin10!#!#! #bold Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_11_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin11!#!#! #bold Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_12_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin12!#!#! #bold Much More Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_13_BASE: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin13!#!#! #bold Much More Expensive#! compared to [concept_base_price] ($VAL|v=1%$)"
  COIN_01_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin1!#!#!  #bold Very Much Cheaper#!"
  COIN_02_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin2!#!#!  #bold Much Cheaper#!"
  COIN_03_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin3!#!#!  #bold Cheap#!"
  COIN_04_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin4!#!#!  #bold Cheap#!"
  COIN_05_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin5!#!#!  #bold Slightly Cheaper#!"
  COIN_06_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin6!#!#!  #bold Slightly Cheaper#!"
  COIN_07_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin7!#!#!  #bold Roughly Base Price#!"
  COIN_08_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin8!#!#!  #bold Slightly More Expensive#!"
  COIN_09_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin9!#!#!  #bold Slightly More Expensive#!"
  COIN_10_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin10!#!#!  #bold Expensive#!"
  COIN_11_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin11!#!#!  #bold Expensive#!"
  COIN_12_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin12!#!#!  #bold Much More Expensive#!"
  COIN_13_BASE_SHORT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP @coin13!#!#!  #bold Much More Expensive#!"
  COIN_STACK_ICON_FORMAT: "#tooltippable #tooltip:COIN_STACK_TOOLTIP $ICON$#!#!"
  COIN_STACK_TOOLTIP: "The Price icon shows how expensive (or cheap) a [concept_good] is relative to the [concept_base_price] of that [concept_good]. These icons range from Very Cheap (@coin1!) to Base Price (@coin7!) to Very Expensive (@coin13!)"
  GOODS_STATE_PRICE_AGAINST_BASE_PRICE_TOOLTIP: "#header [Goods.GetStatePriceLabel] compared to [concept_base_price]#!\n[Goods.GetCompareDescAgainstBasePrice( Goods.GetStatePrice )]\n$TOOLTIP_DELIMITER$\n[Goods.GetStatePriceLabel]: #variable @money![Goods.GetStatePrice|1]#!\n[concept_base_price]: #bold #v @money![Goods.GetBasePrice|1]#!#!"
  GOODS_MARKET_PRICE_AGAINST_BASE_PRICE_TOOLTIP: "#header [Goods.GetMarketPriceLabel] compared to [concept_base_price]#!\n[Goods.GetCompareDescAgainstBasePrice( Goods.GetMarketPrice )]\n$TOOLTIP_DELIMITER$\n[Goods.GetMarketPriceLabel]: #variable @money![Goods.GetMarketPrice|1]#!\n[concept_base_price]: #bold #v @money![Goods.GetBasePrice|1]#!#!"
  BUY_ORDERS: "[concept_buy_orders]"
  SELL_ORDERS: "[concept_sell_orders]"
  PRODUCTION: "[concept_good_production]"
  CONSUMPTION: "[concept_good_consumption]"
  BATTALIONS: "[Concept('concept_battalion', '$concept_battalions$')]"
  FLOTILLAS: "[Concept('concept_flotilla','$concept_flotillas$')]"
  GOOD_PRICE_BASED_ON_LAST_TICK_WARNING: "#lore These values are updated at least once per week.#!"
  GOODS_PRICE_DESC_FIXED: "[GOODS.GetTextIcon][GOODS.GetName] has a fixed price of @money![GOODS.GetPrice|1v] that will never change."
  GOODS_PRICE_DESC_IN_MARKET: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] in [Goods.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\n$DATA_GOODS_NAME_TOOLTIP$"
  GOODS_PRICE_DESC_IN_MARKET_PROGRESSBAR: "#header @money![Goods.GetMarketPrice|0v] [Goods.GetCompareIconAgainstBasePrice( Goods.GetMarketPrice )] ([Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=-])#!"
  GOODS_PRICE_DESC_IN_STATE: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] in [State.GetName]#!\nLocal price: @money![Goods.GetStatePrice|1v] ([Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )])\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip] [concept_sell_orders]\n[Goods.GetStateConsumptionWithTooltip] [concept_buy_orders]\n\n#header Price Setting#!\n[Goods.GetMarketAccess|%v1] from [concept_market_access] ([Goods.GetMarketPriceWithTooltip] in [Market.GetName])\n[Goods.GetLocalPriceShare|%v1] from Production and Consumption in [State.GetName]\n\n[concept_base_price]: @money![Goods.GetBasePrice|1v]\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
  GOODS_PRICE_DESC_IN_ISOLATED_MARKET: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName] in [Goods.GetState.GetName]#!\nLocal price: @money![Goods.GetStatePrice|1v] ([Goods.GetCompareIconAgainstBasePrice( Goods.GetStatePrice )])\n$TOOLTIP_DELIMITER$\n[Goods.GetStateProductionWithTooltip] [concept_sell_orders]\n[Goods.GetStateConsumptionWithTooltip] [concept_buy_orders]\n\n[concept_base_price]: @money![Goods.GetBasePrice|1v]\n\n$GOOD_PRICE_BASED_ON_LAST_TICK_WARNING$"
  GOODS_PRICE_MARKET_LOCAL_PRICE_LINK: "See #tooltippable #tooltip:[GOODS.GetTooltipTag],GOODS_PRICE_MARKET_LOCAL_PRICE_BREAKDOWN Local Prices#!#! in [GOODS.GetMarket.GetName]"
  GOODS_PRICE_MARKET_LOCAL_PRICE_BREAKDOWN: "[Goods.GetLocalPricesDesc]"
  GOODS_PRICE_MARKET_LOCAL_PRICE_HEADER: "#header Local Prices of [Goods.GetTextIcon][Nbsp][Goods.GetName] in [Goods.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_MARKET_LOCAL_PRICE_ITEM: "[State.GetName]: [Goods.GetStatePriceWithTooltip]"
  GOODS_PRODUCTION_VALUE: "#tooltippable #tooltip:$TAG$,$BREAKDOWN_CONTEXT$ $VALUE|1v$#!#!"
  GOODS_CONSUMPTION_VALUE: "#tooltippable #tooltip:$TAG$,$BREAKDOWN_CONTEXT$ $VALUE|1v$#!#!"
  GOODS_MARKET_PRODUCTION_BREAKDOWN: "[Goods.GetMarketProductionBreakdown]"
  GOODS_MARKET_CONSUMPTION_BREAKDOWN: "[Goods.GetMarketConsumptionBreakdown]"
  GOODS_STATE_PRODUCTION_BREAKDOWN: "[Goods.GetStateProductionBreakdown]"
  GOODS_STATE_CONSUMPTION_BREAKDOWN: "[Goods.GetStateConsumptionBreakdown]"
  GOODS_MARKET_SELL_ORDERS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_MARKET_SELL_ORDERS_BREAKDOWN $VALUE|D$#!#!"
  GOODS_MARKET_BUY_ORDERS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_MARKET_BUY_ORDERS_BREAKDOWN $VALUE|D$#!#!"
  GOODS_MARKET_SELL_ORDERS_BREAKDOWN: "[Goods.GetMarketSellOrdersBreakdown]"
  GOODS_MARKET_BUY_ORDERS_BREAKDOWN: "[Goods.GetMarketBuyOrdersBreakdown]"
  GOODS_BASE_IMPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_BASE_IMPORTS_BREAKDOWN $VALUE|D$#!#!"
  GOODS_BASE_EXPORTS_VALUE: "#tooltippable #tooltip:$TAG$,GOODS_BASE_EXPORTS_BREAKDOWN $VALUE|D$#!#!"
  GOODS_BASE_IMPORTS_BREAKDOWN: "[Goods.GetBaseImportBreakdown]"
  GOODS_BASE_EXPORTS_BREAKDOWN: "[Goods.GetBaseExportBreakdown]"
  URBAN_BUILDINGS: "Urban"
  RURAL_BUILDINGS: "Rural"
  DEVELOPMENT_BUILDINGS: "Development"
  GOODS_PRICE_MARKET_PRODUCTION_HEADER: "#header Production of [GOODS.GetName] in [MARKET.GetName]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_MARKET_CONSUMPTION_HEADER: "#header Consumption of [GOODS.GetName] in [MARKET.GetName]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_MARKET_PRODUCTION_ITEM: "[State.GetName]: #tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_PRODUCTION_BREAKDOWN [Goods.GetStateProduction|D]#!#!"
  GOODS_PRICE_MARKET_CONSUMPTION_ITEM: "[State.GetName]: #tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_CONSUMPTION_BREAKDOWN [Goods.GetStateConsumption|D]#!#!"
  GOODS_PRICE_MARKET_SELL_ORDER_HEADER: "#header [concept_sell_orders] of [GOODS.GetName] in [MARKET.GetName]: $ORDERS|vD$#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_MARKET_BUY_ORDER_HEADER: "#header [concept_buy_orders] of [GOODS.GetName] in [MARKET.GetName]: $ORDERS|vD$#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_MARKET_SELL_ORDER_ITEM: "[Goods.GetAccessAdjustedStateSell|Dv] in [State.GetName] (#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_PRODUCTION_BREAKDOWN [Goods.GetStateProduction|D]#!#! Production × [State.GetMarketAccess|v0%] [concept_market_access])"
  GOODS_PRICE_MARKET_BUY_ORDER_ITEM: "[Goods.GetAccessAdjustedStateBuy|Dv] in [State.GetName] (#tooltippable #tooltip:[Goods.GetTooltipTag],GOODS_STATE_CONSUMPTION_BREAKDOWN [Goods.GetStateConsumption|D]#!#! [concept_good_consumption] × [State.GetMarketAccess|v0%] [concept_market_access])"
  GOODS_PRICE_MARKET_IMPORT_EXPORT: "From Trade Routes: $VAL|=vD$"

  GOODS_PRICE_STATE_PRODUCTION_HEADER: "#header Production of [GOODS.GetName] in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_STATE_CONSUMPTION_HEADER: "#header Consumption of [GOODS.GetName] in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_STATE_STATE_HEADER: "#bold In [STATE.GetName]#!"
  GOODS_PRICE_STATE_BUILDING_PRODUCTION_ITEM: "[Building.GetName]: [BUILDING.GetProduction(GOODS.Self)|0v]"
  GOODS_PRICE_STATE_BUILDING_CONSUMPTION_ITEM: "[BUILDING.GetName]: [BUILDING.GetConsumption(GOODS.Self)|0v]"
  GOODS_PRICE_STATE_POPS_PRODUCTION_ITEM: "Pops: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag],GOODS_PRICE_STATE_POPTYPE_PRODUCTION_BREAKDOWN $VALUE|0$#!#!"
  GOODS_PRICE_STATE_POPS_CONSUMPTION_ITEM: "Pops: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag],GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_BREAKDOWN $VALUE|0$#!#!"
  GOODS_PRICE_STATE_POPTYPE_PRODUCTION_BREAKDOWN: "[Goods.GetStatePopTypeProductionBreakdown(State.Self)]"
  GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_BREAKDOWN: "[Goods.GetStatePopTypeDemandBreakdown(State.Self)]"
  GOODS_PRICE_STATE_POPTYPE_PRODUCTION_HEADER: "#header Production of [GOODS.GetName] in [STATE.GetName] by [concept_profession]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_HEADER: "#header Consumption of [GOODS.GetName] in [STATE.GetName] by [concept_profession]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_STATE_POPTYPE_PRODUCTION_POPTYPE_ITEM: "[POP_TYPE.GetName]: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag]|[POP_TYPE.GetTooltipTag],GOODS_PRICE_STATE_POP_PRODUCTION_BREAKDOWN $VALUE|0$#!#!"
  GOODS_PRICE_STATE_POPTYPE_CONSUMPTION_POPTYPE_ITEM: "[POP_TYPE.GetName]: #tooltippable #tooltip:[GOODS.GetTooltipTag]|[STATE.GetTooltipTag]|[POP_TYPE.GetTooltipTag],GOODS_PRICE_STATE_POP_CONSUMPTION_BREAKDOWN $VALUE|0$#!#!"
  GOODS_PRICE_STATE_POP_PRODUCTION_BREAKDOWN: "[Goods.GetStatePopProductionBreakdown(State.Self, PopType.Self)]"
  GOODS_PRICE_STATE_POP_CONSUMPTION_BREAKDOWN: "[Goods.GetStatePopDemandBreakdown(State.Self, PopType.Self)]"
  GOODS_PRICE_STATE_POP_PRODUCTION_HEADER: "#header Production of [GOODS.GetName] in [STATE.GetName] by [POP_TYPE.GetName]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_STATE_POP_CONSUMPTION_HEADER: "#header Consumption of [GOODS.GetName] in [STATE.GetName] by [POP_TYPE.GetName]#!\n$TOOLTIP_DELIMITER$"
  GOODS_PRICE_STATE_POP_PRODUCTION_POPTYPE_ITEM: "[Pop.GetName] in [POP.GetWorksAt]: $VALUE|0v$"
  GOODS_PRICE_STATE_POP_CONSUMPTION_POPTYPE_ITEM: "[Pop.GetName] in [POP.GetWorksAt]: $VALUE|0v$"
  GOOD_GOOD_HEADER_TOOLTIP: "#header Good Name#!\n$TOOLTIP_DELIMITER$\n#instruction Click to sort#!"
  GOOD_SELL_HEADER_TOOLTIP: "#header [concept_sell_orders]#!\n$TOOLTIP_DELIMITER$\n#instruction Click to sort#!"
  GOOD_BUY_HEADER_TOOLTIP: "#header [concept_buy_orders]#!\n$TOOLTIP_DELIMITER$\n#instruction Click to sort#!"
  GOOD_DELTA_WP_HEADER_TOOLTIP: "#header Price compared to [concept_base_price]#!\n$TOOLTIP_DELIMITER$\n#instruction Click to sort#!"
  MARKET_MARKET_BREAKDOWN: "#bold #v [Market.GetName]#!#!\nControlled by #bold #v [Market.GetOwner.GetName]#!#!\n$TOOLTIP_DELIMITER$\n#title Trade Power#!#!"
  EXPORTING: "Exporting"
  IMPORTING: "Importing"
  STATE_MARKET: "#header [State.GetName]#! is a part of the #header [State.GetMarket.GetName]#!"
  GOODS_BUILDING_TYPE_BUY_ORDERS: "[BuildingType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
  GOODS_BUILDING_TYPE_SELL_ORDERS: "[BuildingType.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
  GOODS_BUILDING_TYPE_BUY_ORDERS_BREAKDOWN: "#header [concept_buy_orders] of $GOODS_NAME$ from [BuildingType.GetName] in [Market.GetName]: $ORDERS|=vD$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  GOODS_BUILDING_TYPE_SELL_ORDERS_BREAKDOWN: "#header [concept_sell_orders] of $GOODS_NAME$ from [BuildingType.GetName] in [Market.GetName]: $ORDERS|=vD$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  GOODS_SLAVE_CONSUMPTION_MARKET_ORDERS: "Purchased for $slaves$: $ORDERS|=vD$"
  GOODS_BUILDING_BUY_ORDERS: "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
  GOODS_BUILDING_SELL_ORDERS: "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
  GOODS_BUILDING_BUY_ORDERS_BREAKDOWN: "#header [concept_buy_orders] of $GOODS_NAME$ from [Building.GetName] in [Building.GetState.GetName]: $ORDERS|=vD$#!\n$TOOLTIP_DELIMITER$\nConsumption of $BASE_AMOUNT|vD$ $GOODS_NAME$ modified by the local [concept_market_access] of $MARKET_ACCESS|%v$"
  GOODS_BUILDING_SELL_ORDERS_BREAKDOWN: "#header [concept_sell_orders] of $GOODS_NAME$ from [Building.GetName] in [Building.GetState.GetName]: $ORDERS|=vD$#!\n$TOOLTIP_DELIMITER$\nProduction of $BASE_AMOUNT|vD$ $GOODS_NAME$ modified by the local [concept_market_access] of $MARKET_ACCESS|%v$"
  GOODS_POP_CONSUMPTION_MARKET_ORDERS: "[concept_pop] Consumption: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
  GOODS_POP_CONSUMPTION_MARKET_ORDERS_HEADER: "#header [concept_buy_orders] of $GOODS_NAME$ from [concept_pop] Consumption in [Market.GetName]: $ORDERS|=vD$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  GOODS_POP_TYPE_CONSUMPTION_MARKET_ORDERS: "[PopType.GetName]: $ORDERS|=vD$"
  GOODS_TRADE_ROUTE_MARKET_ORDERS: "[Concept('concept_trade_route', '$concept_trade_routes$')]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $ORDERS|=vD$#!#!"
  GOODS_TRADE_ROUTE_BUY_ORDERS_HEADER: "#header [concept_buy_orders] of $GOODS_NAME$ from [Concept('concept_trade_route', '$concept_trade_routes$')] in [Market.GetName]: $ORDERS|=vD$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  GOODS_TRADE_ROUTE_SELL_ORDERS_HEADER: "#header [concept_sell_orders] of $GOODS_NAME$ from [Concept('concept_trade_route', '$concept_trade_routes$')] in [Market.GetName]: $ORDERS|=vD$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  GOODS_TRADE_ROUTE_BUY_ORDERS: "[TradeRoute.GetName]: $ORDERS|=vD$"
  GOODS_TRADE_ROUTE_SELL_ORDERS: "[TradeRoute.GetName]: $ORDERS|=vD$"

  PRODUCES: "#title Produces#!"
  USES: "#title Uses#!"
  EFFICIENCY: "#title Efficiency Goods#! ([Building.GetEfficiencyBonus|=+0%] Efficiency bonus)"
  BALANCE: "Balance"
  DEFICIT_OF: "#title Deficit of:#!"
  SUPPORTS: "#title Supports:#!"
  OPPOSES: "#title Opposes:#!"
  CLOUT_HEADER: "#title [concept_clout]#!"
  IG_STATUS_HEADER: "#title [concept_approval]#!"
  IDEOLOGY_HEADER: "#title Ideologies#!"
  RESOURCES_HEADER: "#title Resources:#!"
  POPULATION_HEADER: "#title Population#!"
  BUILDINGS_HEADER: "#title Buildings:#!"
  PRODUCTION_HEADER: "#title Economy#!"
  SPLIT_STATE_HEADER: "This is a #bold Split State#!"
  INCORPORATED_STATE_HEADER: "This is an #bold [concept_incorporated_state]#!"
  UNINCORPORATED_STATE_HEADER: "This is an #bold [concept_unincorporated_state]#!"
  STATE_DECENTRALIZED: "This #bold State#! is owned by a #bold $decentralized_nation$#!."
  PRODUCTION_AMOUNT_TOOLTIP: "Amount (Percentage of Local Market Production)"
  STATE_DEVASTATION: "[concept_devastation]\n$STATE_DEVASTATION_CONDENSED$"
  TOOLTIP_STATE_DEVASTATION: "#bold #v [concept_devastation]#!#!\nCurrent Devastation: #b [StateRegion.GetDevastationLevel|%R2]#!\nDaily Change: #b [StateRegion.CalcDevastationDailyChange|%-2]#!\n$TOOLTIP_DELIMITER$\n[StateRegion.GetDevastationEffects]"
  STATE_TURMOIL: "[concept_turmoil]\n$STATE_TURMOIL_CONDENSED$"
  TOOLTIP_STATE_TURMOIL: "#bold #v [concept_turmoil]#!#!\n[concept_turmoil] from [concept_radical] [Concept('concept_pop', '$concept_pops$')]: #b [State.CalcTurmoil|%2-]#!\n$TOOLTIP_DELIMITER$\n[State.GetTurmoilEffects]"
  STATE_TURMOIL_EFFECTS_MULT_DESC: "Effects of [concept_turmoil] multiplied by $MULT|%=-$ due to:\n#b $MODIFIER_NAME$:#!\n$DETAILS$"
  TOOLTIP_SPLIT_STATE: "#bold #v [concept_split_state]#!#!\n$TOOLTIP_DELIMITER$\n#title States in [State.GetStateRegion.GetName] ([concept_state_region])#!\n[State.GetStateRegion.GetStatesDesc]\n[concept_split_state_desc]"
  TOOLTIP_INCORPORATED_STATE: "#bold #v [concept_incorporated_state]#!"
  TOOLTIP_CAPITAL_STATE_HEADER: "(#header [concept_capital_state]#!)"
  TOOLTIP_MARKET_CAPITAL_STATE: "#HEADER [concept_market_capital]#!\n[State.GetName] is the [concept_market_capital] of [State.GetMarket.GetName]\n[State.GetMarketCapitalEffectsDesc]\n$TOOLTIP_DELIMITER$\n[State.GetMarketAccessDesc]"
  TOOLTIP_CAPITAL_STATE: "#HEADER [concept_capital_state]#!\n[State.GetName] is the [concept_capital_state] of [State.GetOwner.GetName]\n$TOOLTIP_DELIMITER$\n[State.GetCapitalEffectsDesc]"
  TOOLTIP_TREATY_PORT: "#bold #v [concept_treaty_port]#!#!\n$TOOLTIP_DELIMITER$\n# [State.GetName] is a [concept_treaty_port] for:\n[State.GetTreatyPortMarkets]"
  TOOLTIP_INACTIVE_TREATY_PORT: "#header Inactive [concept_treaty_port]#!\n$TOOLTIP_DELIMITER$\n[State.GetName] is a potential [concept_treaty_port] that is currently inactive due to:\n[State.GetTreatyPortNonFunctioningDesc]"
  TOOLTIP_TREATY_PORT_MARKET_ENTRY: "$TAB$[Market.GetName]"
  TOOLTIP_UNINCORPORATED_STATE_NOT_VALID: "#bold #v [concept_unincorporated_state]#!#!\n[GetDesc( State.IncorporateState )]\n$TOOLTIP_DELIMITER$\n$concept_unincorporated_state_desc$"
  TOOLTIP_UNINCORPORATED_STATE_VALID: "#bold [concept_unincorporated_state]#!\n#instruction Click to [Concept('concept_incorporated_state', '$concept_incorporate$')][State.GetName]#!\nCost: [State.PredictBureaucracyCost|1v] @bur![Nbsp][concept_bureaucracy]\n$TOOLTIP_DELIMITER$\n$TOOLTIP_UNINCORPORATED_STATE_INSTITUTIONS_EFFECT$\n$TOOLTIP_DELIMITER$\n$concept_unincorporated_state_desc$"
  TOOLTIP_INCORPORATED_STATE_VALID: "#bold [concept_incorporated_state]#!\n[State.GetCountry.GetName] considers [State.GetName] an [concept_incorporated_state]\n$TOOLTIP_DELIMITER$\n$TOOLTIP_INCORPORATED_STATE_INSTITUTIONS_EFFECT$\n$TOOLTIP_DELIMITER$\n$STATE_BUR_BREAKDOWN$"
  STATE_BUR_BREAKDOWN: "The total cost of #v @bur![State.GetBureaucracyCost|1=-]#! is due to:\n$TAB$Base Cost: [State.GetBaseBureaucracyCostRaw|1=-]\n$TAB$[concept_institution] Cost: #tooltippable #tooltip:[State.GetCountry.GetTooltipTag],INSTITUTION_BUR_FACTOR_BREAKDOWN #v [State.CalcPopInstitutionBureaucracyCost|1=-]#!#!#!\n$TAB$[State.GetPopulationSize|Dv] [Concept('concept_pop','$concept_population$')] Cost: #v [State.GetBasePopBureaucracyCostRaw|1=-]#!"
  STATE_BUR_TOOLTIP: "#header [concept_bureaucracy] Cost for [State.GetName]#!\n$STATE_BUR_BREAKDOWN$"
  TOOLTIP_UNINCORPORATED_STATE_INSTITUTIONS_EFFECT: "[State.GetOwner.GetAdjectiveNoFormatting] [Concept('concept_institution', '$concept_institutions$')] have no effect on [State.GetName] because it's an [concept_unincorporated_state].\n[Concept('concept_incorporated_state', '$concept_incorporating$')] [State.GetName] would have the following effects:\n[State.GetOwner.GetInstitutionsSummary]"
  TOOLTIP_INCORPORATED_STATE_INSTITUTIONS_EFFECT: "The effects of [State.GetName] being an [concept_incorporated_state] are the following:\n[State.GetOwner.GetInstitutionsSummary]"
  INSTITUTION_BUR_FACTOR_BREAKDOWN: "[Country.GetInstitutionInvestmentBureaucracyFactorDesc]"

  TREATY_PORT_INACTIVE_COUNTRY_RANK: "@simple_box! [COUNTRY.GetAdjective] [concept_rank] must be higher than [TARGET_COUNTRY.GetAdjective] [concept_rank] of [TARGET_COUNTRY.GetRank]"
  TREATY_PORT_INACTIVE_OCCUPIED: "@simple_box! [State.GetName] must not be occupied by a hostile [concept_country]"
  TREATY_PORT_INACTIVE_ISOLATED: "@simple_box! [State.GetName] must not be isolated from [Market.GetName]"
  INCORPORATE_STATE_COST: "Cost: $COST|1v$ @bur![Nbsp][concept_bureaucracy]"

  TOOLTIP_INCORPORATE_STATE: "#header Incorporate State#!\n[State.GetBureaucracyCostDesc]\n$TOOLTIP_DELIMITER$\n[SelectLocalization(StringIsEmpty(GetDesc(State.IncorporateState)), 'STATE_INCORPORATION_TIME', 'STATE_INCORPORATION_ERROR')]"
  STATE_INCORPORATION_TIME: "[State.GetIncorporationTimeDesc]"
  STATE_INCORPORATION_ERROR: "[GetDesc(State.IncorporateState)]"
  TOOLTIP_CANCEL_INCORPORATION: "#header Cancel Incorporation#!\nRefund: [State.PredictBureaucracyCost|1v] @bur![Nbsp][concept_bureaucracy]\n\n@warning! #bold [State.GetIncorporationProgress||v%0] incorporation progress will be lost!#!"
  TOOLTIP_INCORPORATING_STATE: "#header State is being [Concept('concept_incorporated_state','$concept_incorporated$')]#!\n$TOOLTIP_DELIMITER$\nTime remaining: [State.GetIncorporationTimeLeft]\n\n[State.GetIncorporationTimeDesc]\n\n[State.GetIncorporationPartialEffectsDesc]\n$TOOLTIP_DELIMITER$\n[concept_unincorporated_state_desc]"
  INCORPORATION_PARTIAL_EFFECTS: "Due to being [State.GetIncorporationProgress|v%0] [Concept('concept_incorporated_state','$concept_incorporated$')], [State.GetName] is subject to the following effects:\n[Modifier.GetDesc]"
  PARTIAL_INCORPORATION_TAXATION_MODIFIER: "Not fully [Concept('concept_incorporated_state','$concept_incorporated$')]"
  INCORPORATING: "[Concept('concept_incorporated_state','$concept_incorporating$')] ([State.GetIncorporationProgress|v%0])"
  INCORPORATE: "[Concept('concept_incorporated_state','$concept_incorporate$')] @bur![State.PredictBureaucracyCost|1v]"
  INCORPORATION_TIME_SAME_CULTURE: "It takes $YEARS|v0$ years in total to [Concept('concept_incorporated_state','$concept_incorporate$')] [State.GetName] since it is a [concept_homeland] of [State.GetOwner.GetName] due to its [Culture.GetName] [concept_culture]."
  INCORPORATION_TIME_SAME_HERITAGE: "It takes $YEARS|v0$ years in total to [Concept('concept_incorporated_state','$concept_incorporate$')] [State.GetName] since it is a [concept_homeland] of the [Culture.GetName] [concept_culture], which shares the [concept_cultural_heritage_trait] [DiscriminationTrait.GetName] with another $concept_culture$ in [State.GetOwner.GetName]."
  INCORPORATION_TIME_SAME_TRAIT: "It takes $YEARS|v0$ years in total to [Concept('concept_incorporated_state','$concept_incorporate$')] [State.GetName] since it is a [concept_homeland] of the [Culture.GetName] [concept_culture], which shares the [concept_cultural_trait] [DiscriminationTrait.GetName] with another $concept_culture$ in [State.GetOwner.GetName]."
  INCORPORATION_TIME_NO_MATCH: "It takes $YEARS|v0$ years in total to [Concept('concept_incorporated_state','$concept_incorporate$')] [State.GetName] since its [Concept('concept_homeland','$concept_homelands$')] have nothing in common with any $concept_cultures$ in [State.GetOwner.GetName]."
  TOOLTIP_COLONY_STATE_NOT_VALID: "#bold #v $state_type_colony$#!#!\n$TOOLTIP_DELIMITER$\n[GetDesc( State.IncorporateState )]"
  TOOLTIP_COLONY_STATE_VALID: "#bold #v $state_type_colony$#!#!\n$TOOLTIP_DELIMITER$\nClick to incorporate this state ([State.PredictBureaucracyCost|1] @bur![Nbsp][concept_bureaucracy])"
  TOOLTIP_STATE_DECENTRALIZED: "#HEADER $decentralized_nation$#!\n$TOOLTIP_DELIMITER$\n[concept_decentralized_nation_desc]"
  TOOLTIP_HOMELANDS: "#title [Concept('concept_homeland', '$concept_homelands$')]#!\n[State.GetHomelandsDesc]"
  TOOLTIP_CLAIMS: "#title [Concept('concept_claim', '$concept_claims$')]#!\n[State.GetClaimsDesc]"
  TOOLTIP_ARABLE_LAND: "#title #v [concept_arable_land]#!#!\n$TOOLTIP_DELIMITER$\nUnexploited levels: #v [State.GetNumFreeArableLand]#!\nExploited levels: #v [State.GetNumUsedArableLand]#!\nMaximum levels: #v [State.GetArableLandCapacity]#!\n\n[concept_arable_land_desc]"
  TOOLTIP_STATE_MODIFIERS: "#title State Modifiers#!\n[State.GetTimedModifiersBreakdown]"
  TOOLTIP_STATE_MODIFIER_ENTRY: "$NAME$:"
  TOOLTIP_STATE_MODIFIER_ENTRY_TIME: "($DATE_STR|v$)"
  TOOLTIP_OCCUPATION_EFFECT_PRODUCTION_PENALTY: "#variable -$FACTOR$#! Production output"
  TOOLTIP_OCCUPATION_EFFECT_MARKET_TAKEOVER: "#variable [COUNTRY.GetName]#! May relink links and what not!"
  TOOLTIP_STATE_OCCUPATION_MINIMAL: "25% Occupied by #variable [State.GetOccupier.GetCountry.GetName]#!\n#variable @army_SP![State.GetOccupationStrengthPoints]#! are occupying #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
  TOOLTIP_STATE_OCCUPATION_PARTIAL: "50% Occupied by #variable [State.GetOccupier.GetCountry.GetName]#!\n#variable @army_SP![State.GetOccupationStrengthPoints]#! are occupying #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
  TOOLTIP_STATE_OCCUPATION_FULL: "100% Occupied by #variable [State.GetOccupier.GetCountry.GetName]#!\n#variable @army_SP![State.GetOccupationStrengthPoints]#! are occupying #variable [State.GetName]#!\n\n[State.GetOccupationEffectsAsString]"
  PROFITABILITY_FORMAT_HIGH: "#P $VALUE|%0$#!"
  PROFITABILITY_FORMAT_MEDIUM: "#v $VALUE|%0$#!"
  PROFITABILITY_FORMAT_LOW: "#N $VALUE|%0$#!"
  EARNINGS_FORMAT_HIGH: "#P $VALUE|1$#!"
  EARNINGS_FORMAT_MEDIUM: "#v $VALUE|1$#!"
  EARNINGS_FORMAT_LOW: "#N $VALUE|1$#!"
  PROFITABILITY_FORMAT_GENERALIZED: "#v $VALUE|0%+=$#!"
  TOOLTIP_BUILDINGS_EMPLOYED: "#bold #v [Building.GetName]#!#!\n$TOOLTIP_DELIMITER$\nEmployed: #bold #v [Building.GetNoOfEmployed]#!#!\nMax employed: #bold #v [Building.GetEmployeeCap]#!#!"
  TOOLTIP_BUILDINGS_OCCUPANCY: "#bold #v [Building.GetName]#!#!\n$TOOLTIP_DELIMITER$\n"
  TOOLTIP_BUILDING_EMPLOYMENT: "#bold #v [Building.GetName] Employment#!#!\nEmployment: #variable [Building.GetNoOfEmployed|1*]#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#bold #v [Building.GetEmploymentPercentage|0%]#!#!)\n$TOOLTIP_DELIMITER$\n[Building.GetEmployeesBreakdown][Building.GetAllEmployeesTransferDesc][Building.GetAllFailedHiresDesc]"
  EMPLOYEE_POP: "[Pop.GetNumWorkforce|Dv] [Pop.GetName]"
  BUILDING_GOVERNMENT_EXPENSES_DESC: "[Building.GetGovernmentExpensesDesc]"
  TOOLTIP_BUILDING_GOVERNMENT_EXPENSES: "#header [concept_government_expenses] in [Building.GetName]#!\nWeekly Expenses: #variable @money!$VAL|D-$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  TOOLTIP_BUILDING_MATERIAL_EXPENSES: "Material Expenses: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$VAL|D-$#!#!"
  TOOLTIP_BUILDING_WAGES_EXPENSES: "Wages: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_WAGES_DESC @money!$VAL|D-$#!#!"
  TOOLTIP_BUILDING_SLAVE_UPKEEP: "Slave Upkeep: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS @money!$VAL|D-$#!#!"
  TOOLTIP_BUILDING_WAGE_SUBSIDIES: "Wage Subsidies: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_WAGES_DESC @money!$VAL|D-$#!#!"
  TOOLTIP_BUILDING_BALANCE_SUBSIDIES: "Balance Subsidies: @money!$VAL|D-$"
  TOOLTIP_BUILDING_WAGES_DESC: "[Building.GetLastWagesExpensesDesc]"
  TOOLTIP_BUILDING_TOTAL_WAGE_EXPENSES: "Total weekly wages: @money!$VAL|Dv$$SUBSIDIES$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  BUILDING_WAGE_SUBSIDIES: " + @money!$VAL|-0$ ([concept_subsidies])"
  TOOLTIP_BUILDING_BASE_WAGE: "Base Wage in [Building.GetName] of @money!$VAL|v$ is due to:\n$BREAKDOWN$"
  COUNTRY_NORMAL_WAGE: "$TAB$[concept_normal_wage] in [Building.GetOwner.GetName]: @money!$VAL|v$"
  BUILDING_NEEDED_WAGE: "$TAB$Average needed Wage to sustain [concept_wealth] in [Building.GetState.GetName]: @money!$VAL|v$"
  BUILDING_WAGE_MODIFIER: "$TAB$$MODIFIER$"
  BUILDING_WAGE_DIFF_SUBSIDIES: "$TAB$[concept_subsidies] to sustain [concept_normal_wage] in [Building.GetOwner.GetName]: @money!$VAL|v$"
  BUILDING_WAGES_INCREASING: "Wages are increasing since last week: #v @money!$VAL|D$#!"
  BUILDING_WAGES_DECREASING: "Wages are decreasing since last week: #v @money!$VAL|D$#!"
  TOOLTIP_BUILDING_POP_TYPE_WAGE: "@money! #tooltippable #tooltip:$BREAKDOWN_TAG$ $WAGE|Dv$#!#! - [PopType.GetName] ($NUM_WORKFORCE|Dv$)"
  BUILDING_POP_WAGE: "@money!$VAL|Dv$ - [Pop.GetName] (Annual Wage @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $ANNUAL_WAGE|v2$#!#! x $NUM_WORKFORCE|Dv$)"
  POP_ANNUAL_WAGE: "Annual Wage for [Pop.GetName] of #v @money!$VAL$#! is due to:\n$BREAKDOWN$"
  POP_BUILDING_BASE_WAGE: "$TAB$Base Wage in [Pop.GetBuilding.GetName]: @money!$VAL|v$"
  POP_TYPE_WAGE_FACTOR: "$TAB$Wage Factor for [Pop.GetPopType.GetName]: #v ×$VAL|1$#!"
  POP_WAGE_DISCRIMINATION_FACTOR: "$TAB$Discrimination Factor for [Pop.GetName]: #v ×$VAL|1$#!"
  POP_WAGE_SUBSISTENCE_FACTOR: "$TAB$Subsistence Factor for [Pop.GetName]: #v ×$VAL|1$#!"
  TOOLTIP_BUILDING_HIRING: "#bold #v [Building.GetName] is currently hiring#!#!\nEmployment: #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_EMPLOYMENT #variable [Building.GetNoOfEmployed|1*]#!#!#! / #maximum [Building.GetEmployeeCap|1*] Employees#! (#bold #v [Building.GetEmploymentPercentage|0%]#!#!)[Building.GetAllEmployeesTransferDesc][Building.GetAllFailedHiresDesc]"
  TOOLTIP_BUILDING_HEALTH_WORLD: "#bold #v [Building.GetName]#!#!\n#variable ##[Building.GetProfitabilityRank]#! most productive Building in the World\n#variable [Building.GetProfitability]#! ([Building.GetProfitabilityCompareIcon]) [concept_productivity] compared to the average Building\n\nEarnings: #tooltip:[Building.GetTooltipTag],EARNINGS_BREAKDOWN @money!#bold [Building.GetEarnings|D=+]#!#!\nWages: #bold #N @money!-[Building.GetLastWagesExpenses|D-]#!#!\n"
  TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE: "#bold #v [Building.GetName]#!#!\n#variable ##[Building.GetProfitabilityRankInType]#! most productive [Building.GetName] in the World\n#variable [Building.GetProfitabilityInType]#! ([Building.GetProfitabilityCompareIconInType]) [concept_productivity] compared to the average [Building.GetBuildingType.GetName]\n\nEarnings: #tooltippable #tooltip:[Building.GetTooltipTag],EARNINGS_BREAKDOWN @money!#bold [Building.GetEarnings|D=+]#!#!#!\nWages: #bold #N @money!-[Building.GetLastWagesExpenses|D-]#!#!\n"
  TOOLTIP_BUILDING_PRODUCTIVITY: "#header [concept_productivity]#!\nValue: @money![Building.GetAverageAnnualEarningsPerEmployeeFormatted] / year (#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_BUILDING_TYPE,GraphTooltipTypeProfitability [Building.GetProfitabilityCompareIconInType]#!#! / #tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_HEALTH_WORLD,GraphTooltipWorldProfitability [Building.GetProfitabilityCompareIcon]#!#!)\n$TOOLTIP_DELIMITER$\n#variable ##[Building.GetProfitabilityRankInType]#! most productive [Building.GetBuildingType.GetName] in the world \n[Building.GetProfitabilityInType] [concept_productivity] compared to the average [Building.GetBuildingType.GetName]\n\n#variable ##[Building.GetProfitabilityRank]#! most productive Building in the world \n[Building.GetProfitability] [concept_productivity] compared to the average Building\n"
  TOOLTIP_BUILDINGS_MATERIAL_EXPENSES: "\nMaterial Expenses: #bold #N @money!-$VAL|D-$#!#!"
  TOOLTIP_BUILDINGS_SLAVE_UPKEEP: "\nSlave Upkeep: #tooltip:$TAG$,TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS #tooltippable #N @money!-$VAL|D-$#!#!#!"
  TOOLTIP_BUILDINGS_SLAVE_UPKEEP_DETAILS: "#header Slave Upkeep#!\nTotal Expenses: #bold #v @money![Building.GetLastSlaveUpkeep|K1]#!#!\n$TOOLTIP_DELIMITER$\n[Building.GetLastSlaveBasketDesc]"
  TOOLTIP_BUILDING_HEADER: "[Building.GetBuildingType.GetName] in [Building.GetState.GetName]"
  BUILDING_RANK: "[Building.GetProfitabilityCompareIconInType] ##[Building.GetProfitabilityRankInType|v] [Building.GetBuildingType.GetNameNoFormatting]"
  BUILDING_RANK_WORLD: "[Building.GetProfitabilityCompareIcon] ##[Building.GetProfitabilityRank|v] in the world"
  TOOLTIP_BUILDINGS_BUDGET: "#bold #v [Building.GetName]#!#!\n[Building.GetBuildingType.GetBuildingKindDesc(Building.GetOwner.Self)]\n[concept_government_expenses]: #variable @money! [Building.GetGovernmentExpenses|-K]#!\n\nThe wages (and eventual material expenses) will be payed from your treasury. The wages will be moving towards the average wages in the State."
  TOOLTIP_PRODUCTION_AMOUNT: "#bold #v [GoodsProductionInfo.GetName]#!#! in [ProductionMarker.AccessState.GetName]\n$TOOLTIP_DELIMITER$\nProduced: #bold #v [GoodsProductionInfo.GetAmount|D]#!#! units\n#bold #v [GoodsProductionInfo.GetMP|1%]#!#! of the total production of #variable [GoodsProductionInfo.GetName]#! in the #variable [ProductionMarker.AccessState.GetMarket.GetName]#!"
  TOOLTIP_PRODUCTION_PRICE: "#bold #v [GoodsProductionInfo.GetName]#!#!\n$TOOLTIP_DELIMITER$\nPrice: #bold #v @money![GoodsProductionInfo.GetPrice|1]#!#! / unit"
  TOOLTIP_PRODUCTION_SOLD_FOR: "#bold #v [GoodsProductionInfo.GetName]#!#!\n$TOOLTIP_DELIMITER$\nSold [GoodsProductionInfo.GetName] for #bold #v @money![GoodsProductionInfo.GetSoldFor|D]#!#! last week"
  START_DIPLO_PLAY: "Start [concept_diplomatic_play] (Declare War)"
  PRICE: "Market Price"
  GO_TO_BUTTON_FRONT: "Go to [Front.GetName]"
  GO_TO_BUTTON_BUILDING: "Go to the [Building.GetName] in [Building.GetState.GetName]"
  GO_TO_BUTTON_STATE: "Go to [State.GetName]"
  GO_TO_BUTTON_COUNTRY: "Go to [Country.GetName]"
  GO_TO_BUTTON_CHARACTER: "Go to [Character.GetFullName]"
  GO_TO_BUTTON_MARKET: "Go to [Market.GetName]"
  GO_TO_BUTTON_CONSTRUCTION_QUEUE: "Go to [concept_construction_queue]"
  GO_TO_BUTTON_INTEREST_GROUP: "Go to [InterestGroup.GetName]"
  GO_TO_BUTTON_WAR: "Go to [War.GetName]"
  GO_TO_BUTTON_JOURNAL: "Go to your Journal"
  START_RESEARCHING: "Start Researching"
  POPULATION_CHARTS: "Charts"
  POPULATION_LIST: "List"
  TOOLTIP_STATE_POPULATION: "#header [Concept('concept_pop', '$concept_population$')] in [State.GetName]: #v [State.GetPopulationSize|*]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetPopGrowthDesc]\n[State.GetMigrationDesc]\n[Concept('concept_pop_growth', '$concept_pop_growth_birthrate$')]: #v [State.GetPopBirthrate|+%1]#! yearly\n[Concept('concept_pop_growth', '$concept_pop_growth_mortality$')]: #v [State.GetPopMortality|-%1]#! yearly\n\n$STATE_AVAILABLE_LABOR$"
  TOOLTIP_STATE_MIGRATION: "#header [concept_migration] in [State.GetName]: #v [State.GetPopNetMigration|K=+]#!#!\n$TOOLTIP_DELIMITER$\n[State.GetMigrationDesc]\n\n[State.GetMigrationAndSlaveTradeDetailsDesc]"
  STATE_MIGRATION_VALUE: "$concept_migration$ #v [State.GetPopNetMigration|K=+]#!"
  STATE_MIGRATION_ATTRACTION: "$concept_migration_pull_short$ [State.GetMigrationLabel]"
  TOOLTIP_OCCUPANCY: "#bold #v Capacity used#!#!\n$TOOLTIP_DELIMITER$\n[concept_occupancy_desc]"
  TOOLTIP_MORALE: "#bold #v [concept_morale]#!#!\n$TOOLTIP_DELIMITER$\nMorale is the percentage of the necessary supplies that Unit is getting."
  STATE_TAX_REVENUE: "Taxation Revenue: @money!#bold [State.GetTaxationRevenue|+=D]#!"
  STATE_TAX_REVENUE_TOOLTIP_HEADER: "#header Taxation Revenue in [State.GetName]#!\nTotal: @money!#bold $VALUE|+=0D$#!"
  STATE_GOVERNMENT_EXPENSES: "[concept_government_expenses]: @money!#bold [State.GetGovernmentExpenses|+=D]#!"
  STATE_GOVERNMENT_EXPENSES_TOOLTIP_HEADER: "#header [concept_government_expenses] in [State.GetName]#!\nTotal: @money!#bold $VALUE|+=D0$#!"
  STATE_TAX_EXPENSE_TOOLTIP_LINE: "@money!#tooltippable #tooltip:[Building.GetTooltipTag],BUILDING_GOVERNMENT_EXPENSES_DESC #bold $VALUE|+=D$#!#!#! from [Building.GetName]"
  STATE_TAX_REVENUE_TOOLTIP_LINE: "@money!#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_TAXES_TOOLTIP #bold $VALUE|+=D$#!#!#! from [Building.GetName]"
  STATE_TOTAL_LABOR: "#title [concept_workforce]:#! #v [State.GetTotalLabor|K]#!"
  STATE_TOTAL_LABOR_TOOLTIP: "#header Total [concept_workforce]#!\nAmount: #variable [State.GetTotalLabor|K]#!\n\n#concept This is the total number of the state's population that are considered part of the Workforce and can be employed in buildings.#!"
  STATE_AVAILABLE_LABOR: "$STATE_UNEMPLOYED$\n$STATE_PEASANTS$\n$STATE_QUALIFICATIONS$"
  STATE_AVAILABLE_LABOR_TOOLTIP: "#header Available Labor in [State.GetName]#!\n$STATE_UNEMPLOYED$\n$STATE_PEASANTS$\n$STATE_QUALIFICATIONS$"
  STATE_INFRASTRUCTURE_PRODUCTION_MARKER: "$concept_infrastructure$: [State.GetInfrastructureBalance|0+=]"
  STATE_UNEMPLOYED: "#v [State.GetNumUnemployedWorkingAdults|D-]#! $concept_unemployed$"
  STATE_PEASANTS: "[State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetNameNoFormatting]"
  STATE_QUALIFICATIONS: "#tooltip:[State.GetTooltipTag],STATE_QUALIFICATIONS_BREAKDOWN [SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '@red_cross!', '@green_checkmark!')]#! Has [concept_pop_qualifications] to fill all current Vacancies"
  STATE_QUALIFICATIONS_BREAKDOWN: "[State.GetPotentialQualificationsDesc]"
  STATE_PRODUCTION_MARKER_TOOLTIP: "#header [State.GetName]#!\n$TOOLTIP_DELIMITER$\n[concept_infrastructure]: #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|v0+=]#!#!\n[concept_unemployed]: #v [State.GetNumUnemployedWorkingAdults|D-]#!\n[GetPopType('peasants').GetName]: #v [State.GetNumSubsistenceWorkingAdults|D]#!"
  MAP_LIST_STATE_AVAILABLE_LABOR: "[State.GetPotentialLabor|Dv] [SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '@red_cross!', '@green_checkmark!')]"
  STATE_LITERACY: "#header [concept_literacy]#!\n[State.GetLiteracy|%1v] of the [Concept('concept_pop', '$concept_pops$')] in [State.GetName] are literate."
  TOOLTIP_MASS_MIGRATION_TARGET: "#header [concept_migration_target]#!\n$TOOLTIP_DELIMITER$\nThis state and its surrounding states are the targets of extensive migration from [State.GetMassMigrationOriginCountry.GetAdjective] [State.GetMassMigrationCulture.GetName] people. This migration will continue until #variable [State.GetMassMigrationEndDate]#!."
  TOOLTIP_UNDISCOVERED_RESOURCES: "#header Discoverable Resources#!\n$TOOLTIP_DELIMITER$\nThere are undiscovered resource deposits in this state. These resources have a chance to be discovered each day if the state is part of a non-[concept_isolated_state]."
  DISCOVERABLE_RESOURCES: "Discoverable Resources"
  MARKET_ACCESS_WARNING: "@warning!\n#bold [StateInfraMarker.GetState.GetMarketAccess|0%]#!"
  MARKET_ACCESS_WARNING_SEA: "@warning!\n#bold [SeaRegionInfraMarker.GetStateRegion.GetSeaInfrastructure(GetPlayer)|0]%#!"
  ISOLATED: "@warning!"
  MIGRATION_TARGET_ENTRY: "#variable $TARGET$#!"
  INFLUENTIAL_CULTURE_FORMAT: "[Culture.GetNameNoFormatting]"
  STATE_AVERAGE_WAGE_TOOLTIP: "#header Wages#!\nState Average, annual: #variable @money!$VAL|D$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  BUILDING_AVERAGE_WAGE_ENTRY: "#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE @money!$VAL|vD$#!#! - [Building.GetName]"
  POP_DEPENDENT_PRODUCTION: "[concept_dependents] Production"
  POP_CONSUMPTION: "[concept_pop_needs]"
  BUILDING_CONSUMPTION: "Building Consumption"
  BUILDING_PRODUCTION: "Building Production"
  GOODS_PANEL_VALUE_TOOLTIP: "#header $NAME$#!\n$DESC$\nAmount: #variable $VALUE|D$#!$BREAKDOWN$"
  GOODS_PANEL_VALUE_CHILD_TOOLTIP: "$NAME$ - $DESC$: #variable $VALUE|D$#!"
  GOODS_ICON_AND_NAME_FORMAT: "[Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_EMBARGO_HEADER: "#header [concept_embargo]#!"
  GOODS_ENCOURAGE_CONSUMPTION_HEADER: "#header [concept_encourage_consumption]#!"
  GOODS_DISCOURAGE_CONSUMPTION_HEADER: "#header [concept_discourage_consumption]#!"
  GOODS_TAX_HEADER: "#header [concept_consumption_tax]#!"
  GOODS_EMBARGO_INACTIVE: "We are not [Concept('concept_embargo', '$concept_embargoing$')] [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_EMBARGO_ACTIVE: "We are [Concept('concept_embargo', '$concept_embargoing$')] [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_ENCOURAGE_CONSUMPTION_INACTIVE: "We are not [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_ENCOURAGE_CONSUMPTION_ACTIVE: "We are [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_DISCOURAGE_CONSUMPTION_INACTIVE: "We are not [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_DISCOURAGE_CONSUMPTION_ACTIVE: "We are [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_TAX_INACTIVE: "We are not collecting [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_TAX_ACTIVE: "We are collecting [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on[Goods.GetTextIcon][Nbsp][Goods.GetName]"
  TOGGLE_GOODS_EMBARGO_INACTIVE: "#instruction Left-Click#! to $EMBARGO_GOODS$"
  TOGGLE_GOODS_EMBARGO_ACTIVE: "#instruction Left-Click#! to $UNEMBARGO_GOODS$"
  TOGGLE_GOODS_ENCOURAGE_CONSUMPTION_INACTIVE: "#instruction Left-Click#! to $ENCOURAGE_GOODS$"
  TOGGLE_GOODS_ENCOURAGE_CONSUMPTION_ACTIVE: "#instruction Left-Click#! to $UNENCOURAGE_GOODS$"
  TOGGLE_GOODS_DISCOURAGE_CONSUMPTION_INACTIVE: "#instruction Left-Click#! to $DISCOURAGE_GOODS$"
  TOGGLE_GOODS_DISCOURAGE_CONSUMPTION_ACTIVE: "#instruction Left-Click#! to $UNDISCOURAGE_GOODS$"
  TOGGLE_GOODS_TAX_INACTIVE: "#instruction Left-Click#! to $TAX_GOODS$"
  TOGGLE_GOODS_TAX_ACTIVE: "#instruction Left-Click#! to $UNTAX_GOODS$"
  GOODS_EMBARGO_EFFECTS_INACTIVE: "Establishing an [concept_embargo] on [Goods.GetTextIcon][Nbsp][Goods.GetName] will cost us @aut![Nbsp]#v $COST|-0$#! and prevent [Concept('concept_country', '$concept_countries$')] without a [concept_market_share] from establishing [Goods.GetTextIcon][Nbsp][Goods.GetName] [Concept('concept_trade_route', '$concept_trade_routes$')] in [Concept('concept_market', '$concept_markets$')] where we are the [concept_market_owner]"
  GOODS_EMBARGO_EFFECTS_ACTIVE: "Ending our [concept_embargo] on [Goods.GetTextIcon][Nbsp][Goods.GetName] will recover the current expense of @aut![Nbsp]#v $COST|+0$#!"
  GOODS_ENCOURAGE_CONSUMPTION_EFFECTS_INACTIVE: "[Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName] cost us @aut![Nbsp]#v $COST|-0$#! and over time will increase the amount of [Goods.GetTextIcon][Nbsp][Goods.GetName] that [Concept('concept_pop', '$concept_pops$')] in all [Concept('concept_market', '$concept_markets$')] where we have a [concept_market_share] consume as part of [concept_goods_substitution]"
  GOODS_ENCOURAGE_CONSUMPTION_EFFECTS_ACTIVE: "Ending our efforts to [concept_encourage_consumption] of [Goods.GetTextIcon][Nbsp][Goods.GetName] will recover the current expense of @aut![Nbsp]#v $COST|+0$#!"
  GOODS_DISCOURAGE_CONSUMPTION_EFFECTS_INACTIVE: "[Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName] will cost us @aut![Nbsp]#v $COST|-0$#! and over time will decrease the amount of [Goods.GetTextIcon][Nbsp][Goods.GetName] that [Concept('concept_pop', '$concept_pops$')] in all [Concept('concept_market', '$concept_markets$')] where we have a [concept_market_share] consume as part of [concept_goods_substitution]"
  GOODS_DISCOURAGE_CONSUMPTION_EFFECTS_ACTIVE: "Ending our efforts to [concept_discourage_consumption] of [Goods.GetTextIcon][Nbsp][Goods.GetName] will recover the current expense of @aut![Nbsp]#v $COST|+0$#!"
  GOODS_TAX_EFFECTS_INACTIVE: "Collecting a [concept_consumption_tax] on $GOODS_NAME$[Nbsp]$GOODS_ICON$ will cost us @aut![Nbsp]#v $COST|-0$#! and generate approximately @money!$REVENUE|K+v$ in revenue"
  GOODS_TAX_EFFECTS_ACTIVE: "Removing our [concept_consumption_tax] on $GOODS_NAME$[Nbsp]$GOODS_ICON$ will recover the current expense of @aut![Nbsp]#v $COST|+0$#! but also lose us approximately @money!$REVENUE|K+v$ in revenue"
  NOT_PERMITTED_TO_EMBARGO_GOODS: "Our laws do not allow for [Concept('concept_embargo', '$concept_embargoes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  NOT_PERMITTED_TO_ENCOURAGE_GOODS: "Our laws do not allow [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  NOT_PERMITTED_TO_DISCOURAGE_GOODS: "Our laws do not allow [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  NOT_PERMITTED_TO_TAX_GOODS: "Our laws do not allow for [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  NOT_POSSIBLE_TO_TAX_FIXED_PRICE: "It is not possible to collect [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName] because it has a fixed price"
  NOT_POSSIBLE_TO_NO_BUY_ORDERS: "It is not possible to collect [Concept('concept_consumption_tax', '$concept_consumption_taxes$')] on [Goods.GetTextIcon][Nbsp][Goods.GetName] because it has no [concept_buy_orders] in any of our [Concept('concept_market', '$concept_markets$')]"
  NOT_POSSIBLE_TO_ENCOURAGE_IS_DISCOURAGING: "We are already [Concept('concept_discourage_consumption', '$concept_discouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  NOT_POSSIBLE_TO_DISCOURAGE_IS_ENCOURAGING: "We are already [Concept('concept_encourage_consumption', '$concept_encouraging_consumption$')] of [Goods.GetTextIcon][Nbsp][Goods.GetName]"
  NOT_POSSIBLE_TO_ENCOURAGE_NOT_BOUGHT_BY_POPS: "It is not possible to [concept_encourage_consumption] of [Goods.GetTextIcon][Nbsp][Goods.GetName] because it is not consumed by [Concept('concept_pop', '$concept_pops$')]"
  NOT_POSSIBLE_TO_DISCOURAGE_NOT_BOUGHT_BY_POPS: "It is not possible to [concept_discourage_consumption] of [Goods.GetTextIcon][Nbsp][Goods.GetName] because it is not consumed by [Concept('concept_pop', '$concept_pops$')]"
  NOT_POSSIBLE_TO_EMBARGO_NON_TRADABLE: "It is not possible to [concept_embargo] [Goods.GetTextIcon][Nbsp][Goods.GetName] because it cannot be traded between [Concept('concept_market', '$concept_markets$')]"
  GOODS_INTERACTION_INSUFFICIENT_AUT: "Have at least @aut!$REQVAL|0v=+$ [concept_authority]"
  GOODS_INTERACTION_INSUFFICIENT_INF: "Insufficient available $INFLUENCE$, $REQVAL|1v$ needed "
  LAW: "#bold [Law.GetNameNoFormatting]#!"
  LAW_GROUP: "#title [Law.GetGroupName]#!"
  LAW_GROUP_ACTIVE_LAW: "#bold [Law.GetActiveGroupLaw.GetName]#!"
  INVESTMENT_LEVEL: "#variable @bur![Law.GetInvestmentCost]#!"
  INVESTMENT_LEVEL_DESC: "[concept_investment_level]: #variable [Law.GetInvestmentLevel]#!"
  CURRENT_LAW: "Current Law"
  CURRENT_LAW_TOOLTIP: "This is the current law."
  POPS_POLSTR_PIECHART_TITLE: "#title Pol Str, by [concept_profession]#!"
  POPS_POPULATION_PIECHART_TITLE: "#title Population, by [concept_profession]#!"
  POPS_VOTES_PIECHART_TITLE: "#title Votes, by [concept_profession]#!"
  POPS_WORKING_IN_PIECHART_TITLE: "#title Working in, by Building Type#!"
  POPS_CULTURE_POPULATION_PIECHART_TITLE: "#title Population, by Culture#!"
  POPS_CULTURE_POL_STR_PIECHART_TITLE: "#title Pol Str, by Culture#!"
  POPS_RELIGION_POPULATION_PIECHART_TITLE: "#title Population, by Religion#!"
  POPS_RELIGION_POL_STR_PIECHART_TITLE: "#title Pol Str, by Religion#!"
  POPULATION_PIECHART_HEADER: "[Concept('concept_pop','$concept_population$')]"
  POLITICAL_STRENGTH_PIECHART_HEADER: "[concept_political_strength]"
  POP_TYPE_HEADER: "#header [concept_profession]#!"
  POP_CULTURE_HEADER: "#header [concept_culture]#!"
  POP_RELIGION_HEADER: "#header [concept_religion]#!"
  POP_DISCRIMINATED_TOOLTIP: "#header $POP_DISENFRANCHISED_HEADER$#!\n$POP_IG_DISCRIMINATED$"
  POP_DISENFRANCHISED_HEADER: "[concept_disenfranchised]"
  POP_POLITICAL_MOVEMENTS_HEADER: "[Concept('concept_political_movement', '$concept_political_movements$')]"
  POP_IG_INACTIVE_HEADER: "#header [concept_interest_group]#!\nThis [concept_pop] is [Concept('concept_politically_inactive_involved', '$concept_politically_inactive$')]\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$ Membership#!\n[Pop.GetIGMembershipDesc]"
  POP_IG_ATTRACTION_HEADER: "#header [concept_interest_group]#!\nThis [Concept('concept_pop','$concept_pop_possessive$')] Primary $concept_interest_group$ is [Pop.GetLargestInterestGroup.GetName]\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$ Membership#!\n[Pop.GetIGMembershipDesc]\n$POP_DETAILS_IG$"
  POP_IG_ATTRACTION_HEADER_NO_CLICK: "#header [concept_interest_group]#!\nThis [Concept('concept_pop','$concept_pop_possessive$')] Primary $concept_interest_group$ is [Pop.GetLargestInterestGroup.GetName]\n$TOOLTIP_DELIMITER$\n#title $concept_interest_group$ Membership#!\n[Pop.GetIGMembershipDesc]"
  POP_IG_DISCRIMINATED: "This $concept_pop$ is [concept_disenfranchised] due to [concept_discrimination] and cannot join [Concept('concept_interest_group', '$concept_interest_groups$')]."
  POP_IG_MEMBERSHIP: "#variable $MEMBERS|D$#! support the [INTEREST_GROUP.GetName] (Attraction: #tooltip_header #tooltippable #tooltip:[INTEREST_GROUP.GetPopWithIG(POP.Self).GetTooltipTag],POP_IG_ATTRACTION_TOOLTIP $ATTRACTION|%0$#!#!#!)\n"
  POP_IG_ATTRACTION_TOOLTIP: "#header Pop Attraction to [PopWithIG.GetInterestGroup.GetName]#!\n$TOOLTIP_DELIMITER$\nTotal Attraction: [PopWithIG.CalcAttractionToIG|v]\n[PopWithIG.GetAttractionToIGDesc]"
  POP_IG_NO_MEMBERSHIP: "#variable $NUM_INACTIVE|D$#! are #bold [Concept('concept_politically_inactive_involved', '$concept_politically_inactive$')]#! and do not support any [concept_interest_group]\n#variable $NUM_NON_PARTICIPATING|D$#! #bold Disenfranchised Dependents#! cannot participate in politics"
  POP_POVERTY: "Low [concept_sol]"
  POP_STARVATION: "Starvation"
  POP_DISCRIMINATED: "[Concept('concept_discrimination','$concept_discriminated_against$')]"
  POP_NOT_DISCRIMINATED: "Not [Concept('concept_discrimination','$concept_discriminated$')]"
  POP_ARISTOCRATS: "$aristocrats$ [concept_profession]"
  POP_BUREAUCRATS: "$bureaucrats$ [concept_profession]"
  POP_CAPITALISTS: "$capitalists$ [concept_profession]"
  POP_CLERGYMEN: "$clergymen$ [concept_profession]"
  POP_CLERKS: "$clerks$ [concept_profession]"
  POP_ENGINEERS: "$engineers$ [concept_profession]"
  POP_FARMERS: "$farmers$ [concept_profession]"
  POP_PEASANTS: "$peasants$ [concept_profession]"
  POP_LABORERS: "$laborers$ [concept_profession]"
  POP_OFFICERS: "$officers$ [concept_profession]"
  POP_ACADEMICS: "$academics$ [concept_profession]"
  POP_SHOPKEEPERS: "$shopkeepers$ [concept_profession]"
  POP_SLAVES: "$slaves$ [concept_profession]"
  POP_SOLDIERS: "$soldiers$ [concept_profession]"
  POP_MACHINISTS: "$machinists$ [concept_profession]"
  NO_LABOR_MOVEMENT: "The #v $labor_movement$#! [concept_technology] is not unlocked"
  NO_EGALITARIANISM: "The #v $egalitarianism$#! [concept_technology] is not unlocked"
  HAS_POLITICAL_AGITATION: "The #v $political_agitation$#! [concept_technology] is unlocked"
  URBAN_POP: "Non-Agricultural Employment"
  RURAL_POP: "Agricultural Employment"
  POP_IS_DISCRIMINATED: "[Concept('concept_discrimination', '$concept_discriminated$')] Against"
  POP_PRIMARY_CULTURE: "Has [concept_primary_cultures]"
  POP_STATE_RELIGION: "Follows [concept_state_religion]"
  POP_LITERACY: "Literacy"
  POP_WEALTH: "Wealth"
  POP_DANGEROUS_JOBS: "Dangerous Employment"
  POP_WORKPLACE: "Workplace"
  LITERACY_0_10: "Literacy below #variable 25%#!"
  LITERACY_10_20: "Literacy between #variable 10%#! and #variable 20%#!"
  LITERACY_20_30: "Literacy between #variable 20%#! and #variable 30%#!"
  LITERACY_30_40: "Literacy between #variable 30%#! and #variable 40%#!"
  LITERACY_40_50: "Literacy between #variable 40%#! and #variable 50%#!"
  LITERACY_50_60: "Literacy between #variable 50%#! and #variable 60%#!"
  LITERACY_60_70: "Literacy between #variable 60%#! and #variable 70%#!"
  LITERACY_70_80: "Literacy between #variable 70%#! and #variable 80%#!"
  LITERACY_80_90: "Literacy between #variable 80%#! and #variable 90%#!"
  LITERACY_90_100: "Literacy above #variable 90%#!"
  LEADER_POPULARITY: "[concept_popularity] of [SCOPE.gsInterestGroup('interest_group').GetLeader.GetFullNameWithTitle]"
  IN_GOVERNMENT_ATTRACTION: "Impact of taxation on the attraction of the Interest Group"
  EMPLOYEE_TRANSFERS: "\n\n#header Latest Employee changes:#!\n"
  EMPLOYEE_TRANSFER_FROM: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+=]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName] (used to be [EMPLOYEE_TRANSFER.GetOldPopType.GetName] in the [EMPLOYEE_TRANSFER.GetOldEmployment.GetName])"
  EMPLOYEE_TRANSFER_TO: "#b #tooltippable #N #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN -[EMPLOYEE_TRANSFER.GetTotal|-]#!#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] (became [EMPLOYEE_TRANSFER.GetNewPopType.GetName] in the [EMPLOYEE_TRANSFER.GetNewEmployment.GetName])"
  EMPLOYEE_PROMOTION_DEMOTION_FROM: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName] that used to be [EMPLOYEE_TRANSFER.GetOldPopType.GetName]"
  EMPLOYEE_PROMOTION_DEMOTION_TO: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] that became [EMPLOYEE_TRANSFER.GetNewPopType.GetName]"
  EMPLOYEE_PROMOTION_DEMOTION_FROM_TO: "#tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|v]#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] became [EMPLOYEE_TRANSFER.GetNewPopType.GetName]"
  EMPLOYEE_DIED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] died"
  EMPLOYEE_FIRED: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|-]#!#!#! [EMPLOYEE_TRANSFER.GetOldPopType.GetName] were fired"
  EMPLOYEE_NEW: "#b #tooltippable #tooltip:[EMPLOYEE_TRANSFER.GetTooltipTag],EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN [EMPLOYEE_TRANSFER.GetTotal|+=]#!#!#! [EMPLOYEE_TRANSFER.GetNewPopType.GetName] that were previously [concept_unemployed]"
  EMPLOYEE_TRANSFER_TOTAL_BREAKDOWN: "Total: [EmployeeTransfer.GetTotal|v]\nLiterate: [EmployeeTransfer.GetLiterate|v]\nIlliterate: [EmployeeTransfer.GetIlliterate|v]"
  FAILED_HIRE: "\nCouldn't hire [POP_TYPE.GetName] due to:\n$REASONS$"
  WARN_HIRE_LOW_WAGE: "\nExcess [POP_TYPE.GetName] were hired at a low wage"
  FAILED_HIRE_REASON_LOW_WAGE: "@red_cross! [POP_TYPE.GetName] on [BUILDING.GetName] in [BUILDING.GetState.GetName] with $NUM_QUALIFIED_POPS|v1*$ qualifying [TARGET_POP_TYPE.GetName] aren't willing to work for a wage of #v @money!$OFFERED_WAGE$#!. They would accept a wage of #v @money!$MIN_ACCEPTABLE_WAGE$#!"
  FAILED_HIRE_REASON_LOW_QUALIFICATIONS: "@red_cross! #tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $NUM_QUALIFIED_POPS|1*$#!#!#! Pops fulfill the [concept_pop_qualifications] to become [POP_TYPE.GetName] in [BUILDING.GetState.GetName]. The [BUILDING.GetName] wants to hire a total of #variable $TOTAL_TO_BE_HIRED|1*$#!"
  FAILED_HIRE_LOW_QUALIFICATIONS_BREAKDOWN: "$BREAKDOWN$"
  FAILED_HIRE_REASON_SLAVERY: "@red_cross! [POP_TYPE.GetName] can only be hired if [concept_unemployed] or working in a [concept_subsistence_building]"
  POPS_LIST_POPULATION: "#bold [PopListItem.GetTotalPopSizePercentage|%1]#! of the Population\n#bold [PopListItem.GetTotalPolStrPercentage|%1]#! of the [concept_political_strength]"
  POP_LIST_POL_STR_TOOLTIP: "#header [concept_political_strength]#!\nValue: [PopListItem.GetTotalPolStr|Dv]\nThis is #bold [PopListItem.GetTotalPolStrPercentage|%1v]#! of the total [concept_political_strength] this group of Pops"
  POP_LIST_SIZE_TOOLTIP: "#header Population#!\n$POP_LIST_SIZE_BREAKDOWN$\n\nThis group represents #bold [PopListItem.GetTotalPopSizePercentage|%1v]#! of the total Population shown"
  POP_LIST_SIZE_BREAKDOWN: "Total: [PopListItem.GetTotalPopSize|Dv]\n$TAB$Working Adults: [PopListItem.GetWorkingAdultsPopSize|Dv]\n$TAB$[concept_dependents]: [PopListItem.GetDependentsPopSize|Dv]"
  POPS_LIST_TYPE_NAME: "#bold [PopListItem.GetTotalPopSize|D] [PopListItem.GetPopType.GetName]#!\n#bold [PopListItem.GetTotalPolStr|D]#! [concept_political_strength]"
  POPS_LIST_TYPE_SIZE_AND_NAME: "#bold [PopListItem.GetTotalPopSize|D] [PopListItem.GetPopType.GetName]#!"
  POPS_LIST_TYPE_POL_STR: "#v [PopListItem.GetTotalPolStr|D]#! [concept_political_strength]"
  POPS_LIST_MAX_SIZE: "#header [PopListItem.GetPopType.GetName]#!\nEmployed: [PopListItem.GetWorkingAdultsPopSize|Dv]\n$TOOLTIP_DELIMITER$\nThis building can employ #variable [PopListItem.GetMaxPopSize|D]#! [PopListItem.GetPopType.GetName] due to:\n[PopListItem.GetMaxPopSizeDesc] $TRANSFERS_DESC$ $FAILED_HIRES_DESC$"
  POPS_LIST_SLAVES_ROLE_MAX_SIZE: "#header [PopListItem.GetPopType.GetName]#!\nEmployed: [PopListItem.GetWorkingAdultsPopSize|Dv]\n[PopListItem.GetPopTypeReplacementDesc]\n$TOOLTIP_DELIMITER$\nThis building can employ #variable $MAX_POP_SIZE|D$#! [POP_TYPE.GetName] or [TARGET_POP_TYPE.GetName] due to:\n$MAX_POP_SIZE_DESC$ $TRANSFERS_DESC$ $FAILED_HIRES_DESC$"
  POPS_LIST_SOL: "[LabelingHelper.GetLabelForStandardOfLivingFloat(PopListItem.GetAverageSoL)|v] ([PopListItem.GetAverageSoL|1y])"
  POPS_LIST_SOL_TOOLTIP: "#header [concept_sol]#!\nAverage [concept_sol]: [LabelingHelper.GetLabelForStandardOfLivingFloat(PopListItem.GetAverageSoL)|v] ([PopListItem.GetAverageSoL|1y])\n\n[SelectLocalization(PopListItem.IsSlave, '', 'POPS_LIST_SOL_TOOLTIP_AVG_INCOME')]"
  POPS_LIST_SOL_TOOLTIP_AVG_INCOME: "Average Yearly Income Per Pop: @money![PopListItem.GetAverageAnnualWage|vD]"
  ANNUAL_WAGE_TOOLTIP: "#header Annual Wage for [PopListItem.GetPopType.GetName]#!\nEvery year [PopListItem.GetPopType.GetName] in this Building make #bold @money![PopListItem.GetAverageAnnualWage|Dv]#! on average"
  POPS_LIST_CAN_BE_REPLACED_BY: "Can be replaced by [POP_TYPE.GetNameNoIcon]"
  POPS_LIST_REPLACES_POP_TYPE: "Replaces [POP_TYPE.GetNameNoIcon]"
  POPS_LIST_FULLY_REPLACED_BY_SLAVES: "Fully replaced by [POP_TYPE.GetNameNoIcon]"
  POPS_LIST_MAX_CAPACITY: "[POP_TYPE.GetNameNoIcon] are at maximum capacity"
  POPS_LIST_ESOL: "#title [PopListItem.GetAverageESoL|1]#!"
  POPS_LIST_LARGEST_IGS: "#title Primary IGs: #!"
  POP_LIST_POL_STR: "Pol. Str: #variable [Pop.GetPoliticalStrength|K]#!"
  POP_LIST_WEALTH: "Wealth: #variable [Pop.GetCurrentWealth|1*]#!"
  POP_LIST_NOT_ALL_POPS_SHOWN: "[PopListItem.GetNumPopsShown]/[PopListItem.GetNumTotalPops] [concept_pop] groups shown"
  STATE_CULTURES: "#title [Concept('concept_culture', '$concept_cultures$')]#!"
  STATE_RELIGIONS: "#title [Concept('concept_religion', '$concept_religions$')]#!"
  STATE_POP_TYPES: "#title [concept_profession]#!"
  VERSION_TOOLTIP: "#title Build Version#!\n[GetVersion]\n#instruction Click to copy to clipboard#!"
  TRADE_ROUTE_CONVOYS_DESC: "#tooltippable #tooltip:[GetPlayer.GetTooltipTag],NUM_CONVOYS_TOOLTIP_EXTENDED [GetPlayer.GetNumAvailableConvoys]#!#! @convoys! [concept_convoys] available"

  MAX_DECLARED_INTERESTS_TOOLTIP: "#header Maximum [Concept('concept_declared_interest','$concept_declared_interests$')] for [Country.GetName]#!\n$TOOLTIP_DELIMITER$\n[Country.GetMaxNumDeclaredInterestsBreakdown]"
  MAP_INTERACTION_ESC_TO_CANCEL: "#instruction Press #bold ESC#! to close current Map Interaction#!"
  MAP_INTERACTION_BUILD_BUILDING_DESC: "Select in which #v State#! to build #v [BUILDING_TYPE.GetName]#!"
  MAP_INTERACTION_BUILD_BUILDING_PERFORMED: "Building #v [BuildingType.GetName]#! started"
  MAP_INTERACTION_BUILDING_BUILT: "[Building.GetName] built in [Building.GetState.GetName]"
  MAP_INTERACTION_BUILDING_EXPANDED: "[Building.GetName] expanded to level #v [Building.GetExpansionLevel]#! in [Building.GetState.GetName]"
  MAP_INTERACTION_CREATE_MARKET_DESC: "Select in which #v State#! to build a #v Market#!"
  MAP_INTERACTION_ESTABLISH_COLONY_DESC: "Select which #v State Region#! to create a #v Colony#!"
  MAP_INTERACTION_ESTABLISH_COLONY_PERFORMED: "#v Colony#! [concept_colony] has been established"
  MAP_INTERACTION_DECLARE_INTEREST_DESC: "Select which [concept_strategic_region] to declare an [concept_interest]\nCurrent: [GetPlayer.GetNumDeclaredInterests|v]\nMaximum: #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#!"
  MAP_INTERACTION_DECLARE_INTEREST_PERFORMED: "[concept_interest] has been declared"
  MAP_INTERACTION_MERGE_MARKET_MARKET_DESC: "Select #v Market#! to link a #v State/Market#! into"
  MAP_INTERACTION_MERGE_MARKET_STATE_DESC: "Select which #v State/Market#! to link into the #v [MARKET.GetName]#!"
  MAP_INTERACTION_DIPLOMATIC_ACTION_DESC: "Select which #v Country#! to send [DIPLOMATIC_ACTION_TYPE.GetName|v] to"
  MAP_INTERACTION_DIPLOMATIC_ACTION_PERFORMED: "[DiplomaticActionType.GetName|v] started"
  MAP_INTERACTION_DIPLOMATIC_ACTION_TOOLTIP: "[DIPLOMATIC_ACTION.GetProposeName|v] to [TARGET_COUNTRY.GetName][AddTextIf(GreaterThan_CFixedPoint('(CFixedPoint)$MAINTENANCE_COST$','(CFixedPoint)0'),Concatenate('\nMaintenance Cost: @inf!$MAINTENANCE_COST|v0$ ',concept_influence))]"
  MAP_INTERACTION_DIPLOMATIC_ACTION_REDUNDANT: "$ACTION_NAME|v$ already in effect with [COUNTRY.GetName]"
  MAP_INTERACTION_NAVAL_INVASION_DESC: "Select #v HQ#! for #variable Naval Invasion#!"
  MAP_INTERACTION_NAVAL_INVASION_PERFORMED: "#variable Naval Invasion#! started"
  MAP_INTERACTION_NAVAL_INVASION_TOOLTIP: "$NAVAL_INVASION_ORDER_DESC$"
  MAP_INTERACTION_NAVAL_INVASION_WILL_BE_INTERCEPTED_HEADER: "Invasion fleet will be intercepted by [Character.GetCountry.GetFlagTextIcon] [Character.GetFullName] [Character.GetCombatUnitsTypeIcon] [Character.GetNumCombatUnits|v]"
  MAP_INTERACTION_NAVAL_INVASION_MAY_BE_INTERCEPTED_HEADER: "Invasion fleet has a #v [GetDefine('NMilitary', 'INTERCEPTION_NAVAL_INVASION_CHANCE')|%0]#! be intercepted by [Character.GetCountry.GetFlagTextIcon] [Character.GetFullName] [Character.GetCombatUnitsTypeIcon] [Character.GetNumCombatUnits|v]"
  MAP_INTERACTION_WARGOAL_wg_take_state_STATE_DESC: "Select which #v State#! to take"
  MAP_INTERACTION_WARGOAL_wg_war_reparations_COUNTRY_DESC: "Select which #v Country#! to take #v War Reparations#! from"
  MAP_INTERACTION_WARGOAL_wg_remove_interest_marker_COUNTRY_DESC: "Select which #v Country's#! #v [concept_interest]#! to remove"
  MAP_INTERACTION_WARGOAL_wg_remove_interest_marker_STRATEGIC_REGION_DESC: "Select which #v [concept_strategic_region]#! to remove the #v [concept_interest]#! from"
  MAP_INTERACTION_SET_DECREE_DESC: "Select a [concept_state] for the $NAME|v$ [concept_decree]"
  MAP_INTERACTION_SET_DECREE_PERFORMED: "[DecreeType.GetName]"
  MAP_INTERACTION_INCORPORATE_STATE_DESC: "Select a [concept_state] to incorporate"
  MAP_INTERACTION_INCORPORATE_STATE_PERFORMED: "State incorporation started"
  MAP_INTERACTION_INCORPORATE_STATE_SELECT: "Incorporate [STATE.GetName] ([STATE.PredictBureaucracyCost|1] @bur![Nbsp][concept_bureaucracy])"
  MAP_INTERACTION_MOVE_CAPITAL_STATE_DESC: "Select a new [concept_capital_state]"
  MAP_INTERACTION_MOVE_CAPITAL_STATE_PERFORMED: "[concept_capital_state] has been changed"
  MAP_INTERACTION_MOVE_CAPITAL_STATE_SELECT: "#header Change [concept_capital_state] to [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\nMaking [STATE.GetName] into our [concept_capital_state] will give the state the following benefits:\n[STATE.GetCapitalEffectsDesc]\n\nChanging our [concept_capital_state] will result in country-wide penalties that will decay over a period of #v [GetDefine('NCountry', 'MOVE_CAPITAL_COOLDOWN_YEARS')]#! years:\n[STATE.GetOwner.GetMoveCapitalEffectsDesc]\n\nWhile these penalties are in effect, we will be unable to change the [concept_capital_state] again."
  MAP_INTERACTION_MOVE_MARKET_CAPITAL_STATE_SELECT: "#header Change [concept_market_capital] to [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\nMaking [STATE.GetName] into our [concept_market_capital] will give it the following additional benefits:\n[STATE.GetMarketCapitalEffectsDesc]#!#!\n\nChanging our [concept_market_capital] will result in country-wide penalties that will decay over a period of #v [GetDefine('NCountry', 'MOVE_MARKET_CAPITAL_COOLDOWN_YEARS')]#! years:\n[STATE.GetOwner.GetMoveMarketCapitalEffectsDesc]\n\nWhile these penalties are in effect, we will be unable to change the [concept_market_capital] again."
  MAP_INTERACTION_TRADE_ROUTE_ACTIVE_IMPORT_DESC: "Select #v Market#! to import [GOODS.GetTextIcon] #v [GOODS.GetName]#! into\n$TRADE_ROUTE_CONVOYS_DESC$"
  MAP_INTERACTION_TRADE_ROUTE_ACTIVE_EXPORT_DESC: "Select #v Market#! to export [GOODS.GetTextIcon] #v [GOODS.GetName]#! from\n$TRADE_ROUTE_CONVOYS_DESC$"
  MAP_INTERACTION_TRADE_ROUTE_ACTIVE_IMPORT_NO_GOODS_DESC: "Select #v Market#! to import [concept_good] into\n$TRADE_ROUTE_CONVOYS_DESC$"
  MAP_INTERACTION_TRADE_ROUTE_ACTIVE_EXPORT_NO_GOODS_DESC: "Select #v Market#! to export [concept_good] from\n$TRADE_ROUTE_CONVOYS_DESC$"
  MAP_INTERACTION_TRADE_ROUTE_ACTIVE_IMPORT_SELECT_GOODS_DESC: "Select [concept_good] to import"
  MAP_INTERACTION_TRADE_ROUTE_ACTIVE_EXPORT_SELECT_GOODS_DESC: "Select [concept_good] to export"
  MAP_INTERACTION_TRADE_ROUTE_OTHER_IMPORT_DESC: "Select #v Market#! to export [GOODS.GetTextIcon] #v [GOODS.GetName]#! to\n$TRADE_ROUTE_CONVOYS_DESC$"
  MAP_INTERACTION_TRADE_ROUTE_OTHER_EXPORT_DESC: "Select #v Market#! to import [GOODS.GetTextIcon] #v [GOODS.GetName]#! from\n$TRADE_ROUTE_CONVOYS_DESC$"
  MAP_INTERACTION_TRADE_ROUTE_PERFORMED: "Trade Route has been established"
  MAP_INTERACTION_DIPLOMATIC_PLAY_DESC: "Select target for this [concept_diplomatic_play]"
  MAP_INTERACTION_DIPLOMATIC_PLAY_PERFORMED: "[DiplomaticPlayType.GetName|v] started"
  MAP_INTERACTION_FRONT_TOOLTIP: "$FRONT_ORDER_DESC$"
  MAP_INTERACTION_INVASION_CANNOT_TARGET_SELF: "#N Cannot target your own unoccupied States#!"
  MAP_INTERACTION_FRONT_ORDER_DESC: "Select #v [concept_front]#! for #variable [COMMANDER_ORDER_TYPE.GetName]#! Order"
  MAP_INTERACTION_FRONT_ORDER_PERFORMED: "#variable [COMMANDER_ORDER_TYPE.GetName]#! Order given to [Character.GetFullName]"
  MAP_INTERACTION_ACTIVATE_CONSCRIPTION_CENTER_DESC: "Select [concept_state] to activate [concept_conscription_center]"
  MAP_INTERACTION_ACTIVATE_CONSCRIPTION_CENTER_PERFORMED: "Conscription Center activated"
  MAP_INTERACTION_DESIGNATE_STRATEGIC_OBJECTIVE_DESC: "Select [concept_state] to designate as [concept_strategic_objective]"
  MAP_INTERACTION_DESIGNATE_STRATEGIC_OBJECTIVE_PERFORMED: "[concept_strategic_objective] designated"
  MAP_INTERACTION_RECRUIT_GENERALS_DESC: "Select #v [concept_hq]#! to recruit [Concept( 'concept_general', '$concept_generals$' )]"
  MAP_INTERACTION_RECRUIT_GENERALS_FAIL_LAND: "[Concept( 'concept_general', '$concept_generals$' )] can only be recruited for land HQs"
  MAP_INTERACTION_RECRUIT_GENERALS_VALID: "#header Recruit General#!\n@battalions! [HQ.GetReserveUnitsRaw|v] [concept_in_reserve] at the [HQ.GetName]"
  MAP_INTERACTION_RECRUIT_ADMIRALS_DESC: "Select #v [concept_hq]#! to recruit [Concept( 'concept_admiral', '$concept_admirals$' )]"
  MAP_INTERACTION_RECRUIT_ADMIRALS_FAIL_NAVAL: "[Concept( 'concept_admiral', '$concept_admirals$' )] can only be recruited for naval HQs"
  MAP_INTERACTION_RECRUIT_ADMIRALS_VALID: "Recruit [Concept( 'concept_admiral', '$concept_admirals$' )] for [HQ.GetName]"
  NAVAL_INVASION_ORDER_DESC: "#header Naval Invasion#! in [STATE.GetName]\nOrder [CHARACTER.GetFullName] to support a #variable Naval Invasion#! in [STATE.GetName]"
  POWER_PROJECTION_ORDER_DESC: "#header Project Power#! into [STRATEGIC_REGION.GetName]\nOrder [CHARACTER.GetFullName] to #variable Project Power#! into [STRATEGIC_REGION.GetName]"
  FRONT_ORDER_DESC: "[COMMANDER_ORDER_TYPE.GetName] on the [FRONT.GetName]"
  TRAVEL_TIME_DESC: "Traveling there will take #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|v$#!#! "
  TRAVEL_HOME_HQ_DESC: "Traveling to [Concept('concept_hq', 'Home HQ')] will take #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|v$#!#! "
  DECREE_TOOLTIP: "#header Issue $NAME$[AddTextIf(State.IsValid,' in ')][AddTextIf(State.IsValid,State.GetName)]#![ConcatIfNeitherEmpty('\n','$ERRORS$')]\n$EFFECT$\n\n#title Cost:#! #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $COST|0$#!#!#! $AUTHORITY$\n\n#lore $DESC$#!" #
  DECREE_REMOVE: "#header Cancel#! [Decree.GetName] in [Decree.GetState.GetName]"
  CANNOT_SET_DECREE: "#header #N Cannot set [concept_decree] in [State.GetName]#!#!"
  DECREE_ALREADY_ACTIVE: "[DECREE.GetName] [concept_decree] is already set in [STATE.GetName]"
  DECREE_CANNOT_AFFORD: "Have at least @aut!$COST|vD$ [concept_authority] to spend on this [concept_decree]"
  DISABLE_DECREE_TOOLTIP: "#header Cancel#! [DecreeType.GetName] in [State.GetName]#!"
  DECREE_COST_ENTRY: "[DECREE.GetName] in [DECREE.GetState.GetName]: #variable #N -[DECREE.GetCost|0]#!#!"
  START_DIPLOMATIC_PLAY_SUMMARY: "#header Start a [WarGoal.GetName] [concept_diplomatic_play]#!"
  START_DIPLOMATIC_PLAY_TOOLTIP: "$START_DIPLOMATIC_PLAY_SUMMARY$\n[ConcatIfNeitherEmpty('$ERRORS$', '\n')]$TOOLTIP_DELIMITER$\n#b Initial War Goals#!\n[WAR_GOAL.GetDesc]\n[ConcatIfNeitherEmpty('$INCIDENT$', '\n')]\n$TARGETS$\n\n$PARTICIPANTS$"
  DIPLO_PLAY_TOOLTIP_PARTICIPANTS_HEADER: "#title Potential Participants#!"
  DIPLO_PLAY_TOOLTIP_TARGETS_HEADER: "At the start of the $concept_diplomatic_play_short$, we will #n face these enemies:#!:"
  DIPLO_PLAY_TOOLTIP_BACKERS_HEADER: "At the start of the $concept_diplomatic_play_short$, we will #p have these allies:#!:"
  DIPLO_PLAY_TOOLTIP_LIKELY_OUR_SIDE_HEADER: "We believe these [Concept('concept_country', '$concept_countries$')] may #p side with us#!:"
  DIPLO_PLAY_TOOLTIP_LIKELY_ENEMY_SIDE_HEADER: "We believe these [Concept('concept_country', '$concept_countries$')] may #n side with the enemy#!:"
  DIPLO_PLAY_TOOLTIP_FENCE_SITTERS_HEADER: "We believe these [Concept('concept_country', '$concept_countries$')] may #b join either side#! or #b remain neutral#!:"
  DIPLO_PLAY_TOOLTIP_COUNTRY_ENTRY: "[COUNTRY.GetName] (#variable @battalions![COUNTRY.GetBattalions|0]#! + #v [Country.CalcConscriptableBattalions]#!)"
  UNPRESSED_WAR_GOALS: "Unpressed War Goals:"
  INTEREST_GROUPS_TAB: "Interest Groups"
  IDEOLOGY_FOR: "Ideologies in favor: "
  IDEOLOGY_AGAINST: "Ideologies against: "
  IDEOLOGY: "$NAME$"
  PRO_IDEOLOGY: "$NAME|v$"
  ANTI_IDEOLOGY: "$NAME|v$"
  TOTAL_IDEOLOGY_APPROVAL: " ([Law.GetPercentPolStrApprove|v%1] of total [concept_clout])"
  TOTAL_IDEOLOGY_DISAPPROVAL: " ([Law.GetPercentPolStrDisapprove|v%1] of total [concept_clout])"
  INTEREST_GROUP_NAME: "#bold #v $NAME$#!#!"
  TOOLTIP_POPULATION: "#header [concept_interest_group] Population#!\n[InterestGroup.GetCountry.GetAdjective] supporters of [InterestGroup.GetName]: [InterestGroup.GetPopulation|v1*] ([InterestGroup.GetPopulationInCountryAsPercentage|v%1])\n$TOOLTIP_DELIMITER$\n#title Only [Concept('concept_pop','$concept_pops$')] that meet these criteria will consider supporting this $concept_interest_group$:#!\n[InterestGroup.GetPopPotentialDesc]\n\n#title Reasons why $concept_pops$ are attracted to (#g +#!) or avoid (#r -#!) this $concept_interest_group$ include#!:\n[InterestGroup.GetPopAttractionReasons]"
  POP_ATTRACTION_REASON_POSITIVE: "#g #b +#!#! $REASON$"
  POP_ATTRACTION_REASON_NEGATIVE: "#r #b -#!#! $REASON$"

  IG_POPULATION_PIECHART: "#header [InterestGroup.GetName]#!\nPopulation: #variable [InterestGroup.GetPopulation|K]#!\n$TOOLTIP_DELIMITER$\nPercentage of politically enfranchised population in [GetPlayer.GetName]: #variable [InterestGroup.GetPopulationInCountryAsPercentage|%1]#!"
  POPULATION_PIECHART: "#header [InterestGroup.GetName]#!\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\nPopulation: #variable [InterestGroup.GetPopulation|K]#!\n$TOOLTIP_DELIMITER$\nPercentage of politically enfranchised population in [GetPlayer.GetName]: #variable [InterestGroup.GetPopulationInCountryAsPercentage|%1]#!"
  IG_CLOUT_PIECHART: "#header [InterestGroup.GetName]#!\n$POL_STR_RATIO$\n$TOOLTIP_DELIMITER$\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
  CLOUT_PIECHART: "#header [InterestGroup.GetName]#!\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\n$POL_STR_RATIO$\n$TOOLTIP_DELIMITER$\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
  CLOUT_PIECHART_STATE: "#header [InterestGroup.GetName]#!\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\n[concept_clout] in [State.GetName]: #variable [InterestGroup.GetPoliticalStrengthInStateAsPercentage(State.Self)|%1]#!\n$TOOLTIP_DELIMITER$\nTotal [concept_clout] in [Country.GetName]: #variable [InterestGroup.GetClout|%1]#![InterestGroup.GetInfluenceDesc]\n\n$RAW_POL_STR$\n\n[concept_political_strength_desc]"
  CULTURE_PIECHART: "#header [Culture.GetName]#!\nPopulation: #v [Culture.GetPopulationAsPercentage(GetPlayer)|/%d] ([Culture.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [Culture.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Culture.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetDependentsAsPercentage(GetPlayer)|/%d] ([Culture.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [Culture.GetPolStrAsPercentage(GetPlayer)|/%d] ([Culture.GetPolStr(GetPlayer)|*])#!"
  RELIGION_PIECHART: "#header [Religion.GetName]#!\nPopulation: #v [Religion.GetPopulationAsPercentage(GetPlayer)|/%d] ([Religion.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [Religion.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Religion.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetDependentsAsPercentage(GetPlayer)|/%d] ([Religion.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [Religion.GetPolStrAsPercentage(GetPlayer)|/%d] ([Religion.GetPolStr(GetPlayer)|*])#!"
  POP_TYPE_PIECHART: "#header [PopType.GetName]#!\nPopulation: #v [PopType.GetPopulationAsPercentage(GetPlayer)|/%d] ([PopType.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [PopType.GetWorkforceAsPercentage(GetPlayer)|/%d] ([PopType.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetDependentsAsPercentage(GetPlayer)|/%d] ([PopType.GetDependents(GetPlayer)|*v])#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [PopType.GetPolStrAsPercentage(GetPlayer)|/%d] ([PopType.GetPolStr(GetPlayer)|*])#!"
  CULTURE_PIECHART_POL_STR: "#header [Culture.GetName]#!\n[concept_political_strength]: #variable [Culture.GetPolStrAsPercentage(GetPlayer)|/%d] ([Culture.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation: #v [Culture.GetPopulationAsPercentage(GetPlayer)|/%d] ([Culture.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [Culture.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Culture.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetDependentsAsPercentage(GetPlayer)|/%d] ([Culture.GetDependents(GetPlayer)|*v])#!"
  RELIGION_PIECHART_POL_STR: "#header [Religion.GetName]#!\n[concept_political_strength]: #variable [Religion.GetPolStrAsPercentage(GetPlayer)|/%d] ([Religion.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation: #v [Religion.GetPopulationAsPercentage(GetPlayer)|/%d] ([Religion.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [Religion.GetWorkforceAsPercentage(GetPlayer)|/%d] ([Religion.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetDependentsAsPercentage(GetPlayer)|/%d] ([Religion.GetDependents(GetPlayer)|*v])#!"
  POP_TYPE_PIECHART_POL_STR: "#header [PopType.GetName]#!\n[concept_political_strength]: #variable [PopType.GetPolStrAsPercentage(GetPlayer)|/%d] ([PopType.GetPolStr(GetPlayer)|*])#!\n$TOOLTIP_DELIMITER$\nPopulation: #v [PopType.GetPopulationAsPercentage(GetPlayer)|/%d] ([PopType.GetPopulation(GetPlayer)|*])#!\n$TAB$Workforce: #variable [PopType.GetWorkforceAsPercentage(GetPlayer)|/%d] ([PopType.GetWorkforce(GetPlayer)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetDependentsAsPercentage(GetPlayer)|/%d] ([PopType.GetDependents(GetPlayer)|*v])#!"
  STATE_CULTURE_PIECHART: "#header [Culture.GetName]#!\nPopulation: #v [Culture.GetStatePopulationAsPercentage(State.Self)|/%d] ([Culture.GetStatePopulation(State.Self)|*])#!\n$TAB$Workforce: #variable [Culture.GetStateWorkforceAsPercentage(State.Self)|/%d] ([Culture.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [Culture.GetStateDependentsAsPercentage(State.Self)|/%d] ([Culture.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [Culture.GetStatePolStrAsPercentage(State.Self)|/%d] ([Culture.GetStatePolStr(State.Self)|*])#!"
  STATE_RELIGION_PIECHART: "#header [Religion.GetName]#!\nPopulation: #v [Religion.GetStatePopulationAsPercentage(State.Self)|/%d] ([Religion.GetStatePopulation(State.Self)|*])#!\n$TAB$Workforce: #variable [Religion.GetStateWorkforceAsPercentage(State.Self)|/%d] ([Religion.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [Religion.GetStateDependentsAsPercentage(State.Self)|/%d] ([Religion.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [Religion.GetStatePolStrAsPercentage(State.Self)|/%d] ([Religion.GetStatePolStr(State.Self)|*])#!"
  STATE_POP_TYPE_PIECHART: "#header [PopType.GetName]#!\nPopulation: #v [PopType.GetStatePopulationAsPercentage(State.Self)|/%d] ([PopType.GetStatePopulation(State.Self)|*])#!\n$TAB$Workforce: #variable [PopType.GetStateWorkforceAsPercentage(State.Self)|/%d] ([PopType.GetStateWorkforce(State.Self)|*v])#!\n$TAB$[concept_dependents]: #variable [PopType.GetStateDependentsAsPercentage(State.Self)|/%d] ([PopType.GetStateDependents(State.Self)|*v])#!\n\n[concept_political_strength]: #variable [PopType.GetStatePolStrAsPercentage(State.Self)|/%d] ([PopType.GetStatePolStr(State.Self)|*])#!"
  RAW_POL_STR: "[concept_political_strength]: #variable [InterestGroup.GetPoliticalStrength|K]#!\n[InterestGroup.GetPoliticalStrengthDesc]"
  TOOLTIP_MARGINALIZATION: "#bold #v Marginalization#!#!\n$TOOLTIP_DELIMITER$\n$MARGINALIZATION_CONCEPT$"
  POL_STR_RATIO: "[concept_clout] in [InterestGroup.GetCountry.GetName]: #variable [InterestGroup.GetClout|%1]#![InterestGroup.GetInfluenceDesc]"
  MARGINAL_IG_DESC: "\nThis [concept_interest_group] is considered [concept_marginalized] because [INTEREST_GROUP.GetInfluenceReason]"
  MARGINALIZATION_REASON_BELOW_THRESHOLD: "its [concept_clout] is below #variable [GetDefine('NPolitics', 'MARGINAL_IG_THRESHOLD')|%0]#!"
  MARGINALIZATION_REASON_REVOLTING: "it is revolting against #variable [INTEREST_GROUP.GetCountry.GetName]#!"
  POWERFUL_IG_DESC: "\nThis [concept_interest_group] is considered [concept_powerful] because [INTEREST_GROUP.GetInfluenceReason]"
  POWERFUL_IG_TRAIT_BONUS_DESC: "Since this [concept_interest_group] is [concept_powerful], their [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')] have a #variable [GetDefine('NPolitics', 'POWERFUL_IG_TRAIT_BONUS')|=%0]#! stronger effect."
  POWERFUL_REASON_ABOVE_THRESHOLD: "its [concept_clout] is above #variable [GetDefine('NPolitics', 'POWERFUL_IG_THRESHOLD')|%0]#!"
  POWERFUL_REASON_ABOVE_CUTOFF: "its [concept_clout] is above #variable [GetDefine('NPolitics', 'POWERFUL_IG_CUTOFF')|%0]#!"
  NEUTRAL_IG_DESC: "\nThis [concept_interest_group] is considered [concept_influential]"
  RADICAL_IG_TOOLTIP: "#N [InterestGroup.GetName] supports a [concept_political_movement] that is plotting a [concept_revolution]!#!"
  REVOLUTION_IG_TOOLTIP: "#N [InterestGroup.GetName] supports an ongoing [concept_revolution]!#!"
  RADICALIZATION_CHANCE_TOOLTIP: "[InterestGroup.GetChanceToRadicalizeDesc]"
  RADICALIZATION_CHANCE_BREAKDOWN: "#header Weekly Chance to Radicalize: #v $CHANCE|-%$#!#!\n$TOOLTIP_DELIMITER$\nFrom [concept_approval]: #v $BASE|-=1%$#![ConcatIfNeitherEmpty('$SUPPRESSION_MODIFIER_FORMAT$','$SUPPRESSION_MODIFIER$')]"
  SUPPRESSION_MODIFIER_FORMAT: "\n#header Suppression:#!\n"
  POL_STR_FROM_VOTES: "[concept_political_strength] of [concept_votes] in an [concept_election]: #variable $VAL|+=D$#!:"
  POL_STR_FROM_WEALTH: "From [concept_wealth]: #variable $VAL|+=D$#!\n$TAB$Wealth #tooltippable #tooltip:[POP.GetTooltipTag],TOOLTIP_WEALTH #v $WEALTH|0$#!#!#!: #bold $VALPERPOP|+=$#! per Politically Active Pop"
  POL_STR_FROM_WEALTH_AVERAGE: "From [concept_wealth]: #variable $VAL|+=K$#!\n$TAB$Average Wealth #variable $WEALTH|1$#!: #bold $VALPERPOP|+=2$#! per Politically Active Pop"
  NO_ACTIVE_TRAITS: "No [Concept('concept_interest_group', '$concept_interest_groups$')] have any active [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')]"
  NO_ACTIVE_TRAITS_EXPLAIN: "#header [concept_interest_group] Traits#!\nEach [concept_interest_group] has a number of [Concept('concept_interest_group_trait', '$concept_interest_group_traits$')] that will be activated depending on the [concept_interest_group]'s [concept_approval]. These Traits have either negative or positive effects on your Country."
  PRODUCTION_METHOD_DISABLED_BY_GAME_RULE: "$concept_production_method$ disabled by a game rule"
  CHANGE_TO: "#title Change to#!"
  CURRENT_SUFFIX: "#title (Current)#!"
  INVESTMENT_TITLE: "Number of Investment Levels"
  COST_PER_INVESTMENT_TITLE: "[concept_bureaucracy] Cost / Investment Level"
  WEEKLY_COSTS_TITLE: "Total Weekly Cost"
  INSTITUTION_LEVEL_CHANGE: "Changing to Level [Institution.GetTargetInvestmentLevel]"
  INSTITUTION_CURRENT_LEVEL: "Level [Institution.GetInvestmentLevel]"
  INSTITUTION_TIME_TO_REACH_LEVEL: "$NUM_WEEKS|v$ weeks"
  INSTITUTION_TIME_TO_REACH_LEVEL_DAYS: "$NUM_DAYS|v$ days"
  INSTITUTION_TIME_TO_REACH_LEVEL_ONE_DAY: "1 day"
  INSTITUTION_TIME_TO_REACH_LEVEL_LESS_THAN_ONE_DAY: "Less than one day"
  NO_INSTITUTIONS: "No [Concept('concept_institution', '$concept_institutions$')]"
  MINCOST: "Minimum Cost: $VAL|v1$"
  INCORPORATED_POPULATION_LAW_COST: "Incorporated Population of $POPULATION|vK$ costs #v $COST|1+$#! per Investment\n$TAB$Base Cost: #v $BASECOST|1+$#! $MODIFIER$"
  INSTITUTION_INVESTMENT_FACTOR: "#title $COST_PER_INVESTMENT_TITLE$: #v $VAL|1+$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  INSTITUTION_INVESTMENT_TOTAL: "#header Total policy investment#!\nCurrent: #variable @ins! $VAL$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  INSTITUTION_INVESTMENT_LIST_ITEM: "#title [Institution.GetName]:#! #variable [Institution.GetInvestmentLevel]#!"
  CLOCK_TEXT: "#bold [TimeKeeper.GetCurrentDate.GetString]#!"
  CLOCK_DEBUG_TEXT: "[TimeKeeper.GetDayOfWeek] [TimeKeeper.GetTimeOfDay]"
  CLOCK_PAUSED: "(Paused)"
  CLOCK_PLAYING: "Playing"
  POLITICAL_ACTION_EFFECT: "#!This is a Political Action\nCost:  $POWER_COST$\n$DEMANDING_IGS$Will give you #variable $TRUST|+=$#! Trust#! $IG_EFFECTS$"
  POLITICAL_ACTION_EFFECT_IG_LINE: "\n#header $NAME$:#!"
  INFRASTRUCTURE_EFFECTS_HEADER: "Effects of [concept_infrastructure]:"
  SEA_REGION_PANEL_PRESENCE_OWNER: "[SeaRegionNavalPresence.GetCountry.GetNameNoFormatting]"
  SEA_REGION_PANEL_PRESENCE_OWNER_TOOLTIP: "#variable [SeaRegionNavalPresence.GetCountry.GetName]#! has warships in #variable [SeaRegionNavalPresence.GetProvince.GetStateRegion.GetName]#!"
  SEA_REGION_PANEL_PRESENCE_INFRASTRUCTURE: "[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetSeaInfrastructure(SeaRegionNavalPresence.GetCountry)]"
  SEA_REGION_PANEL_PRESENCE_INFRASTRUCTURE_TOOLTIP: "#header Infrastructure#!\n[SeaRegionNavalPresence.GetProvince.GetStateRegion.GetSeaInfrastructureDesc(SeaRegionNavalPresence.GetCountry)]"
  NAVAL_PRESENCE: "Naval Presence"
  BATTLES: "Battles"
  SEA_REGION_MAP_MARKER_BATTLE_ONGOING: "A Battle between #variable [Battle.GetAttacker.GetName]#! and #variable [Battle.GetDefender.GetName]#!"
  SEA_INFRASTRUCTURE_MAP_MARKER_TOOLTIP: "#header [StateRegion.GetName] [concept_market_access]#!\n[StateRegion.GetSeaInfrastructureDesc(GetPlayer)]"
  STATE_INFRASTRUCTURE_MAP_MARKER_TOOLTIP: "#header [State.GetName] [concept_market_access]#!\n[State.GetMarketAccessDesc]"
  ERROR_DEER_TOOLTIP: "#header Oh Deer!#!\n#instruction Left-Click#! to open Error Log\n#instruction Right-Click#! to make it go away (until you upset it again)"
  TRADE_LENS: "[concept_trade_lens]"
  PRODUCTION_LENS: "[concept_production_lens]"
  POLITICAL_LENS: "[concept_political_lens]"
  DIPLOMATIC_LENS: "[concept_diplomatic_lens]"
  MILITARY_LENS: "[concept_military_lens]"
  TOOLTIP_GO_BACK: "#bold #v Back#!#!"
  TOOLTIP_CLOSE_WINDOW: "#bold #v Close#!#!"
  TOOLTIP_MINIMIZE_WINDOW: "#bold #v Minimize#!#!"
  FOUND_IN_BUY_PACKAGES: "$TYPE|v$ Pops with Wealth #variable $LOW$ - $HIGH$#!"
  rural: "Rural"
  urban: "Urban"
  TOOLTIP_WAR_SUMMARY: "#HEADER [War.GetName]#!\n#bold Attackers#!:\n#v [War.GetAttackerListString]#!\n#bold Defenders#!:\n#v [War.GetDefenderListString]#!"
  TOOLTIP_REVOLUTION_SUMMARY: "#HEADER Revolution!"
  CALC_WAR_EXHAUSTION: "In #variable $TIMER$#! days they will get #bold $LOSS|+$#! due to Exhaustion\n$TAB$#N #bold $BASE$#!#! from Base Decay\n$TAB$#bold $OCCUPATION_CHANGE|+$#! because they are #variable $OCCUPATION|%1$#! Occupied\n$TAB$#bold $WARGOALS_CHANGE|+$#! because their enemy controls #variable $WARGOALS|%1$#! of their Wargoals\n$TAB$#bold $CASUALTIES_CHANGE|+$#! because they have taken #v $CASUALTIES|1$K#! casualties compared to #v $MANPOWER|1$K#! available [concept_manpower] and their side has lost #v $BATTLES_LOST_PERCENTAGE|0%$#! of the [Concept('concept_battle', '$concept_battles$')] (scaled by involved manpower)\n$TAB$#bold $TURMOIL_CHANGE|+$#! because #variable $TURMOIL|%1$#! of their population are [concept_radical]\n$TAB$#bold $SITUATIONS_CHANGE|+$#! because of events"
  TOOLTIP_COUNTRY: "#bold #v [GetPlayer.GetName]#!#!"
  TOOLTIP_COUNTRY_DELAYED: "\n$TOOLTIP_DELIMITER$\nCultures: #VARIABLE [GetPlayer.GetPrimaryCulturesDesc]#!\nReligion: #VARIABLE [GetPlayer.GetStateReligion.GetName]#!\nCapital: #VARIABLE [GetPlayer.GetCapital.GetName]#!\n\n[concept_country_desc]"
  TOOLTIP_BUILDING_USES: "#header [Goods.GetNameNoFormatting]#!"
  TOOLTIP_BUILDING_USES_UNITS_INFO: "#header [Goods.GetName]#!\nAmount used: #variable [Building.GetConsumption(Goods.Self)|0]#! / week\n[Building.GetConsumptionDesc(Goods.Self)]"
  TOOLTIP_BUILDING_PRODUCES: "#header [Goods.GetNameNoFormatting]#!\n"
  TOOLTIP_BUILDING_PRODUCES_UNITS_INFO: "#header [Goods.GetName]#!\nAmount produced: #variable [Building.GetProduction(Goods.Self)|0]#! / week\n$TOOLTIP_DELIMITER$\nOutput percentage: #variable [Building.GetOutputPercentage(Goods.Self)|%1]#! of production from [Building.GetName]\n[Building.GetProductionDesc(Goods.Self)]"
  TOOLTIP_BUILDING_USES_VALUE_INFO: "#header [Goods.GetTextIcon][Nbsp][Goods.GetName]#!\nExpenses paid for [Goods.GetTextIcon][Nbsp][Goods.GetName] used: #variable @money![Building.GetConsumptionValue(Goods.Self)|D]#!\n$TOOLTIP_DELIMITER$\nState Region price: [Goods.GetStatePriceWithTooltip|1]"
  TOOLTIP_BUILDING_PRODUCES_VALUE_INFO: "#header [Goods.GetName]#!\nRevenue from #variable [Goods.GetName]#! sold: #variable @money![Building.GetProductionValue(Goods.Self)|D]#!\n$TOOLTIP_DELIMITER$\nState Region Price: [Goods.GetStatePriceWithTooltip]"
  TOOLTIP_RESET: "#bold #v Reset"
  MARKET_BALANCE: "#title Balance:\n#variable @money![Market.GetBalance|D+=]#!#!"
  MARKET_BALANCE_TOOLTIP: "#header Market Balance#!\nAmount: #variable @money!$VAL|D+=$#!\n$TOOLTIP_DELIMITER$\nTotal Sales: #variable @money!$SALESVAL|D$#!\n$SALESBREAKDOWN$\n\nTotal Purchases: #variable @money!$PURCHASEVAL|D$#!\n$PURCHASEBREAKDOWN$"
  MARKET_GOOD_PRODSTATS: "[GOODS.GetTextIcon] #variable $AMOUNT|D$#! sold for #variable @money!$VAL|D$#! ([GOODS.GetName])"
  MARKET_GOOD_CONSUMESTATS: "[GOODS.GetTextIcon] #variable $AMOUNT|D$#! bought for #variable @money!$VAL|D$#! ([GOODS.GetName])"
  AND_X_MORE_MONEY_VAL: "...and #variable $NUM$#! more worth #variable @money!$VAL|D$#!"
  BUILDING_URBANIZATION_WITH_VALUE: "$VALUE|0v=$ from [BUILDING.GetName]"
  BUILDING_INFRA_USAGE_WITH_VALUE: "#v $VALUE|0-$#! from [BUILDING.GetName]"
  BUILDING_COMBAT_UNIT_PRODUCTION: "Provides $UNIT_ICON$ $UNIT_COUNT|v$"
  IMPORT_SUGGESTIONS_TITLE: "Goods with considerable Import demand"
  EXPORT_SUGGESTIONS_TITLE: "Goods with considerable potential for Export"
  NO_GOODS_IMPORT_SUGGESTION: "No [Concept('concept_good', '$concept_goods$')] have considerable import demand"
  NO_GOODS_EXPORT_SUGGESTION: "No [Concept('concept_good', '$concept_goods$')] have considerable export demand"
  MARKET_GOODS_BALANCE_TOOLTIP: "[SelectLocalization(LessThan_int32(FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance), '(int32)0'), 'MARKET_GOODS_BALANCE_TOOLTIP_IMBALANCE', 'MARKET_GOODS_BALANCE_TOOLTIP_BALANCE')]"
  MARKET_GOODS_BALANCE_TOOLTIP_BALANCE: "#header Balance for [Goods.GetName]#!\nCurrent balance: #v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=D+]#!\n$TOOLTIP_DELIMITER$\n[concept_sell_orders]: [Goods.GetMarketSellOrdersWithTooltip]\n[concept_buy_orders]: [Goods.GetMarketBuyOrdersWithTooltip]\n\nThe bar shows the [Concept('concept_market_impact', '$concept_market_impact_short$')] the current balance of [Goods.GetTextIcon] [Goods.GetName] has on the [Goods.GetMarket.GetName]. The more #blue blue#! or #gold gold#! the bar is, the higher $concept_market_impact_short$ it has."
  MARKET_GOODS_BALANCE_TOOLTIP_IMBALANCE: "#header Balance for [Goods.GetName]#!\nCurrent imbalance: #v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=D+]#!\n$TOOLTIP_DELIMITER$\n[concept_sell_orders]: [Goods.GetMarketSellOrdersWithTooltip]\n[concept_buy_orders]: [Goods.GetMarketBuyOrdersWithTooltip]\n\nThe bar shows the [Concept('concept_market_impact', '$concept_market_impact_short$')] the current imbalance of [Goods.GetTextIcon] [Goods.GetName] has on the [Goods.GetMarket.GetName]. The more #blue blue#! or #gold gold#! the bar is, the higher $concept_market_impact_short$ it has."
  PRODUCED_IN: "Produced in"
  CONSUMED_IN: "Consumed in"
  POP_IG_POPULATION: "#variable [PopListPopEntry.GetIGTotalPops|D]#!"
  POP_WORK_INFO: "from [Pop.GetWorksAt]"
  POP_TOTAL_INFO: "#header Total Size#!\n[Pop.GetTotalSize|Dv] including [concept_dependents]"
  POP_IG_POPULATION_TOOLTIP: "#header [concept_interest_group] Members#!\n$TOOLTIP_DELIMITER$\n$POP_IG_POPULATION_WORKING_ADULTS$\n$POP_IG_POPULATION_DEPENDENTS$"
  POP_IG_WORKING_ADULTS: "Working Adults: #variable [PopListPopEntry.GetIGWorkingAdults|D]#!"
  POP_IG_DEPENDENTS: "#header Dependents#!\nValue: #variable [PopListPopEntry.GetIGDependents|1D]#!\n$TOOLTIP_DELIMITER$\n[concept_dependents_desc]"
  POP_IG_POPULATION_WORKING_ADULTS: "This Pop supports the #variable [PopListPopEntry.GetContextIG.GetName]#! with #variable [PopListPopEntry.GetIGWorkingAdults|1K]#! of their #variable [PopListPopEntry.GetPop.GetNumWorkforce|1K]#! Workforce"
  POP_IG_POPULATION_DEPENDENTS: "This Pop supports the #variable [PopListPopEntry.GetContextIG.GetName]#! with #variable [PopListPopEntry.GetIGDependents|1K]#! of their #variable [PopListPopEntry.GetPop.GetNumDependentPoliticalParticipants|1K]#! Enfranchised Dependents"
  POP_IG_WORKING_ADULTS_TOOLTIP: "#variable Working Adults#!\n$POP_IG_POPULATION_WORKING_ADULTS$"
  POP_IG_DEPENDENTS_TOOLTIP: "#variable Dependents#!\n$POP_IG_POPULATION_DEPENDENTS$"
  POP_IG_POL_STR: "Pol. Str: #variable [PopListPopEntry.GetIGPolStr|D]#!"
  POP_IG_POL_STR_TOOLTIP: "#header [concept_political_strength]#!\n$TOOLTIP_DELIMITER$\nThis Pop supports the #variable [PopListPopEntry.GetContextIG.GetName]#! with #variable [PopListPopEntry.GetIGPolStr|K]#! of their #variable [PopListPopEntry.GetPop.GetPoliticalStrength|D]#! [concept_political_strength]."
  POP_POL_STR: "#header [concept_political_strength]#!\nValue: #variable [Pop.GetPoliticalStrength|1*]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPoliticalStrengthDesc][AddTextIf(Not(StringIsEmpty(Pop.GetPoliticalStrengthDesc)), '\n\n')]"
  POP_POPULATION: "#header [Concept('concept_pop','$concept_population$')] of [Pop.GetName] in [Pop.GetState.GetName]#!\n$POP_SIZE_BREAKDOWN$\n$TOOLTIP_DELIMITER$\n[Pop.GetPopGrowthDesc]\n[ConcatIfNeitherEmpty('\n',Pop.GetPopAssimilationDesc)][ConcatIfNeitherEmpty('\n',Pop.GetPopConversionDesc)]   $TOOLTIP_DELIMITER$\n[Pop.GetWorkforceRatioDesc]"
  POP_SIZE_BREAKDOWN: "Total: #variable [Pop.GetTotalSize|Dv]#!\n$TAB$Workforce: #variable [Pop.GetNumWorkforce|Dv]#!\n$TAB$Dependents: #variable [Pop.GetDependentsSize|Dv]#!"
  WORKFORCE_RATIO_DESC: "#variable $VAL|%1$#! of this Pop is in the Workforce while the rest are Dependents. Over time this ratio will approach #variable $TARGET_VAL|%1$#! due to:\n$BREAKDOWN$"
  TARGET_WORKFORCE_RATIO_BASE_FOR_TYPE: "Base value for #variable $POP_TYPE$#!: #variable $VAL|%1$#!"
  CHANGE_SPEED_TOOLTIP_1: "Change the speed to 1"
  CHANGE_SPEED_TOOLTIP_2: "Change the speed to 2"
  CHANGE_SPEED_TOOLTIP_3: "Change the speed to 3"
  CHANGE_SPEED_TOOLTIP_4: "Change the speed to 4"
  CHANGE_SPEED_TOOLTIP_5: "Change the speed to 5"
  POP_WORKFORCE_TOOLTIP: "#header Workforce#!\nValue: #variable [Pop.GetNumWorkforce|1K]#!\n$TOOLTIP_DELIMITER$\n[concept_pop_qualifications]\n[Pop.GetQualificationsDesc]\n$TOOLTIP_DELIMITER$\n[concept_working_adults_desc]"
  POP_DEPENDENTS_TOOLTIP: "#header Dependents#!\nValue: #variable [Pop.GetDependentsSize|1K]#!\n$TOOLTIP_DELIMITER$\n[concept_dependents_desc]"
  DEPENDENT_WAGE_SOURCES: "from $BREAKDOWN$"
  DEPENDENT_WAGE_SOURCE_ODD_JOBS: "odd jobs"
  DEPENDENT_WAGES_TOOLTIP: "#header Dependent Wages: #variable @money!$VAL|=+D$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  DEPENDENT_BASE_WAGES: "Base: @money!$VAL|0v$ (@money!$PERPOP|3v$ per Dependent)"
  POP_POPULATION_GROWTH: "#tooltip_header Population Growth#!\nYearly Population Change: #variable [Pop.GetPopGrowth|+=0]#!\n$TOOLTIP_DELIMITER$\n[Pop.GetPopGrowthDesc]"
  POP_POPULATION_LITERACY: "#header Literacy#!\n[Pop.GetLiteracyDesc]"
  POP_BUILDING_SHARES: "[concept_ownership_share]: #v $SHARE|%1$#!"
  POP_DISCRIMINATION_STATUS_TOOLTIP: "[Pop.GetDiscriminationTooltip]"
  POP_DISCRIMINATION_HEADER: "Acceptance:"
  POP_DISCRIMINATION_STATUS_DISCRIMINATED: "$concept_discriminated$"
  POP_DISCRIMINATION_STATUS_ACCEPTED: "Accepted"
  POP_DISCRIMINATION_PRIMARY_CULTURE_DESC: "[concept_primary_cultures] are never [Concept('concept_discrimination','$concept_discriminated_against$')], regardless of [Concept('concept_law', '$concept_laws$')]"
  POP_DISCRIMINATION_SLAVE: "Slaves are always [Concept('concept_discrimination','$concept_discriminated_against$')]"
  TURMOIL_TITLE: "#title [concept_turmoil]#!"
  TURMOIL_ENTRY_TITLE: "#title [concept_turmoil]:#!"
  NET_INCOME_TITLE: "#title Net Income#!"
  PRODUCTION_NO_CONCEPT: "Production"
  STATISTICS: "Statistics"
  TURMOIL: "Turmoil:"
  MIGRATION_TARGETS: "Migration Targets:"
  CULTURAL_TRAITS: "Cultural Traits:"
  CULTURE_OBSESSIONS: "Obsessions:"
  CULTURE_TABOOS: "Taboos:"
  HOMELANDS: "Homelands"
  OWNER: "Owner"
  CULTURE_OF_SAME_HERITAGE: "Cultures of the same heritage ([GetDataModelSize(Culture.AccessSameHeritageCultures)])"
  TURMOIL_OF_CULTURE: "Average [concept_turmoil] of all the [Concept('concept_pop', '$concept_pops$')] of this Culture"
  POP_NEEDS_HEADER: "Consists of the following [Concept('concept_good', '$concept_goods$')] that are mutually substitutable through [concept_goods_substitution]:"
  POP_NEEDS_ENTRY_DEFAULT: "[Goods.GetTextIcon][Nbsp][Goods.GetName] - Default [Concept('concept_good', '$concept_goods$')] for [POP_NEED.GetName]"
  POP_NEEDS_ENTRY: "[Goods.GetTextIcon][Nbsp][Goods.GetName] - Equivalent to $MULT|2v$ unit(s) of [POP_NEED.GetDefaultGoods.GetName]"
  BUY_PACKAGE_POP_CONSUMPTION_WEALTH_SPECIFIC: "Consumed by [Concept('concept_pop', '$concept_pops$')] of [concept_wealth] Levels $LEVEL|v$"
  BUY_PACKAGE_POP_CONSUMPTION_WEALTH_TO_LEVEL: "Consumed by [Concept('concept_pop', '$concept_pops$')] of [concept_wealth] Level $LEVEL|v$ and below"
  BUY_PACKAGE_POP_CONSUMPTION_WEALTH_FROM_LEVEL: "Consumed by [Concept('concept_pop',  '$concept_pops$')] of [concept_wealth] Level $LEVEL|v$ and above"
  BUY_PACKAGE_POP_CONSUMPTION_WEALTH_BETWEEN_LEVELS: "Consumed by [Concept('concept_pop', '$concept_pops$')] between [concept_wealth] Levels $FROM|v$ to $TO|v$"
  BUY_PACKAGE_POP_CONSUMPTION_WEALTH_ALL: "Consumed by [Concept('concept_pop', '$concept_pops$')] of all [concept_wealth] Levels"
  BUY_PACKAGE_POP_CONSUMPTION_WEALTH_NONE: "Not consumed by any [Concept('concept_pop', '$concept_pops$')]"
  POPNEED_NAME_TOOLTIPABLE: "#tooltippable #tooltip:$TAG$,POPNEED_DETAILS_TOOLTIP $NAME$#!#!"
  POPNEED_SUMMARY_DESC: "#tooltippable #tooltip:$TAG$,POPNEED_EXPENSES_TOOLTIP @money![POP_NEED.CalcTotalCost|Dv]#!#! - #tooltippable #tooltip:$TAG$,POPNEED_DETAILS_TOOLTIP [POP_NEED.GetName]#!#!"
  POPNEED_DETAILS_DESC: "#header [POP_NEED.GetName]#!\n$CONSUMPTIONDESC$\n$TOOLTIP_DELIMITER$\n$GOODSDESC$"
  POPNEED_EXPENSES_DESC: "Current [POP_NEED.GetName] expenses for [POP.GetTotalSize|Kv] [POP.GetCulture.GetName] [POP.GetPopType.GetName] in [POP.GetState.GetName]:\n$CONTENTS$\nTotal Cost: @money![POP_NEED.CalcTotalCost|Dv]"
  POPNEED_DETAILS_TOOLTIP: "[PopNeed.GetDetailsDesc]"
  POPNEED_EXPENSES_TOOLTIP: "[PopNeed.GetExpensesDesc]"
  BUY_PACKAGE_POP_NEEDS_ENTRY: "[Goods.GetTextIcon][Nbsp][Goods.GetName]$CULTURESTATUSDESC$\n#bold $AMOUNT|vD$#! ($AMOUNT_PERCENT|1v%$ of the amount)\n#variable @money!$GOODS_TOTAL_COST|D$#! ([Goods.GetCompareIconAgainstBasePrice( '(CFixedPoint)$GOODS_UNITARY_PRICE$' )]) ($GOODS_COST_PERCENT|1v%$ of the cost)\n\n"
  BUY_PACKAGE_GOOD_CULTURE_TABOO: " ([concept_taboo])"
  BUY_PACKAGE_GOOD_CULTURE_OBSESSION: " ([concept_obsession])"
  POPNEED_USAGE_DESC: "Consumed by [Concept('concept_pop', '$concept_pops$')] of $WEALTHDESC$ (#tooltippable #tooltip:$TAG$,POPNEED_DETAILS_TOOLTIP [POP_NEED.GetName]#!#! [Concept('concept_pop_needs','$concept_pop_needs_short$')])"
  POPNEED_USAGE_WEALTH_SPECIFIC: "[concept_wealth] Level $LEVEL|v$"
  POPNEED_USAGE_WEALTH_BETWEEN_LEVELS: "[concept_wealth] Levels $FROM|v$ to $TO|v$"
  POPNEED_USAGE_WEALTH_ALL: "All [concept_wealth] Levels"
  POPNEED_USAGE_WEALTH_NONE: "No [concept_wealth] Levels"
  BUY_PACKAGE_CONTENT_ENTRY_WITH_COSTS: "#bold $AMOUNT|vD$#! [Goods.GetTextIcon][Nbsp][Goods.GetName] - #variable @money!$GOODS_TOTAL_COST|D$#! ([GOODS.GetCompareIconAgainstBasePrice( '(CFixedPoint)$GOODS_UNITARY_PRICE$' )])"
  TOOLTIP_QOL_BUY_PACKAGE: "#header [concept_sol]#!\nIs currently #variable [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(EmployeeStats.GetCurrentStandardOfLiving)]#! (#v [EmployeeStats.GetCurrentStandardOfLiving]#!)\nExpecting to be #variable [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(EmployeeStats.GetExpectedStandardOfLiving)]#! (#v [EmployeeStats.GetExpectedStandardOfLiving]#!)"
  IN_TOTAL: "in Total"
  POP_WEEKLY_INCOME: "#bold Weekly Income: #variable @money!$VAL|+D$#!#!\n$BREAKDOWN$\n"
  POP_WEEKLY_EXPENSES: "#bold Weekly Expenses: #variable @money!$VAL|+D$#!#!\n$BREAKDOWN$\n"
  POP_WEEKLY_MONEY: "#bold Weekly Money: #variable @money!$VAL|+D$#!#!\n$BREAKDOWN$\n"
  POP_WEEKLY_wage: "Wages: #variable @money!$VAL|+=D$#!"
  POP_WEEKLY_dependent_production: "Dependent Wages: #variable @money!$VAL|+=D$#!"
  POP_WEEKLY_subsistence_income: "[concept_subsistence_output]: #variable @money!$VAL|+=D$#!"
  POP_WEEKLY_dividends: "Dividends: #variable @money!$VAL|+=D$#!"
  POP_WEEKLY_interest: "Interest: #variable @money!$VAL|+=D$#!"
  POP_WEEKLY_welfare: "[concept_welfare_payments]: #variable @money!$VAL|+=D$#!"
  POP_WEEKLY_income_taxes: "Income Taxes: #variable @money!$VAL|+=D$#!"
  POP_WEEKLY_needs: "[Concept('concept_pop_needs','$concept_pop_needs_short$')]: #tooltippable #tooltip:[Pop.GetTooltipTag],NEEDS_BREAKDOWN #variable @money!$VAL|+=D$#!#!#!"
  POP_WEEKLY_losses: "Investment Losses: #variable @money!$VAL|+=D$#!"
  TOOLTIP_WEALTH: "#header Wealth#!\nLevel [Pop.GetCurrentWealth|v] [Concept('concept_pop_needs','$concept_pop_needs_short$')]\n$TOOLTIP_DELIMITER$\n$POP_NET_INCOME$"
  TOOLTIP_WEALTH_SLAVE: "#header Wealth#!\nSlave upkeep is satisfying this Slave [concept_pop]'s [Concept('concept_pop_needs','$concept_pop_needs_short$')] to Level [Pop.GetCurrentWealth|v]\n$TOOLTIP_DELIMITER$\n#bold Slave Upkeep Breakdown:#!\n[Pop.GetNeedsDesc]"
  TOOLTIP_WEALTH_SUBSISTENCE: "#header Wealth#!\nTheir [concept_subsistence_output] of @money![Pop.GetAverageAnnualWage|Dv] and annual [concept_budget_poll_taxes] of @money![Pop.CalcAnnualPollTaxAmount|Dv] is satisfying the [GetPopType('peasants').GetName]' [Concept('concept_pop_needs','$concept_pop_needs_short$')] equivalent to Level [Pop.GetCurrentWealth|v]\n\nA [concept_building] that wants to hire from this [concept_pop] will need to offer a wage of at least @money![Pop.GetWageRequiredToHireFrom|Dv]."
  TOOLTIP_POP_NET_INCOME: "#header Net [Concept('concept_pop_income','$concept_pop_income_short$')]#!\n#variable @money![Subtract_CFixedPoint(Pop.GetIncome, Pop.GetExpenses)|+=D]#!\n$TOOLTIP_DELIMITER$\n$POP_NET_INCOME$"
  POP_NET_INCOME: "[Pop.GetIncomeExpensesBalanceDesc]\nProgress towards next Wealth level: #v [Pop.GetWealthProgression|+=%0]#!\n\nAnnual Income per Working Adult: @money![Pop.GetAverageAnnualWage|Dv]"
  POP_MONEY_BALANCE: "$INCOME$\n$EXPENSES$"
  POP_ECONOMY_WEEKLY_INCOME: "#title Weekly $concept_pop_income$#!"
  POP_ECONOMY_WEEKLY_EXPENSES: "#title Weekly $concept_pop_income_expenses$#!"
  POP_GOODS_CONSUMPTION_TOOLTIP_HEADER: "[PopConsumptionGoods.GetGoods.GetNameNoFormatting] $concept_good_consumption$"
  POP_GOODS_BUDGET_EXPENDITURE_PERCENTAGE: "#header [Goods.GetTextIcon] [Goods.GetName] Expenditure Percentage#!\n#v [PopConsumptionGoods.GetConsumptionRatio|1%v]#! of this [Concept('concept_pop','$concept_pop_possessive$')] budget is spent on [Goods.GetName].\nPart of the [PopConsumptionGoods.GetPopNeedsDesc] [concept_pop_needs]."
  POP_GOODS_AMOUNT_CONSUMED: "Amount of [Goods.GetTextIcon] [Goods.GetName] [Concept('concept_good_consumption','$concept_good_consumed$')] by [Pop.GetName]"
  POP_LIST_SOL: "#variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#!  ([Pop.GetCurrentStandardOfLiving|v])"
  NEEDS_BREAKDOWN: "#header [concept_pop_needs]#!\n[Pop.GetNeedsDesc]"
  AVG_WAGE_POP_LIST: "Avg. Annual Wage: @money![PopListItem.GetAverageAnnualWage|vD]"
  AVG_WAGE_SUBSISTENCE_POP_LIST: "[concept_subsistence_output]: @money![PopListItem.GetAverageAnnualWage|vD]"
  TOOLTIP_POP_QOL_TURMOIL: "\nLow [concept_sol] increases [concept_turmoil_target] by #variable $VAL|-=D$ #!"
  TOOLTIP_POP_QOL: "#header [concept_sol]#!\nCurrent: #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#! ([Pop.GetCurrentStandardOfLiving|v])\nMinimum Expected: #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetExpectedStandardOfLiving)]#! #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_POP_EXPECTED_SOL ([Pop.GetExpectedStandardOfLiving|v])#!#!\n[concept_sol] affects Pop Growth rate, which is currently #tooltippable #tooltip:[Pop.GetTooltipTag],GROWTH_RATE_BREAKDOWN [Pop.GetNetGrowthRate|%=+]#!#!\nIf [concept_sol] is below the Minimum Expected, this [concept_pop] will become more [concept_radical] over time\n$TOOLTIP_DELIMITER$\nThis Pops [concept_sol] of #variable [LabelingHelper.GetLabelForStandardOfLiving(Pop.GetCurrentStandardOfLiving)]#! ([Pop.GetCurrentStandardOfLiving|v]) is due to:\n$TAB$Wealth: #variable #tooltippable #tooltip:[Pop.GetTooltipTag],TOOLTIP_WEALTH [Pop.GetCurrentWealth]#!#!#!\n[Pop.GetCurrentSoLModifiersDesc]\n[Pop.GetAdditionalSOLFactorsDesc]"
  GROWTH_RATE_BREAKDOWN: "#header Growth Rate#!\n[Pop.GetPopGrowthDesc]"
  TOOLTIP_POP_EXPECTED_SOL: "#header Minimum Expected [concept_sol]#!\nTotal: [Pop.GetExpectedStandardOfLiving]\n$TOOLTIP_DELIMITER$\n[Pop.GetExpectedStandardOfLivingDesc]"
  EXPECTED_SOL_FROM_LITERACY: "From [concept_literacy]: #tooltippable #tooltip:[Pop.GetTooltipTag],EXPECTED_SOL_FROM_LITERACY_BREAKDOWN #v $VALUE|=$#!#!#!"
  EXPECTED_SOL_FROM_LITERACY_BREAKDOWN: "#header Minimum Expected [concept_sol] from [concept_literacy]#!\nTotal: [Pop.GetExpectedStandardOfLivingFromLiteracy]\n$TOOLTIP_DELIMITER$\n[Pop.GetExpectedStandardOfLivingFromLiteracyDesc]"
  MODIFIED_BY_LITERACY_RATE: "Modified by #v ×$LITERACY_RATE|2$#! due to [concept_literacy]"
  SOL_FACTOR_TAXES: "They pay an average of #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $TAX_BURDEN|%1$#!#!#! of their income in [concept_taxes], reducing their available money for [concept_pop_needs]"
  SOL_FACTOR_MODIFIERS: "The [concept_sol] of them is changed by #v $VALUE|1=+$#! due to modifiers"
  SOL_FACTOR_NO_MODIFIERS: "They are currently not affected by any [concept_sol] modifiers"
  SOL_FACTOR_GOODS: "They pay an average of #v #tooltip:COIN_STACK_TOOLTIP $PRICEICON$#! #tooltippable #tooltip:$BREAKDOWN_TAG$ $RELATIVE_PRICE|=-%1$#!#!#! compared to [concept_base_price] for their [concept_pop_needs]. $GOODS_BREAKDOWN_SHORT_SUMMARY$"
  SOL_FACTOR_SLAVES: "$POP_FRACTION|%1v$ of them are [Concept('concept_slavery', '$concept_enslaved$')], forcing them into a very low [concept_sol]"
  SOL_FACTOR_PEASANTS: "$POP_FRACTION|%1v$ of them are [GetPopType('peasants').GetName] in [Concept('concept_subsistence_building', '$concept_subsistence_buildings$')], limiting them to a low [concept_sol]"
  SOL_FACTOR_TAX_ENTRY: "$TAX_LEVEL|%1v$ of income paid in $TAX_TYPE$"
  SOL_FACTOR_GOODS_ENTRY: "$RELATIVE_EXPENDITURES|v1%$ - [Goods.GetTextIcon][Nbsp][Goods.GetName] - @money!$PRICE|v1$ #tooltippable #tooltip:COIN_STACK_TOOLTIP $PRICEICON$#!#! ($RELATIVE_PRICE|=-%1$)"
  SOL_FACTOR_GOODS_ENTRY_SHORT: "[Goods.GetTextIcon][Nbsp][Goods.GetName] ($RELATIVE_EXPENDITURES|v1%$)"
  SOL_FACTOR_GOODS_BREAKDOWN_SHORT_SUMMARY: "Their largest expenses are $SUMMARY_LIST$."
  SOL_FACTOR_GOODS_BREAKDOWN: "#header [concept_pop_needs]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  SOL_FACTOR_TAX_BREAKDOWN: "#header [Concept('concept_taxes','$concept_taxation$')]#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  EXPECTED_SOL_FACTOR_STRATA: "$FRACTION|%1v$ of them are $STRATA|v$: $VALUE|=v$"
  EXPECTED_SOL_FACTOR_LITERACY: "They have an average of $LITERACY|%0v$ [concept_literacy]: $VALUE|=v$"
  SOL_BELOW_EXPECTED: "@warning! $TOTAL|vD$ ($FRACTION|%1v$) of them have a [concept_sol] below the $EXPECTED_SOL_SHORT$ and will become more [concept_radical] over time"

  SOL_WELFARE: "$TOTAL|vD$ ($FRACTION|%1v$) of them are receiving [concept_welfare_payments], raising their [concept_sol]"
  TOOLTIP_SOL_MODIFIERS: "$BREAKDOWN$"
  POP_DETAILS_TITLE: "#bold Pop Details#!"
  POP_DETAILS_IG: "\n#instruction Click#! to go to #variable [Pop.GetLargestInterestGroup.GetName]#!"
  EMPLOYEE_POPS_LIST: "$RELIGION$ $CULTURE$ $TYPE$: $SIZE$"
  CONDITIONS_NOT_SATISFIED: "Following conditions prevent this action:"
  CREATE_MARKET: "#bold Create [concept_market] in #v $STATE$#!#!"
  MERGE_MARKET: "Link [STATE.GetName] to #v [MARKET.GetName]#!"
  SPLIT_MARKET: "Unlink [STATE.GetName] from #v [MARKET.GetName]#!"
  CANNOT_BUILD_BUILDING: "#bold #N Cannot $BUILD_OR_EXPAND$ #v [BUILDING_TYPE.GetName]#! in [STATE.GetName]!#!#!"
  CANNOT_BUILD_MARKET: "#bold #N Cannot build #v Market#! here!#!#!"
  CANNOT_MERGE_MARKET: "#bold #N Cannot link #v Market#! here!#!#!"
  CANNOT_MERGE_MARKET_STATE: "#bold #N Cannot link to #v [MARKET.GetName]#! market#!#!"
  CANNOT_SPLIT_MARKET_STATE: "#bold #N Cannot unlink from #v [MARKET.GetName]#! market#!#!"
  CANNOT_ESTABLISH_TRADE_ROUTE: "#bold #N Cannot establish #v [concept_trade_route]#! here!#!#!"
  INACTIVE: "Inactive"
  INACTIVE_TRADE_ROUTES: "Your Inactive [Concept('concept_trade_route', '$concept_trade_routes$')]"
  UNPRODUCTIVE_TRADE_ROUTES: "Your Unproductive [Concept('concept_trade_route', '$concept_trade_routes$')]"
  CONSTRUCTION_SECTOR_INPUT_FACTOR: "Multiplied by #v x$MULT$#! due to unused [concept_construction]"
  CONSTRUCTION_BREAKDOWN: "#header [concept_construction]: $CONSTRUCTION_SPEED$#! / week\n$TOOLTIP_DELIMITER$\n#v #tooltippable #tooltip:$BREAKDOWN_TAG$ $BASE_CONSTRUCTION$#!#!#! [concept_construction] provided by [Country.GetName][ConcatIfNeitherEmpty('\n\n','$CAPPEDDESC$')][ConcatIfNeitherEmpty('\n\n','$MODIFIERDESC$')]"
  CONSTRUCTION_MODIFIER_HEADER: "Efficiency of weekly [concept_construction] in [State.GetName] is modified by:\n$MODIFIER_BREAKDOWN$"
  CONSTRUCTION_CAPPED_DESC: "Progress of [BuildingType.GetName] is capped at #v $MAXPOINTS$#! [concept_construction] / week"

  CAN_EXPAND_BUILDING_TOOLTIP: "#header $BUILD_OR_EXPAND$ [BUILDING_TYPE.GetName] in [STATE.GetName]#! (Size: [BUILDING.GetExpansionLevelBreakdownDesc])\n#tooltippable #tooltip:[GetRawTextTooltipTag('$PROFIT_IMPACT_DESC$')] #v @money!$PROFIT_IMPACT|K+=$#!#!#! Predicted Earnings / week\n[ConcatIfNeitherEmpty('$QUALIFICATIONS$', '\n')]$TOOLTIP_DELIMITER$\n@construction! $REQUIRED_CONSTRUCTION|v0$ [concept_construction] ($CONSTRUCTION_COST_CHANGE$)\n[ConcatIfNeitherEmpty('$INVESTMENT_FUND$', '\n')]\n[STATE.GetMarketAccessStatus]\nAvailable Labor: [State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetName] [SelectLocalization( GreaterThan_int32(State.GetNumUnemployedWorkingAdults, '(int32)0'), 'AND_UNEMPLOYED', '' )][ConcatIfNeitherEmpty('$MILITARY_INFO$', '\n')][ConcatIfNeitherEmpty('$PORT_INFO$', '\n')]\n\n$KEY_MODIFIER_INSTRUCTIONS$"
  #$PRODUCTION_BREAKDOWN$ is currently not included, re-add to CAN_EXPAND_BUILDING_TOOLTIP if deemed necessary
  AND_UNEMPLOYED: "and [State.GetNumUnemployedWorkingAdults|Dv] [concept_unemployed]"
  CONSTRUCTION_CAN_BE_FUNDED_BY_INVESTMENT_POOL: "[concept_budget_construction_goods] #P #bold can#!#! be funded by the [concept_investment_pool] (currently #v @money![GetPlayer.GetInvestmentPool|D+]#!)"
  CONSTRUCTION_TOTAL_COST_IMPACT: "#v @money!$COST|K-$#! predicted total cost in [concept_budget_construction_goods]"
  CONSTRUCTION_WEEKLY_COST_IMPACT: "#v @money!$COST|K-=$#! weekly [concept_budget_construction_goods] cost"

  EXPAND_TOOLTIP_EXPAND_BUILD: "Build"
  EXPAND_TOOLTIP_EXPAND_EXPAND: "Expand"
  EXPAND_TOOLTIP_EXPAND: "#header $BUILD_OR_EXPAND$ [BUILDING_TYPE.GetName] in [STATE.GetName]#!\nSize: [BUILDING.GetExpansionLevelBreakdownDesc]\n[STATE.GetMarketAccessStatus]\nAvailable Labor: [State.GetNumSubsistenceWorkingAdults|Dv] [GetPopType('peasants').GetName] and [State.GetNumUnemployedWorkingAdults|Dv] [concept_unemployed]"
  EXPAND_BUILDING_MODIFIERS_INSTRUCTIONS: "#instruction Click to queue 1 level, $SHORTCUT_KEY_MOD_shift$Click for $SHIFT_NUM_LEVELS$, $SHORTCUT_KEY_MOD_ctrl$Click for $CTRL_NUM_LEVELS$#!\n#instruction $SHORTCUT_KEY_MOD_alt$Click to queue at the top of the Construction Queue"
  DOWNSIZE_BUILDING_MODIFIERS_INSTRUCTIONS: "#instruction Click to downsize 1 level#!\n#instruction $SHORTCUT_KEY_MOD_shift$Click to downsize $SHIFT_NUM_LEVELS$ levels#!\n#instruction $SHORTCUT_KEY_MOD_ctrl$Click to downsize $CTRL_NUM_LEVELS$ levels#!"
  EXPANSION_PROFIT_IMPACT: "#header Predicted Revenue after Expansion#!\n#v @money!$VAL|K+=$#! Predicted Earnings / week\n$TOOLTIP_DELIMITER$\n$IMPACT_DETAILS$"
  EXPANSION_PRODUCTIVITY_IMPACT: "#header Predicted $EARNINGS_PER_EMPLOYEE$ after Expansion#!: #v @money!$VAL|+$#!\n$TOOLTIP_DELIMITER$\n$IMPACT_DETAILS$"
  EXPANSION_EMPLOYEES_VS_REVENUE: "#v @money!$REVENUE|K+$#! predicted Yearly Revenue\n#v $EMPLOYEES|vD$#! Total Employees"
  EXPANSION_WAGES_IMPACT: "#v @money!$IMPACT|K+=$#! for Weekly Wages"
  GOODS_PROFIT_CONSUMPTION: "#v @money!$IMPACT|K+=$#! for $NUM_UNITS|0Y=$ [Goods.GetTextIcon] #v [Goods.GetName]#! ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$)"
  GOODS_PROFIT_CONSUMPTION_AFTER_SUBSTITUTION: "#v @money!$IMPACT|K+=$#! for $NUM_UNITS|0Y=$ [Goods.GetTextIcon] #v [Goods.GetName]#! ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$ after [concept_goods_substitution])"
  GOODS_PROFIT_PRODUCTION: "#v @money!$IMPACT|K+=$#! from $NUM_UNITS|0Y=$ [Goods.GetTextIcon] #v [Goods.GetName]#! ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$)"
  GOODS_PROFIT_PRODUCTION_AFTER_SUBSTITUTION: "#v @money!$IMPACT|K+=$#! from $NUM_UNITS|0Y=$ [Goods.GetTextIcon] #v [Goods.GetName]#! ($PRICE_CUR_ICON$@arrow_right!$PRICE_NEW_ICON$ after [concept_goods_substitution])"
  NO_OPPOSITION: "#bold No [Concept('concept_interest_group', '$concept_interest_groups$')] in Opposition#!"
  NO_POLITICAL_MOVEMENTS: "No [Concept('concept_political_movement', '$concept_political_movements$')]"
  NO_LAW_BEING_ENACTED: "No [concept_law] being enacted"
  NO_INTERESTS: "No [Concept('concept_interest', '$concept_interests$')]"
  CANNOT_EXPAND_BUILDING_NO_URBAN_CAP: "[BuildingType.GetName] requires [concept_urbanization]"
  CANNOT_EXPAND_BUILDING_NO_TRADE_ROUTES: "[BuildingType.GetName] requires [Concept('concept_trade_route', '$concept_trade_routes$')]"
  CANNOT_EXPAND_BUILDING_AT_MAX_LEVEL: "[BuildingType.GetName] cannot be expanded beyond its maximum size of $VAL|v$"
  CANNOT_EXPAND_BUILDING_AT_MAX_LEVEL_BREAKDOWN: ", which is due to:\n$BREAKDOWN$"
  CANNOT_EXPAND_BUILDING_NOT_EXPANDABLE: "[BuildingType.GetName] not expandable"
  CANNOT_EXPAND_BUILDING_NO_ARABLE_LAND: "[BuildingType.GetName] requires [concept_arable_land]"
  CANNOT_EXPAND_BUILDING_NO_RESOURCE: "Insufficient Resource quantity in [State.GetName]"
  CANNOT_EXPAND_BUILDING_NOT_AVAILABLE_IN_STATE: "[STATE.GetName] cannot support [BUILDING_TYPE.GetName]"
  CANNOT_EXPAND_BUILDING_AT_REGION_MAX_CAP: "[BuildingType.GetName] is below maximum capacity in [STATE_REGION.GetName]"
  CANNOT_EXPAND_BUILDING_NOT_ACTIVE: "[BuildingType.GetName] is not active"
  CANNOT_EXPAND_BUILDING_NOT_BUILDABLE: "[BuildingType.GetName] cannot be manually constructed"

  EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS: "@warning! #tooltippable #tooltip:[BUILDING.GetTooltipTag],EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN Not enough#!#! [concept_pop_qualifications] to fully staff this building"
  EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN: "#title Missing [concept_pop_qualifications]#!\n[Building.GetQueueConstructionPopQualificationsWarningBreakdown]"
  EXPAND_BUILDING_WARNING_MISSING_QUALIFICATIONS_ENTRY: "Only $AVAILABLE|v$ employable [Concept('concept_pop_qualifications', '$concept_qualifying$')] [POP_TYPE.GetName] available out of $REQUIRED|v$ needed "
  CHANGE_PRODUCTION_METHOD_WARNING_GOODS_SHORTAGE: "@warning! [concept_input_goods_shortage] of $LIST$ will result in a penalty on all [concept_building] outputs"
  CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS: "@warning! #tooltippable #tooltip:[BUILDING.GetTooltipTag]|[PRODUCTION_METHOD.GetTooltipTag],CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN Not enough#!#! [concept_pop_qualifications] to fully staff [Building.GetName]"
  CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_BREAKDOWN: "#title Missing [concept_pop_qualifications]#!\n[Building.GetChangeProductionMethodPopQualificationsWarningBreakdown(ProductionMethod.Self)]"
  CHANGE_PRODUCTION_METHOD_WARNING_MISSING_QUALIFICATIONS_ENTRY: "Only $AVAILABLE|v$ [concept_pop_qualifications] [POP_TYPE.GetName] available out of $REQUIRED|v$ needed"
  CANNOT_JOIN_FOREIGN_MARKET: "No Economic System Law or Customs Unions permit joining the foreign [MARKET.GetName]"
  NO_STATE_TRAITS: "No State Traits"
  # MARKET is the market to merge
  MERGE_MARKET_INFO_TOOLTIP: "Merge #bold #v [MARKET.GetName]#!#! with another Market."
  MERGE_MARKET_NEGATIVE_INFO_TOOLTIP: "Cannot merge #bold #v [MARKET.GetName]#!#! with any other Market."

  # STATE is the selected state, MARKET the market to merge to
  MERGE_MARKETS_INFO_TOOLTIP: "Merge #bold #v [STATE.GetMarket.GetName]#!#! with #bold #v [MARKET.GetName]#!#!"
  MERGE_MARKETS_NEGATIVE_INFO_TOOLTIP: "Cannot merge #bold #v [STATE.GetMarket.GetName]#!#! with #bold #v [MARKET.GetName]#!#!!"
  RETARGET_LINK_TOOLTIP: "Disconnect Link in #bold #v [STATE.GetName]#!#! from #bold #v [STATE.GetMarket.GetName]#!#! and connect it to another Market."
  RETARGET_LINK_FAIL_TOOLTIP: "Cannot disconnect Link in #bold #v [STATE.GetName]#!#!."
  RETARGET_LINK_TO_TOOLTIP: "Disconnect Link in #bold #v [STATE.GetName]#!#! from #bold #v [STATE.GetMarket.GetName]#!#! and connect it to #bold #v [MARKET.GetName]#!#!."
  RETARGET_LINK_TO_FAIL_TOOLTIP: "Cannot re-target Link in #bold #v [STATE.GetName]#!#! to #bold #v [MARKET.GetName]#!#!"
  MARKET_CONTROLLER_TITLE: "#title Market Controller#!\n#bold [Market.GetOwner.GetName]#!"
  TOOLTIP_HOVER_STRATEGIC_REGION: "#v [STATE.GetName]#! (#v [STATE.GetCountry.GetName]#!)\n[concept_strategic_region]: #v $STRATEGIC_REGION$#!"
  #Budget panel
  BUDGET: "Budget"
  BUDGET_PANEL_TITLE: "#bold Budget#!"
  WEEKLY_BALANCE: "Weekly balance: [AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint]"
  BUDGET_TAB_OVERVIEW: "Overview"
  STATES: "States"
  BUDGET_TAB_ASSETS: "Assets"
  POOLS: "Pools"
  LAND_TAX: "[concept_budget_land_taxes]"
  HEATHEN_TAX: "[concept_budget_heathen_taxes]"
  PER_CAPITA_TAX: "[concept_budget_per_capita_taxes]"
  NATIONAL_REVENUE: "National Revenue"
  BUDGET_TAXATION_LEVEL: "[Concept('concept_taxes','$concept_tax_level$')]"
  BUDGET_INCOME_TAXES: "[concept_budget_income_taxes]"
  BUDGET_POLL_TAXES: "[concept_budget_poll_taxes]"
  BUDGET_CONSUMPTION_TAXES: "[concept_budget_consumption_taxes]"
  BUDGET_ADDITIONAL_INCOME: "[concept_budget_additional_income]"
  BUDGET_ADDITIONAL_EXPENSES: "[concept_budget_additional_expenses]"
  BUDGET_DIVIDENDS_TAXES: "[concept_budget_dividends_taxes]"
  BUDGET_MINTING: "[concept_budget_minting]"
  BUDGET_TARIFFS: "[concept_tariffs]"
  BUDGET_INVESTMENT_INCOME: "[concept_budget_investment_income]"
  BUDGET_DIPLOMATIC_PACTS: "[concept_budget_diplomatic_pacts]"
  NATIONAL_EXPENSES: "National Expenses"
  BUDGET_GOODS_FOR_GOVERNMENT_BUILDINGS: "[concept_budget_goods_for_government_buildings]"
  BUDGET_GOODS_FOR_MILITARY_BUILDINGS: "[concept_budget_goods_for_military_buildings]"
  BUDGET_GOVERNMENT_WAGES: "[concept_budget_government_wages]"
  BUDGET_MILITARY_WAGES: "[concept_budget_military_wages]"
  BUDGET_GOVERNMENT_SLAVES: "[concept_budget_government_slaves]"
  BUDGET_MILITARY_SLAVES: "[concept_budget_military_slaves]"
  BUDGET_SUBSIDIES: "[concept_subsidies]"
  BUDGET_WELFARE_PAYMENTS: "[concept_welfare_payments]"
  BUDGET_INTEREST: "[concept_budget_interest]"
  BUDGET_CONSTRUCTION_GOODS: "[concept_budget_construction_goods]"
  PAUSE_ALL_CONSTRUCTION_BUTTON: "Pause All"
  PAUSE_ALL_CONSTRUCTION_TOOLTIP_HEADER: "#header Pause all construction#!"
  RESUME_ALL_CONSTRUCTION_BUTTON: "Resume All"
  RESUME_ALL_CONSTRUCTION_TOOLTIP_HEADER: "#header Resume all construction#!"
  CHANGE_ALL_CONSTRUCTION_SPEED_TOOLTIP_HEADER: "#header Switch entire $building_construction_sector$ to [PRODUCTION_METHOD.GetName]#!"
  TAXES: "Taxes"
  EXPENSES: "Expenses"
  invalid_market: "Not a valid Market"
  diplomatic_play_invalid_state: "Invalid state region"
  set_decree_select_state_tooltip: "$NAME|v$ [concept_decree] in [STATE.GetName]"
  ESTABLISH_TRADE_ROUTE_UNMET_CONDITION_FORMAT: "@simple_box! $UNMET_CONDITION$"
  trade_route_import_lens_option: "Establish Import [concept_trade_route]"
  trade_route_import_lens_option_tooltip: "#header $trade_route_import_lens_option$#!\nEstablish a semi-permanent trade route between two markets, importing goods to a market you own or control ports in"
  trade_route_export_lens_option: "Establish Export [concept_trade_route]"
  trade_route_export_lens_option_tooltip: "#header $trade_route_export_lens_option$#!\nEstablish a semi-permanent trade route between two markets, exporting goods from a market you own or control ports in"
  establish_trade_route_behavior_select_acting_import_market_tooltip: "#header Import [GOODS.GetTextIcon] #v [GOODS.GetName]#! to [GOODS.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\n$BUY_ORDERS$: $BUY|vD$\nMax Imports / Level: $BASE_TRADE|vD$\n$BREAKDOWN$"
  establish_trade_route_behavior_select_acting_export_market_tooltip: "#header Export [GOODS.GetTextIcon] #v [GOODS.GetName]#! from [GOODS.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\n$SELL_ORDERS$: $SELL|vD$\nMax Exports / Level: $BASE_TRADE|vD$\n$BREAKDOWN$"
  establish_trade_route_behavior_select_other_import_market_tooltip: "#header Export [GOODS.GetTextIcon] #v [GOODS.GetName]#! to [MARKET.GetName]#!\n$TOOLTIP_DELIMITER$\nSell Orders in [GOODS.GetMarket.GetName]: #variable $SELL|D$#!\n[concept_buy_orders] in [MARKET.GetName]: #variable $BUY|D$#!\nProjected Exports: $TRADE|vD$"
  establish_trade_route_behavior_select_other_export_market_tooltip: "#header Import [GOODS.GetTextIcon] #v [GOODS.GetName]#! from [MARKET.GetName] to [GOODS.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\nSell Orders in [MARKET.GetName]: #variable $SELL|D$#!\n[concept_buy_orders] in [GOODS.GetMarket.GetName]: #variable $BUY|D$#!\nProjected Imports: $TRADE|vD$"
  establish_trade_route_insufficient_import_demand: "Market lacks significant demand"
  establish_trade_route_not_participant: "Not a participant in this market"
  establish_trade_route_insufficient_trade_routes: "No trade routes available"
  establish_trade_route_no_export_demand: "Market lacks net exports"
  establish_trade_route_not_importmarket_owner: "You do not control this market"
  establish_trade_route_already_exists: "Trade route for these Goods already exists"
  cancel_trade_route_not_importmarket_controller: "Not the importing market's controller"
  trade_route_import_lens_option_ammunition_tooltip: "Establish an $ammunition$ import trade route"
  trade_route_import_lens_option_small_arms_tooltip: "Establish a $small_arms$ import trade route"
  trade_route_import_lens_option_artillery_tooltip: "Establish an $artillery$ import trade route"
  trade_route_import_lens_option_radios_tooltip: "Establish a $radios$ import trade route"
  trade_route_import_lens_option_tanks_tooltip: "Establish a $tanks$ import trade route"
  trade_route_import_lens_option_aeroplanes_tooltip: "Establish an $aeroplanes$ import trade route"
  trade_route_import_lens_option_manowars_tooltip: "Establish a $manowars$ import trade route"
  trade_route_import_lens_option_ironclads_tooltip: "Establish an $ironclads$ import trade route"
  trade_route_import_lens_option_grain_tooltip: "Establish a $grain$ import trade route"
  trade_route_import_lens_option_fish_tooltip: "Establish a $fish$ import trade route"
  trade_route_import_lens_option_meat_tooltip: "Establish a $meat$ import trade route"
  trade_route_import_lens_option_fruit_tooltip: "Establish a $fruit$ import trade route"
  trade_route_import_lens_option_fabric_tooltip: "Establish a $fabric$ import trade route"
  trade_route_import_lens_option_coal_tooltip: "Establish a $coal$ import trade route"
  trade_route_import_lens_option_wood_tooltip: "Establish a $wood$ import trade route"
  trade_route_import_lens_option_groceries_tooltip: "Establish a $groceries$ import trade route"
  trade_route_import_lens_option_liquor_tooltip: "Establish a $liquor$ import trade route"
  trade_route_import_lens_option_wine_tooltip: "Establish a $wine$ import trade route"
  trade_route_import_lens_option_clothes_tooltip: "Establish a $clothes$ import trade route"
  trade_route_import_lens_option_furniture_tooltip: "Establish a $furniture$ import trade route"
  trade_route_import_lens_option_clippers_tooltip: "Establish a $clippers$ import trade route"
  trade_route_import_lens_option_steamers_tooltip: "Establish a $steamers$ import trade route"
  trade_route_import_lens_option_silk_tooltip: "Establish a $silk$ import trade route"
  trade_route_import_lens_option_dye_tooltip: "Establish a $dye$ import trade route"
  trade_route_import_lens_option_phosphorus_tooltip: "Establish a $phosphorus$ import trade route"
  trade_route_import_lens_option_iron_tooltip: "Establish an $iron$ import trade route"
  trade_route_import_lens_option_lead_tooltip: "Establish a $lead$ import trade route"
  trade_route_import_lens_option_hardwood_tooltip: "Establish a $hardwood$ import trade route"
  trade_route_import_lens_option_rubber_tooltip: "Establish a $rubber$ import trade route"
  trade_route_import_lens_option_oil_tooltip: "Establish an $oil$ import trade route"
  trade_route_import_lens_option_engines_tooltip: "Establish a $engines$ import trade route"
  trade_route_import_lens_option_steel_tooltip: "Establish a $steel$ import trade route"
  trade_route_import_lens_option_tools_tooltip: "Establish a $tools$ import trade route"
  trade_route_import_lens_option_glass_tooltip: "Establish a $glass$ import trade route"
  trade_route_import_lens_option_fertilizer_tooltip: "Establish a $fertilizer$ import trade route"
  trade_route_import_lens_option_paper_tooltip: "Establish a $paper$ import trade route"
  trade_route_import_lens_option_explosives_tooltip: "Establish an $explosives$ import trade route"
  trade_route_import_lens_option_porcelain_tooltip: "Establish a $porcelain$ import trade route"
  trade_route_import_lens_option_sugar_tooltip: "Establish a $sugar$ import trade route"
  trade_route_import_lens_option_tea_tooltip: "Establish a $tea$ import trade route"
  trade_route_import_lens_option_coffee_tooltip: "Establish a $coffee$ import trade route"
  trade_route_import_lens_option_tobacco_tooltip: "Establish a $tobacco$ import trade route"
  trade_route_import_lens_option_opium_tooltip: "Establish a $opium$ import trade route"
  trade_route_import_lens_option_automobiles_tooltip: "Establish a $automobiles$ import trade route"
  trade_route_import_lens_option_telephones_tooltip: "Establish a $telephones$ import trade route"
  trade_route_import_lens_option_luxury_clothes_tooltip: "Establish a $luxury_clothes$ import trade route"
  trade_route_import_lens_option_luxury_furniture_tooltip: "Establish a $luxury_furniture$ import trade route"
  trade_route_import_lens_option_literature_tooltip: "Establish a $literature$ import trade route"
  trade_route_import_lens_option_fine_art_tooltip: "Establish a $fine_art$ import trade route"
  trade_route_export_lens_option_ammunition_tooltip: "Establish an $ammunition$ export trade route"
  trade_route_export_lens_option_small_arms_tooltip: "Establish a $small_arms$ export trade route"
  trade_route_export_lens_option_artillery_tooltip: "Establish an $artillery$ export trade route"
  trade_route_export_lens_option_radios_tooltip: "Establish a $radios$ export trade route"
  trade_route_export_lens_option_tanks_tooltip: "Establish a $tanks$ export trade route"
  trade_route_export_lens_option_aeroplanes_tooltip: "Establish an $aeroplanes$ export trade route"
  trade_route_export_lens_option_manowars_tooltip: "Establish a $manowars$ export trade route"
  trade_route_export_lens_option_ironclads_tooltip: "Establish an $ironclads$ export trade route"
  trade_route_export_lens_option_grain_tooltip: "Establish a $grain$ export trade route"
  trade_route_export_lens_option_fish_tooltip: "Establish a $fish$ export trade route"
  trade_route_export_lens_option_meat_tooltip: "Establish a $meat$ export trade route"
  trade_route_export_lens_option_fruit_tooltip: "Establish a $fruit$ export trade route"
  trade_route_export_lens_option_fabric_tooltip: "Establish a $fabric$ export trade route"
  trade_route_export_lens_option_coal_tooltip: "Establish a $coal$ export trade route"
  trade_route_export_lens_option_wood_tooltip: "Establish a $wood$ export trade route"
  trade_route_export_lens_option_groceries_tooltip: "Establish a $groceries$ export trade route"
  trade_route_export_lens_option_liquor_tooltip: "Establish a $liquor$ export trade route"
  trade_route_export_lens_option_wine_tooltip: "Establish a $wine$ export trade route"
  trade_route_export_lens_option_clothes_tooltip: "Establish a $clothes$ export trade route"
  trade_route_export_lens_option_furniture_tooltip: "Establish a $furniture$ export trade route"
  trade_route_export_lens_option_clippers_tooltip: "Establish a $clippers$ export trade route"
  trade_route_export_lens_option_steamers_tooltip: "Establish a $steamers$ export trade route"
  trade_route_export_lens_option_silk_tooltip: "Establish a $silk$ export trade route"
  trade_route_export_lens_option_dye_tooltip: "Establish a $dye$ export trade route"
  trade_route_export_lens_option_phosphorus_tooltip: "Establish a $phosphorus$ export trade route"
  trade_route_export_lens_option_iron_tooltip: "Establish an $iron$ export trade route"
  trade_route_export_lens_option_lead_tooltip: "Establish a $lead$ export trade route"
  trade_route_export_lens_option_hardwood_tooltip: "Establish a $hardwood$ export trade route"
  trade_route_export_lens_option_rubber_tooltip: "Establish a $rubber$ export trade route"
  trade_route_export_lens_option_oil_tooltip: "Establish an $oil$ export trade route"
  trade_route_export_lens_option_engines_tooltip: "Establish a $engines$ export trade route"
  trade_route_export_lens_option_steel_tooltip: "Establish a $steel$ export trade route"
  trade_route_export_lens_option_tools_tooltip: "Establish a $tools$ export trade route"
  trade_route_export_lens_option_glass_tooltip: "Establish a $glass$ export trade route"
  trade_route_export_lens_option_fertilizer_tooltip: "Establish a $fertilizer$ export trade route"
  trade_route_export_lens_option_paper_tooltip: "Establish a $paper$ export trade route"
  trade_route_export_lens_option_explosives_tooltip: "Establish an $explosives$ export trade route"
  trade_route_export_lens_option_porcelain_tooltip: "Establish a $porcelain$ export trade route"
  trade_route_export_lens_option_sugar_tooltip: "Establish a $sugar$ export trade route"
  trade_route_export_lens_option_tea_tooltip: "Establish a $tea$ export trade route"
  trade_route_export_lens_option_coffee_tooltip: "Establish a $coffee$ export trade route"
  trade_route_export_lens_option_tobacco_tooltip: "Establish a $tobacco$ export trade route"
  trade_route_export_lens_option_opium_tooltip: "Establish a $opium$ export trade route"
  trade_route_export_lens_option_automobiles_tooltip: "Establish a $automobiles$ export trade route"
  trade_route_export_lens_option_telephones_tooltip: "Establish a $telephones$ export trade route"
  trade_route_export_lens_option_luxury_clothes_tooltip: "Establish a $luxury_clothes$ export trade route"
  trade_route_export_lens_option_luxury_furniture_tooltip: "Establish a $luxury_furniture$ export trade route"
  trade_route_export_lens_option_literature_tooltip: "Establish a $literature$ export trade route"
  trade_route_export_lens_option_fine_art_tooltip: "Establish a $fine_art$ export trade route"
  MANAGE_MARKET_BUTTON_LABEL: "Manage"
  MANAGE_MARKET_BUTTON_TOOLTIP: "Manage Market"
  MANAGE_MARKET_BUTTON_DISABLED_TOOLTIP: "$MANAGE_MARKET_BUTTON_TOOLTIP$\n@simple_box! Is market controller"
  TRADING_TITLE: "#title Current Trade Demands in the $MARKET$ Market#!\n"
  IMPORTING_TITLE: "\n#title Currently Unmet Demand in the $MARKET$ Market#!\n"
  NO_UP_TO_DATE_MARKET_INFO: "#N There is no up to date Goods information for this Market#!"
  MARKET_GOOD_SORT: "Good"
  MARKET_PRODUCE_SORT: "Produce"
  MARKET_CONSUME_SORT: "Consume"
  MARKET_SELL_SORT: "Sell Orders"
  MARKET_BUY_SORT: "Buy Orders"
  MARKET_PRICE_SORT: "Price"
  FRONT_PANEL_DEBUG_INFO: "#title Debug Information#!:\nID: #variable [Front.GetID]#!"
  FRONT_PANEL_FIRST_UNITS: "First Side Units"
  FRONT_PANEL_SECOND_UNITS: "Second Side Units"
  FRONT_PANEL_NO_PRESENT_GENERALS: "No [Concept('concept_general', '$concept_generals$')] present on this side"
  SAVING_GAME: "Saving Game"
  BUILDING_COSTS: "Building costs"
  TARGET_STRENGTH: "Target Strength Points for army"
  STRATEGIC_GOODS: "Strategic Goods"
  WEEKLY_COST_STRATEGIC_REGION_TOOLTIP: "#header Weekly cost of Strategic Resources#!"
  PDX_TOOLTIP_SHORTCUT: "Shortcut: #header $MODS$$SHORTCUT$#!"
  PDX_TOOLTIP_INPUT_ACTION: "Shortcut: $INPUT_ACTION_NAME|v$ ($BOUND_INPUT_1|v$[AddTextIf(Not(StringIsEmpty('$BOUND_INPUT_2$')), ' or $BOUND_INPUT_2|v$')])"
  SHORTCUT_KEY: "$KEY$"
  SHORTCUT_KEY_MOD_shift: "Shift+"
  SHORTCUT_KEY_MOD_alt: "Alt+"
  SHORTCUT_KEY_MOD_ctrl: "Ctrl+"
  SHORTCUT_KEY_MOD_os: "Os+"
  KEY_MB4: "Mouse 4"
  KEY_MOUSE_X1: "Mouse 4"
  KEY_MOUSE_X2: "Mouse 5"
  KEY_ESCAPE: "Esc"
  KEY_TAB: "Tab"
  KEY_RETURN: "Return / Enter"
  KEY_BACKSPACE: "Backspace"
  KEY_DEL: "Del"
  KEY_LSHIFT: "Left Shift"
  KEY_LCTRL: "Left Ctrl"
  KEY_LOS: "Left OS"
  KEY_LALT: "Left Alt"
  KEY_SPACE: "Space"
  KEY_RALT: "Right Alt"
  KEY_ROS: "Right OS"
  KEY_RCTRL: "Right Ctrl"
  KEY_RSHIFT: "Right Shift"
  KEY_SHIFT: "Shift"
  KEY_CTRL: "Ctrl"
  KEY_ALT: "Alt"
  KEY_EQUALS: "="
  KEY_MINUS: "-"
  KEY_LBRACKET: "["
  KEY_RBRACKET: "]"
  KEY_APOSTROPHE: "'"
  KEY_SLASH: "/"
  KEY_BACKSLASH: "\\"
  KEY_SEMICOLON: ";"
  KEY_PERIOD: "."
  KEY_COMMA: ","
  KEY_UP: "Arrow Up"
  KEY_LEFT: "Arrow Left"
  KEY_DOWN: "Arrow Down"
  KEY_RIGHT: "Arrow Right"
  KEY_KP_0: "Keypad 0"
  KEY_KP_1: "Keypad 1"
  KEY_KP_2: "Keypad 2"
  KEY_KP_3: "Keypad 3"
  KEY_KP_4: "Keypad 4"
  KEY_KP_5: "Keypad 5"
  KEY_KP_6: "Keypad 6"
  KEY_KP_7: "Keypad 7"
  KEY_KP_8: "Keypad 8"
  KEY_KP_9: "Keypad 9"
  KEY_KP_PLUS: "Keypad +"
  KEY_KP_MINUS: "Keypad -"
  RAW_MATERIALS: "Raw mat."
  INDUSTRIAL_GOODS: "Industrial"
  CONSUMER_GOODS: "Consumer"
  MILITARY_GOODS: "Military"
  LUXURY_GOODS: "Luxury"
  PREVIOUS_WEEK_MODIFIERS: "#title Previous Week Modifiers#!"
  MODIFIER_ENTRY_TEXT: "[ModifierEntry.GetFormattedValue] [ModifierEntry.GetName]"
  MODIFIER_ENTRY_TOOLTIP: "#header [ModifierEntry.GetName]#!\n[ModifierEntry.GetBreakdown]\n[ModifierEntry.GetDesc]"
  MODIFIER_ENTRY_VALUE_WITH_BREAKDOWN: "#tooltippable #tooltip:$TOOLTIP_TAG$ $FORMATTED_VALUE$#!#!"
  MODIFIER_DEFINITION_NAME: "#tooltippable_name #tooltip:$DESCRIPTION_TAG$ $NAME$#!#!"
  BALANCE_ITEM: "[TradeOverviewEntry.GetGoods.GetCompareIconAgainstBasePriceNoFormatting(TradeOverviewEntry.GetGoods.GetMarketPrice)] "
  RELATIONS_TOOLTIP: "#header [concept_relations]#!\n[concept_relations] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName] are #bold $LABEL$#! (#variable $VAL|+=$#!)$PROGRESS$"
  INFAMY_TOOLTIP: "#header [COUNTRY.GetAdjective] [concept_infamy]: #bold $INFAMY_LABEL$#! (#variable $INFAMY|-1$#!)#!\n$TOOLTIP_DELIMITER$\n$INFAMY_DECAY$[ConcatIfNeitherEmpty('\n\nEffects:\n','$INFAMY_EFFECTS$')]"
  INFAMY_DECAY_RATE: "[concept_infamy] decay: #P #bold -$VAL|3$#!#! / week\n$TAB$Base decay: #P #bold -$YEARLYBASE|3$#!#!  / year$MITIGATION$"
  TENSION_TOOLTIP: "The [concept_tension] level between us and [COUNTRY.GetName] is #bold $LABEL$#! (#variable $VAL|-$#!)$DECAY$"
  TENSION_DECAY_RATE: "[concept_tension] decay: #P #bold -$VAL|3$#!#! / week\n$TAB$Base decay: #P #bold -$YEARLYBASE|3$#!#!  / year$MITIGATION$"
  RELATIONS_PROGRESS: "Progress towards improved relations: $VAL|v%0$"
  RELATIONS_DECAY: "Decaying relations: #N #bold -$VAL|-3$#!#! / week"
  poor: "@lower_strata! [concept_lower_strata]"
  middle: "@middle_strata! [concept_middle_strata]"
  rich: "@upper_strata! [concept_upper_strata]"
  LOWER_NO_ICON: "[concept_lower_strata]"
  MIDDLE_NO_ICON: "[concept_middle_strata]"
  UPPER_NO_ICON: "[concept_upper_strata]"

  DIVIDENDS_FROM_GOVERNMENT_SHARES: "[concept_government_dividends]"
  LOSSES_FROM_GOVERNMENT_SHARES: "Losses from [Concept('concept_government_ownership_share', '$concept_government_ownership_shares$')]"
  GOVERNMENT_SHARE_DIVIDENDS_EFFICIENCY: "All [concept_government_dividends] are multiplied by #v x$MULTIPLIER$#! due to [Country.GetAdjective] [concept_gdp] of @money!$[SelectLocalization(LessThan_CFixedPoint(Country.MakeScope.ScriptValue('cwp_gdp'), '(CFixedPoint)1000000000000'), 'CWP_NORMAL', 'CWP_TRILLION')|$]"
  GOVERNMENT_SHARE_DIVIDENDS_EFFICIENCY_WITH_DEBT_FACTOR: "All [concept_government_dividends] are multiplied by #v x$MULTIPLIER$#! due to [Country.GetAdjective] [concept_gdp] of @money![SelectLocalization(LessThan_CFixedPoint(Country.MakeScope.ScriptValue('cwp_gdp'), '(CFixedPoint)1000000000000'), 'CWP_NORMAL', 'CWP_TRILLION')] and [concept_principal] of @money![Country.GetPrincipal|Dv]"
  TOOLTIP_BUDGET_PANEL: "#header Weekly balance #!\nTotal: #variable [AccessPlayer.PredictWeeklyBalance|D+=]#!\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL$\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetIncomeBreakdown]\n\n[GetPlayer.GetExpensesBreakdown]"
  TAX_INCOME_BREAKDOWN: "#bold National Revenue:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable @money![GetPlayer.PredictWeeklyFixedIncome|D+=]#!#!#!"
  TAX_INCOME_INCOME: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INCOME_TAXES_BREAKDOWN,TaxIncomeTooltip @money![GetPlayer.GetIncomeTaxIncome|D+=]#!#! [concept_budget_income_taxes]"
  TAX_INCOME_POLL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],POLL_TAXES_BREAKDOWN,TaxPollTooltip @money![GetPlayer.GetPollTaxIncome|D+=]#!#! [concept_budget_poll_taxes]"
  TAX_INCOME_CONSUMPTION: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],CONSUMPTION_TAXES_BREAKDOWN,ConsumptionTaxTooltip @money![GetPlayer.PredictConsumptionTaxes|D+=]#!#! [concept_budget_consumption_taxes]"
  TAX_INCOME_DIVIDENDS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIVIDENDS_TAXES_BREAKDOWN,DividendsTaxTooltip @money![GetPlayer.PredictDividendsTaxes|D+=]#!#! [concept_budget_dividends_taxes]"
  TAX_INCOME_ADDITIONAL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],ADDITIONAL_INCOME_BREAKDOWN,AdditionalIncomeTooltip @money![GetPlayer.GetModifier.GetValueFor('country_tax_income_add')|K+=]#!#! [concept_budget_additional_income]"
  TAX_INCOME_MINTING: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MINTING_BREAKDOWN,MintingTooltip @money![GetPlayer.PredictMinting|K+=]#!#! [concept_budget_minting]"
  TAX_INCOME_INVESTMENT: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_INCOME_BREAKDOWN,InvestmentIncomeTooltip @money![GetPlayer.GetInvestmentIncome|D+=]#!#! [concept_budget_investment_income]"
  TAX_INCOME_DIPLOMATIC: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIPLOMATIC_PACTS_INCOME_BREAKDOWN,DiplomaticPactsIncomeTooltip @money![GetPlayer.PredictDiplomaticPactsIncome|D+=]#!#! [concept_budget_diplomatic_pacts]"
  TAX_INCOME_TARIFFS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],TARIFFS_BREAKDOWN,TariffsTooltip @money![GetPlayer.PredictTariffs|D+=]#!#! [concept_tariffs]"
  TAX_INCOME_GOVERNMENT_SHARE_DIVIDENDS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN,GovernmentShareDividendsTooltip @money![GetPlayer.PredictGovernmentShareDividends|D+=]#!#! $DIVIDENDS_FROM_GOVERNMENT_SHARES$"

  INVESTMENT_POOL: "[concept_investment_pool]: #tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_POOL_BREAKDOWN,InvestmentPoolTooltip #v @money![GetPlayer.GetInvestmentPool|D+]#!#!#! (Change: #v @money![GetPlayer.GetInvestmentPoolChange|D+=]#!)"
  INVESTMENT_POOL_BREAKDOWN: "#header [concept_investment_pool]#!\nCurrent: #v @money![GetPlayer.GetInvestmentPool|D+]#!\nWeekly change: #v @money![GetPlayer.GetInvestmentPoolChange|D+=]#!\n$TOOLTIP_DELIMITER$\n$INVESTMENT_POOL_CHANGE$\n\n[GetPlayer.GetAllowedBuildingGroupsFromInvestmentPoolDesc]"
  INVESTMENT_POOL_CHANGE: "[GetPlayer.GetInvestmentPoolChangeFromConstructionDesc]\n[GetPlayer.GetInvestmentPoolChangeFromInvestmentDesc]"
  INVESTMENT_POOL_CHANGE_FROM_CONSTRUCTION: "#bold New [concept_construction]:#! #v @money!$CHANGE|D+$#!"
  INVESTMENT_POOL_CHANGE_FROM_CONSTRUCTION_EMPTY: "No new [concept_construction] using the $concept_investment_pool$: #v @money!$CHANGE|D+=$#!"
  INVESTMENT_POOL_CHANGE_FROM_INVESTMENT: "[concept_reinvestment]: #v @money!#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INVESTMENT_POOL_SOURCES_BREAKDOWN $CHANGE|D+=$#!#!#!\nAll investments are multiplied by #v x$MULTIPLIER$#! due to [GetPlayer.GetAdjective] [concept_gdp] of @money![SelectLocalization(LessThan_CFixedPoint(Country.MakeScope.ScriptValue('cwp_gdp'), '(CFixedPoint)1000000000000'), 'CWP_NORMAL', 'CWP_TRILLION')]"
  INVESTMENT_POOL_CHANGE_FROM_INVESTMENT_EMPTY: "No investment sources: #v @money!$CHANGE|D+=$#!"
  INVESTMENT_POOL_SOURCES_BREAKDOWN: "#header [Concept('concept_building', '$concept_buildings$')] adding [concept_money] to the [concept_investment_pool]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInvestmentPoolChangeFromInvestmentBreakdown]"
  INVESTMENT_FROM_BUILDING_DETAIL: "[BuildingType.GetName]: #N #variable @money!$VAL|D+$#!#!"

  CURRENT_INVESTMENT_POOL: "[concept_investment_pool]: #v @money![GetPlayer.GetInvestmentPool|D+]#! ([GetPlayer.GetInvestmentPoolChange|=+D])"
  NEXT_PRIVATE_CONSTRUCTION: "[GetPlayer.GetInvestmentPoolPredictedNextBuildingDesc]"
  NO_NEXT_PRIVATE_CONSTRUCTION: "No current investment in [Concept('concept_private_construction', '$concept_private_constructions$')]"
  INVESTMENT_POOL_NEXT_BUILDING_WITH_POP_TYPE: "[POP_TYPE.GetName] investing in [BUILDING_TYPE.GetName] in [STATE.GetName]\n$STATUS$"
  INVESTMENT_POOL_NEXT_BUILDING: "Investing in [BUILDING_TYPE.GetName] in [STATE.GetName]\nStatus: $STATUS$"
  INVESTMENT_POOL_NEXT_BUILDING_WAITING_FOR_FUNDING: "#b Waiting for funding to become available (#tooltippable #tooltip:$BREAKDOWN_TAG$ $PERCENTAGE|v%0$#!#!)#!"
  INVESTMENT_POOL_NEXT_BUILDING_WAITING_FOR_QUEUE: "#b Waiting for other [Concept('concept_private_construction', '$concept_private_constructions$')] to complete#!"
  INVESTMENT_POOL_NEXT_BUILDING_READY: "#p Ready for construction#!"
  INVESTMENT_POOL_NEXT_BUILDING_FUNDING_DESC: "#header Funding for [BUILDING_TYPE.GetName] in [STATE.GetName]: $FUNDING|v%$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  INVESTMENT_POOL_NEXT_BUILDING_AVAILABLE_TOTAL_FUNDS: "@money!$CURRENT|vD$ saved in the [concept_investment_pool] with @money!$NEEDED|vD$ needed for currently queued [Concept('concept_private_construction', '$concept_private_constructions$')] results in @money!$AVAILABLE|vD$ available saved funds"
  INVESTMENT_POOL_NEXT_BUILDING_AVAILABLE_WEEKLY_FUNDS: "@money!$CURRENT|vD$ weekly paid into the [concept_investment_pool] with @money!$NEEDED|vD$ needed for currently queued [Concept('concept_private_construction', '$concept_private_constructions$')] results in @money!$AVAILABLE|vD$ available weekly funds"
  INVESTMENT_POOL_NEXT_BUILDING_NO_AVAILABLE_FUNDS: "@information!All saved and weekly [concept_investment_pool] funds are currently allocated to other projects"
  INVESTMENT_POOL_NEXT_FRACTION_HANDLED_BY_TOTAL_FUNDS: "$FRACTION|%0v$ of the total construction cost (@money!$COST|vD$) is covered by available funds saved in the [concept_investment_pool]"
  INVESTMENT_POOL_NEXT_FRACTION_HANDLED_BY_WEEKLY_FUNDS: "$FRACTION|%0v$ of the weekly construction cost (@money!$COST|vD$) is covered by available weekly funds paid into the [concept_investment_pool]"
  INVESTMENT_POOL_TOTAL_FRACTION: "@information! A [concept_private_construction] is considered funded when the combined sum of its weekly cost coverage and total cost coverage is $REQUIRED|%v0$ (Currently $TOTAL|%v0$). The funding percentage may fluctuate due to factors such as the current price of construction [Concept('concept_good', '$concept_goods$')]."

  TOTAL_INCOME_BREAKDOWN: "[GetPlayer.GetIncomeBreakdown]"
  TOTAL_EXPENSES_BREAKDOWN: "[GetPlayer.GetExpensesBreakdown]"
  BUILDING_GROUP_LAW_HEADER: "[Law.GetName] allows the following to be funded using the [concept_investment_pool]:"
  INTEREST_EXPENSE_TOOLTIP: "#header Interest#!\nTotal: #N @money!-[GetPlayer.GetInterestPayment|D-]"
  POLL_TAXES_BREAKDOWN: "#tooltip_header [concept_budget_poll_taxes]#!\nTotal: #v @money![GetPlayer.GetPollTaxIncome|K+=]#!"
  INCOME_TAXES_BREAKDOWN: "#tooltip_header [concept_budget_income_taxes]#!\nTotal: #v @money![GetPlayer.GetIncomeTaxIncome|K+=]#!"
  INCOME_TAX_RATE: "The Income Tax Rate of #v $VAL|+%0$#! is due to:$BASE_INCOME_TAX_RATE_BREAKDOWN$$TAXCOLLECTION_EFFICIENCY_BREAKDOWN$"
  POP_INCOME_TAX_RATE: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $VAL|%1$#!#!#! [concept_budget_income_taxes]: #N #bold @money!-$TAX_LOSS|D$#!#!"
  POP_DIVIDEND_TAX_RATE: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $VAL|%1$#!#!#! [concept_budget_dividends_taxes]: #N #bold @money!-$TAX_LOSS|D$#!#!"
  POP_PER_CAPITA_TAX: "[concept_budget_per_capita_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold @money!-$TAX_LOSS|D$#!#!#!#!"
  POP_LAND_TAX: "[concept_budget_land_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold @money!-$TAX_LOSS|D$#!#!#!#!"
  POP_HEATHEN_TAX: "[concept_budget_heathen_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold @money!-$TAX_LOSS|D$#!#!#!#!"
  POP_CONSUMPTION_TAX: "[concept_budget_consumption_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #N #bold @money!-$TAX_LOSS|D$#!#!#!#!"
  POP_CONSUMPTION_TAX_BREAKDOWN: "#header [concept_budget_consumption_taxes]#!\n$BREAKDOWN$"
  POP_CONSUMPTION_TAX_ENTRY: "[Goods.GetName]: #N #bold @money!-$AMOUNT|D$#!#!#!#!"
  ECONOMIC_CONTRIBUTION: "Economic Contribution: $VAL|v%0$"
  TAXATION_BREAKDOWN: "#header Taxation#!\nThe total Taxation level of #variable $VAL|%1$#!, is due to:\n$TAB$$STATE_TAX_MODIFIER$\n$TAB$$BREAKDOWN$"
  CONSUMPTION_TAXES_BREAKDOWN: "[GetPlayer.GetConsumptionTaxesDesc]"
  CONSUMPTION_TAXES: "#tooltip_header Consumption Taxes#!\nTotal: #v $VAL|K+=$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  CONSUMPTION_TAXES_GOODS_ENTRY: "#variable @money!$VAL|K+$#! from [GOODS.GetName]"
  DIVIDENDS_TAXES_BREAKDOWN: "#tooltip_header Dividends Taxes#!\nTotal: #v @money![GetPlayer.PredictDividendsTaxes|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDividendsTaxesDesc]"
  DIVIDENDS_TAX_FROM_BUILDING_DETAIL: "#N #variable @money!$VAL|D+$#!#! from [BuildingType.GetName]"
  GOVERNMENT_SHARES_FROM_BUILDING_DETAIL: "#N #variable @money!$VAL|D+$#!#! from [Concept('concept_government_ownership_share', '$concept_government_ownership_shares$')] in [BuildingType.GetName]"
  IMPORT_TARIFFS_FROM_GOODS_DETAIL: "#N #variable @money!$VAL|D+$#!#! from import of [Goods.GetName]"
  EXPORT_TARIFFS_FROM_GOODS_DETAIL: "#N #variable @money!$VAL|D+$#!#! from export of [Goods.GetName]"

  SET_GOODS_TARIFF_NO_PRIORITY: "Set [concept_market_good_policy] to $tariff_no_priority$"
  SET_GOODS_TARIFF_IMPORT_PRIORITY: "Set [concept_market_good_policy] to $tariff_import_priority$"
  SET_GOODS_TARIFF_EXPORT_PRIORITY: "Set [concept_market_good_policy] to $tariff_export_priority$"

  TRADE_ROUTE_OPEN_EXPORTING_MARKET: "View [TradeRoute.GetExportingMarket.GetName] (Exporter)"
  TRADE_ROUTE_OPEN_IMPORTING_MARKET: "View [TradeRoute.GetImportingMarket.GetName] (Importer)"

  SET_TARIFF_FOCUS_ALREADY_ACTIVE: "[concept_tariffs] already set to $FOCUS|v$"
  SET_TARIFF_FOCUS_NOT_ALLOWED: "Our Trade Policy does not allow us to set [concept_tariffs] to $FOCUS|v$"
  TARIFFS_BREAKDOWN: "#tooltip_header [concept_tariffs]#!\nTotal: #v @money![GetPlayer.PredictTariffs|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictTariffsDesc]"
  MINTING_BREAKDOWN: "#tooltip_header [concept_budget_minting]#!\nTotal: #v @money![GetPlayer.PredictMinting|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictMintingDesc]"
  INVESTMENT_INCOME_BREAKDOWN: "#tooltip_header [concept_budget_investment_income]#!\nTotal: #v @money![GetPlayer.GetInvestmentIncome|K+=]#!"
  GOVERNMENT_SHARE_DIVIDENDS_BREAKDOWN: "#tooltip_header $DIVIDENDS_FROM_GOVERNMENT_SHARES$#!\nTotal: #v @money![GetPlayer.PredictGovernmentShareDividends|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictGovernmentShareDividendsDesc]"
  GOVERNMENT_SHARE_LOSSES_BREAKDOWN: "#tooltip_header $LOSSES_FROM_GOVERNMENT_SHARES$#!\nTotal: #v @money![GetPlayer.PredictGovernmentShareLosses|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictGovernmentShareLossesDesc]"

  ADDITIONAL_INCOME_BREAKDOWN: "#tooltip_header Additional Income#!\nTotal: #v @money![GetPlayer.GetModifier.GetValueFor('country_tax_income_add')|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetModifier.GetDescFor('country_tax_income_add')]"
  ADDITIONAL_EXPENSES_BREAKDOWN: "#tooltip_header Additional Expenses#!\nTotal: #v @money![GetPlayer.GetModifier.GetInvertedValueFor('country_expenses_add')|K+=]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetModifier.GetDescFor('country_expenses_add')]"
  WELFARE_PAYMENTS_EXPENSES_BREAKDOWN: "#tooltip_header [concept_welfare_payments]#!\nTotal: #n @money!-[GetPlayer.GetWelfarePaymentsExpenses|D ]#!"
  DIPLOMATIC_PACTS_INCOME_BREAKDOWN: "#tooltip_header Diplomatic Pacts#!\nTotal: #v @money![GetPlayer.PredictDiplomaticPactsIncome|K+]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDiplomaticPactsIncomeDesc]"
  EXPENSES_ADDITIONAL: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],ADDITIONAL_EXPENSES_BREAKDOWN,AdditionalExpensesTooltip @money![GetPlayer.GetModifier.GetInvertedValueFor('country_expenses_add')|K+=]#!#! [concept_budget_additional_expenses]"
  EXPENSES_WELFARE_PAYMENTS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],WELFARE_PAYMENTS_BREAKDOWN,WelfarePaymentsTooltip @money![Negate_CFixedPoint(GetPlayer.GetWelfarePaymentsExpenses)|D+=]#!#! [concept_welfare_payments]"
  EXPENSES_GOVERNMENT_SHARE_LOSSES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SHARE_LOSSES_BREAKDOWN,GovernmentShareLossesTooltip @money![GetPlayer.PredictGovernmentShareLosses|D-]#!#! $LOSSES_FROM_GOVERNMENT_SHARES$"
  GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN: "#tooltip_header Goods for Government Buildings#!\nTotal: #v #N @money!-[GetPlayer.GetGovernmentGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentGoodsExpensesDesc]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentGoodsExpensesByGoodsDesc]"
  GOVERNMENT_WAGES_EXPENSES_BREAKDOWN: "#tooltip_header Government Wages#!\nTotal: #v #N @money!-[GetPlayer.GetGovernmentWagesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentWagesExpensesDesc]"
  GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN: "#tooltip_header Government Slaves#!\nTotal: #v #N @money!-[GetPlayer.GetGovernmentSlavesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGovernmentSlavesExpensesDesc]"
  MILITARY_BUILDINGS_EXPENSES_BREAKDOWN: "#tooltip_header Goods for Military Buildings#!\nTotal: #v #N @money!-[GetPlayer.GetMilitaryGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryGoodsExpensesDesc]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryGoodsExpensesByGoodsDesc]"
  MILITARY_WAGES_EXPENSES_BREAKDOWN: "#tooltip_header Military Wages#!\nTotal: #v #N @money!-[GetPlayer.GetMilitaryWagesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitaryWagesExpensesDesc]"
  MILITARY_SLAVES_EXPENSES_BREAKDOWN: "#tooltip_header Military Slaves#!\nTotal: #v #N @money!-[GetPlayer.GetMilitarySlavesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMilitarySlavesExpensesDesc]"
  DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN: "#tooltip_header Diplomatic Pacts#!\nTotal: #v #N @money!-[GetPlayer.PredictDiplomaticPactsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.PredictDiplomaticPactsExpensesDesc]"
  CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN: "#tooltip_header Construction Goods#!\nTotal: #v #N @money!-[GetPlayer.GetConstructionGoodsExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetConstructionGoodsExpensesByGoodsDesc]"
  GOODS_EXPENSES_DETAIL: "#v @money!$EXPENSE|D-$#! spent on [Goods.GetTextIcon] #v [Goods.GetName]#!"
  GOV_EXPENSES_DETAIL: "#N #variable @money!$EXPENSE|D-$#!#! from [BUILDING_TYPE.GetName]"
  PACT_EXPENSES_DETAIL: "$ACTION$: #N #variable @money!$EXPENSE|D-$#!#!"
  PACT_INCOME_DETAIL: "$ACTION$: #P #variable @money!$INCOME|D+$#!#!"
  SUBSIDIES_EXPENSES_BREAKDOWN: "#tooltip_header Subsidies: #N @money![GetPlayer.GetSubsidiesExpenses|D-]#!#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetSubsidiesExpensesDesc]"
  DIPLOMATIC_ACTION_WITH_COUNTRY: "[COUNTRY.GetName] - [DIPLOMATIC_ACTION_TYPE.GetName]"
  IMPORTANT_ACTIONS: "Current Situation"
  CURRENT_SITUATION_TOOLTIP: "#header Current Situation#!"
  UNREAD_MESSAGES: "#header You have unread messages!#!"
  RESET_TO_DEFAULT: "Reset to Default Settings"
  BALANCE_WITHOUT_TEMPORARY_INCOME_AND_EXPENSES: "\nBalance (excluding Temporary Income and Expenses): #v @money![GetPlayer.PredictBalanceWithoutTemporaryIncomeAndExpenses|D+=]#!"
  TAX_OCCUPATION_LOSS: "Occupation loss from taxes: #variable [GetPlayer.GetTaxOccupationLoss|1-=]#!\n$poor$: #variable [GetPlayer.GetTaxOccupationLossFor('poor')|1-=]#!\n$middle$: #variable [GetPlayer.GetTaxOccupationLossFor('middle')|1-=]#!\n$rich$: #variable [GetPlayer.GetTaxOccupationLossFor('rich')|1-=]#!\n"
  FIXED_EXPENSES_BREAKDOWN: "#bold Fixed National Expenses:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N @money!-[GetPlayer.GetWeeklyFixedExpenses|D-]#!#!#!#!"
  TEMPORARY_INCOME_BREAKDOWN: "#bold Temporary National Revenue:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #bold #P @money!+[GetPlayer.GetWeeklyTemporaryIncome|D+]#!#!#!#!"
  TEMPORARY_EXPENSES_BREAKDOWN: "#bold Temporary National Expenses:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N @money!-[GetPlayer.GetWeeklyTemporaryExpenses|D-]#!#!#!#!"
  EXPENSES_BREAKDOWN: "#bold National Expenses:#! #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #bold #N @money!-[GetPlayer.GetWeeklyExpenses|D-]#!#!#!#!"
  EXPENSES_GOVERNMENT_BUILDING_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_BUILDINGS_EXPENSES_BREAKDOWN,GovernmentGoodsExpenseTooltip #N @money!-[GetPlayer.GetGovernmentGoodsExpenses|D-]#!#!#! [concept_budget_goods_for_government_buildings]"
  EXPENSES_GOVERNMENT_WAGES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_WAGES_EXPENSES_BREAKDOWN,GovernmentWagesExpenseTooltip #N @money!-[GetPlayer.PredictGovernmentWagesExpenses|D-]#!#!#! [concept_budget_government_wages]"
  EXPENSES_GOVERNMENT_SLAVES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],GOVERNMENT_SLAVES_EXPENSES_BREAKDOWN,GovernmentSlavesExpenseTooltip #N @money!-[GetPlayer.GetGovernmentSlavesExpenses|D-]#!#!#! [concept_budget_government_slaves]"
  EXPENSES_MILITARY_BUILDING_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_BUILDINGS_EXPENSES_BREAKDOWN,MilitaryGoodsExpenseTooltip #N @money!-[GetPlayer.GetMilitaryGoodsExpenses|D-]#!#!#! [concept_budget_goods_for_military_buildings]"
  EXPENSES_MILITARY_WAGES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_WAGES_EXPENSES_BREAKDOWN,MilitaryWagesExpenseTooltip #N @money!-[GetPlayer.PredictMilitaryWagesExpenses|D-]#!#!#! [concept_budget_military_wages]"
  EXPENSES_MILITARY_SLAVES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],MILITARY_SLAVES_EXPENSES_BREAKDOWN,MilitarySlavesExpenseTooltip #N @money!-[GetPlayer.GetMilitarySlavesExpenses|D-]#!#!#! [concept_budget_military_slaves]"
  EXPENSES_SUBSIDIES: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],SUBSIDIES_EXPENSES_BREAKDOWN,SubsidiesExpenseTooltip #N @money!-[GetPlayer.GetSubsidiesExpenses|D-]#!#!#! [concept_subsidies]"
  EXPENSES_DIPLOMATIC_PACTS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],DIPLOMATIC_PACTS_EXPENSES_BREAKDOWN,DiplomaticPactsExpenseTooltip #N @money!-[GetPlayer.PredictDiplomaticPactsExpenses|D-]#!#!#! [concept_budget_diplomatic_pacts]"
  EXPENSES_CONSTRUCTION_GOODS: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],CONSTRUCTION_GOODS_EXPENSES_BREAKDOWN,ConstructionGoodsExpenseTooltip #N @money!-[GetPlayer.GetConstructionGoodsExpenses|D-]#!#!#! [concept_budget_construction_goods]"
  EXPENSES_INTEREST: "$TAB$#tooltippable #tooltip:[GetPlayer.GetTooltipTag],INTEREST_EXPENSE_TOOLTIP,InterestExpenseTooltip #N @money!-[GetPlayer.GetInterestPayment|D-]#!#!#! [concept_budget_interest]"
  ECONOMY_HEALTH: "Your economy is $HEALTH$\n$TAB$$INCOME_RATIO$\n$TAB$$CREDIT_RATIO$ (Principal: #variable @money!$CURRENT_LOAN_BALANCE|D$#!)"
  HEALTH_GOOD: "[Concept('concept_economy_health','$concept_economy_health_healthy_short$')]"
  HEALTH_BAD: "[Concept('concept_economy_health','$concept_economy_health_unhealthy_short$')]"
  INCOME_RATIO_GOOD: "@green_checkmark! Weekly income of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable @money!$INCOME|+K$#!#!#! exceeds fixed expenses of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #variable @money!$EXPENSES|-K$#!#!#!"
  INCOME_RATIO_BAD: "@red_cross! Fixed expenses of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_EXPENSES_BREAKDOWN,TotalExpensesTooltip #variable @money!$EXPENSES|-K$#!#!#! exceeds weekly income of #tooltippable #tooltip:[GetPlayer.GetTooltipTag],TOTAL_INCOME_BREAKDOWN,TotalIncomeTooltip #variable @money!$INCOME|+K$#!#!#!"
  CREDIT_RATIO_GOOD: "@green_checkmark! Credit used: #variable #P $CREDITRATIO|%1$#!#!"
  CREDIT_RATIO_BAD: "@red_cross! Credit used: #variable #N $CREDITRATIO|%1$#!#!"
  TAX_INCOME: "Taxation Income"
  DECLARE_BANKRUPTCY: "Declare [concept_bankruptcy]"
  DECLARE_BANKRUPTCY_TOOLTIP: "[Country.GetDeclareBankruptcyDesc]"
  DECLARE_BANKRUPTCY_NOT_IN_DEFAULT: "We are not in [concept_default]"
  DECLARE_BANKRUPTCY_DESC: "#header Declare [concept_bankruptcy]#!\n$TOOLTIP_DELIMITER$\nDeclaring [concept_bankruptcy] will erase our [concept_loans] and bring [GetPlayer.GetName] out of [concept_default], but doing so will have severe domestic consequences for our [concept_country]:\n$EFFECTS$[ConcatIfNeitherEmpty('\n\nNot possible due to:\n','$ERRORS$')]"
  DECLARE_BANKRUPTCY_CONSTRUCTION_QUEUE_EFFECTS: "All projects in the [concept_construction_queue] will be cancelled"
  DECLARE_BANKRUPTCY_BUILDING_EFFECTS: "#v $AMOUNT$ [Concept('concept_building', '$concept_buildings$')]#! will have their entire [concept_cash_reserves] wiped out"
  DECLARE_BANKRUPTCY_POP_EFFECTS: "#v $AMOUNT|*$#! [Concept('concept_pop', '$concept_pops$')] will become more [concept_radical] due to owning shares in affected [Concept('concept_building', '$concept_buildings$')]"
  DECLARE_BANKRUPTCY_MODIFIER_EFFECTS: "The following additional penalties will be applied to [GetPlayer.GetName], decaying over the course of #v [GetDefine( 'NEconomy', 'DECLARE_BANKRUPTCY_PENALTY_DURATION_YEARS' )]#! years:\n$EFFECTS$"
  CREDIT_PROGRESS: "#header Credit#!\nCurrent [concept_principal]: #variable @money![GetPlayer.GetPrincipal|K]#! ([AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint])\n$TOOLTIP_DELIMITER$\nMaximum credit: #variable @money![GetPlayer.GetMaxCredit|K]#!\n"
  GOLD_PROGRESS: "#header [concept_gold_reserves]#!\nCurrent Reserves: #variable @money![GetPlayer.GetGoldReserves|K]#! ([AccessPlayer.PredictWeeklyBalanceWithEconomyHealthHint])\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetGoldReserveLimitDesc]"
  # Reserves Limit: #variable @money![GetPlayer.GetGoldReserveLimit|K]#!"
  GOLD_RESERVE_DIMINISHING_RETURNS: "Excessive stockpiling of gold causes the gold price to rise. Your balance of #variable @money!$MONEY|D$#! buys you the equivalent of only #variable @money!$VAL|D$#! worth of gold."
  WAGES: "Wages"
  SLAVE_UPKEEP: "Slave Upkeep"
  IN_THIS_MARKET: "#title [Concept('concept_country', '$concept_countries$')] in this $concept_market$#!"
  PRODUCTION_METHODS: "#title [Concept('concept_production_method', '$concept_production_methods$')]#!"
  PROCESS: "Process"
  YOUR_IMPORT_ROUTE_HEADER: "#title Your Import Trade Routes#!"
  YOUR_EXPORT_ROUTE_HEADER: "#title Your Export Trade Routes#!"
  IMPORT_ROUTE_HEADER: "#title Inbound Trade Routes#!"
  EXPORT_ROUTE_HEADER: "#title Outbound Trade Routes#!"
  POP_LIST_TOTAL_TOOLTIP: "#header Total Population#!\nValue: [PopListItem.GetTotalPopSize|vD]"
  POP_LIST_TOTAL_WORKFORCE_TOOLTIP: "#header Total Workforce#!\nValue: [PopListItem.GetWorkingAdultsPopSize|vD]"
  TRADE_ROUTE_IMPORT_NAME: "[FIRSTMARKET.GetName] - [SECONDMARKET.GetName] [GOODS.GetTextIcon] [Goods.GetName] Import Route"
  TRADE_ROUTE_EXPORT_NAME: "[FIRSTMARKET.GetName] - [SECONDMARKET.GetName] [GOODS.GetTextIcon] [Goods.GetName] Export Route"
  TRADE_ROUTE_IMPORT_DESCRIPTION: "Importing [Goods.GetTextIcon][Nbsp][Goods.GetName] from the [Market.GetName]"
  TRADE_ROUTE_EXPORT_DESCRIPTION: "Exporting [Goods.GetTextIcon][Nbsp][Goods.GetName] to the [Market.GetName]"
  TO: "to"
  FROM: "from"
  IMPORT: "Import"
  EXPORT: "Export"
  ESTABLISH_IMPORT_ROUTE: "Establish Import Route"
  ESTABLISH_EXPORT_ROUTE: "Establish Export Route"
  ESTABLISH_IMPORT_ROUTE_TOOLTIP: "[ConcatIfNeitherEmpty( Goods.CanEstablishImportTradeRouteDesc, '\n$TOOLTIP_DELIMITER$\n' )]#header Import [Goods.GetTextIcon] #v [Goods.GetName]#! to [Goods.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\n$BUY_ORDERS$: [Goods.GetMarketBuyOrdersWithTooltip]"
  ESTABLISH_EXPORT_ROUTE_TOOLTIP: "[ConcatIfNeitherEmpty( Goods.CanEstablishExportTradeRouteDesc, '\n$TOOLTIP_DELIMITER$\n' )]#header Export [Goods.GetTextIcon] #v [Goods.GetName]#! from [Goods.GetMarket.GetName]#!\n$TOOLTIP_DELIMITER$\n$SELL_ORDERS$: [Goods.GetMarketSellOrdersWithTooltip]"
  TRADE_ROUTE_ADD: "[TradeRoute.GetIncreasedLevelPredictionTooltip]"
  TRADE_ROUTE_REDUCE: "[TradeRoute.GetDecreasedLevelPredictionTooltip]"
  TRADE_ROUTE_USED_CONVOYS_DESC: "Needs #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $CONVOY_COST$#!#!#! @convoys![concept_convoys]"
  TRADE_ROUTE_QUANTITY_DESC: "Units of [Goods.GetName] Traded: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VAL|0$#!#!#!"
  TRADE_ROUTE_QUANTITY_ZERO_DESC: "No [Goods.GetName] Traded"
  TRADE_ROUTE_TOOLTIP: "#header [TradeRoute.GetGoods.GetTextIcon] [TradeRoute.GetGoods.GetName] [TradeRoute.GetDirectionName] [concept_trade_route]#!\n$TOOLTIP_DELIMITER$\n[Concept('concept_market', '$concept_markets$')]: [TradeRoute.GetActingMarket.GetName] and [TradeRoute.GetRemoteMarket.GetName]\nRoute: [TradeRoute.GetExitPortState.GetName] to [TradeRoute.GetEntryPortState.GetName]\nManaged by [TradeRoute.GetTradeCenterBuilding.GetName] in [TradeRoute.GetTradeCenterState.GetName] ([TradeRoute.GetOwner.GetName])\n\n[TradeRoute.GetTradeQuantityDesc]\n[TradeRoute.GetRevenueAfterTariffDesc]\n[TradeRoute.GetPriceImpactDesc][ConcatIfNeitherEmpty('\n',TradeRoute.GetNumUsedConvoysDesc)]\n[TradeRoute.GetCostDesc]\n\n[TradeRoute.GetPredictedFinalLevelDesc]"
  CANNOT_CREATE_NEW_IMPORT_ROUTE: "#header #N Cannot import [Goods.GetTextIcon][Nbsp][Goods.GetName] to [FIRSTMARKET.GetName] from [SECONDMARKET.GetName]#!#!"
  CANNOT_CREATE_NEW_EXPORT_ROUTE: "#header #N Cannot export [Goods.GetTextIcon][Nbsp][Goods.GetName] from [FIRSTMARKET.GetName] to [SECONDMARKET.GetName]#!#!"
  TRADE_QUANTITY_NEW_ROUTE_IMPORT: "#header Import [Goods.GetTextIcon][Nbsp][Goods.GetName] to [FIRSTMARKET.GetName] from [SECONDMARKET.GetName]#!"
  TRADE_QUANTITY_NEW_ROUTE_EXPORT: "#header Export [Goods.GetTextIcon][Nbsp][Goods.GetName] from [FIRSTMARKET.GetName] to [SECONDMARKET.GetName]#!"
  TRADE_QUANTITY_NEW_ROUTE_DETAILS: "Predicted Level: #tooltippable #tooltip:$LEVEL_BREAKDOWN_TAG$ $LEVEL|v$#!#!\nPredicted Units of [Goods.GetTextIcon][Nbsp][Goods.GetName] Exported: #tooltippable #tooltip:$VOLUME_BREAKDOWN_TAG$ $VOLUME|v0$#!#!\nPredicted [concept_trade_revenue] after [concept_tariffs]: #tooltippable #tooltip:$REVENUE_BREAKDOWN_TAG$ @money!$REVENUE|D+$#!#! (@money!$PRODUCTIVITY|D+$/employee annually)\n$PRICE_CHANGES$\nPredicted number of @convoys![concept_convoys] needed: $CONVOYS|v$\nPredicted @bur![concept_bureaucracy] cost: #tooltippable #tooltip:$BUREAUCRACY_BREAKDOWN_TAG$ $BUREAUCRACY|v1$#!#!"
  TRADE_QUANTITY_BREAKDOWN: "$TRADE_POWER_BREAKDOWN$$TRADE_PENALTY_BREAKDOWN$"
  TRADE_ROUTE_PRICE_PROJECTION: "Projected Price in [FIRSTMARKET.GetName]: #v @money!$ACTING_NEW_PRICE$#! (from #v @money!$ACTING_OLD_PRICE$#!)\nProjected Price in [SECONDMARKET.GetName]: #v @money!$REMOTE_NEW_PRICE$#! (from #v @money!$REMOTE_OLD_PRICE$#!)"
  TRADE_ROUTE_QUANTITY_BASE: "Base Quantity for [Goods.GetName]: #v $VALUE$#! x #v $LEVEL$#! level(s)"
  TRADE_ROUTE_QUANTITY_ECONOMY_OF_SCALE: "Multiplied by #v x$MULT$#! due to Economy of Scale bonuses for [concept_trade_route] level #v $LEVEL$#!"
  TRADE_ROUTE_QUANTITY_MOD_DESC: "[COUNTRY.GetName] Quantity Modifiers: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|%=+0$#!#!#!"
  TRADE_ROUTE_EXPORTS_MOD_DESC: "[COUNTRY.GetName] Export Modifiers: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|=+0$#!#!#!"
  TRADE_ROUTE_IMPORTS_MOD_DESC: "[COUNTRY.GetName] Import Modifiers: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|=+0$#!#!#!"
  TRADE_ROUTE_DELTA_IMPORT_BREAKDOWN: "Current Import: #tooltippable #v #tooltip:$PREV_BREAKDOWN_TAG$ $PREV_AMOUNT|0$#!#!#!\nProjected Import: #v #tooltippable #tooltip:$NEW_BREAKDOWN_TAG$ $NEW_AMOUNT|0$#!#!#!\nProjected Change: #v $DELTA|+=1$#!"
  TRADE_ROUTE_DELTA_EXPORT_BREAKDOWN: "Current Import: #tooltippable #v #tooltip:$PREV_BREAKDOWN_TAG$ $PREV_AMOUNT|0$#!#!#!\nProjected Import: #v #tooltippable #tooltip:$NEW_BREAKDOWN_TAG$ $NEW_AMOUNT|0$#!#!#!\nProjected Change: #v $DELTA|+=1$#!"
  TRADE_ROUTE_NEW_IMPORT_BREAKDOWN: "Projected Import: #v #tooltippable #tooltip:$NEW_BREAKDOWN_TAG$ $NEW_AMOUNT|0$#!#!#!"
  TRADE_ROUTE_NEW_EXPORT_BREAKDOWN: "Projected Import: #v #tooltippable #tooltip:$NEW_BREAKDOWN_TAG$ $NEW_AMOUNT|0$#!#!#!"
  TRADE_ROUTE_DESIRED_QUANTITY_IMPORT: "Desired Imports for level #v $LEVELS$#! [concept_trade_route]: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
  TRADE_ROUTE_DESIRED_QUANTITY_EXPORT: "Desired Exports for level #v $LEVELS$#! [concept_trade_route]: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
  TRADE_ROUTE_DESIRED_QUANTITY_BREAKDOWN: "#v #tooltippable #tooltip:$BREAKDOWN_TAG$ $PER_LEVEL$#!#!#! x #v $LEVELS$#! [concept_trade_route] level(s)"
  TRADE_ROUTE_COMPETITIVENESS: "Trade Route Competitiveness: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
  TRADE_ROUTE_COMPETITIVENESS_ZERO: "Trade Route Competitiveness: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ #r $VAL|0$#!#!#!#!"
  TRADE_ROUTE_GOODS_EXPORT_HEADER: "Export Breakdown of [Goods.GetTextIcon][Nbsp][Goods.GetName] from [MARKET.GetName]:"
  TRADE_ROUTE_TOTAL_DESIRED_EXPORTS: "Current Desired Exports: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
  TRADE_ROUTE_TOTAL_AVAILABLE_EXPORTS: "Potential Exports: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
  TRADE_ROUTE_GOODS_IMPORT_HEADER: "Import Breakdown of [Goods.GetTextIcon][Nbsp][Goods.GetName] to [MARKET.GetName]:"
  TRADE_ROUTE_TOTAL_DESIRED_IMPORTS: "Current Desired Imports: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
  TRADE_ROUTE_TOTAL_AVAILABLE_IMPORTS: "Potential Imports: #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0$#!#!#!"
  TRADE_ROUTE_NO_INTEREST_IN_REGIONS: "Either [COUNTRY.GetName] or [TARGET_COUNTRY.GetName] must have an [concept_interest] in a [concept_strategic_region] where the other [Concept('concept_country','$concept_country_possessive$')] [concept_market] is present for trade to be possible"
  TRADE_ROUTE_LANDLOCKED_COUNTRY: "You cannot trade overseas since your [concept_market_capital] has no access to a coast"
  TRADE_ROUTE_EXPORTS_CAPPED: "Desired exports exceed potential, limiting traded amount to #v $POSSIBLE_QUANTITY|0$#! (#v $TOTAL_POSSIBLE_QUANTITY|0$#! x #v $QUANTITY_PERC|0%$#! competitiveness share)"
  TRADE_ROUTE_IMPORTS_CAPPED: "Desired imports exceed potential, limiting traded amount to #v $POSSIBLE_QUANTITY|0$#! (#v $TOTAL_POSSIBLE_QUANTITY|0$#! x #v $QUANTITY_PERC|0%$#! competitiveness share)"
  TRADE_ROUTE_MARKET_LACKS_PORT: "Not possible to establish this [concept_trade_route] because [MARKET.GetName] lacks a port."
  TRADE_ROUTE_COMPETITION_ENTRY_EXPORTS: "[Country.GetAdjectiveNoFormatting] [concept_trade_route] desires #v #tooltippable #tooltip:$QUANTITY_BREAKDOWN_TAG$ $DESIRED_QUANTITY|0$#!#!#! exports with #v #tooltippable #tooltip:$COMPETITIVENESS_BREAKDOWN_TAG$ $COMPETITIVENESS|0$#!#!#! competitiveness"
  TRADE_ROUTE_COMPETITION_ENTRY_IMPORTS: "[Country.GetAdjectiveNoFormatting] [concept_trade_route] desires #v #tooltippable #tooltip:$QUANTITY_BREAKDOWN_TAG$ $DESIRED_QUANTITY|0$#!#!#! imports with #v #tooltippable #tooltip:$COMPETITIVENESS_BREAKDOWN_TAG$ $COMPETITIVENESS|0$#!#!#! competitiveness"
  TRADE_ROUTE_MAX_EXPORTS_BREAKDOWN: "#header [Market.GetName] Export Potential for [Goods.GetName]: #v $MAX_EXPORTS|0$#!#!\n$TOOLTIP_DELIMITER$\nLocal [concept_sell_orders]: #v $SELL_ORDERS|0$#!\n\nExport Potential is equal to the number of Local [concept_sell_orders] modified by the Maximum Exports Multiplier of #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $MULTIPLIER|%0$#!#!#!"
  TRADE_ROUTE_MAX_IMPORTS_BREAKDOWN: "#header [Market.GetName] Import Potential for [Goods.GetName]: #v $MAX_IMPORTS|0$#!#!\n$TOOLTIP_DELIMITER$\nLocal [concept_buy_orders]: #v $BUY_ORDERS|0$#!\n\nImport Potential is equal to the number of Local [concept_buy_orders] modified by the Maximum Imports Multiplier of #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $MULTIPLIER|%0$#!#!#!"
  TRADE_ROUTE_MIN_NUM_MAX_IMPORTS: "Import Potential of a [concept_good] cannot be lower than [GetDefine( 'NEconomy', 'TRADE_ROUTE_MIN_TOTAL_IMPORTS' )]"
  TRADE_ROUTE_EMPLOYMENT_IMPACT: "Multiplied by #v #n x$VALUE|$#!#! due to staffing level of [Building.GetState.GetName] [Building.GetName]"
  TRADE_ROUTE_EXPECTED_EXPORTS_GROWTH: "Weekly growth of [Concept('concept_trade_route', '$concept_trade_routes$')] belonging to other [Concept('concept_country', '$concept_countries$')] are projected to add demand for an additional #v $EXPECTED_QUANTITY$|0#! exports"
  TRADE_ROUTE_EXPECTED_IMPORTS_GROWTH: "Weekly growth of [Concept('concept_trade_route', '$concept_trade_routes$')] belonging to other [Concept('concept_country', '$concept_countries$')] are projected to add demand for an additional #v $EXPECTED_QUANTITY$|0#! imports"
  TRADE_ROUTE_PREDICTED_FINAL_LEVEL_INCREASE: "This [concept_trade_route] is predicted to grow to level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $FINAL_LEVEL$#!#!#! under current [concept_market] conditions, assuming the Trade Center can maintain high employment"
  TRADE_ROUTE_PREDICTED_FINAL_LEVEL_DECREASE: "This [concept_trade_route] is predicted to shrink to level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $FINAL_LEVEL$#!#!#! under current [concept_market] conditions"
  TRADE_ROUTE_PREDICTED_FINAL_LEVEL_NO_CHANGE: "This [concept_trade_route] is predicted to remain at level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $CUR_LEVEL$#!#!#! under current [concept_market] conditions"
  TRADE_ROUTE_PREDICTED_FINAL_LEVEL_INCREASE_SHORT: "It's currently predicted to grow to level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $FINAL_LEVEL$#!#!#!."
  TRADE_ROUTE_PREDICTED_FINAL_LEVEL_DECREASE_SHORT: "It's currently predicted to shrink to level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $FINAL_LEVEL$#!#!#!."
  TRADE_ROUTE_PREDICTED_FINAL_LEVEL_NO_CHANGE_SHORT: "It's currently predicted to remain at level #v #tooltippable #tooltip:$BREAKDOWN_TAG$ $CUR_LEVEL$#!#!#!."
  TRADE_ROUTE_PREDICTED_FINAL_LEVEL_IMPACT: "#header Effects of Predicted [concept_trade_route] Level $LEVEL$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  TRADE_ROUTE_PREDICTED_VOLUME: "Predicted Units of [Goods.GetName] Traded: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VOLUME|0$#!#!#!"
  TRADE_ROUTE_REVENUE_AFTER_TARIFF: "[concept_trade_revenue] after [concept_tariffs]: #tooltippable #tooltip:$BREAKDOWN_TAG$ @money!$REVENUE_AFTER_TARIFF|D+$#!#! (@money!$PRODUCTIVITY|D+$/employee annually)"
  TRADE_ROUTE_PREDICTED_REVENUE_AFTER_TARIFF: "Predicted [concept_trade_revenue] after [concept_tariffs]: #tooltippable #tooltip:$BREAKDOWN_TAG$ @money!$REVENUE_AFTER_TARIFF|D+$#!#! (@money!$PRODUCTIVITY|D+$/employee annually)"
  TRADE_ROUTE_REVENUE_BREAKDOWN: "#header [concept_trade_revenue]: @money!$REVENUE|D+$#!\n$TOOLTIP_DELIMITER$\nUnits of [Goods.GetName] Traded: $VOLUME|v0$\n[concept_trade_revenue] per unit: @money!$PROFIT|Dv$\n\n@information! [concept_trade_revenue] is calculated by taking the $IMPORT_PRICE_DESC$ of @money!$IMPORTING_PRICE|Dv$ in the importing [concept_market], subtracting the $EXPORT_PRICE_DESC$ of @money!$EXPORTING_PRICE|Dv$ in the exporting [concept_market] and then multiplying by the number of units"
  TRADE_ROUTE_PREDICTED_REVENUE_BREAKDOWN: "#header Predicted [concept_trade_revenue]: @money!$REVENUE|D+$#!\n$TOOLTIP_DELIMITER$\nUnits of [Goods.GetName] Traded: $VOLUME|v0$\n[concept_trade_revenue] per unit: @money!$PROFIT|Dv$\n\n@information! [concept_trade_revenue] is calculated by taking the $IMPORT_PRICE_DESC$ of @money!$IMPORTING_PRICE|Dv$ in the importing [concept_market], subtracting the $EXPORT_PRICE_DESC$ of @money!$EXPORTING_PRICE|Dv$ in the exporting [concept_market] and then multiplying by the number of units"
  TRADE_ROUTE_REVENUE_MARKET_PRICE: "[concept_market_price]"
  TRADE_ROUTE_REVENUE_AVERAGE_IMPORT_PRICE: "average sale price"
  TRADE_ROUTE_REVENUE_AVERAGE_EXPORT_PRICE: "average purchase price"
  TRADE_ROUTE_REVENUE_AFTER_TARIFF_BREAKDOWN: "#header [concept_trade_revenue] after [concept_tariffs]: @money!$REVENUE_AFTER_TARIFF|D+$ (@money!$PRODUCTIVITY|D+$/employee annually)#!\n$TOOLTIP_DELIMITER$\n[concept_trade_route] Level: $LEVEL|v$\nUnits of [Goods.GetName]: $VOLUME|0v$\n[concept_trade_revenue]: #tooltippable #tooltip:$REVENUE_BREAKDOWN$ @money!$REVENUE|D+$#!#!\n[concept_tariffs]: #tooltippable #tooltip:$TARIFF_BREAKDOWN$ @money!$TARIFF|D+$#!#!"
  TRADE_ROUTE_PREDICTED_REVENUE_AFTER_TARIFF_BREAKDOWN: "#header Predicted [concept_trade_revenue] after [concept_tariffs]: @money!$REVENUE_AFTER_TARIFF|D+$ (@money!$PRODUCTIVITY|D+$/employee annually)#!\n$TOOLTIP_DELIMITER$\n[concept_trade_route] Level: $LEVEL|v$\nUnits of [Goods.GetName]: $VOLUME|0v$\n[concept_trade_revenue]: #tooltippable #tooltip:$REVENUE_BREAKDOWN$ @money!$REVENUE|D+$#!#!\n[concept_tariffs]: #tooltippable #tooltip:$TARIFF_BREAKDOWN$ @money!$TARIFF|D+$#!#!"
  TRADE_ROUTE_PRICE_CHANGE: "Price Impact on [Goods.GetName] in [Market.GetName]: @money!$BEFORE_PRICE|1v$ @arrow_right! @money!$AFTER_PRICE|1v$"
  TRADE_ROUTE_PREDICTED_PRICE_CHANGE: "Predicted Price Impact on [Goods.GetName] in [Market.GetName]: @money!$BEFORE_PRICE|1v$ @arrow_right! @money!$AFTER_PRICE|1v$"
  TRADE_ROUTE_TARIFF_BREAKDOWN: "#header [concept_tariffs] Paid#!\nThis Trade Route pays a total of @money!$TOTAL_TARIFF|D-$ in [concept_tariffs]\n$TOOLTIP_DELIMITER$\n$DETAILS$\n\n@information! The [concept_tariffs] paid by a [concept_trade_route] is calculated by multiplying the [Concept('concept_tariffs','$concept_tariff$')] Base by the combined Import and Export [Concept('concept_tariffs','$concept_tariff$')] rates"
  TRADE_ROUTE_TARIFF_BASE_BREAKDOWN: "#header [Concept('concept_tariffs','$concept_tariff$')] Base: @money!$TARIFF_BASE|Dv$#!\n$TOOLTIP_DELIMITER$\nUnits of [Goods.GetName]: $VOLUME|0v$\n[concept_base_price]: @money!$BASE_PRICE|0v$\n\n@information! The [Concept('concept_tariffs','$concept_tariff$')] Base is calculated by multiplying the number of traded units by the [concept_base_price] of the traded [Concept('concept_good', '$concept_goods$')]"
  TRADE_ROUTE_TARIFF_BASE: "[Concept('concept_tariffs','$concept_tariff$')] Base: #tooltippable #tooltip:$BREAKDOWN_TAG$ @money!$TARIFF_BASE|Dv$#!#!"
  TRADE_ROUTE_TARIFF_RATE_SINGLE: "$EXPORT_IMPORT$ [concept_tariffs] on [Goods.GetName] in [Market.GetName]: $TARIFF_RATE|v%$"
  TRADE_ROUTE_TARIFF_RATE_TOTAL: "Total [Concept('concept_tariffs','$concept_tariff$')] Rate on [Goods.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $TARIFF_RATE|v%$#!#!"

  TRADE_ROUTE_AUTO_INCREASE_MAX_LEVEL: "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because it is above the maximum level of [GetDefine( 'NEconomy', 'TRADE_ROUTE_MAX_LEVEL' )|v]"
  TRADE_ROUTE_AUTO_INCREASE_NOT_FULLY_EMPLOYED: "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! while [Building.GetName] has less than [GetDefine( 'NEconomy', 'TRADE_ROUTE_AUTO_INCREASE_EMPLOYMENT_THRESHOLD' )|v] employment"
  TRADE_ROUTE_AUTO_INCREASE_GOODS_VOLUME_NOT_IMPROVED: "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because the number of [Concept('concept_good', '$concept_goods$')] traded would not increase"
  TRADE_ROUTE_AUTO_INCREASE_REVENUE_WOULD_DECREASE: "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because the total [concept_trade_revenue] after [concept_tariffs] would decrease too much (#tooltippable #tooltip:$BREAKDOWN_OLD$ @money!$OLD_REVENUE|D+$#!#! @arrow_right! #tooltippable #tooltip:$BREAKDOWN_NEW$ @money!$NEW_REVENUE|D+$#!#!) and the revenue per employee annually is below @money![GetDefine('NEconomy','TRADE_ROUTE_AUTO_INCREASE_HIGH_PRODUCTIVITY_THRESHOLD')|Dv]"
  TRADE_ROUTE_AUTO_INCREASE_PRODUCTIVITY_TOO_LOW: "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because its [concept_trade_revenue] after [concept_tariffs] per employee annually would decrease and be below @money![GetDefine('NEconomy','TRADE_ROUTE_AUTO_INCREASE_LOW_PRODUCTIVITY_THRESHOLD')|Dv] (#tooltippable #tooltip:$BREAKDOWN_OLD$ @money!$OLD_PRODUCTIVITY|D+$#!#! @arrow_right! #tooltippable #tooltip:$BREAKDOWN_NEW$ @money!$NEW_PRODUCTIVITY|D+$#!#!)"
  TRADE_ROUTE_AUTO_INCREASE_LAND_TRADE_CAPPED: "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because there is no sea route and not enough [concept_land_trade_capacity] for the new level"
  TRADE_ROUTE_AUTO_INCREASE_NOT_ENOUGH_CONVOYS: "[concept_trade_route] will not grow to level #v $TARGET_LEVEL$#! because it would end up using too many [concept_convoys] (@convoys!$REQUIRED_CONVOYS|v$ [concept_convoys] required to grow, @convoys!$AVAILABLE_CONVOYS|v$ [concept_convoys] available)"
  TRADE_ROUTE_AUTO_REDUCE_MAX_LEVEL: "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because it is above the maximum level of [GetDefine( 'NEconomy', 'TRADE_ROUTE_MAX_LEVEL' )|v]"
  TRADE_ROUTE_AUTO_REDUCE_NO_TRADED_GOODS: "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because it is currently not trading any [Concept('concept_good', '$concept_goods$')]"
  TRADE_ROUTE_AUTO_REDUCE_SAME_OR_IMPROVED_GOODS_VOLUME: "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because the amount of [Concept('concept_good', '$concept_goods$')] traded would not decrease"
  TRADE_ROUTE_AUTO_REDUCE_REVENUE_WOULD_IMPROVE: "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because the total [concept_trade_revenue] after [concept_tariffs] would increase significantly (#tooltippable #tooltip:$BREAKDOWN_OLD$ @money!$OLD_REVENUE|D+$#!#! @arrow_right! #tooltippable #tooltip:$BREAKDOWN_NEW$ @money!$NEW_REVENUE|D+$#!#!)"
  TRADE_ROUTE_AUTO_REDUCE_NOT_ENOUGH_CONVOYS: "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because it would improve the condition of the [concept_supply_network] (@convoys!$REQUIRED_CONVOYS|v$ [concept_convoys] required, @convoys!$AVAILABLE_CONVOYS|v$ [concept_convoys] available)"
  TRADE_ROUTE_AUTO_REDUCE_LAND_TRADE_CAPPED: "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because there is no sea route and not enough [concept_land_trade_capacity] for its current level"
  TRADE_ROUTE_AUTO_REDUCE_INSUFFICIENT_EMPLOYMENT: "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because [Building.GetName] has less than [GetDefine( 'NEconomy', 'TRADE_ROUTE_AUTO_REDUCTION_EMPLOYMENT_THRESHOLD' )|v] employment"
  TRADE_ROUTE_AUTO_REDUCE_PRODUCTIVITY_TOO_LOW: "[concept_trade_route] will shrink to level #v $TARGET_LEVEL$#! because its [concept_trade_revenue] after [concept_tariffs] per employee annually would increase and is below @money![GetDefine('NEconomy','TRADE_ROUTE_AUTO_INCREASE_VERY_LOW_PRODUCTIVITY_THRESHOLD')|Dv] (#tooltippable #tooltip:$BREAKDOWN_OLD$ @money!$OLD_PRODUCTIVITY|D+$#!#! @arrow_right! #tooltippable #tooltip:$BREAKDOWN_NEW$ @money!$NEW_PRODUCTIVITY|D+$#!#!)"
  TRADE_ROUTE_COST_TRADE_AGREEMENT: "No @bur! [concept_bureaucracy] cost due to [concept_trade_agreement]"
  TRADE_ROUTE_COST: "Costs #tooltippable #tooltip:$BREAKDOWN_TAG$ $COST|v0$#!#! @bur![concept_bureaucracy] to maintain"
  TRADE_ROUTE_COST_BREAKDOWN: "#header [concept_trade_route] @bur![concept_bureaucracy] cost: $COST|v1$#!\n$TOOLTIP_DELIMITER$\n$COST_DESC$[ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]"

  GOODS_MAX_EXPORTS_HEADER: "#header Maximum Export Multiplier of [Goods.GetName] in [Market.GetName]: #v $VALUE|%$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  GOODS_MAX_EXPORTS_EMBARGO: "[concept_embargo]: #v $VALUE|%+$#!"
  GOODS_MAX_EXPORTS_NO_FACTORS: "There are currently no factors modifying the Maximum Exports of [Goods.GetName] in [Market.GetName]"
  GOODS_MAX_IMPORTS_HEADER: "#header Maximum Import Multiplier of [Goods.GetName] in [Market.GetName]: #v $VALUE|%$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  GOODS_MAX_IMPORTS_NO_FACTORS: "There are currently no factors modifying the Maximum Imports of [Goods.GetName] in [Market.GetName]"

  TRADE_ROUTE_MARKET_NOT_ALLOWED: "[MARKET.GetName] is not allowed to have [Concept('concept_trade_route', '$concept_trade_routes$')] due to Isolationist Trade Policy"
  TRADE_ROUTE_GOODS_BANNED: "There is an active ban on [GOODS.GetName] in [MARKET.GetName]"
  TRADE_ROUTE_EMBARGO: "[MARKET.GetOwner.GetName] has an [concept_embargo] against [Country.GetName]"
  OTHER_COUNTRIES_TRADE_ROUTES: "Other Countries' Trade Routes with [MarketGoods.GetMarket.GetOwner.GetName] ([MarketGoods.GetNumOthersOwnedTradeRoutes]):"
  TRADE_ROUTE_EMPTY_STATE: "There are no [Concept('concept_trade_route', '$concept_trade_routes$')] in the [Market.GetName]"
  NEW_IMPORT_ROUTE: "New Import Route"
  NEW_EXPORT_ROUTE: "New Export Route"
  SUPPLY_NETWORK_EMPTY_STATE: "[Country.GetName] has no [concept_supply_network]"
  TRADE_PENALTY_SUPPLY_NETWORK: "[concept_supply_network] strength: #v $VAL|=+%0$#!"
  TRADE_ROUTE_DOMESTIC_TRADE_BONUS: "Domestic [concept_trade_route]: #v $VAL|=+1$#!"
  TRADE_ROUTE_TRADE_AGREEMENT_BONUS: "Active [concept_trade_agreement]: #v $VAL|=+1$#!"
  TRADE_ROUTE_COMPETITIVENESS_DESC: "#header [concept_trade_route] Competitiveness#!: #v $VAL|1$#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  COMPETITIVENESS_TRADE_ROUTE_LEVEL: "Base Amount per [concept_trade_route]: #v $VAL|1$#!"
  COMPETITIVENESS_DOMESTIC_TRADE_BONUS: "Domestic [concept_trade_route]: #v #p +x$VAL|1$#!#!"
  COMPETITIVENESS_TRADE_AGREEMENT_BONUS: "Active [concept_trade_agreement]: #v #p +x$VAL|1$#!#!"
  COMPETITIVENESS_TRADE_ROUTE_DURATION: "Age of [concept_trade_route]: #v #p +x$VAL|1$#!#!"
  COMPETITIVENESS_SHIPPING_LANE_STRENGTH: "Low [concept_shipping_lane_effectiveness]: #v #n x$VAL|2$#!#!"
  TRADE_AMOUNT_DELTA: "(#v $VAL|+=D$#!)"
  TRADE_ROUTE_CANCEL: "Stop trading #variable [TradeRoute.GetGoods.GetTextIcon] [TradeRoute.GetGoods.GetName]#! from #variable [TradeRoute.GetExportingMarket.GetName]#!"
  TRADE_ROUTE_BEING_ESTABLISHED: "Setting up"
  TRADE_ROUTE_ZERO_TRADES: "Inactive"
  same_import_export_market: "Cannot import to and export from the same market"
  TRADE_ROUTE_LOCKED_FROM_CANCELLING: "Trade Route level cannot be reduced until #v $DATE$#!"
  TRADE_ROUTE_WOULD_YIELD_NO_GOODS: "Traded Quantity of [Concept('concept_good', '$concept_goods$')] would be #v 0#!"
  TRADE_ROUTE_ALREADY_EXISTS: "We already have a [concept_trade_route] for [Goods.GetName] between these Markets"
  TRADE_ROUTE_EMBARGOED_GOODS: "You are not a participant in [MARKET.GetName] and [Goods.GetTextIcon][Nbsp][Goods.GetName] is [Concept('concept_embargo', '$concept_embargoed$')] there"
  INSUFFICIENT_SELL_ORDERS: "Insufficient Supply in [MARKET.GetName] × $RATIO|-%1$: $VAL|vD$\n$TAB$Sell Orders available in [MARKET.GetName]: $SELL_ORDERS|vD$\n$TAB$Total Import Demand: $TOTAL_DEMAND|vD$"
  TRADE_ROUTE_UNREACHABLE: "We have no way of reaching this [concept_market]"
  MARKET_NAME_WITH_STATUS_ISOLATED: "#bold [MARKET.GetNameNoFormatting]#! #maximum (Isolated)#!"
  MARKET_NAME_WITH_STATUS: "#bold [MARKET.GetNameNoFormatting]#!"
  PEACE_ACCEPTANCE_SUMMARY: "#title Acceptance Score: #bold $VAL|+$#!#!"
  PEACE_ACCEPTANCE_BASE_VALUE: "Base Value: #bold $VAL|=+$#!"
  PEACE_ACCEPTANCE_WAR_SUPPORT: "[concept_war_support]: #bold $VAL|=+$#!"
  PEACE_ACCEPTANCE_WAR_LEADER: "War LEADER: #bold $VAL|=+$#!"
  PEACE_ACCEPTANCE_WHITE_PEACE: "White Peace: #bold $VAL|=+$#!"

  PEACE_ACCEPTANCE_PRESSED_WARGOAL: "[WAR_GOAL.GetName] is part of the [concept_peace_deal]: $VAL|=+$"
  PEACE_ACCEPTANCE_ACHIEVABLE_WARGOAL: "[WAR_GOAL.GetName] is achievable through capitulation: $VAL|=+$"
  PEACE_ACCEPTANCE_ACHIEVABLE_PRESSED_WARGOAL: "[WAR_GOAL.GetName] is part of the [concept_peace_deal]: $VAL|=+$ (effect reduced because the [concept_war_goal] is likely to be lost in capitulation)"
  PEACE_ACCEPTANCE_TOTAL_VICTORY: "Complete Victory: #bold $VAL|=+$#!"
  ADD_WARGOAL_ITEM: "#header [WarGoal.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_WAR_GOAL_PRIMARY_OR_SECONDARY$\nHolder: [WarGoal.GetHolder.GetName]\nTarget: [WarGoal.GetTarget.GetName]\nEffects: [WarGoal.GetDesc]\n[ConcatIfNeitherEmpty(WarGoal.GetAddWarGoalDiplomaticIncidentDesc, '\n')][ConcatIfNeitherEmpty(AddWarGoalPanel.GetDiplomaticPlay.GetCanAddWarGoalString( WarGoal.Self ), '\n')]"
  UNIFICATION_SUPPORT_ATTITUDE_SCORE: "#v [Country.GetAttitudeTowards(COUNTRY_THIRD_PARTY.Self).GetName]#! attitude: #v $VALUE$#!"
  UNIFICATION_SUPPORT_RELATIONS_SCORE: "#v [Country.GetRelationsWithDesc(COUNTRY_THIRD_PARTY.Self)]! relations: #v $VALUE$#!"
  UNIFICATION_SUPPORT_RANK_SCORE: "[Country.GetName] is a #v [COUNTRY.GetRank]#!: #v $VALUE$#!"
  UNIFICATION_SUPPORT_FOR_CANDIDATES_ENTRY: "[Country.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ #v $VALUE$#!#!#!"
  UNIFICATION_SUPPORT_FOR_CANDIDATES_DESC: "Support for [CountryFormation.GetAdjective] [Concept('concept_unification_candidate', '$concept_unification_candidates$')]:\n$DETAILS$"
  UNIFICATION_CANDIDATE_SUPPORT_BREAKDOWN: "#header [Country.GetAdjectiveNoFormatting] support for [COUNTRY_THIRD_PARTY.GetName] as [concept_unification_candidate] of [CountryFormation.GetName]: #v $VALUE$#!#!\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  NO_VALID_WAR_GOALS: "No valid [Concept('concept_war_goal', '$concept_war_goals$')]"
  WARGOAL_TOOLTIP: "#header [WarGoal.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_WAR_GOAL_PRIMARY_OR_SECONDARY$\nHolder: [WarGoal.GetHolder.GetName]\nTarget: [WarGoal.GetTarget.GetName]\nEffects: [WarGoal.GetDesc][ConcatIfNeitherEmpty('\n\n',WarGoal.GetInfamyDesc)][ConcatIfNeitherEmpty('\n\n', WarGoal.GetManeuversCostDesc)][ConcatIfNeitherEmpty('\n\n',WarGoal.GetStatusString)]"
  WARGOAL_ACTIVE_TOOLTIP: "#header [WarGoal.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_WAR_GOAL_PRIMARY_OR_SECONDARY$\nHolder: [WarGoal.GetHolder.GetName]\nTarget: [WarGoal.GetTarget.GetName]\nEffects: [WarGoal.GetDesc][ConcatIfNeitherEmpty('\n\n',WarGoal.GetInfamyDesc)][ConcatIfNeitherEmpty('\n\n',WarGoal.GetStatusString)]"
  WARGOAL_INFAMY_DESC: "Demanding this resulted in #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.GetInfamyAmount|-1]#!#! [concept_infamy] for [WAR_GOAL.GetHolder.GetName]"
  WARGOAL_POTENTIAL_INFAMY_DESC: "Demanding this would result in #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.GetInfamyAmount|-1]#!#! [concept_infamy] for [WAR_GOAL.GetHolder.GetName]"
  WARGOAL_MANEUVERS_COST_DESC: "Demanding this uses up #tooltippable #tooltip:$BREAKDOWN_TAG$ [WAR_GOAL.CalcManeuversCost|v]#!#! [Concept('concept_maneuver', '$concept_maneuvers$')]"
  WARGOAL_IS_INVALID: "This [concept_war_goal] is #N invalid#! and cannot currently be pressed by [WarGoal.GetHolder.GetName]:#!\n$ERRORS$"
  WARGOAL_IS_EXECUTED: "This [concept_war_goal] has been enforced in the [WAR_GOAL.GetWar.GetName]"
  WARGOAL_IS_DEMANDED: "This [concept_war_goal] is being presented as a demand in a [concept_diplomatic_play]"
  WARGOAL_IS_PRESSED: "This [concept_war_goal] is #P being pressed#! by [WarGoal.GetHolder.GetName] in the [WAR_GOAL.GetWar.GetName] and will be enforced if the current [concept_peace_deal] is accepted by all involved Countries"
  WARGOAL_IS_NOT_PRESSED: "This [concept_war_goal] is #N NOT being pressed#! by [WarGoal.GetHolder.GetName] in the [WAR_GOAL.GetWar.GetName] and will NOT be enforced if the current [concept_peace_deal] is accepted by all involved Countries"
  OBLIGATION_MANEUVERS_COST: "@maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v]"
  OBLIGATION_MANEUVERS_COST_TOOLTIP: "#header [concept_obligation]#!\n[Concept('concept_maneuver', '$concept_maneuvers$')] Cost: @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_OWE_OBLIGATION_MANEUVERS_COST' )|v]\nWe have [DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] remaining"
  OBLIGATION_CALL_IN_MANEUVERS_COST: "@maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_CALL_IN_OBLIGATION_MANEUVERS_COST' )|v]"
  OBLIGATION_CALL_IN_MANEUVERS_COST_TOOLTIP: "#header [concept_obligation]#!\n[Concept('concept_maneuver', '$concept_maneuvers$')] Cost: @maneuvers![GetDefine( 'NDiplomacy', 'SWAY_OFFER_CALL_IN_OBLIGATION_MANEUVERS_COST' )|v]\nWe have [DiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] remaining"

  WARGOAL_MANEUVERS_COST: "@maneuvers![WarGoal.CalcManeuversCost|v]"
  WARGOAL_MANEUVERS_COST_TOOLTIP: "#header [concept_war_goal] [Concept('concept_maneuver', '$concept_maneuvers$')] Cost: [WarGoal.CalcManeuversCost|v]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetManeuversCostDesc]\nWe have [WarGoal.GetDiplomaticPlay.GetNumManeuversRemaining(GetPlayer.Self)|v] [Concept('concept_maneuver', '$concept_maneuvers$')] remaining"
  WARGOAL_INFAMY_TOOLTIP: "#header [concept_war_goal] [concept_infamy]: [WarGoal.GetInfamyAmount|-1]#!\n$TOOLTIP_DELIMITER$\n[WarGoal.GetInfamyDesc]"
  WARGOAL_INFAMY: "@infamy![WarGoal.GetInfamyAmount|-1]"
  WAR_SUPPORT_CANNOT_BE_NEGATIVE: "[concept_war_support] cannot be reduced below #variable 0#! because they hold their capital and the following wargoals are not being occupied:"
  WAR_SUPPORT_CANNOT_BE_NEGATIVE_WAR_GOAL_ENTRY: "- [WAR_GOAL.GetName]"
  WAR_PANEL_CURRENT_PEACE_DEAL_PROPOSER: "Proposed by [WarPanel.GetWar.GetCountryProposingPeace.GetName]"
  WAR_PANEL_NO_CURRENT_PEACE_DEAL: "No Current [concept_peace_deal]"
  WAR_PANEL_CURRENT_PEACE_DEAL: "Current [concept_peace_deal]"
  WAR_PANEL_OVERVIEW: "Overview"
  WAR_PANEL_PEACE: "Make Peace"
  WAR_PANEL_PEACE_TOOLTIP: "#header $WAR_PANEL_CURRENT_PEACE_DEAL$#!\n$TOOLTIP_DELIMITER$\n#title Pressed [Concept('concept_war_goal', '$concept_war_goals$')]:#!\n[War.GetPressedWarGoalsString]\n\n[ConcatIfNeitherEmpty(War.GetPeaceDealValidationDesc, '\n' )][War.GetAcceptActivePeaceDealDesc]"
  WAR_PANEL_ALL_ACCEPT_PEACE: "@green_checkmark_box! #bold All parties agree to this [concept_peace_deal].#!"
  WAR_PANEL_NONE_ACCEPT_PEACE: "@red_cross! #bold No party agrees to this [concept_peace_deal].#!"
  WAR_PANEL_ACCEPT_PEACE_ONE: "@green_checkmark_box! $COUNTRY$ #bold agrees#! to this [concept_peace_deal]."
  WAR_PANEL_ACCEPT_PEACE_LIST: "@green_checkmark_box! $LIST$ #bold agree#! to this [concept_peace_deal]."
  WAR_PANEL_NOT_ACCEPT_PEACE_ONE: "@red_cross! $COUNTRY$ #bold does not agree#! to this [concept_peace_deal]."
  WAR_PANEL_NOT_ACCEPT_PEACE_LIST: "@red_cross! $LIST$ #bold do not agree#! to this [concept_peace_deal]."
  WAR_PANEL_LIKELY_ACCEPT_PEACE_ONE: "@green_checkmark_box! $COUNTRY$ #bold will likely agree#! to this [concept_peace_deal]."
  WAR_PANEL_LIKELY_ACCEPT_PEACE_LIST: "@green_checkmark_box! $LIST$ #bold will likely agree#! to this [concept_peace_deal]."
  WAR_PANEL_LIKELY_NOT_ACCEPT_PEACE_ONE: "@red_cross! $COUNTRY$ #bold will likely not agree#! to this [concept_peace_deal]."
  WAR_PANEL_LIKELY_NOT_ACCEPT_PEACE_LIST: "@red_cross! $LIST$ #bold will likely not agree#! to this [concept_peace_deal]."
  WAR_PANEL_ACCEPT_PEACE: "We do #bold #N not#!#! accept this [concept_peace_deal]"
  WAR_PANEL_NOT_ACCEPT_PEACE: "We accept this [concept_peace_deal]"
  WAR_PANEL_PEACE_YES: "#header Peace Acceptance#!\n$TOOLTIP_DELIMITER$\n#variable $COUNTRY$#! would #P #bold Accept#!#! the current [concept_peace_deal]\n\n$BREAKDOWN$"
  WAR_PANEL_PEACE_NO: "#header Peace Acceptance#!\n$TOOLTIP_DELIMITER$\n#variable $COUNTRY$#! would #N #bold Refuse#!#! the current [concept_peace_deal]\n\n$BREAKDOWN$"
  WAR_PANEL_PEACE_PLAYER: "They are player-controlled, and so the choice is up to them."
  WAR_PANEL_CAPITULATE: "Capitulate"
  WAR_PANEL_CAPITULATE_TOOLTIP: "Immediately leave the war. All wargoals targeting us will be enforced.\n[GetDesc(WarPanel.GetWar.Capitulate(GetPlayer.Self))]"
  WAR_PANEL_PROPOSE_PEACE_DEAL: "Propose a [concept_peace_deal]"
  WAR_PANEL_PROPOSE_PEACE: "Propose [concept_peace_deal]"
  WAR_PANEL_PROPOSE_PEACE_TOOLTIP: "#header $WAR_PANEL_PROPOSE_PEACE$#!\n$TOOLTIP_DELIMITER$\nSuggest peace to all other negotiating parties on the basis of our proposed [concept_peace_deal][ConcatIfNeitherEmpty('\n\n',GetDesc(WarPanel.GetWar.ProposePeaceDeal(GetPlayer.Self)))]\n\n[WarPanel.GetWar.GetAcceptProposedPeaceDealDesc(GetPlayer.Self)]"
  WAR_PANEL_WHITE_PEACE: "White Peace"
  WAR_PANEL_SET_WHITE_PEACE: "Set Terms to White Peace"
  WAR_PANEL_SET_WHITE_PEACE_TOOLTIP: "#header $WAR_PANEL_SET_WHITE_PEACE$#!\n$TOOLTIP_DELIMITER$\nRemove all pressed [Concept('concept_war_goal', '$concept_war_goals$')] from our proposed [concept_peace_deal][ConcatIfNeitherEmpty('\n\n',GetDesc(WarPanel.GetWar.SetWhitePeace(GetPlayer.Self)))]\n\n[WarPanel.GetWar.GetAcceptWhitePeaceDealDesc]"
  CANNOT_CAPITULATE_OVERLORD_IN_WAR: "Cannot capitulate while your suzerain is still participating"
  CANNOT_CAPITULATE_SOVEREIGNTY_VIOLATED: "Cannot capitulate in a war we joined due to having our sovereignty violated"
  CANNOT_CAPITULATE_OVERLORD_WARGOAL_STAKEHOLDER: "Cannot capitulate while your suzerain is the stakeholder in wargoals targeting your country"
  WAR_PANEL_PARTICIPANT_TOOLTIP: "[WarParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarParticipant.GetWarSupportDescDelayed]\n[WarParticipant.GetExhaustionDesc]"
  WAR_RIGHT_LEADER_TOOLTIP: "[War.AccessRightSideLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessRightSideLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessRightSideLeaderParticipant.GetExhaustionDesc]"
  WAR_LEFT_LEADER_TOOLTIP: "[War.AccessLeftSideLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessLeftSideLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessLeftSideLeaderParticipant.GetExhaustionDesc]"
  WAR_ATTACKER_LEADER_TOOLTIP: "[War.AccessAttackerLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessAttackerLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessAttackerLeaderParticipant.GetExhaustionDesc]"
  WAR_DEFENDER_LEADER_TOOLTIP: "[War.AccessDefenderLeaderParticipant.GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[War.AccessDefenderLeaderParticipant.GetWarSupportDescDelayed]\n[War.AccessDefenderLeaderParticipant.GetExhaustionDesc]"
  WAR_PANEL_RIGHT_LEADER_TOOLTIP: "[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader).GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader).GetWarSupportDescDelayed]\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetRightLeader).GetExhaustionDesc]"
  WAR_PANEL_LEFT_LEADER_TOOLTIP: "[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader).GetWarSupportDesc]\n$TOOLTIP_DELIMITER$\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader).GetWarSupportDescDelayed]\n[WarPanel.AccessWar.AccessParticipant(WarPanel.GetLeftLeader).GetExhaustionDesc]"
  WAR_PANEL_WAR_SUPPORT_DESC: "#HEADER War Support#! ($COUNTRY_NAME$)\nCurrent Value: #variable $SUPPORT|1+=$#!"
  WAR_PANEL_WAR_SUPPORT_DESC_INITIAL: "Initial [concept_war_support]: #variable $INITIAL|+=1$#!"
  WAR_PANEL_WAR_SUPPORT_DESC_BATTLES: "\nFrom Battles: #variable $BATTLES|1+=$#!"
  WAR_PANEL_WAR_SUPPORT_DESC_EXHAUSTION: "\nFrom Exhaustion: #variable $EXHAUSTION|1+=$#!"
  WAR_PANEL_WAR_SUPPORT_DESC_SITUATIONS: "\nFrom Events: #variable $SITUATIONS|1+=$#!"
  PEACE_TOAST_TITLE: "Peace Treaty"
  PEACE_SIGNED_DATE: "Signed on [DiplomaticPlay.GetEndDate]"
  CAPITULATION_TITLE: "Capitulation"
  CAPITULATION_ENFORCED: "The following wargoals were enforced on [Country.GetName]"
  IS_PROMOTED: "is promoted to"
  IS_DEMOTED: "is demoted to"
  REMAINS_SAME_RANK: "remains"

  COMMANDER_COMMAND_LIMIT_UNITS: "$NUM_UNITS|v$"
  COMMANDER_COMMAND_LIMIT_UNITS_TOOLTIPPABLE: "#tooltippable #tooltip:$NUM_UNITS_BREAKDOWN$ $NUM_UNITS|v$#!#!"
  COMMANDER_COMMAND_LIMIT_DIVIDER: " / "
  COMMANDER_COMMAND_LIMIT_ENDING_BATTALIONS: " $NAME$ [Concept('concept_battalion', '$concept_battalions$')]"
  COMMANDER_COMMAND_LIMIT_ENDING_FLOTILLAS: " $NAME$ [Concept('concept_flotilla', '$concept_flotillas$')]"
  #Terrains
  plains: "Plains"
  ocean: "Ocean"
  lakes: "Lakes"
  river: "River"
  forest: "Forest"
  hills: "Hills"
  mountain: "Mountains"
  jungle: "Jungle"
  wetland: "Wetlands"
  desert: "Desert"
  tundra: "Tundra"
  savanna: "Savanna"
  snow: "Arctic"
  farmland_rye: "Farmlands"
  farmland_rice: "Paddy Fields"
  farmland_millet: "Farmlands"
  plantation: "Farmlands"
  pasture: "Farmlands"
  farmland_wheat: "Farmlands"
  farmland_maize: "Farmlands"
  cleared_land: "Open Land"
  mining: "Mines"
  forestry: "Timberlands"
  docks: "Dockyards"
  MILITARY_PANEL_FRONT_TROOP_BREAKDOWN_HEADER: "Troop distribution:"
  MILITARY_PANEL_FRONT_TROOP_BREAKDOWN: "[Front.GetName]: @battalions! $NUM_TROOPS|v$ ($PERCENT_OF_TROOPS|%1+$)"
  MILITARY_PANEL_COMMAND_LIMIT_BREAKDOWN_TOOLTIP: "#header Units#!\n[Character.GetFullName] commands [GetUnitStrengthHeader( Character.GetNumCombatUnits, Character.GetMaxNumCombatUnits, Character.GetCombatUnitsTypeIcon )]\n$TOOLTIP_DELIMITER$\nHis Rank of [Character.GetRankName] gives him a [concept_command_limit] of #v [Character.GetStrengthPointsIcon][Character.GetTotalCommandLimit]#!:\n[Character.GetCommandLimitDesc]"
  REGULARS: "Regulars"
  CONSCRIPTS: "Conscripts"
  IN_GARRISON: "In [concept_garrison]"
  WITH_GENERALS: "With [Concept('concept_general', '$concept_generals$')]"
  COMMANDER_PANEL_ATTRITION_FORMAT: "[SelectLocalization(GreaterThan_CFixedPoint(Character.GetAttritionRaw, GetDefine( 'NMilitary', 'NORMAL_ATTRITION' )), '@high_attrition!', '@attrition!')] [Character.GetAttritionFormattedShort]"
  MILITARY_PANEL_ATTRITION_FORMAT: "[SelectLocalization(GreaterThan_CFixedPoint(Character.GetAttritionRaw, GetDefine( 'NMilitary', 'NORMAL_ATTRITION' )), '@high_attrition!', '@attrition!')] [Character.GetAttritionFormatted]"
  MILITARY_PANEL_TROOP_ATTRITION_LEVEL: "[SelectLocalization(GreaterThan_CFixedPoint(Character.GetAttritionRaw, GetDefine( 'NMilitary', 'NORMAL_ATTRITION' )), 'High @high_attrition!', 'Normal @attrition!')]"
  MILITARY_PANEL_TROOP_MORALE_TOOLTIP: "#[GetMoraleColorString(Character.GetMoraleForBuildingUnits(Building.Self))] [Character.GetMoraleForBuildingUnits(Building.Self)|0%v]#! [concept_morale]"
  MILITARY_PANEL_GENERAL_MOBILIZATION_FORMATTED: "[Concept('concept_mobilize_general', '$concept_mobilize_general_mobilization$')]: $VALUE|v%0$"
  ATTRITION_FORMAT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0%$#!#! $CASUALTIES_WEEKLY$"
  ATTRITION_FORMAT_SHORT: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|0%$#!#!"
  ATTRITION_CASUALTIES_WEEKLY: "(#bold -$CASUALTIES|D$#! / week)"
  ATTRITION_DESC: "#header $VAL|0%-$ [concept_attrition]#!\n$TOOLTIP_DELIMITER$\nUnit's attrition is $VAL|0%-$ per week due to:\n$BREAKDOWN$\n\nUnits which are affected by attrition lose from $MIN|0%v$ to $MAX|0%v$ of men to casualties\n$TOOLTIP_DELIMITER$\nCommander's units will take an average of $ATTRITION|1%-$ casualties per week, or lose an average of $CASUALTIES|Dv$ men to casualties"
  ATTRITION_DESC_NOT_ON_FRONT: "#header $VAL|0%-$ [concept_attrition]#!\n$TOOLTIP_DELIMITER$\nUnit's attrition is $VAL|0%-$ per week because the [concept_commander] is not on a [concept_front]\n\nUnits which are affected by attrition lose from $MIN|0%v$ to $MAX|0%v$ of men to casualties"
  ATTRITION_DESC_ZERO: "#header $VAL|0%-$ [concept_attrition]#!\n$TOOLTIP_DELIMITER$\nUnit's attrition is $VAL|0%-$ per week\n\nUnits which are affected by attrition lose from $MIN|0%v$ to $MAX|0%v$ of men to casualties"
  ATTRITION_DESC_BASE: "$TAB$Base Attrition Risk: $VAL|0%-$ (#tooltippable #tooltip:$BREAKDOWN_TAG$ $ADD|0%-$#!#! from [concept_commander] divided by [concept_supply] $SUPPLY|0%v$)"
  ATTRITION_DESC_OTHER: "$TAB$Other Factors: $VAL|0%-$ (#tooltippable #tooltip:$BREAKDOWN_TAG$ $MULT|0%-=$#!#! of Base Attrition risk)"
  WAR_PANEL_INITIATOR_HEADER: "Initiator"
  WAR_PANEL_INITIATOR_HEADER_TOOLTIP: "The Initiator's side in this [concept_war]"
  WAR_PANEL_TARGET_HEADER: "Target"
  WAR_PANEL_TARGET_HEADER_TOOLTIP: "The Target's side in this [concept_war]"
  WAR_PANEL_INITIATOR_WARGOALS: "#title Initiator [Concept('concept_war_goal', '$concept_war_goals$')]#!"
  WAR_PANEL_TARGET_WARGOALS: "#title Target [Concept('concept_war_goal', '$concept_war_goals$')]#!"
  MILITARY_PANEL_KILL_CHARACTER_TOOLTIP: "#header Retire [Character.GetFullName]#!#N [ConcatIfNeitherEmpty('\n', Character.GetKillCharacterFailString)]#!"
  PROMOTION_EFFECTS_TOOLTIP: "\n$TOOLTIP_DELIMITER$\nEffects:\n[Character.GetNextCommanderRankBenefits]$TROOP_ALLOCATION_CHANGES_PROMOTION$"
  MILITARY_PANEL_PROMOTE_CHARACTER_TOOLTIP: "#header Promote [Character.GetFullName] to [Character.GetRankNameFor(Character.GetNextCommanderRank.Self)]#! [SelectLocalization(IsValid(Character.GetPromoteCommand), 'PROMOTION_EFFECTS_TOOLTIP', Character.GetPromoteCharacterFailString)]"
  MILITARY_PANEL_PROMOTE_CHARACTER_TOOLTIP_MAX_RANK: "#header Promote [Character.GetFullName]#!#N [Character.GetPromoteCharacterFailString]#!"
  MILITARY_PANEL_CHARACTER_SUPPLY_TOOLTIP: "#header Supply#!\nCurrent supply of [Character.GetFullName] units is #variable [Character.GetSupply|%0]#!\nNext target supply value is #variable [Character.GetNextSupply|%0]#!\n$TOOLTIP_DELIMITER$\n[concept_supply_desc]"
  MILITARY_PANEL_CHARACTER_OLD_SUPPLY: "Supply: #variable [Character.GetSupply|%1]#!"
  AT_THE_WAR_OFFICE_TOOLTIP: "#header At the War Office#!\n$TOOLTIP_DELIMITER$\n[concept_war_office_desc]"
  RECRUIT_CHARACTER_HEADER: "#header Recruit Character#!"
  ACQUIRING_TITLE: "#title Acquiring#!"
  COST_TITLE: "#title Cost#!"
  CONSUMED_TITLE: "#title Consumed#!"
  BALANCE_TITLE: "#title Balance#!"
  STOCKPILE_TITLE: "#title Stockpile#!"
  KILL_CHARACTER_NOT_ENOUGH_ADMIN: "Not enough @bur!($CURRENTVALUE|v$/$NEEDEDVALUE|v$) to retire this Character"
  RECRUIT_CHARACTER_NOT_ENOUGH_ADMIN: "#N Not enough @bur!#variable ($CURRENTVALUE|0$/$NEEDEDVALUE|0$)#! to recruit a Character#!"
  LOW_NUMBER_INTEREST_GROUPS: "#N Need at least $REQUIRED|v$ number of [Concept('concept_interest_group', '$concept_interest_groups$')] to recruit a new Character#!"
  RECRUIT_CHARACTER_WRONG_COUNTRY: "#N #variable [CHARACTER.GetFullName]#! does not belong to #variable [COUNTRY.GetName]#!#!"
  COMMANDER_ORDER_REDUNDANT: "#v Already assigned to this order#!"
  COMMANDER_ORDER_NAVAL_NO_COASTAL: "#N [STATE.GetName] controls no coastal provinces#!"
  COMMANDER_ORDER_NAVAL_COAST_FULLY_IMPASSABLE: "#N The $ENEMY_ADJ$ coast of $STATE_NAME$ has no passable provinces#!"
  COMMANDER_ORDER_NAVAL_NOT_ENEMY: "#N Not at war with [COUNTRY.GetName]#!"
  COMMANDER_ORDER_NAVAL_REPAIRING: "#N $ADMIRAL_REPAIRING_DATE$#!"
  COMMANDER_ORDER_NAVAL_NEED_GENERAL: "#N [Country.GetName] has no [Concept('concept_general', '$concept_generals$')] in a coastal [concept_hq] with troops to perform a Naval Invasion#!"
  COMMANDER_ORDER_NAVAL_GENERAL_NOT_COASTAL: "#N The [concept_general] must be located in a coastal [concept_hq] to perform a Naval Invasion#!"
  COMMANDER_ORDER_NAVAL_GENERAL_NO_TROOPS: "#N The [concept_general] has no [Concept( 'concept_battalion', '$concept_battalions$')] to perform a Naval Invasion#!"
  COMMANDER_ORDER_POWER_PROJECTION_ALREADY_PRESENT: "#N Already present in [STRATEGIC_REGION.GetName], which automatically generates an [concept_interest] there.#!"
  COMMANDER_ORDER_POWER_PROJECTION_NOT_ADJACENT: "#N Not an adjacent #variable [concept_strategic_region]#!"
  COMMANDER_ORDER_ADVANCE_FRONT_FAIL_NOT_PARTICIPATING: "#N [Country.GetName] is not participating in [Front.GetName]#!"
  COMMANDER_ORDER_DEFEND_FRONT_FAIL_NOT_PARTICIPATING: "#N [Country.GetName] is not participating in [Front.GetName]#!"
  COMMANDER_ORDER_INTERCEPTION_NOT_FRIENDLY_HQ: "#N [HQ.GetName] is not a friendly HQ#!"
  COMMANDER_ORDER_PATROL_SAME_HQ: "#N Need to target a remote HQ#!"
  COMMANDER_ORDER_PATROL_NOT_FRIENDLY_HQ: "#N Can only target friendly HQs#!"
  COMMANDER_ORDER_FRONT_FAIL_UNREACHABLE: "#N [Country.GetName] cannot reach [Front.GetName]#!"
  COMMANDER_ORDER_CONVOY_RAIDING_INVALID_TARGET: "#N No hostile [Concept('concept_supply_network', '$concept_supply_networks$')] present#!"
  COMMANDER_PANEL_CURRENT_ORDER: "Current [concept_order]: #b [Character.GetCommanderOrder.GetType.GetNameGerund]#! [AddLocalizationIf(Not(Or(Character.IsAdmiral, Character.GetCommanderOrder.GetType.IsStandBy)), Character.GetCommanderOrder.GetFrontTarget.GetName)]"
  COMMANDER_PANEL_ORDER_TOOLTIP: "[Character.GetSwitchOrderButtonDesc( CommanderOrderType.Self )][ConcatIfNeitherEmpty('\n\n', Character.CanSelectOrderDesc( CommanderOrderType.Self ))]"
  COMMANDER_PANEL_ORDER_TOGGLE_DEFEND_TOOLTIP: "Changes current [concept_order] to #b Defend#! while remaining on [Character.GetCommanderOrder.GetFrontTarget.GetName]."
  COMMANDER_PANEL_ORDER_TOGGLE_ADVANCE_TOOLTIP: "Changes current [concept_order] to #b Advance#! while remaining on [Character.GetCommanderOrder.GetFrontTarget.GetName]."
  COMMANDER_PANEL_ORDER_TOGGLE_DEFEND: "Change order to Defend"
  COMMANDER_PANEL_ORDER_TOGGLE_ADVANCE: "Change order to Advance"
  MAKE_PEACE_NOT_AT_WAR_WITH: "#N #HEADER [COUNTRY.GetName]#! is not at war with #HEADER [TARGET_COUNTRY.GetName]#!#!"
  GOODS_STATE_PANEL_PRICE_RIGHT_NOW: "Price: #variable @money![Goods.GetStatePrice|1]#!"
  GOODS_PANEL_PRICE_RIGHT_NOW: "Price: #variable [Goods.GetMarketPriceWithTooltip|1]#! [GetTrendIcon(Goods.GetPriceTrend)]"
  SOLD_BY: "#title Sold by#!"
  BOUGHT_BY: "#title Bought by#!"
  PRODUCED_BY: "Produced By"
  CONSUMED_BY: "Consumed By"
  RESOURCE_POTENTIALS: "[Concept('concept_resource_potential','$concept_resource_potentials$')]"
  INFORMATION: "Information"
  STATE_MODIFIERS: "State Modifiers:\n[State.GetModifier.GetDesc]"
  SP_CAPACITY_CONCEPT: "#concept The Military will try to reach the Strength Point Capacity by taking the money from your Military Budget, buy Military Goods and use them to train Soldiers in your Barracks and Naval Bases.#!"
  STAPLE: "Staple"
  STAPLE_FILTER: "#instruction Show/Hide#! #header Staple Goods#!\n\n#concept Staple Goods are Staple Goods#!"
  INDUSTRIAL_GOODS_FILTER: "#instruction Show/Hide#! #header Industrial Goods#!\n\n#concept Industrial Goods are Goods produced by Manufacturing Industries that can be used by other Manufacturing Industries.#!"
  LUXURY_GOODS_FILTER: "#instruction Show/Hide#! #header Luxury Goods#!\n\n#concept Luxury Goods are Goods that Pops start consuming at higher levels of [concept_sol].#!"
  MILITARY_GOODS_FILTER: "#instruction Show/Hide#! #header Military Goods#!\n\n#concept Military Goods are Goods that the Military Uses.#!"
  NATIONAL_SP_CAPACITY: "#title National Strength Point Capacity#!"
  ARMY_TITLE: "@army_SP! #TITLE Army#!"
  NAVY_TITLE: "#title @navy_SP! Navy#!"
  NAVY_SP_CAPACITY_TITLE: "#HEADER Navy Strength Point Capacity#!\n$TOOLTIP_DELIMITER$\nTarget: #variable @army_SP![Country.GetNavySPCapacity]#!\n\n$SP_CAPACITY_CONCEPT$"
  ARMY_SP_CAPACITY_TITLE: "#HEADER Army Strength Point Capacity#!\n$TOOLTIP_DELIMITER$\nTarget: #variable @navy_SP![Country.GetArmySPCapacity]#!\n\n$SP_CAPACITY_CONCEPT$"
  COMMANDS_TITLE: "#title Commands#!"
  CURRENT_ARMY_SP: "Current: #variable @army_SP![Country.GetStrengthPointArmy]#!"
  CURRENT_NAVY_SP: "Current: #variable @navy_SP![Country.GetStrengthPointNavy]#!"
  UNASSIGNED_CHARACTERS_TITLE: "#title Unassigned Characters#!"
  PRIO_TITLE: "#title Prio:#!"
  TRAITS_TITLE: "#title Traits#!"
  AGE_VALUE: "#title Age:#! #bold [Character.GetAge]#!"
  INTEREST_GROUP_VALUE: "#title [concept_interest_group]:#! #bold #underline [Character.GetInterestGroup.GetName]#!#!"
  INTEREST_GROUP_VALUE_TWO_ROWS: "#title [concept_interest_group]:#!\n#bold #underline [InterestGroup.GetName]#!#!"
  RULER_OF_COUNTRY: "Head of State in #variable [Character.GetCountry.GetName]"
  HEIR_OF_COUNTRY: "Heir Apparent in #variable [Character.GetCountry.GetName]#!"
  AT_THE_WAR_OFFICE: "Unassigned"
  RECRUIT_CHARACTER_GENERAL: "Recruit General"
  RECRUIT_CHARACTER_ADMIRAL: "Recruit Admiral"
  RECRUIT_CHARACTER_GENERAL_HEADER: "#bold Select General to recruit#!"
  RECRUIT_CHARACTER_ADMIRAL_HEADER: "#bold Select Admiral to recruit#!"
  RECRUIT_CHARACTER_BUTTON: "Recruit"
  CHARACTER_IG_IS_INSURRECTIONARY: "Supported by insurrectionary [InterestGroup.GetName]"
  RETIRE_COMMANDER_IS_RULER: "[Character.GetFullName] is the [Character.GetPrimaryRoleTitle] of [Character.GetCountry.GetName] and cannot be retired"
  RECRUIT_COMMANDER_TOO_MANY_OF_TYPE: "[Country.GetName] already has [GetDefine('NCharacters','MAX_NUM_CHARACTERS_PER_TYPE')|0] [Character.GetPrimaryRoleName]s and cannot recruit more"
  RECRUIT_COMMANDER_WRONG_COUNTRY: "#R [Character.GetFullName] does not belong to [Country.GetName]#!"
  RECRUIT_COMMANDER_HQ_WRONG_COUNTRY: "#R [Hq.GetName] does not belong to [Country.GetName]#!"
  RECRUIT_COMMANDER_TEMP_HQ: "#R [Hq.GetName] is a temporary [concept_hq]#!"
  CHARACTER_TOOLTIP: "[Character.GetInfoTooltip]"
  CHARACTER_IS_BUSY: "[Character.GetFullName] is busy and cannot take any assignments"
  character_role_general: "General"
  character_role_admiral: "Admiral"
  character_role_politician: "Politician"
  character_role_ruler: "Ruler"
  character_role_heir: "Heir Apparent"
  character_role_general_title: "General"
  character_role_admiral_title: "Admiral"
  character_role_politician_title: "" # Empty on purpose
  ROLE: "[concept_character_role]"
  CHARACTER_PRIMARY_ROLE: "#v [Character.GetAllRoleNames]#!"
  CHARACTER_PRIMARY_ROLE_TOOLTIP: "#header [Character.GetFullName]#! is a #v [Character.GetAllRoleNames]#!"
  INPUT_MULT: "[concept_input_mult]: #v [Building.GetInputMult|-=%0]#!"
  INPUT_MULT_TOOLTIP: "[Building.GetInputMultDesc]"
  THROUGHPUT: "[SelectLocalization(EqualTo_CFixedPoint(Building.GetThroughputBonusCurrent, Building.GetThroughputBonusTarget), 'THROUGHPUT_CONSTANT', 'THROUGHPUT_CHANGING')]"
  THROUGHPUT_CONSTANT: "[concept_throughput]: #v [Building.GetThroughputBonusCurrent|%=+0]#!"
  THROUGHPUT_CHANGING: "[concept_throughput]: #v [Building.GetThroughputBonusCurrent|%=+0]#! @arrow_right! #v [Building.GetThroughputBonusTarget|%=+0]#!"
  THROUGHPUT_TOOLTIP: "[SelectLocalization(EqualTo_CFixedPoint(Building.GetThroughputBonusCurrent, Building.GetThroughputBonusTarget), 'THROUGHPUT_TOOLTIP_CONSTANT', 'THROUGHPUT_TOOLTIP_CHANGING')]"
  THROUGHPUT_TOOLTIP_CONSTANT: "#header Throughput Bonus#!\n[Building.GetThroughputDesc]"
  THROUGHPUT_TOOLTIP_CHANGING: "The Building's [concept_throughput] is changing.\n\n#header Throughput Bonus#!\n[Building.GetThroughputDesc]"
  EXPAND_ECONOMY_OF_SCALE_EFFECT_PER_LEVEL: "$EFFECT$ per Level (capped at Level $MAX_LEVEL|v$)"
  EXPAND_ECONOMY_OF_SCALE_EFFECT_TOTAL: "$EFFECT$ Total (capped at $MAX_EFFECT$)"
  BUILDING_ECONOMY_OF_SCALE_CAP_TOOLTIP: "[Building.GetName] in [Building.GetState.GetName] is subject to [concept_economy_of_scale] effects up to level [Building.GetModifier.GetValueWithBreakdownFor('building_economy_of_scale_level_cap_add')]"
  BUILDING_TYPE_ECONOMY_OF_SCALE_CAP_TOOLTIP: "[BUILDING_TYPE.GetName] in [STATE.GetName] is subject to [concept_economy_of_scale] effects up to level [MODIFIER.GetValueWithBreakdownFor('building_economy_of_scale_level_cap_add')]"
  character_ig_info: "[concept_interest_group]: #variable [CHARACTER.GetInterestGroup.GetName]#!"
  character_name_info: "[CHARACTER.GetFullNameWithTitle]"
  character_role_info: "#bold [CHARACTER.GetPrimaryRoleName]#!"
  character_age_info: "Age: #variable [CHARACTER.GetAge]#!"
  character_traits_info: "#title Traits#!\n[CHARACTER.GetTraitsDesc]"
  character_command_limit_army: "[concept_command_limit]: #variable [CHARACTER.GetCommandLimit|0]#! @battalions!"
  character_command_limit_navy: "[concept_command_limit]: #variable [CHARACTER.GetCommandLimit|0]#! @flotillas!"
  character_ideology_info: "Ideology: [CHARACTER.GetIdeology.GetName]"
  CHARACTER_TRAIT_FORMAT: "#variable $TRAIT$#!"
  CHAR_TRAIT_MODIFIER_HEADER_COUNTRY: "#title As Ruler:#!"
  CHAR_TRAIT_MODIFIER_HEADER_COMMAND: "#title As Commander:#!"
  CHAR_TRAIT_MODIFIER_HEADER_IG_LEADER: "#title As [concept_interest_group] Leader:#!"
  CHAR_TRAIT_MODIFIER_HEADER_COUNTRY_INACTIVE: "#title As Ruler (Inactive):#!"
  CHAR_TRAIT_MODIFIER_HEADER_COMMAND_INACTIVE: "#title As Commander (Inactive):#!"
  CHAR_TRAIT_MODIFIER_HEADER_IG_LEADER_INACTIVE: "#title As [concept_interest_group] Leader (Inactive):#!"
  POPULARITY_HATED: "#r Hated#!"
  POPULARITY_DISLIKED: "Disliked"
  POPULARITY_NEUTRAL: "Neutral"
  POPULARITY_LIKED: "Liked"
  POPULARITY_LOVED: "#g Loved#!"
  character_info_with_ig_tooltip_general: "$character_info_tooltip_general$\n\n$character_ig_info$"
  character_info_with_ig_tooltip_admiral: "$character_info_tooltip_admiral$\n\n$character_ig_info$"
  character_info_with_ig_tooltip_politician: "$character_info_tooltip_politician$\n\n$character_ig_info$"
  character_info_tooltip_general: "#HEADER $character_name_info$#!\n$character_role_info$ \n$TOOLTIP_DELIMITER$\n$character_age_info$\n$character_assignments_info$\n\n$character_command_limit_army$\n\n$character_traits_info$"
  character_info_tooltip_admiral: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n$character_assignments_info$\n\n$character_command_limit_navy$\n\n$character_traits_info$"
  character_info_tooltip_politician: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_ideology_info$\n$character_age_info$\n\n$character_traits_info$"
  character_info_tooltip_ruler: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n\n$character_traits_info$"
  character_info_tooltip_heir: "#HEADER $character_name_info$#!\n$character_role_info$\n$TOOLTIP_DELIMITER$\n$character_age_info$\n\n$character_traits_info$"
  MILITARY_PANEL: "Military"
  MILITARY_PANEL_TAB_ARMY: "Army"
  MILITARY_PANEL_TAB_ARMY_SELECTED: "#bold Army#!"
  MILITARY_PANEL_TAB_GARRISON: "Garrisons"
  MILITARY_PANEL_TAB_GARRISON_SELECTED: "#bold Garrisons#!"
  MILITARY_PANEL_TAB_NAVY: "Navy"
  MILITARY_PANEL_TAB_NAVY_SELECTED: "#bold Navy#!"
  TITLE_RULER: "#title Head of State#!"
  TITLE_HEIR: "#title Heir Apparent#!"
  TITLE_LEADER: "#title Leader#!"
  IDEOLOGY_STRONG_APPROVAL: "#P Strong Approval#!"
  IDEOLOGY_APPROVAL: "#P Approval#!"
  IDEOLOGY_NEUTRAL: "#v Neutral#!"
  IDEOLOGY_DISAPPROVAL: "#N Disapproval#!"
  IDEOLOGY_STRONG_DISAPPROVAL: "#N Strong Disapproval#!"
  IDEOLOGY_NO_LAW_STANCES: "#bold No Stances#!"
  IDEOLOGY_LAW_STANCE_GROUP: "#title Stance on $LAW_GROUP$#!"
  IDEOLOGY_LAW_STANCE_STRONGLY_APPROVE: "#P Strongly $concept_endorse$#! $LAWS$"
  IDEOLOGY_LAW_STANCE_APPROVE: "#P $concept_endorse$#! $LAWS$"
  IDEOLOGY_LAW_STANCE_DISAPPROVE: "#N $concept_oppose$#! $LAWS$"
  IDEOLOGY_LAW_STANCE_STRONGLY_DISAPPROVE: "#N Strongly $concept_oppose$#! $LAWS$"
  IDEOLOGY_LAW_STANCE_NEUTRAL: "#v Neutral#! towards $LAWS$"
  POL_PANEL_IG_STATUS_HEADER: "#title Approval#!"
  ig_approval_loyal: "#bold #P Loyal#!#!"
  ig_approval_happy: "#bold #P Happy#!#!"
  ig_approval_neutral: "#bold Neutral#!"
  ig_approval_unhappy: "#bold #N Unhappy#!#!"
  ig_approval_angry: "#bold #N Angry#!#!"
  WILL_RADICALIZE_WARNING: "@warning! This will [Concept('concept_political_movement_radicalism', '$concept_political_movement_radicalize$')] the [INTEREST_GROUP.GetName]"
  IG_NAME_WITH_LEADER: "[CHARACTER.GetFullName] of [INTEREST_GROUP.GetName]"
  IG_APPROVES_OF_LAW: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold $concept_endorse$#!#! [Law.GetName]: #bold $VAL|+=$#!\n"
  IG_DISAPPROVES_OF_LAW: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold $concept_oppose$#!#! [Law.GetName]: #bold $VAL|+=$#!\n"
  IG_STRONGLY_APPROVES_OF_LAW: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold Strongly $concept_endorse$#!#! [Law.GetName]: #bold $VAL|+=$#!\n"
  IG_STRONGLY_DISAPPROVES_OF_LAW: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold Strongly $concept_oppose$#!#! [Law.GetName]: #bold $VAL|+=$#!\n"
  IG_APPROVES_OF_LAW_CHANGE: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold $concept_endorse$#!#! this change: #tooltippable #tooltip:[INTEREST_GROUP.GetTooltipTag]|[LAW.GetTooltipTag],IG_LAW_APPROVAL_BREAKDOWN #bold $APPROVAL_DELTA|+=$#!#!#! (from #v $CURR_APPROVAL|+$#! to #v $PROJECTED_APPROVAL|+$#!)\n\n"
  IG_APPROVES_OF_PREVIOUS_LAW_CHANGE: "@approves! $NAME$ $CLOUT_OPTIONAL$#P #bold $concept_endorse$#!#! the recent change from [LAW_OTHER.GetName] to [LAW.GetName]: #bold $APPROVAL_DELTA|+=$#!#!#!\n\n"
  IG_DISAPPROVES_OF_LAW_CHANGE: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold $concept_oppose$#!#! this change: #tooltippable #tooltip:[INTEREST_GROUP.GetTooltipTag]|[LAW.GetTooltipTag],IG_LAW_APPROVAL_BREAKDOWN #bold $APPROVAL_DELTA|+=$#!#!#! (from #v $CURR_APPROVAL|+$#! to #v $PROJECTED_APPROVAL|+$#!)\n\n"
  IG_DISAPPROVES_OF_PREVIOUS_LAW_CHANGE: "@disapproves! $NAME$ $CLOUT_OPTIONAL$#N #bold $concept_opposes$#!#! the recent change from [LAW_OTHER.GetName] to [LAW.GetName]: #bold $APPROVAL_DELTA|+=$#!#!#!\n\n"
  IG_APPROVES_OF_LAW_CHANGE_BREAKDOWN: "@approves! #variable [INTEREST_GROUP.GetName]#! #P #bold $concept_endorse$#!#! replacing #variable $OLD_LAW$#! ($OLD_APPROVAL$) with #variable $LAW$#! ($APPROVAL$)\n#bold $APPROVAL_DELTA|+=$#! (from $CURR_APPROVAL|=$ to $PROJECTED_APPROVAL|=$)"
  IG_DISAPPROVES_OF_LAW_CHANGE_BREAKDOWN: "@disapproves! #variable [INTEREST_GROUP.GetName]#! #N #bold $concept_oppose$#!#! replacing #variable $OLD_LAW$#! ($OLD_APPROVAL$) with #variable $LAW$#! ($APPROVAL$)\n#bold $APPROVAL_DELTA|+=$#! (from $CURR_APPROVAL|=$ to $PROJECTED_APPROVAL|=$)"
  IG_LAW_APPROVAL_BREAKDOWN: "[InterestGroup.GetLawApprovalBreakdown(Law.Self)]"
  IG_APPROVAL_DECAY_DESC: "\n#bold After being passed#!, $APPROVAL_DELTA|+=$ will decay to #bold $VAL|+=$#! over the following $MONTHS|0v$ Months"
  IG_APPROVAL_DECAY_IN_PROGRESS_DESC: "(This reaction is decaying in $MONTHS$ months and will be replaced with an approval rating of #bold $VAL|+=$#! ($APPROVAL$).)"
  IG_WITH_CLOUT: "([INTEREST_GROUP.GetClout|%1v]) "
  IG_MARGINAL_WITH_CLOUT: "([INTEREST_GROUP.GetClout|%1v] - [concept_marginalized]) "
  NO_CHANGE_IN_APPROVAL: "[INTEREST_GROUP.GetName] likes $LAW$ as much as $OLD_LAW$"
  CURRENTLY_ENACTING: "Currently enacting:"
  ZOOM_TO_CAPITAL_STATE: "Zoom to [Country.GetCapital.GetName] ([concept_capital_state])"
  GOV_STABILITY_DROP_FROM_LAW: "$TAB$ #variable $IGNAME$#! $IDEOLOGY$: #bold #N -$VAL|0%$#!#!"
  IG_STABILITY_DROP_FROM_LAW: "Enacted $LAW$"
  IG_STABILITY_BONUS_SINGLE_GROUP: "Sole [concept_interest_group] in Government: #variable #P $VAL|=0%$#!#!#!\n"
  IG_STABILITY_PENALTY_RELATION: "#bold $DISLIKING_IG$#! dislikes #bold $LEADER_IG$#!: #variable #N $VAL|0%$#!#!\n"
  IG_STABILITY_BONUS_RELATION: "#bold $LIKING_IG$#! likes #bold $LEADER_IG$#!: #variable #P $VAL|=0%$#!#!\n"
  IG_STABILITY_PENALTY_RECENT_LAW: "#bold $DISLIKING_IG$#! opposed recently passed Laws: #variable #N $VAL|0%$#!#!\n"
  IG_STABILITY_PENALTY_OPPOSITION: "Opposition Clout: #variable #N $VAL|0%$#!#!\n"
  GOV_IG_ENACTMENT_SUPPORT: "   @approves! [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%1v$) #P #bold $concept_endorse$#!#!: #bold $VAL|-=$#! days"
  GOV_IG_ENACTMENT_NEUTRAL: "   [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%v1$) are #tooltippable #tooltip:INDIFFERENT_BREAKDOWN indifferent#!#!: #bold $VAL|-=$#! days"
  GOV_IG_ENACTMENT_OPPOSITION: "   @disapproves! [INTEREST_GROUP.GetName] ($CLOUT_SHARE|%v1$) #bold #N $concept_oppose$#!#!: #bold $VAL|-=$#! days"
  LAW_APPROVAL: "#bold [Law.GetPercentPolStrApprove|%1]#!"
  #LAW_APPROVAL: "#bold [Law.GetNumIGsApprove]#! ([Law.GetPercentPolStrApprove|%0])"
  LAW_DISAPPROVAL: "#bold [Law.GetPercentPolStrDisapprove|%1]#!"
  #LAW_DISAPPROVAL: "#bold [Law.GetNumIGsDisapprove]#! ([Law.GetPercentPolStrDisapprove|%0])"
  LAW_INDIFFERENT: "#bold [Law.GetPercentPolStrUndecided|%1]#!"
  #LAW_UNDECIDED: "#bold [Law.GetNumIGsUndecided]#! ([Law.GetPercentPolStrUndecided|%0])"
  TOOLTIP_LAW_APPROVAL: "#header @approves! [Concept('concept_endorse_oppose', '$concept_endorsement$')]#!\n$LAW_IGS_APPROVE$"
  TOOLTIP_LAW_INDIFFERENT: "#header @indifferent! [Concept('concept_endorse_oppose', '$concept_indifferent$')]#!\n$LAW_IGS_INDIFFERENT$"
  TOOLTIP_LAW_DISAPPROVAL: "#header @disapproves! [Concept('concept_endorse_oppose', '$concept_opposition$')]#!\n$LAW_IGS_DISAPPROVE$"
  LAW_IGS_APPROVE: "#variable [Law.GetPercentPolStrApprove|%1]#! of the [concept_clout] in the country @approves! $concept_endorses$ #variable [Law.GetName]#!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsApproveList)]"
  LAW_IGS_DISAPPROVE: "#variable [Law.GetPercentPolStrDisapprove|%1]#! of the [concept_clout] in the country @disapproves! $concept_opposes$ #variable [Law.GetName]#!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsDisapproveList)]"
  LAW_IGS_INDIFFERENT: "#variable [Law.GetPercentPolStrUndecided|%1]#! of the [concept_clout] in the country #bold do not care#! about #variable [Law.GetName]#!.[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', Law.GetIGsUndecidedList)]"
  LAW_NO_GOVERNMENT_OR_MOVEMENT_SUPPORT: "No [concept_interest_group] [concept_in_government] approves of [Law.GetName] and there is no [concept_political_movement] backing it"
  LAW_NO_CHANCE_TO_PASS: "The chance that [Law.GetName] can be enacted must be above #v 0%#! through support from either an [concept_interest_group] [concept_in_government], a [concept_political_movement] or your [Concept('concept_ruler','$concept_ruler_possessive$')] [concept_ideology]."
  NEVER: "#N Never#!"

  TOOLTIP_IDEOLOGY: "#HEADER [Ideology.GetName]#!\n$TOOLTIP_DELIMITER$\n[Ideology.GetLawStanceDesc]\n\n#lore [Ideology.GetDesc]#!"
  TOOLTIP_IG_TRAIT_FROM_PAIR: "#HEADER [InterestGroupAndTraitPair.GetInterestGroup.GetName] - [InterestGroupAndTraitPair.GetTrait.GetName]#! [InterestGroupAndTraitPair.GetTrait.GetInactiveString(InterestGroupAndTraitPair.GetInterestGroup)]\n[InterestGroupAndTraitPair.GetTrait.GetModifiersDesc(InterestGroupAndTraitPair.GetInterestGroup)]\n$TOOLTIP_DELIMITER$\n[InterestGroupAndTraitPair.GetTrait.GetTriggersDesc(InterestGroupAndTraitPair.GetInterestGroup)]\n\n#lore [InterestGroupAndTraitPair.GetTrait.GetDesc]#!"
  TOOLTIP_STATE_TRAIT: "#HEADER [StateTrait.GetName]#!\n[StateTrait.GetModifiersDesc]"
  IN_GOVERNMENT: "[concept_in_government]"
  IN_OPPOSITION: "[concept_in_opposition]"
  MARGINAL: "[concept_marginalized]"
  MARGINAL_GROUPING: "$MARGINAL$"
  MARGINAL_AND_INACTIVE_GROUPING: "Marg + Inactive"
  MARGINAL_GROUP_TOOLTIP: "#header [concept_marginalized] [Concept('concept_interest_group', '$concept_interest_groups$')]#!\nTotal [concept_clout]: [PopulationGrouping.GetSizeInPercentage|%1v]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetMarginalInterestGroupsDesc]"
  MARGINAL_AND_INACTIVE_GROUP_TOOLTIP: "#header [concept_marginalized]#!\n[GetPlayer.GetMarginalInterestGroupsPopulationDesc][concept_marginalized_desc]\n\n#header [Concept('concept_politically_inactive_involved', '$concept_politically_inactive$')]#!\n[GetPlayer.GetInactivePopulationDesc][concept_politically_inactive_involved_desc]"
  INTEREST_GROUP_ITEM: "[INTEREST_GROUP.GetName]: #variable [INTEREST_GROUP.GetClout|1%]#! ([INTEREST_GROUP.GetPoliticalStrength|Kv] [concept_political_strength])\n"
  INTEREST_GROUP_ITEM_POPULATION: "[INTEREST_GROUP.GetName]: #variable [INTEREST_GROUP.GetPopulation|K]#!\n"
  POP_TYPE_POPULATION_ITEM: "$TYPE$: #variable $VAL|K$#!\n"
  LEADING_IG: "#header Leading [concept_interest_group]#!\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\n\nSince [InterestGroup.GetName] is the [concept_interest_group] with the most [concept_political_strength] in Government it is considered the leading [concept_interest_group]."
  FAVORS_IDEOLOGY: "Favors #variable $IDEOLOGY_NAME$#!: $VAL|+=$"
  OPPOSES_IDEOLOGY: "Opposes #variable $IDEOLOGY_NAME$#!: $VAL|+=$"
  RELATION_TO_IG: "Total relation to #variable $IG_NAME$#!: $RELATION_VALUE|+=$\n$TOOLTIP_DELIMITER$\n$RELATION_BREAKDOWN$"
  IN_GOVERNMENT_DESC: "#HEADER In Government#!\n$TOOLTIP_DELIMITER$\n[concept_in_government_desc]"
  IN_OPPOSITION_DESC: "#HEADER In Opposition#!\n$TOOLTIP_DELIMITER$\n$[concept_in_opposition_desc]$"
  MARGINAL_DESC: "#HEADER Marginalized#!\n$TOOLTIP_DELIMITER$\n[concept_marginalized_desc]"
  IN_REVOLUTION_DESC: "#HEADER In Revolution#!\n$TOOLTIP_DELIMITER$\n$IN_REVOLUTION_CONCEPT$"
  SECESSION_ALERT_ENTRY_CHANCE: "[CULTURE.GetName] [CULTURE.GetChanceForSecessionMovement( GetPlayer.Self )|%1v]"
  SECESSION_ALERT_ENTRY_GROWING: "[CULTURE.GetName]"
  COST_OF_WAR_ENTRY: "[Country.GetName] $TYPE$: @money!$COST|vD$"
  COST_OF_WAR_TYPE_MATERIEL: "Military Goods"
  COST_OF_WAR_TYPE_WAGES: "Conscript Wages"
  COST_OF_WAR_TOOLTIP: "#header Total Cost of War: @money!$COST|vD$#!\n$COST_OF_WAR_TYPE_MATERIEL$: @money!$MATERIEL_COST|vD$\n$COST_OF_WAR_TYPE_WAGES$: @money!$WAGES_COST|vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  FILTERS: "Filters"
  REVOLUTIONS_HEADER: "#bold Revolution#!"
  REVOLUTIONS_HEADER_TOOLTIP: "There are [Concept('concept_interest_group', '$concept_interest_groups$')] actively trying to overthrow the government!"
  SECESSION_HEADER: "#bold [CivilWar.GetCulture.GetName] Secession#!"
  SECESSION_HEADER_TOOLTIP: "The [CivilWar.GetCulture.GetName] population is trying to break away!"
  REVOLUTIONS_PROGRESS_TOOLTIP: "#header [concept_revolution] to [CivilWar.GetPoliticalMovement.GetName]#!\nCurrent progress: #v [Multiply_CFixedPoint(CivilWar.GetProgress,'(CFixedPoint)100')|0]/100#!\n$TOOLTIP_DELIMITER$\n[concept_revolution_progression_speed]: #tooltippable #tooltip:[CivilWar.GetTooltipTag],CIVIL_WAR_PROGRESS_TOOLTIP [Multiply_CFixedPoint(CivilWar.GetWeeklyProgress,'(CFixedPoint)100')|0-=]#!#! / week\n\n[concept_revolution] progression can increase up to a maximum of [concept_political_movement_radicalism] of the [concept_political_movement] to [CivilWar.GetPoliticalMovement.GetName]: #tooltippable #tooltip:[CivilWar.GetPoliticalMovement.GetTooltipTag],POLITICAL_MOVEMENT_RADICALISM_TOOLTIP,PoliticalMovementRadicalismTooltip [Multiply_CFixedPoint(CivilWar.GetMaxProgress,'(CFixedPoint)100')|0-=]#!#!\nIf it reaches #v 100#! a $concept_revolution$ will break out. [AddLocalizationIf(And(GreaterThan_CFixedPoint(CivilWar.GetWeeklyProgress, '(CFixedPoint)0'),GreaterThan_CFixedPoint(CivilWar.GetMaxProgress, '(CFixedPoint)1')), 'REVOLUTION_WARNING')]\n\n[CivilWar.GetUprisingStatesString]"
  REVOLUTION_WARNING: "\n\n@warning! $concept_revolution$ is impending in #v [CivilWar.GetNumWeeksToBreakOut]#! week(s)!"
  UPRISING_PROGRESS_TOOLTIP_STATE_HEADER: "The following [Concept('concept_state','$concept_states$')] would secede:"
  UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY: "$VALUE|%0v$ chance for [STATE.GetName]"
  UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY_GUARANTEED: "[STATE.GetName]"
  UPRISING_PROGRESS_TOOLTIP_STATE_ENTRY_UNIT: "$ICON$ $VALUE|v$"
  UPRISING_PROGRESS_TOOLTIP_TOTAL_STRENGTH_STATES: "$NUM_STR|v$ [Concept('concept_state','$concept_states$')]"
  UPRISING_PROGRESS_TOOLTIP_TOTAL_STRENGTH_UNIT: ", $ICON$$VALUE|v$"
  SECESSION_PROGRESS_TOOLTIP: "#header Secession#!\nSecession movement buildup is at [CivilWar.GetProgress|%v1]!\n$TOOLTIP_DELIMITER$\nEvery week this is changed by #tooltippable #tooltip:[CivilWar.GetTooltipTag],CIVIL_WAR_PROGRESS_TOOLTIP [CivilWar.GetWeeklyProgress|%1-=]#!#! based on [concept_turmoil] of [CivilWar.GetCulture.GetName] population. If [concept_turmoil] is lower than [GetDefine( 'NPolitics', 'SECESSION_TURMOIL_CUTOFF' )|v%0] progress will be reduced.\nStates with more than #variable [GetDefine( 'NPolitics', 'SECESSION_STATE_CUTOFF_PERCENT' )|%0]#! [CivilWar.GetCulture.GetName] population will secede.\n\n[CivilWar.GetUprisingStatesString]\n\n[concept_secession_desc]"
  CIVIL_WAR_PROGRESS_TOOLTIP: "[CivilWar.GetWeeklyProgressDesc]"
  CIVIL_WAR_MAX_PROGRESS_TOOLTIP: "[CivilWar.GetMaxProgressDesc]"
  CIVIL_WAR_PROGRESS_BREAKDOWN: "#header Weekly Progress: $PROGRESS|%0$#!\n$TOOLTIP_DELIMITER$\nBase: #v $BASE|-=1%$#![ConcatIfNeitherEmpty('\n','$MODIFIER$')]"
  CIVIL_WAR_REVOLUTION_PROGRESS_BREAKDOWN: "#header Weekly Progress: [Multiply_CFixedPoint('(CFixedPoint)$PROGRESS$','(CFixedPoint)100'))|0]#!\n$TOOLTIP_DELIMITER$\nBase: #v [Multiply_CFixedPoint('(CFixedPoint)$BASE$','(CFixedPoint)100'))|0-=]#![ConcatIfNeitherEmpty('\n','$MODIFIER$')]"
  CIVIL_WAR_MAX_PROGRESS_BREAKDOWN: "#header Maximum Progress: [Multiply_CFixedPoint('(CFixedPoint)$TOTAL_MAX$','(CFixedPoint)100'))|0]#!\n$TOOLTIP_DELIMITER$\nFrom [Concept('concept_political_movement_radicalism', '$concept_political_movement_radicalism_short$')]: #v [Multiply_CFixedPoint('(CFixedPoint)$MAX_FROM_RADICALISM$','(CFixedPoint)100'))|0]#!"
  CIVIL_WAR_MAX_UNSUPPORTED_PROGRESS: "This revolution cannot sustain progress above [Multiply_CFixedPoint('(CFixedPoint)$PROGRESS_LIMIT$','(CFixedPoint)100'))|0v] because the [concept_political_movement] lacks support from an [concept_interest_group]."
  CIVIL_WAR_PROGRESS_AT_MAX_PROGRESS: "#header Weekly Progress\n$TOOLTIP_DELIMITER$\n[concept_revolution] is at current maximum progress of #tooltippable #tooltip:$BREAKDOWN_TAG$ [Multiply_CFixedPoint('(CFixedPoint)$MAX_PROGRESS$','(CFixedPoint)100'))|0]#!#!"
  CIVIL_WAR_PROGRESS_ABOVE_MAX_PROGRESS: "#header Weekly Progress\n$TOOLTIP_DELIMITER$\n[concept_revolution] is above maximum progress of #tooltippable #tooltip:$BREAKDOWN_TAG$ [Multiply_CFixedPoint('(CFixedPoint)$MAX_PROGRESS$','(CFixedPoint)100'))|0]#!#!"
  SECESSION_CULTURE_TEXT: "Culture: [CivilWar.GetCulture.GetName]"
  SECESSION_CULTURE_TURMOIL_TEXT: "Turmoil: #bold [CivilWar.GetCulture.CalcTurmoilInCountry( GetPlayer.Self )|-=%0]#! (excess: #bold [CivilWar.GetExcessTurmoil|-%=0]#!)"
  SECESSION_CULTURE_TURMOIL_TEXT_TOOLTIP: "Any [concept_turmoil] over [GetDefine( 'NPolitics', 'SECESSION_TURMOIL_CUTOFF' )|v] causes progression to go faster. If [concept_turmoil] goes below this the progress will be reduced."
  SECESSION_CULTURE_POP: "Population: 123123|v"
  REVOLUTIONS_UPRISING_HEADER_LOYALIST: "Opposing [CivilWar.GetUprisingCountry.GetName]!"
  REVOLUTIONS_UPRISING_HEADER_REBEL: "Opposing [CivilWar.GetOriginCountry.GetName]!"
  REVOLUTIONS_IG_LIST_HEADER: "#title Insurrectionary [Concept('concept_interest_group', '$concept_interest_groups$')]:#!"
  REVOLUTIONS_IG_LIST_HEADER_TOOLTIP: "The insurrectionary [Concept('concept_interest_group', '$concept_interest_groups$')] in the country"
  BATTALIONS_STILL_FIGHTING: "@battalions! Battalions"
  BATTALIONS_FIGHTING_HISTORY: "@battalions! Battalions fighting history"
  MANPOWER_FIGHTING_HISTORY: "Fighting capable men"
  SECESSION_UPRISING_HEADER: "#N #bold The [CivilWar.GetCulture.GetName] have seceded from us!#!#!"
  SECESSION_UPRISING_HEADER_LOYALIST: "We are fighting the traitors in [CivilWar.GetUprisingCountry.GetName]!"
  SECESSION_UPRISING_HEADER_REBEL: "We are fighting the tyrants in [CivilWar.GetOriginCountry.GetName]!"
  ADD_TO_GOVERNMENT: "Add To Government"
  REMOVE_FROM_GOVERNMENT: "Remove From Government"
  LEGITIMACY_CHANGE_SWITCH_TOOLTIP: "This would result in a [concept_legitimacy] change of #variable $VAL|+=0$#! (Currently #variable [GetPlayer.GetGovernmentLegitimacy]#!)\n$TOOLTIP_DELIMITER$\nThe resulting Government Legitimacy would look like this:\n$DESC$"
  TOOLTIP_REFORM_GOVERNMENT: "#HEADER $REFORM_GOVERNMENT$#!\n[ReformGovernment.GetConfirmDesc]"
  ADD_TO_GOVERNMENT_SHORT: "Add"
  REMOVE_FROM_GOVERNMENT_SHORT: "Remove"
  FORM_GOV_DATE_INVALID: "We cannot change the #variable $IG$#!'s government status again until #bold #v $DATE$#!#!\n"
  FORM_GOV_IG_NOT_IN_GOVERNMENT: "Not [concept_in_government]"
  FORM_GOV_REVOLUTIONARY_COUNTRY: "Revolutionary [Concept('concept_interest_group', '$concept_interest_groups$')] cannot be removed in a Revolutionary Country"
  FORM_GOV_IG_ALREADY_IN_GOVERNMENT: "Already [concept_in_government]"
  FORM_GOV_IG_IS_MARGINAL: "Cannot be promoted to power while [concept_marginalized]"
  FORM_GOV_IG_IS_ANGRY: "Cannot be promoted to power while [concept_approval] is at $ig_approval_angry$"
  FORM_GOV_IG_IS_INSURRECTIONARY: "Cannot be promoted to power because they are insurrectionary"
  FORM_GOV_IG_IS_SUPPRESSED: "Cannot be promoted to power while suppressed"
  FORM_GOV_GOVERNMENT_TOO_SMALL: "Your government must contain at least one [concept_interest_group]"
  FORM_GOV_MISSING_PARTY_IG: "Your government is missing [InterestGroup.GetName] which is part of [Party.GetName]."
  FORM_GOV_NO_CHANGE: "There are no changes to the current [concept_government]."
  FORM_GOV_EMPTY: "Government must contain at least one [concept_interest_group]."
  FORM_GOV_RECENT_REGIME_CHANGE: "We recently had a forced regime change."
  FORM_GOV_IG_WANTS_TO_JOIN_PARTY: "$IG_NAME$ wants to join $PARTY_NAME$"
  FORM_GOV_CIVIL_WAR_COUNTRY: "Countries born of a [concept_civil_war] cannot reform their [concept_government] while the [concept_civil_war] is ongoing"
  RULER_JOIN_IG_SHORT: "Join"
  RULER_JOIN_IG_LONG: "Have [concept_ruler] Join [concept_interest_group]"
  RULER_LEGITIMACY_NO_CHANGE_TOOLTIP: "This would not result in a [concept_legitimacy] change (Currently #variable [GetPlayer.GetGovernmentLegitimacy]#!)"
  RULER_LEGITIMACY_CHANGE_TOOLTIP: "This would result in a [concept_legitimacy] change of #variable $VAL|+=0$#! (Currently #variable [GetPlayer.GetGovernmentLegitimacy]#!)"
  TOOLTIP_RULER_JOIN_IG_DESC: "\n$TOOLTIP_DELIMITER$\nHave your [concept_ruler] join this [concept_interest_group] to promote their ideologies\n\nThis will greatly anger their current [concept_interest_group] and we will be unable to change the [concept_ruler]'s [concept_interest_group] again for [GetDefine( 'NPolitics', 'RULER_CHANGE_IG_COOLDOWN_YEARS' )|v] years#!"
  TOOLTIP_RULER_JOIN_IG: "#HEADER $IG_RIGHT_CLICK_MENU_RULER_JOIN_IG$#!\n[InterestGroup.GetRulerJoinGovDesc]"
  SUPPRESS_SHORT: "[concept_suppress]"
  SUPPRESS_NOT_SHORT: "Stop [Concept('concept_suppress','$concept_suppressing$')]"
  SUPPRESSED: "[Concept('concept_suppress','$concept_suppressed$')]"
  PROMOTE_SHORT: "[concept_bolster]"
  PROMOTE_NOT_SHORT: "Stop [Concept('concept_bolster','$concept_bolstering$')]"
  PROMOTED: "[Concept('concept_bolster','$concept_bolstered$')]"
  TOOLTIP_SUPPRESS: "#header $SUPPRESS_SHORT$ [InterestGroup.GetName]#!\n$SUPPRESSION_EFFECTS$[SelectLocalization(StringIsEmpty(GetDesc(InterestGroup.ToggleSuppression)), '', '\n\n')][GetDesc(InterestGroup.ToggleSuppression)]"
  TOOLTIP_SUPPRESS_NOT: "#header $SUPPRESS_NOT_SHORT$ [InterestGroup.GetName]#!\n[GetDesc(InterestGroup.ToggleSuppression)]"
  TOOLTIP_PROMOTE: "#header $PROMOTE_SHORT$ [InterestGroup.GetName]#!\n$PROMOTION_EFFECTS$[SelectLocalization(StringIsEmpty(GetDesc(InterestGroup.TogglePromotion)), '', '\n\n')][GetDesc(InterestGroup.TogglePromotion)]"
  TOOLTIP_PROMOTE_NOT: "#header $PROMOTE_NOT_SHORT$ [InterestGroup.GetName]#!\n[GetDesc(InterestGroup.TogglePromotion)]"
  TOOLTIP_SUPPRESSED: "#header $SUPPRESSED$#!\n\n$SUPPRESSION_EFFECTS$"
  TOOLTIP_PROMOTED: "#header $PROMOTED$#!\n\n$PROMOTION_EFFECTS$"
  SUPPRESSION_EFFECTS: "[InterestGroup.GetCountry.GetModifier.GetValueWithBreakdownFor('country_suppression_ig_attraction_mult')] $modifier_country_suppression_ig_attraction_mult$\n\n#title Cost:#! @aut! [GetDefine('NPolitics','IG_SUPPRESSION_COST')|v0] [concept_authority] Weekly"
  PROMOTION_EFFECTS: "[InterestGroup.GetCountry.GetModifier.GetValueWithBreakdownFor('country_promotion_ig_attraction_mult')] $modifier_country_promotion_ig_attraction_mult$\n\n#title Cost:#! @aut! [GetDefine('NPolitics','IG_BOLSTER_COST')|v0] [concept_authority] Weekly"
  PROMOTE_COMMANDER: "Promote"
  CONFIRM_PROMOTE_COMMANDER: "Confirm Promotion"
  CHANGE_RANK_CANNOT_PROMOTE: "[Character.GetFullName] is at the highest level of command as [Character.GetRankName] and cannot be promoted further."
  CHANGE_RANK_CANNOT_PROMOTE_RULER: "[Character.GetFullName] is the [Character.GetPrimaryRoleTitle] of [Character.GetCountry.GetName] and cannot be promoted beyond [Character.GetRankName]"
  DESIGNATE_STRATEGIC_OBJECTIVE_REACHED_MAX: "$COUNTRY$ has reached the maximum number of [Concept('concept_strategic_objective', '$concept_strategic_objectives$')]"
  DESIGNATE_STRATEGIC_OBJECTIVE_IMPOSSIBLE_STATE: "$STATE$ is not an enemy of $COUNTRY$ nor is owned by $COUNTRY$"
  SUPPRESS_IG_IN_GOVERNMENT: "[concept_interest_group] is [concept_in_government]"
  SUPPRESS_IG_IS_PROMOTED: "[concept_interest_group] is [Concept('concept_bolster','$concept_bolstered$')]"
  SUPPRESS_IG_INSUFFICIENT_AUT: "Insufficient available $AUTHORITY$, $REQVAL|1v$ needed "
  SUPPRESS_IG_NO_SUPPRESSION_POWER: "No legal capacity to [concept_suppress] [Concept('concept_interest_group', '$concept_interest_groups$')]"
  PROMOTE_IG_IS_SUPPRESSED: "[concept_interest_group] is [Concept('concept_suppress','$concept_suppressed$')]"
  PROMOTE_IG_INSUFFICIENT_AUT: "Insufficient available $AUTHORITY$, $REQVAL|1v$ needed"
  PROMOTE_IG_NO_PROMOTION_POWER: "No legal capacity to [concept_bolster] [Concept('concept_interest_group', '$concept_interest_groups$')]"
  IG_IS_IN_GOVERNMENT: "[concept_in_government]: #variable [GetDefine( 'NPolitics', 'IG_IN_GOVERNMENT_APPROVAL' )|+=]#!"
  IG_IS_IN_OPPOSITION: "[concept_in_opposition]: #variable [GetDefine( 'NPolitics', 'IG_IN_OPPOSITION_APPROVAL' )|+=]#!"
  IG_POWERFUL_IS_IN_OPPOSITION: "[concept_powerful] and [concept_in_opposition]: #variable [GetDefine( 'NPolitics', 'IG_POWERFUL_IN_OPPOSITION_APPROVAL' )|+=]#!"
  IG_REVOLUTIONARY_IN_GOVERNMENT: "Revolutionary [Concept('concept_interest_group', '$concept_interest_groups$')] in Government have capped Approval"
  IG_LAW_APPROVAL_CAPPED: "Total [concept_approval] of #b $TOTAL|+=$#! (Capped from actual value of #b $UNCAPPED|+=$#!) is due to:"
  IG_LAW_APPROVAL: "Total [concept_approval] of #b $TOTAL|+=$#! is due to:"
  IG_LOYALISTS_APPROVAL: "#v $POL_STR|0%$#! of [concept_political_strength] in the [concept_interest_group] is [concept_loyalist]: #v $APPROVAL|=+$#!"
  IG_RADICALS_APPROVAL: "#v $POL_STR|0%$#! of [concept_political_strength] in the [concept_interest_group] is [concept_radical]: #v $APPROVAL|=+$#!"
  IG_ACTIVE_LAWS_HEADER: "#title Active Laws#!"
  IG_LAW_CHANGES_HEADER: "#title Law Changes#!"
  IG_OTHER_FACTORS_HEADER: "#title Other Factors#!"
  IG_IS_SUPPRESSED_ATTRACTION: "[Concept('concept_suppress','$concept_suppressed$')]: #variable $VAL|+=%0$#!"
  IG_IS_PROMOTED_ATTRACTION: "[Concept('concept_bolster','$concept_bolstered$')]: #variable $VAL|+=%0$#!"
  PEOPLE_ABROAD_TOOLTIP: "#bold #v Unincorporated Population#!#!\n$TOOLTIP_DELIMITER$\n$ABROAD_POP_CONCEPT$"
  INTEREST_GROUP_TITLE: "#title [concept_interest_group]#!"
  LAW_TITLE: "#title Law#!"
  CLOUT_TITLE: "#title Clout#!"
  SP_TITLE: "#title Army Strength Points#!"
  SP_NAVAL_TITLE: "#title Naval Strength Points#!"
  REVOLUTION_TITLE: "#title Revolution!#!"
  REVOLUTION_CAPITAL_STATE_PROGRESS: "Capital State Provinces Held: "
  REVOLUTION_CAPITAL_TAKE_DESC: "Once the revolution holds all provinces in the capital state they start a countdown to victory.\n#variable [RevolutionaryFaction.GetCountry.GetName]#! is holding #variable [RevolutionaryFaction.GetCapitalControl]#! provinces, the revolters are holding #variable [RevolutionaryFaction.GetRevolutionCapitalControl]#!"
  REVOLUTION_VICTORY_DESC: "When the revolters hold all Capital provinces this bar will start to fill, once it is full the revolters will win and force all their demands"
  REVOLUTION_SURRENDER_DESC: "This bar represents how much Strength Points is still in commands that are fighting for the revolution, if the remaining Strength Points drops below [GetDefineCountryRevolutionarySurrenderCutoff|1%] of the Strength Points that the faction had when the revolution broke out, they will surrender"
  REVOLUTION_VICTORY_DETAILS: "If the rebels win they will enforce the following:\n[RevolutionaryFaction.GetVictoryEffectDesc]"
  REVOLUTION_COUNTRY_NAME: "Revolutionary [COUNTRY.GetDefinition.GetName]"
  SECESSION_COUNTRY_NAME: "[COUNTRY.GetDefinition.GetPrimaryCultureName] Uprising"
  SECESSION_NO_PRIMARY_CULTURE_COUNTRY_NAME: "[COUNTRY.GetAdjectiveNoFormatting] Uprising"
  SECESSION_NO_REVOLT_TAG: "Stalled"
  SECESSION_NO_REVOLT_TAG_TOOLTIP: "This [concept_secession] lacks a national identity to rally behind, and so cannot secede."
  WAR_GOAL_WORTH: "#header [concept_war_goal]#!\nThis [concept_war_goal] costs #bold [WarGoal.GetWorth]#! War Score for [WarGoal.GetInitiator.GetName] to pursue. You can press [Concept('concept_war_goal', '$concept_war_goals$')] worth Your War Score minus Their War Score."
  WAR_START_TITLE: "War with #variable [COUNTRY.GetName] #!has broken out!"
  WAR_START_TITLE_NOPLAYER: "War between #variable $ATTACKER$ #! and #variable $DEFENDER$ #! has broken out!"
  WAR_START_DESC: "The #variable $PLAY_NAME$ #!play in #variable $WHERE$ #!has resulted in a war between #bold you #!and #bold $MAIN_ENEMY$#!."
  WAR_START_DESC_NOPLAYER: "The $PLAY_NAME$ play in $WHERE$ has resulted in a war between #bold $FIRST$ #! and #bold $SECOND$#!."
  REGIONS_TITLE: "#title Regions#!"
  TOOLTIP_RADICALISM: "#header Radicalism#!\n$TOOLTIP_DELIMITER$\n[INTEREST_GROUP.GetActiveIncidents]\n"
  NEXT_RADICALISM_INCIDENT: "Will cause Radicalism Incident in:\n#variable [INTEREST_GROUP.GetNextIncident]#! in #variable ~[INTEREST_GROUP.GetWeeksUntilNextIncident]#! weeks ([INTEREST_GROUP.GetRadicalism|%1] progress )"
  TOOLTIP_STATE_RADICALISM: "#header Radicalism#!\n$TOOLTIP_DELIMITER$\n[STATE.GetActiveRadicalismIncidents]\n"
  RADICALISM_IN_STATE: "#bold #v Radicalism#!#! in #bold #v $STATE$#!#!\n$TOOLTIP_DELIMITER$\n"
  RADICALISM_GROUPS_IN_STATE_HEADER: "The following [Concept('concept_interest_group', '$concept_interest_groups$')] will cause an Radicalism Incident:"
  RADICALISM_GROUPS_IN_STATE_ITEM: "#variable [INTEREST_GROUP.GetName]#! in #variable ~[INTEREST_GROUP.GetWeeksUntilNextIncident]#! weeks ([INTEREST_GROUP.GetRadicalism|%1] progress )"
  RADICALISM_INCIDENT_START_EFFECTS_HEADER: "#title Start Effects:#!"
  RADICALISM_INCIDENT_EFFECT_GROUPS_HEADER: "#title Effect Groups:#!"
  RADICALISM_INCIDENT_END_EFFECTS_HEADER: "#title End Effects:#!"
  RADICALISM_INCIDENT_DEMAND_HEADER: "#title Demand:#!"
  BUILDING_OPTION_CHANGE: "Change"
  BUILDING_OPTION_CHANGE_TOOLTIP: "#header Change Building#!\nChange the #variable [BuildingType.GetBuildingGroupName]#! building in this state to #variable [BuildingType.GetName]#!"
  CHANGE_BUILDING_NEW: "#bold Alternative Building#!"
  CHANGE_BUILDING_CURRENT: "#bold Current Building#!"
  CHANGE_BUILDING_HEADER: "#bold [Building.GetBuildingGroupName] in [Building.GetState.GetName]#!"
  BUILDING_CHANGE_WRONG_TYPE: "#N [BUILDING.GetBuildingGroupName] buildings cannot be changed in this way#!"
  BUILDING_CHANGE_NO_ALTERNATIVES: "#N There are no alternative [BUILDING.GetBuildingGroupName] buildings to change to in this state#!"
  BUILDING_PANEL_EXPAND: "Expand"
  BUILDING_PANEL_DOWNSIZE: "Downsize"
  BUILDING_PANEL_CHANGE: "Change"
  CANNOT_DOWNSIZE_NOT_DOWNSIZEABLE: "#N Building type cannot be downsized#!"
  CANNOT_DOWNSIZE_BLOCKING_ECONOMIC_LAW: "Our [SelectLocalization(GetPlayer.IsValid,'ECONOMIC_SYSTEM_LAW_GROUP','Economic System')] [concept_law] does not allow the downsizing of privately owned [Concept('concept_building', '$concept_buildings$')]"
  CANNOT_DOWNSIZE_UNDER_CONSTRUCTION: "#N Building cannot be downsized while it is being expanded#!"
  CANNOT_DOWNSIZE_INVALID_BUILDING: "#N Invalid building#!"
  CANNOT_DOWNSIZE_REVOLUTION: "#N Building cannot be downsized due to the ongoing [concept_revolution] Brewing#!"
  CANNOT_DOWNSIZE_SECESSION: "#N Building cannot be downsized due to the ongoing [concept_secession] Movements Growing#!"
  BUILDING_DOWNSIZE_TOOLTIP: "#header $BUILDING_PANEL_DOWNSIZE$#!\nReduce the building size to #v $NEW_LEVEL$#!$TROOP_ALLOCATION_CHANGES_DOWNSIZE$"
  BUILDING_CHANGE_TOOLTIP: "#header Change Building#!\nChange the #variable [BUILDING.GetBuildingGroupName]#! building in this state"
  BUILDING_CHANGE_CAN_SWITCH_TO: "#bold Alternative Buildings:#!"
  BUILDING_PROD_METH_ALREADY_ACTIVE: "This [concept_production_method] is already active"
  BUILDING_PROD_METH_ALREADY_ACTIVE_BULK: "This [concept_production_method] is already active in all buildings"
  BUILDING_DETAILS_PRODUCED_MODIFIER_TOOLTIP: "#header [ModifierEntry.GetName]#!\n[ModifierEntry.GetDesc]\n$TOOLTIP_DELIMITER$\n[ModifierEntry.GetBreakdown]"
  TOOLTIP_NEW_PRODUCTION_METHOD: "#header New Production Method Available#!\n$TOOLTIP_DELIMITER$\nA newly researched Production Method can be activated on this building."
  POLITICAL_ACTION_REFORM_DESC: "implement #variable $REFORM_GROUP$ - $REFORM$#!"
  POLITICAL_ACTION_REFORM_PAST_TENSE_DESC: "Implemented #variable $REFORM_GROUP$ - $REFORM$#!"
  POLITICAL_ACTION_TAX_DESC: "set the taxes for the #variable $STRATA$#! to #variable $VALUE|%$#!"
  POLITICAL_ACTION_TAX_PAST_TENSE_DESC: "Set the taxes for the #variable $STRATA$#! to #variable $VALUE|%$#!"
  POLITICAL_ACTION_BUILDING_DESC: "build a size #variable $LEVEL$ $BUILDING_TYPE$#!"
  POLITICAL_ACTION_BUILDING_PAST_TENSE_DESC: "Built a size #variable $LEVEL$ $BUILDING_TYPE$#!"
  POLITICAL_ACTION_DIPLOMATIC_PLAY_DESC: "start a $PLAY_TYPE$ [concept_diplomatic_play] against $AGAINST$"
  POLITICAL_ACTION_DIPLOMATIC_PLAY_PAST_TENSE_DESC: "Started a $PLAY_TYPE|v$ [concept_diplomatic_play] against $AGAINST|v$"
  POLITICAL_ACTION_EXPAND_MARKET_DESC: "expand your market coverage"
  POLITICAL_ACTION_EXPAND_MARKET_PAST_TENSE_DESC: "Expanded your market coverage"
  INTERACTION_NOT_ALLOWED_FOR: "This action is not allowed for $COUNTRY$"
  CANNOT_AFFORD_LAW: "You cannot afford @aut!#variable $VAL$#!"
  LAW_HAS_NOT_PASSED_COOLDOWN: "You must wait until #variable $DATE$#! before you can make changes to your $TYPE$."
  LACKING_TECHNOLOGY_GLOBAL_SINGLE: "$TECHNOLOGY$ has not yet been invented"
  LACKING_TECHNOLOGY_GLOBAL_MULTI: "One of these have been invented"
  LACKING_TECHNOLOGY_SINGLE: "[Country.GetName] has invented [Technology.GetName]"
  LACKING_TECHNOLOGY_MULTI: "[Country.GetName] has invented one of\n$BREAKDOWN$"
  LACKING_TECHNOLOGY_MULTI_ENTRY: "[Technology.GetName]"
  LACKING_UNLOCKING_LAW_SINGLE: "You have enacted $LAW$"
  LACKING_UNLOCKING_LAW_MULTI: "You have enacted one of:"
  LACKING_UNLOCKING_STATE_RELIGION_SINGLE: "[GetPlayer.GetName] have [Religion.GetName] as a State [concept_religion]"
  LACKING_UNLOCKING_STATE_RELIGION_MULTI: "[GetPlayer.GetName] have one of these as a State [concept_religion]:"
  HAS_DISALLOWING_STATE_RELIGION_SINGLE: "[GetPlayer.GetName] may #b not#! have [Religion.GetName] as a State [concept_religion]"
  HAS_DISALLOWING_STATE_RELIGION_MULTI: "[GetPlayer.GetName] may #b not#! have any of these as a State [concept_religion]:"
  HAS_DISALLOWING_LAW_SINGLE: "You are not allowed to have enacted $LAW$"
  HAS_DISALLOWING_LAW_MULTI: "You are not allowed to have enacted any one of:"
  LACKING_PRODUCTION_METHOD_SINGLE: "$PRODUCTION_METHOD$ is active in the building"
  LACKING_PRODUCTION_METHOD_MULTI: "One of these is active in the building:"
  LAW_DISALLOWED_BY_LAW_SINGLE: "You must #b not#! have enacted $LAW$"
  LAW_DISALLOWED_BY_LAW_MULTI: "You must #b not#! have enacted any of:"
  DIPLOMATIC_ACTION_INSTANT: "[concept_instant_diplomatic_action]"
  DIPLOMATIC_ACTION_ONGOING: "[concept_ongoing_diplomatic_action]"
  DIPLOMATIC_ACTION_PACT: "[concept_diplomatic_pact]"
  DIPLOMATIC_ACTION_HEADER: "#header #tooltippable #tooltip:[DiplomaticAction.GetTooltipTag],DIPLOMATIC_ACTION_DESC [DiplomaticAction.GetType.GetName]#!#!#!"
  DIPLOMATIC_ACTION_DESC: "[DiplomaticAction.GetDesc]"
  DIPLOMATIC_ACTION_TOOLTIP: "[DiplomaticAction.GetTooltip]"
  DIPLOMATIC_PROPOSAL_TITLE: "[Proposal.GetDiplomaticAction.GetProposalNotificationName]"
  DIPLOMATIC_PROPOSAL_DESC: "[Proposal.GetDiplomaticAction.GetProposalNotificationDesc]\n\n[Proposal.GetDiplomaticAction.GetProposalNotificationEffectsDesc]"
  DIPLOMATIC_PROPOSAL_OFFER_OBLIGATION_DESC: "$DIPLOMATIC_PROPOSAL_DESC$\n\n$THEY_OFFER_OBLIGATION$"
  DIPLOMATIC_PROPOSAL_CALL_IN_OBLIGATION_DESC: "$DIPLOMATIC_PROPOSAL_DESC$\n\n$THEY_CALL_IN_OBLIGATION_SHORT$"
  DIPLOMATIC_PROPOSAL_BREAK_TITLE: "[Proposal.GetDiplomaticAction.GetProposalNotificationBreakName]"
  DIPLOMATIC_PROPOSAL_BREAK_DESC: "[Proposal.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n[Proposal.GetDiplomaticAction.GetProposalNotificationBreakEffectsDesc]"
  DIPLOMATIC_ACTION_ON_ENACT: "When enacted:\n$DESC$"
  DIPLOMATIC_ACTION_ON_BREAK: "If we break this [concept_diplomatic_pact]:\n$DESC$"
  DIPLOMATIC_ACTION_ON_END: "If we end this [concept_ongoing_diplomatic_action]:\n$DESC$"
  DIPLOMATIC_ACTION_ON_ACCEPT: "If they accept:\n$DESC$"
  DIPLOMATIC_ACTION_ON_DECLINE: "If they decline:\n$DESC$"
  DIPLOMATIC_ACTION_ON_DAILY: "Each day while active:\n$DESC$"
  DIPLOMATIC_ACTION_ON_WEEKLY: "Each week while active:\n$DESC$"
  DIPLOMATIC_ACTION_ON_MONTHLY: "Each month while active:\n$DESC$"
  DIPLOMATIC_ACTION_INCOME_TRANSFER: "Would transfer @money!$MONEY|Kv$ from [COUNTRY.GetName] to [TARGET_COUNTRY.GetName] each week"
  DIPLOMATIC_ACTION_INCOME_TRANSFER_ACTIVE: "Transfers @money!$MONEY|Kv$ from [COUNTRY.GetName] to [TARGET_COUNTRY.GetName] each week"
  DIPLOMATIC_ACTION_RIVALRY: "Having a [concept_rivalry] with [TARGET_COUNTRY.GetName] grants the following benefits:\n$DESC$"
  DIPLOMATIC_ACTION_RIVALRY_ACTIVE: "Our [concept_rivalry] with [TARGET_COUNTRY.GetName] grants the following benefits:\n$DESC$"
  DIPLOMATIC_ACTION_EMBARGO: "Would establish an [concept_embargo] against [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_EMBARGO_ACTIVE: "Maintains an [concept_embargo] against [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_TECH_SPREAD: "Would facilitate [concept_technology_spread] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_TECH_SPREAD_ACTIVE: "Facilitates [concept_technology_spread] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_ALLIANCE: "Creates an [concept_alliance] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_ALLIANCE_ACTIVE: "Maintains an [concept_alliance] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_DEFENSIVE_PACT: "Creates a [concept_defensive_pact] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_DEFENSIVE_PACT_ACTIVE: "Maintains a [concept_defensive_pact] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_TRADE_AGREEMENT: "Creates a [concept_trade_agreement] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_TRADE_AGREEMENT_ACTIVE: "Maintains a [concept_trade_agreement] between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_CUSTOMS_UNION: "[TARGET_COUNTRY.GetName] will be part of a [concept_customs_union] led by [COUNTRY.GetName]"
  DIPLOMATIC_ACTION_CUSTOMS_UNION_ACTIVE: "[TARGET_COUNTRY.GetName] is part of a [concept_customs_union] led by [COUNTRY.GetName]"
  DIPLOMATIC_ACTION_SUBJECT_RELATION: "Creates a $SUBJECT_TYPE$ [concept_subject] relation between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName], with [COUNTRY.GetName] as the suzerain"
  DIPLOMATIC_ACTION_SUBJECT_RELATION_ACTIVE: "Maintains a $SUBJECT_TYPE$ [concept_subject] relation between [COUNTRY.GetName] and [TARGET_COUNTRY.GetName]"
  DIPLOMATIC_ACTION_RELATIONS_CHANGE_POS_EFFECT: "Generates #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $PROGRESS_DAILY|%=2$#!#!#! progress each day towards increasing [concept_relations][ConcatIfNeitherEmpty(' ','$MAXDESC$')], resulting in a [concept_relations] increase every $DAYS|v$ days if no other [concept_relations] actions are at work"
  DIPLOMATIC_ACTION_RELATIONS_CHANGE_NEG_EFFECT: "Generates #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] #variable $PROGRESS_DAILY|%=2$#!#!#! progress each day towards decreasing [concept_relations][ConcatIfNeitherEmpty(' ','$MINDESC$')], resulting in a [concept_relations] decrease every $DAYS|v$ days if no other [concept_relations] actions are at work"
  THEY_OFFER_OBLIGATION: "They are offering to owe us an [concept_obligation] if we accept."
  THEY_CALL_IN_OBLIGATION_SHORT: "They are calling in our [concept_obligation], so rejecting their offer would have negative diplomatic consequences for us."
  THEY_CALL_IN_OBLIGATION: "@warning! They are calling in our [concept_obligation]. Rejecting would repudiate the [concept_obligation] with the following consequences for us:\n$REPUDIATE_OBLIGATION_EFFECTS$"
  WE_NOW_OWE_OBLIGATION: "We now owe them an [concept_obligation]"
  THEY_USED_OBLIGATION: "They used an [concept_obligation] to force us to accept."
  REPUDIATE_OBLIGATION_EFFECTS: "- Greatly reduced [concept_relations] with the [concept_country] whose [concept_obligation] we repudiated\n- Reduced [concept_relations] with all other countries we owe an [concept_obligation]\n- Reduced [concept_prestige] and [concept_infamy] decay for a period of #v 5#! years, during this period other [Concept('concept_country','$concept_countries$')] will consider [Concept('concept_obligation', '$concept_obligations$')] from us to be of little value"
  repudiated_obligation: "Repudiated Obligation"

  proposal_break_pact_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
  proposal_break_pact_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]"
  proposal_break_pact_tooltip: "#title $proposal_break_pact_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_desc$"
  proposal_break_pact_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
  proposal_break_pact_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n$THEY_OFFER_OBLIGATION$"
  proposal_break_pact_owe_obligation_tooltip: "#header $proposal_break_pact_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_owe_obligation_desc$"

  proposal_break_pact_call_in_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakName]"
  proposal_break_pact_call_in_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationBreakDesc]\n\n$THEY_CALL_IN_OBLIGATION$"
  proposal_break_pact_call_in_obligation_tooltip: "#header $proposal_break_pact_call_in_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_break_pact_call_in_obligation_desc$"
  proposal_diplomatic_action_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
  proposal_diplomatic_action_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]"
  proposal_diplomatic_action_tooltip: "#header $proposal_diplomatic_action_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_desc$"
  proposal_diplomatic_action_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
  proposal_diplomatic_action_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]\n\n$THEY_OFFER_OBLIGATION$"
  proposal_diplomatic_action_owe_obligation_tooltip: "#header $proposal_diplomatic_action_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_owe_obligation_desc$"

  proposal_diplomatic_action_call_in_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationName]"
  proposal_diplomatic_action_call_in_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalNotificationDesc]\n\n$THEY_CALL_IN_OBLIGATION$"
  proposal_diplomatic_action_call_in_obligation_tooltip: "#header $proposal_diplomatic_action_call_in_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_diplomatic_action_call_in_obligation_desc$"
  proposal_sway_offer_tooltip: "#header $proposal_sway_offer_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_sway_offer_desc$"
  proposal_sway_offer_name: "Attempt to Sway"
  proposal_sway_offer_desc: "#variable [SCOPE.sC('actor').GetName]#! is attempting to sway us to their side in their [concept_diplomatic_play] against #variable [SCOPE.sC('target').GetName]#!."
  proposal_sway_offer_owe_obligation_tooltip: "#header $proposal_sway_offer_name$#!\n$TOOLTIP_DELIMITER$\n$proposal_sway_offer_desc$"
  proposal_sway_offer_owe_obligation_name: "$proposal_sway_offer_name$"
  proposal_sway_offer_owe_obligation_desc: "$proposal_sway_offer_desc$"
  notification_diplomatic_action_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationName]"
  notification_diplomatic_action_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationDesc]"
  notification_diplomatic_action_notification_tooltip: "#header $notification_diplomatic_action_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_notification_desc$"
  notification_diplomatic_action_used_obligation_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationName]"
  notification_diplomatic_action_used_obligation_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationDesc]\n$THEY_USED_OBLIGATION$"
  notification_diplomatic_action_used_obligation_notification_tooltip: "#header $notification_diplomatic_action_used_obligation_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_used_obligation_notification_desc$"
  notification_diplomatic_proposal_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedName]"
  notification_diplomatic_proposal_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedDesc]"
  notification_diplomatic_proposal_accepted_tooltip: "#header $notification_diplomatic_proposal_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_accepted_desc$"
  notification_diplomatic_proposal_accepted_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedName]"
  notification_diplomatic_proposal_accepted_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalAcceptedDesc]\n$WE_NOW_OWE_OBLIGATION$"
  notification_diplomatic_proposal_accepted_owe_obligation_tooltip: "#header $notification_diplomatic_proposal_accepted_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_accepted_owe_obligation_desc$"
  notification_diplomatic_proposal_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalDeclinedName]"
  notification_diplomatic_proposal_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalDeclinedDesc]"
  notification_diplomatic_proposal_declined_tooltip: "#header $notification_diplomatic_proposal_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_declined_desc$"
  notification_diplomatic_action_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakName]"
  notification_diplomatic_action_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakDesc]"
  notification_diplomatic_action_break_notification_tooltip: "#header $notification_diplomatic_action_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_break_notification_desc$"
  notification_diplomatic_action_break_used_obligation_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakName]"
  notification_diplomatic_action_break_used_obligation_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationBreakDesc]\n$THEY_USED_OBLIGATION$"
  notification_diplomatic_action_break_used_obligation_notification_tooltip: "#header $notification_diplomatic_action_break_used_obligation_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_action_break_used_obligation_notification_desc$"
  notification_diplomatic_proposal_break_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedName]"
  notification_diplomatic_proposal_break_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedDesc]"
  notification_diplomatic_proposal_break_accepted_tooltip: "#header $notification_diplomatic_proposal_break_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_accepted_desc$"
  notification_diplomatic_proposal_break_accepted_owe_obligation_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedName]"
  notification_diplomatic_proposal_break_accepted_owe_obligation_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakAcceptedDesc]\n$WE_NOW_OWE_OBLIGATION$"
  notification_diplomatic_proposal_break_accepted_owe_obligation_tooltip: "#header $notification_diplomatic_proposal_break_accepted_owe_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_accepted_owe_obligation_desc$"
  notification_diplomatic_proposal_break_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakDeclinedName]"
  notification_diplomatic_proposal_break_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetProposalBreakDeclinedDesc]"
  notification_diplomatic_proposal_break_declined_tooltip: "#header $notification_diplomatic_proposal_break_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_break_declined_desc$"
  notification_diplomatic_proposal_third_party_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyName]"
  notification_diplomatic_proposal_third_party_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDesc]"
  notification_diplomatic_proposal_third_party_notification_tooltip: "#header $notification_diplomatic_proposal_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_notification_desc$"
  notification_diplomatic_proposal_third_party_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakName]"
  notification_diplomatic_proposal_third_party_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDesc]"
  notification_diplomatic_proposal_third_party_break_notification_tooltip: "#header $notification_diplomatic_proposal_third_party_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_notification_desc$"
  notification_diplomatic_proposal_third_party_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyAcceptedName]"
  notification_diplomatic_proposal_third_party_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyAcceptedDesc]"
  notification_diplomatic_proposal_third_party_accepted_tooltip: "#header $notification_diplomatic_proposal_third_party_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_accepted_desc$"
  notification_diplomatic_proposal_third_party_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDeclinedName]"
  notification_diplomatic_proposal_third_party_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyDeclinedDesc]"
  notification_diplomatic_proposal_third_party_declined_tooltip: "#header $notification_diplomatic_proposal_third_party_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_declined_desc$"
  notification_diplomatic_proposal_third_party_break_accepted_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakAcceptedName]"
  notification_diplomatic_proposal_third_party_break_accepted_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakAcceptedDesc]"
  notification_diplomatic_proposal_third_party_break_accepted_tooltip: "#header $notification_diplomatic_proposal_third_party_break_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_accepted_desc$"
  notification_diplomatic_proposal_third_party_break_declined_name: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDeclinedName]"
  notification_diplomatic_proposal_third_party_break_declined_desc: "[SCOPE.GetRootScope.GetDiplomaticAction.GetActionNotificationThirdPartyBreakDeclinedDesc]"
  notification_diplomatic_proposal_third_party_break_declined_tooltip: "#header $notification_diplomatic_proposal_third_party_break_declined_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_proposal_third_party_break_declined_desc$"
  notification_diplomatic_pact_auto_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] broken"
  notification_diplomatic_pact_auto_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] with [AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsFirstCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName)][AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsSecondCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName)] can no longer be maintained due to:\n[SCOPE.GetRootScope.GetDiplomaticPact.ShouldAutoBreakDesc]"
  notification_diplomatic_pact_auto_break_notification_tooltip: "#header $notification_diplomatic_pact_auto_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_pact_auto_break_notification_desc$"
  notification_diplomatic_pact_third_party_auto_break_notification_name: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] broken"
  notification_diplomatic_pact_third_party_auto_break_notification_desc: "[SCOPE.GetRootScope.GetDiplomaticPact.GetName] with [AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsFirstCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetSecondCountry.GetName)][AddTextIf(SCOPE.GetRootScope.GetDiplomaticPact.IsSecondCountry(GetPlayer), SCOPE.GetRootScope.GetDiplomaticPact.GetFirstCountry.GetName)] can no longer be maintained due to:\n[SCOPE.GetRootScope.GetDiplomaticPact.ShouldAutoBreakDesc]"
  notification_diplomatic_pact_third_party_auto_break_notification_tooltip: "#header $notification_diplomatic_pact_third_party_auto_break_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplomatic_pact_third_party_auto_break_notification_desc$"
  notification_character_died_notification_name: "[SCOPE.GetRootScope.GetCharacter.GetFullName] ([SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName]) has died"
  notification_character_died_notification_desc: "Former [SCOPE.GetRootScope.GetCharacter.GetPrimaryRoleName] [SCOPE.GetRootScope.GetCharacter.GetFullName] has died."
  notification_character_died_notification_tooltip: "$notification_character_died_notification_name$\n$notification_character_died_notification_desc$"
  notification_character_died_war_office_notification_name: "$notification_character_died_notification_name$"
  notification_character_died_war_office_notification_desc: "Our character [SCOPE.GetRootScope.GetCharacter.GetFullName] has died in the War Office"
  notification_character_died_war_office_notification_tooltip: "$notification_character_died_war_office_notification_name$\n$notification_character_died_war_office_notification_desc$"
  notification_acquired_technology_notification_name: "[SCOPE.sT('technology').GetName] acquired!"
  notification_acquired_technology_notification_desc: "We have acquired [SCOPE.sT('technology').GetName]"
  notification_acquired_technology_notification_tooltip: "$notification_acquired_technology_notification_name$\n$notification_acquired_technology_notification_desc$"
  notification_spreading_technology_notification_name: "[SCOPE.sT('technology').GetName] spreading"
  notification_spreading_technology_notification_desc: "Knowledge of [SCOPE.sT('technology').GetName] has started to spread to us"
  notification_spreading_technology_notification_tooltip: "$notification_spreading_technology_notification_name$\n$notification_spreading_technology_notification_desc$"
  notification_price_report_name: "[SCOPE.GetRootScope.GetCountry.GetCapital.GetMarket.GetName] Monthly Price Report"
  notification_price_report_desc: "[SCOPE.GetRootScope.GetCountry.GetPriceReportDesc]"
  notification_price_report_tooltip: "$notification_price_report_name$\n$notification_price_report_desc$"

  notification_law_changed_notification_name: "[SCOPE.GetRootScope.GetLaw.GetName] passed"
  notification_law_changed_notification_desc: "We have finished enacting the [SCOPE.GetRootScope.GetLaw.GetName] Law"
  notification_law_changed_notification_tooltip: "$notification_law_changed_notification_name$\n$notification_law_changed_notification_desc$"
  notification_institution_investment_increased_name: "[SCOPE.GetRootScope.GetInstitution.GetName] Investment increased"
  notification_institution_investment_increased_desc: "Increased Investment in the [SCOPE.GetRootScope.GetInstitution.GetName] Institution to [SCOPE.GetRootScope.GetInstitution.GetInvestmentLevel|v]"
  notification_institution_investment_increased_tooltip: "$notification_institution_investment_increased_name$\n$notification_institution_investment_increased_desc$\n\n#i Effect:#!\n[SCOPE.GetRootScope.GetInstitution.GetModifier.GetDesc]"
  notification_institution_investment_decreased_name: "[SCOPE.GetRootScope.GetInstitution.GetName] Investment decreased#!"
  notification_institution_investment_decreased_desc: "Decreased Investment in the [SCOPE.GetRootScope.GetInstitution.GetName] Institution to [SCOPE.GetRootScope.GetInstitution.GetInvestmentLevel|v]"
  notification_institution_investment_decreased_tooltip: "$notification_institution_investment_decreased_name$\n$notification_institution_investment_decreased_desc$\n\n#i Effect:#!\n[SCOPE.GetRootScope.GetInstitution.GetModifier.GetDesc]"
  notification_rank_changed_notification_name: "Power Rank Changed"
  notification_rank_changed_notification_desc: "We are now a [SCOPE.sC('actor').GetRank|v]"
  notification_rank_changed_notification_tooltip: "$notification_rank_changed_notification_name$\n$notification_rank_changed_notification_desc$"
  notification_heir_born_notification_name: "Heir Born"
  notification_heir_born_notification_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName], [concept_heir] to the throne of [SCOPE.GetRootScope.GetCharacter.GetCountry.GetName] has been born"
  notification_heir_born_notification_tooltip: "$notification_heir_born_notification_name$\n$notification_heir_born_notification_desc$"
  COMMANDER_COMBAT_UNIT_HEADER: "[CHARACTER.GetFullName]:"
  HQ_TROOP_ALLOCATION_CHANGE_HEADER: "[HQ.GetNameNoFlag] troop changes:"
  HQ_TROOP_ALLOCATION_CHANGE_COMMANDER: "[CHARACTER.GetFullName]:"
  HQ_TROOP_ALLOCATION_CHANGE_ENTRY: "[Hq.GetCombatUnitsIcon] #v $VALUE|+=$#! from [BUILDING.GetName] in [State.GetName]"
  HQ_TROOP_ALLOCATION_CHANGE_UNIT_TYPE: "$ICON_STR$ #tooltippable #tooltip:$BREAKDOWN$ $VALUE|+=$#!#! $UNIT_TYPE_NAME$ Battalions"
  MILITARY_PANEL_GENERALS: "#ITALIC Generals#!"
  MILITARY_PANEL_ADMIRALS: "#ITALIC Admirals#!"
  HQ_PANEL_HOME_STATISTICS: "#title Statistics#!"
  HQ_PANEL_LOCATION_HEADER: "#title Currently in the [Hq.GetNameNoFlag]#!"
  HQ_PANEL_HOME_HEADER: "#title Based in the [Hq.GetNameNoFlag]#!"
  HQ_PANEL_HOME_TOTAL: "Total: [Hq.GetHomeUnitsHeader]"
  HQ_PANEL_HOME_AVAILABLE: "[concept_in_reserve]:"
  HQ_PANEL_HOME_AVAILABLE_TOOLTIP: "The [Hq.GetNameNoFlag] currently has #bold [Hq.GetReserveUnitsRaw]#! [Hq.GetCombatUnitsIcon] without a Commander\n\n[Hq.GetReserveUnitsDesc]"
  HQ_PANEL_TOTAL_HEADER: "#title Currently in [Hq.GetNameNoFlag]#!"
  HQ_PANEL_TOTAL_TOTAL: "[Hq.GetGarrisonUnitsHeader]"
  HQ_PANEL_TOTAL_TOTAL_TOOLTIP: "#header [Hq.GetName]#!\nThe [concept_garrison] of the [Hq.GetNameNoFlag] is [Hq.GetGarrisonUnitsHeader], due to:\n[ConcatIfNeitherEmpty(Hq.GetGarrisonUnitsPerCommanderDesc,'\n\n')][Hq.GetCombatUnitsIcon] #variable [Hq.GetReserveUnitsRaw]#! [concept_in_reserve][ConcatIfNeitherEmpty('\n\nThis HQ supplies troops to the following Fronts:\n', Hq.GetFrontsGarrisonedByThisHQDesc)]"
  HQ_PANEL_TOTAL_IN_RESERVE: "#header [concept_in_reserve]#!\nThere are [Hq.GetCombatUnitsIcon] #variable [Hq.GetReserveUnitsRaw]#! [concept_in_reserve] at [Hq.GetNameNoFlag]"
  HQ_PANEL_BATTALIONS_IN_RESERVE: "#header @battalions! [Concept('concept_battalion', '$concept_battalions$')] [concept_in_reserve]#!\n$TOOLTIP_DELIMITER$\nThere are [Hq.GetCombatUnitsIcon] #variable [Hq.GetReserveUnitsRaw]#! [concept_in_reserve] at [Hq.GetNameNoFlag]"
  HQ_PANEL_FLOTILLAS_IN_RESERVE: "#header @flotillas! [Concept('concept_flotilla', '$concept_flotillas$')] [concept_in_reserve]#!\n$TOOLTIP_DELIMITER$\nThere are [Hq.GetCombatUnitsIcon] #variable [Hq.GetReserveUnitsRaw]#! [concept_in_reserve] at [Hq.GetNameNoFlag]"
  HQ_IN_RESERVE: "#variable [Hq.GetReserveUnitsRaw]#!"
  HQ_PANEL_HOME_GENERALS: "#title [Concept('concept_hq', 'Home Generals')]#!"
  HQ_PANEL_HOME_ADMIRALS: "#title [Concept('concept_hq', 'Home Admirals')]#!"
  FRONT_SUPPLIED_BY_HQ_ITEM: "$TAB$@battalions! #v $NUM$#! to [Front.GetName]\n"
  CAN_TRAIN_NO_BARRACKS: "#N You do not have any $BUILDING_NAMES$.#!"
  CAN_TRAIN_NO_BARRACKS_OR: "or"
  CAN_TRAIN_MAXIMUM_SOLDIERS: "#N You have reached your soldier maximum#!"
  CAN_TRAIN_REACHED_TARGET: "#N You have reached your Strength Points Target#!"
  CAN_TRAIN_NO_BUDGET: "#N Your current budget is not enough for training any more troops#!"
  CONDITIONS_TOOLTIP: "\n#title Conditions:#!\n$CONDITIONS$"
  MODIFIERS_TOOLTIP: "#header [InterestGroupModifier.GetName]#!\n$TOOLTIP_DELIMITER$\n[InterestGroupModifier.GetDesc]\n\nTime remaining: [InterestGroupModifier.GetRemainingDays]"
  STATE_INDUSTRY_OUTPUT_MULT: "TEST"
  STATE_INDUSTRY_OUTPUT_MULT_desc: "TESTING_DESC"
  ELECTION_RESULTS_TITLE: "#bold Election results <2>#!"
  TOTAL_VOTES_TITLE: "#title Total Votes#!"
  LOCATION_TITLE: "#title Location#!"
  COUNTRY_TITLE: "#title Country#!"
  TOTAL_POLITICAL_STRENGTH_TITLE: "#title Total [concept_political_strength]#!"
  TOTAL_CAPITAL_GAIN_TITLE: "#title [concept_authority] Gain#!"
  POPULATION_TITLE: "#title Population#!"
  WORKING_ADULTS_TITLE: "#title Workforce#!"
  WORKING_ADULTS_INCOME_TITLE: "#title Workforce Income#!"
  DEPENDENTS_TITLE: "#title Dependents#!"
  DEPENDENTS_INCOME_TITLE: "#title Dependents Income#!"
  VOTES_TITLE: "#title Votes#!"
  CULTURE_TITLE: "#title [concept_culture]#!"
  RELIGION_TITLE: "#title [concept_religion]#!"
  MAJORITY_RELIGION_TITLE: "Majority Religion"
  POL_STR_TITLE: "[concept_political_strength]"
  POLITICAL_STRENGTH_TITLE: "#title [concept_political_strength]#!"
  TOTAL_CAPITAL_GAIN_DESC: "#title [concept_authority] Gain#!"
  TIME_REMAINING: "Time remaining: #bold [GetPlayer.GetGovernmentData.GetTimeRemainingElection] days#!"
  CHANGE_GOVERNMENT_BUTTON: "Form Government: (#bold [GetPlayer.GetGovernmentData.GetCost] @aut!#!)"
  FORM_GOVERNMENT: "Form Government"
  NAME_OF_GOVERNMENT_TYPE: "[concept_government_type]"
  CHANGE_GOVERNMENT_TOOLTIP: "#header Change Ruling [Concept('concept_interest_group', '$concept_interest_groups$')]#!\n$TOOLTIP_DELIMITER$\nThis will change your ruling $concept_interest_groups$ to the selected ones."
  VERY_GOOD_IDEA: "#title $VERY_GOOD_IDEA_NAME$#!"
  #(>[GetGoodThreshold|+2])#!"
  VERY_BAD_IDEA: "#title $VERY_BAD_IDEA_NAME$#!"
  #(<[GetVeryBadThreshold|+2])#!"
  GOOD_IDEA: "#title $GOOD_IDEA_NAME$#!"
  #(>[GetBadThreshold|+2] && <[GetGoodThreshold|+2])#!"
  BAD_IDEA: "#title $BAD_IDEA_NAME$#!"
  #(>[GetVeryBadThreshold|+2] && <[GetBadThreshold|+2])#!"
  VERY_GOOD_IDEA_NAME: "Strongly wants"
  VERY_BAD_IDEA_NAME: "Strongly opposes"
  GOOD_IDEA_NAME: "Wants"
  BAD_IDEA_NAME: "Opposes"
  NEUTRAL_IDEA_NAME: "Ambivalent on"
  VERY_GOOD_IDEA_TOOLTIP: "#bold #P Strongly Wants#!#! this"
  VERY_BAD_IDEA_TOOLTIP: "#bold #N Strongly Opposes#!#! this"
  GOOD_IDEA_TOOLTIP: "#bold #P Wants#!#! this"
  BAD_IDEA_TOOLTIP: "#bold #N Opposes#!#! this"
  NEUTRAL_IDEA_TOOLTIP: "are #header Indifferent#! towards this"
  EVENT_NO_TIME_LIMIT: "No time limit"
  EVENT_WINDOW_EVENT_LOCATION: "Event in [EventWindow.AccessEvent.GetState.GetName]"
  test.pink_elephant_tooltip: "Remaining Days: [EVENT.GetRemainingDays]"
  test.election_tooltip: "Election Results are in!"
  test.pre.election_tooltip: "#bold Election in [GetPlayer.GetGovernmentData.GetTimeRemainingPreElection] days#!\nCurrent Standing of Votes:"
  test.acquired_technology_tooltip: "New technology acquired!"
  PEOPLE_ABROAD_TITLE: "#title Unincorporated Population#!"
  POLITICAL_INACTIVE_TITLE: "#title [Concept('concept_politically_inactive_involved', '$concept_politically_inactive$')]#!"
  POLITICAL_INACTIVE_TITLE_NO_FORMATTING: "#title Politically Inactive#!" # Don't turn this into a concept, it will break some IG tooltips
  TRAIT_INACTIVE: "(Inactive)"
  POLITICALLY_INACTIVE_POPULATION: "[Concept('concept_politically_inactive_involved', '$concept_politically_inactive$')] Population: [Country.GetInactivePopulation|kv]"
  POLITICALLY_INACTIVE_POPULATION_TOOLTIP: "#header [Concept('concept_politically_inactive_involved', '$concept_politically_inactive$')] Population#!\nTotal: [GetPlayer.GetInactivePopulation|kv]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetInactivePopulationDesc]"
  POLITICALLY_INVOLVED_POPULATION_TOOLTIP: "#header [Concept('concept_politically_inactive_involved', '$concept_politically_involved$')] Population#!\nTotal: [GetPlayer.GetPoliticallyInvolvedPopulation|kv]\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetPoliticallyInvolvedPopulationDesc]"
  POLITICAL_STRENGTH_SUBTITLE: "#title [concept_political_strength]#!"
  BUILDING_EXPANSION_LEVEL_BREAKDOWN_DESC: "[BUILDING.GetExpansionLevelDesc]"
  BUILDING_EXPANSION_LEVEL_BREAKDOWN_URBAN_CAPACITY: "[concept_urbanization] level of #v [STATE.CalcTotalUrbanization]#!"
  BUILDING_EXPANSION_LEVEL_BREAKDOWN_TRADE_ROUTE_LEVELS: "#v $NUM_TRADE_ROUTE_LEVELS$ level(s)#! of [Concept('concept_trade_route', '$concept_trade_routes$')] originating in [STATE.GetName]"
  BUILDING_EXPANSION_LEVEL_BREAKDOWN_TOOLTIP: "[Building.GetExpansionLevelBreakdown]"
  BUILDING_EXPANSION_LEVEL_BREAKDOWN: "[BUILDING.GetName] maximum level of $MAXIMUM|v$ is due to:\n$TAB$$EXPLANATION$"
  BUILDING_EXPANSION_LEVEL_BREAKDOWN_ARABLE_LAND: "Available [concept_arable_land] in [STATE.GetName]: $AVAILABLE_ARABLE_LAND|v$"
  BUILDING_EXPANSION_LEVEL_BREAKDOWN_LAND_SHARE: "Total Potential in [STATE_REGION.GetName]: $MAX_IN_STATE_REGION|v$\n$TAB$Share of land owned by [STATE.GetName] in [STATE_REGION.GetName]: $LAND_SHARE|v1%$"
  BUILDING_EXPANSION_LEVEL_BREAKDOWN_UNCAPPED: "[BUILDING.GetName] has no maximum level"
  BUILDING_HAS_INVALID_LEVELS_IN_QUEUE: "This building has invalid levels in the [concept_construction_queue]."
  CONSTRUCTION: "Construction"
  CHANGE_SPEED_NOT_HOST_OR_LOCAL: "#N Only host is allowed to change game speed#!"
  INCREASE_SPEED_ALREADY_MAX: "#N Cannot increase game speed more#!"
  DECREASE_SPEED_ALREADY_MIN: "#N Cannot decrease game speed more#!"
  INCREASE_SPEED_TOOLTIP: "Increase game speed"
  DECREASE_SPEED_TOOLTIP: "Decrease game speed"
  GAME_PAUSED: "Game is paused. #instruction Click#! to resume"
  GAME_RUNNING: "Game is running. #instruction Click#! to pause"
  TOGGLE_PAUSE_NOT_HOST_OR_LOCAL: "#N Only host is allowed to toggle pause#!"
  PAUSED_BY_PLAYER_MP: "Paused by #v [TimeKeeper.GetPausedBy]#!"
  PAUSED_BY_UNPAUSE_ONLY_ME: "Only you can unpause the game for [TimeKeeper.GetTimeAnyoneUnpause] more seconds"
  PAUSED_BY_UNPAUSE_ONLY_PAUSED_BY: "Only #v [TimeKeeper.GetPausedBy]#! can unpause for [TimeKeeper.GetTimeAnyoneUnpause] more seconds"
  PAUSED_BY_UNPAUSE_ANYONE: "Anyone can unpause"
  ESTABLISH_COLONY_BUILDING_TOOLTIP: "#variable [BUILDING_TYPE.GetName]#!"
  STATE_COLONY_ACTIVE_INTEREST: "The next growth of the colony is estimated to occur on #variable [State.GetColonyGrowthDateDesc]#!\n\nProgress increases each day by #variable [State.GetDailyColonyProgress|%]#! due to: \n[State.GetColonyGrowthModifierDesc]"
  STATE_COLONY_TOOLTIP_INACTIVE_INTEREST: "\n#R Cannot gain additional progress due to no [concept_active_interest] in [State.GetStateRegion.GetStrategicRegion.GetName]#!"
  STATE_COLONY_TOOLTIP: "#header Establishing [State.GetOwner.GetAdjective] Colony in [State.GetName]#!\n$TOOLTIP_DELIMITER$\nProgress towards gaining an additional province: #variable [State.GetColonyProgress|%]#!\n[SelectLocalization( State.IsColonyProgressBlockedByInactiveInterest, 'STATE_COLONY_TOOLTIP_INACTIVE_INTEREST', 'STATE_COLONY_ACTIVE_INTEREST' )]"
  MARKET_CAPITAL: "#title [concept_market_capital]#!\n[Market.GetMarketCapital.GetName]"
  MOVE_CAPITAL_FORBIDDEN_WHILE_IN_ACTIVE_DIPLO_PLAY: "#N Cannot move the capital while involved in a [concept_diplomatic_play]#!"
  MOVE_MARKET_CAPITAL_FORBIDDEN_WHILE_IN_ACTIVE_DIPLO_PLAY: "#N Cannot move the [concept_market_capital] while involved in a [concept_diplomatic_play]#!"
  MOVE_CAPITAL_FORBIDDEN_WHILE_AT_WAR: "#N Cannot move the capital while at [concept_war]#!"
  MOVE_MARKET_CAPITAL_FORBIDDEN_WHILE_AT_WAR: "#N Cannot move the [concept_market_capital] while at [concept_war]#!"
  MOVE_CAPITAL_ALREADY_MOVED_RECENTLY: "#N We recently changed our [concept_capital_state] and cannot change it again until $DATE|v$#!"
  MOVE_CAPITAL_IS_ALREADY_CAPITAL: "#N [STATE.GetName] is already our [concept_capital_state]#!"
  MOVE_CAPITAL_NOT_INCORPORATED: "#N Can only make an [concept_incorporated_state] into the [concept_capital_state]#!"
  MOVE_CAPITAL_NOT_CULTURAL_HOMELAND: "#N Can only make a [concept_homeland] of any of your [concept_primary_cultures] into the [concept_capital_state]#!"
  MOVE_MARKET_CAPITAL_ALREADY_MOVED_RECENTLY: "#N We recently changed our [concept_market_capital] and cannot change it again until $DATE|v$#!"
  MOVE_MARKET_CAPITAL_IS_ALREADY_CAPITAL: "#N [STATE.GetName] is already our [concept_market_capital]#!"
  MOVE_MARKET_CAPITAL_NOT_INCORPORATED: "#N Can only make an [concept_incorporated_state] into the [concept_market_capital]#!"
  MOVE_MARKET_CAPITAL_NOT_MARKET_OWNER: "#N We are part of another [Concept('concept_country','$concept_country_possessive$')] [concept_market] and cannot move the [concept_market_capital]#!"
  INCORPORATE_STATE_NO_NEIGHBOUR: "Can only incorporate a state neighboring an already incorporated state"
  INCORPORATE_STATE_COLONY_NOT_FINISHED: "Cannot incorporate a [concept_colony] while it is still growing"
  INCORPORATE_STATE_ALREADY_INCORPORATED: "Already incorporated"
  INCORPORATE_STATE_ALREADY_INCORPORATING: "Already incorporating"
  INCORPORATE_STATE_HAS_DIPLOMATIC_PLAY_IN_REGION: "A [concept_decentralized_nation] has an active [concept_diplomatic_play] in this [concept_state_region]"
  INCORPORATE_STATE_HAS_TRUCE_IN_REGION: "Cannot incorporate a [concept_colony] while having a truce and not having [concept_colonization_rights] with the [concept_decentralized_nation] in this [concept_state_region]"
  INCORPORATE_STATE_CANNOT_INCORPORATE_TREATY_PORT: "Cannot incorporate a [concept_treaty_port]"
  INCORPORATE_STATE_INCORPORATION_DISALLOWED: "Cannot be incorporated due to:#!\n$TAB$[State.GetModifier.GetDescFor('state_disallow_incorporation')]"
  INCORPORATE_STATE_NOT_ENOUGH_BUREAUCRACY: "@warning! The cost of [Concept('concept_incorporated_state', '$concept_incorporating$')] $STATE_NAME$ would lead to a deficit (@bur!$PROJECTED_TOTAL|v+1$)"
  incorporate_state: "Incorporate State"
  incorporate_state_tooltip: "#header $incorporate_state$#!\n$TOOLTIP_DELIMITER$\n[concept_incorporated_state_desc]"

  REVOLUTIONARY_PARTY_CANNOT_JOIN_GOVERNMENT: "One or more Interest Groups in the [Party.GetName] supports an ongoing Revolution"
  UNINCORPORATE_STATE_TOOLTIP: "Click to cancel incorporation"

  ESTABLISH_COLONY_STATE_NOT_VALID: "Target is not a valid [concept_state]."
  ESTABLISH_COLONY_REVOLUTIONARY: "Revolutionary states cannot [Concept('concept_colony','$concept_colonize$')] states until civil war has ended."
  ESTABLISH_COLONY_NO_INTEREST: "We must have an [concept_interest] in $REGION|v$ to [Concept('concept_colony','$concept_colonize$')] here."
  ESTABLISH_COLONY_TYPE_NOT_VALID: "[concept_colony] type is not valid."
  ESTABLISH_COLONY_TARGET_COUNTRY_NOT_VALID: "There are no valid targets for [Concept('concept_colony','$concept_colonization$')] in the [concept_state]."
  ESTABLISH_COLONY_ALREADY_HAS_COLONY: "We already have a [concept_colony] here!"
  ESTABLISH_COLONY_OUT_OF_RANGE: "We cannot reach this [concept_state]"
  ESTABLISH_COLONY_CANNOT_AFFORD_MAINTENANCE: "We cannot afford the maintenance cost of $NEXTCOST|v$ @bur!/month!\nYou only have $CURRENTINCOME|v$ @bur!/month available."
  ESTABLISH_COLONY_INTEREST_MARKER_INSUFFICIENT: "Our [concept_interest] is insufficient!"
  ESTABLISH_COLONY_BAD_RANK: "[Concept('concept_country','$concept_countries$')] of [COUNTRY.GetRank] [concept_rank] cannot establish [Concept('concept_colony','$concept_colonies$')]"
  ESTABLISH_COLONY_NO_COLONIAL_GROWTH: "We do not produce any [concept_colonial_growth]"
  ESTABLISH_COLONY_MISSING_TECH: "We do not have the required #variable '$TECH$'#! [concept_technology]"
  ESTABLISH_COLONY_FOREIGN_CLAIMS: "We cannot colonize this [concept_state_region] because the following [Concept('concept_country', '$concept_countries$')] have [Concept('concept_claim', '$concept_claims$')] and maintain $INTERESTS$ there: $LIST$"
  CANCEL_COLONY_TOOLTIP: "Cancel [Concept('concept_colony','$concept_colonization$')]"
  CANCEL_COLONY_NO_COLONY: "#N We do not have a [concept_colony] here!#!"
  CANCEL_COLONY_HAS_DIPLO_PLAY: "#N Not possible to remove a [concept_colony] while part of an active [concept_diplomatic_play]#!"
  CANCEL_COLONY_TARGET_COUNTRY_NOT_VALID: "#N There are no valid targets that could take over the [concept_colony] from us#!"
  COLONIZATION_PAUSED: "[Concept('concept_colony','$concept_colonization$')] Paused"
  CANNOT_ESTABLISH_COLONY_HOVER: "#header #N Cannot Colonize [STATE_REGION.GetName]#!#!"
  ESTABLISH_COLONY_HOVER: "#header Colonize [STATE_REGION.GetName]#!"
  REMOVE_COLONY_TOOLTIP: "#header Remove colony from [StateRegion.GetName]"
  REMOVE_COLONY_CONFIRM: "#header Do you want to cancel [Concept('concept_colony', '$concept_colonizing$')] in [STATE.GetName]?#!\n\nYou will lose all progress in this state including already [Concept('concept_colony', '$concept_colonized$')] provinces\n[STATE.GetColonyProvinceProgressDesc]\nProgress towards gaining an additional province: #tooltippable #tooltip:[STATE.GetTooltipTag],STATE_COLONY_TOOLTIP [STATE.GetColonyProgress|%]#!#!"
  STATE_PROVINCES_COLONIZED: "#variable $CURRENT$#!/#variable $TOTAL$#! provinces [Concept('concept_colony', '$concept_colonized$')]"
  HAS_NO_INTEREST_MARKER: "#N This region has no [concept_interest]#!"
  HAS_INTEREST_MARKER: "#N This region already already contains an [concept_interest]#!"
  NO_STATE_ADJACENT_REGION: "#N Owns no State bordering this Region#!"
  LACKING_DIPLO_CAPITAL: "#N Requires @inf!$VALUE|0$#!"
  RIVAL_RULES_NOT_MET: "#N Rivalry conditions not met!"
  SET_INTEREST_MARKER: "#header Set Level $LEVEL$ [concept_interest]#!"
  IM_RANK_UNDER_MIN: "#N Can't Downgrade Level $LEVEL$ [concept_interest]#!"
  IM_RANK_OVER_MAX: "#N Can't Upgrade Level $LEVEL$ [concept_interest]#!"
  IM_COUNTRY_RANK_TOO_LOW: "#N Country rank needs to be at least $RANK$ to do this#!"
  INTERESTS: "[Concept('concept_interest', '$concept_interests$')]"
  DECLARE_INTEREST_ALREADY_HAS_INTEREST: "[Country.GetName] already has an [concept_interest] in [StrategicRegion.GetName]"
  DECLARE_INTEREST_TOO_MANY_DECLARED_INTERESTS: "[Country.GetName] cannot declare any more [Concept('concept_interest', '$concept_interests$')]"
  DECLARE_INTEREST_ADD_TOOLTIP: "#header [concept_declared_interest] in [StrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\nAdd a [concept_declared_interest] in [StrategicRegion.GetName]\nWe are currently using [GetPlayer.GetNumDeclaredInterests|v] of our #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! [Concept('concept_declared_interest','$concept_declared_interests$')]"
  DECLARE_INTEREST_REMOVE_TOOLTIP: "#header [concept_declared_interest] in [StrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\nRemove our [concept_declared_interest] in [StrategicRegion.GetName]\nWe are currently using [GetPlayer.GetNumDeclaredInterests|v] of our #tooltippable #tooltip:[GetPlayer.GetTooltipTag],MAX_DECLARED_INTERESTS_TOOLTIP [GetPlayer.CalcMaxNumDeclaredInterests|v]#!#! [Concept('concept_declared_interest','$concept_declared_interests$')]"
  DECLARE_INTEREST_NOT_COASTAL_NOT_ADJACENT: "[StrategicRegion.GetName] is neither coastal nor adjacent to any of our natural [Concept('concept_interest', '$concept_interests$')]"
  DECLARE_INTEREST_COASTAL_BUT_NO_COAST: "[StrategicRegion.GetName] not adjacent to any of our natural [Concept('concept_interest', '$concept_interests$')] and we do not have a coast"
  ACTOR_COUNTRY_NOT_VALID: "Actor country not valid."
  TARGET_COUNTRY_NOT_VALID: "#N Target country not valid.#!"
  TARGET_STATE_NOT_VALID: "#N Target State not valid.#!"
  TARGET_STRATEGIC_REGION_NOT_VALID: "#N Invalid [concept_strategic_region].#!"
  NO_ACTIVE_RESEARCH: "No Current Research"
  ACTIVE_RESEARCH: "Current Research"
  PASSIVELY_SPREADING_TECHS: "[concept_technology_spread]"
  REMAINING_RESEARCH_QUEUE: "#v +[GetDataModelSize(AccessPlayer.GetResearchQueueBottom)]#!"
  START_RESEARCH_COMMANDS: "\n#instruction Click to start researching [Technology.GetName] immediately\n$SHORTCUT_KEY_MOD_shift$Click to add it to the research queue#!"
  START_RESEARCH_COMMANDS_IN_QUEUE: "\n#instruction Click to start researching [Technology.GetName] immediately#!"
  RESEARCH_TECHNOLOGY_BUTTON: "Start New Research ([AccessPlayer.AccessNumResearchableTechnologies|v])"
  REPLACE_TECHNOLOGY_BUTTON: "Replace Research ([AccessPlayer.AccessNumResearchableTechnologies|v])"
  RESEARCH_TECHNOLOGY_BUTTON_TOOLTIP: "#header Select New Research#!\nThere are [AccessPlayer.AccessNumResearchableTechnologies|v] Technologies you can Research"
  INNOVATION_DESCRIPTION: "Weekly Innovation: #v @innovation![Country.GetWeeklyInnovation|+0]#!"
  INNOVATION_TOOLTIP: "#header [concept_innovation]#!\nWe are generating #v @innovation![Country.GetWeeklyInnovation|+2]#! [concept_innovation] each week:\n[Country.GetWeeklyInnovationDesc]\n\nA maximum of @innovation![Country.GetWeeklyMaxInnovation|v2] [concept_innovation] can be invested into active research each week:\n[Country.GetWeeklyMaxInnovationDesc]\n\nAny [concept_innovation] that are unspent due to investment caps or lack of active research will increase the rate of [concept_technology_spread] to our country"
  TECHNOLOGY_SPREAD_RATE_DESCRIPTION: "[concept_technology_spread]: #v [Country.GetWeeklyTechnologySpreadDesc]#!"
  TECHNOLOGY_SPREAD_RATE_TOOLTIP: "#header [concept_technology_spread]#!\n$TECHNOLOGY_SPREAD_RATE_BREAKDOWN$[ConcatIfNeitherEmpty('\n\n',Country.GetCurrentlySpreadingTechsDesc)]"
  TECHNOLOGY_SPREAD_RATE_BREAKDOWN: "[Country.GetWeeklyTechnologySpreadBreakdown]"
  CURRENTLY_SPREADING_TECHS: "#header Currently spreading technologies#!\n$BREAKDOWN$"
  TECH_SPREAD_ENTRY: "$PROGRESS|%0v$ - [Technology.GetName] ([Technology.GetCategoryName])"
  TECHNOLOGY_TYPE_DESCRIPTION: "#b [Technology.GetEra.GetNumber]#!"
  TECHNOLOGY_INVENTED_IN: "Invented in #bold [Technology.GetOrigin.GetName]#!"
  TECHNOLOGY_IN_QUEUE: "Predicted to finish in #v [Technology.PredictTimeLeftInQueueDesc(GetPlayer.Self)]#! (Queue position: #v [Technology.GetResearchQueuePosition(GetPlayer.Self)]#!)"
  TECHNOLOGY_TOOLTIP_COST: "#title Cost:#! @innovation![TECHNOLOGY.GetCost( GetPlayer.Self )|0vk] Innovation ([TECHNOLOGY.PredictTimeLeftDesc( GetPlayer.Self )] to research)"
  TECHNOLOGY_TOOLTIP_MODIFIERS_LABEL: "#title Modifiers#!"
  TECHNOLOGY_TOOLTIP_ADOPTION_EFFECTS_LABEL: "#title Adoption Effects#!"
  TECHNOLOGY_TOOLTIP_SPREAD_EFFECTS_LABEL: "#title Spread Effects#!"
  TECHNOLOGY_TOOLTIP_UNLOCKS_LABEL: "#title Unlocks#!"
  TECHNOLOGY_TOOLTIP_LORE: "#lore $LORE$#!"
  COMMON_KNOWLEDGE: "Common knowledge"
  RESEARCHABLE_TITLE: "#title Researchable#!"
  NUM_URBAN_BUILDINGS: "#header Urban Buildings#!\nThere are a total of #variable [StatesPanel.GetNumUrbanLevels]#! Levels of Urban Buildings in [State.GetName]"
  NUM_RESOURCE_BUILDINGS: "#header Resource Buildings#!\nThere are a total of #variable [StatesPanel.GetNumResourceLevels]#! Levels of Resource Buildings in [State.GetName]"
  NUM_AGRICULTURE_BUILDINGS: "#header Agriculture Buildings#!\nThere are a total of #variable [StatesPanel.GetNumAgricultureLevels]#! Levels of Agriculture Buildings in [State.GetName]"
  NUM_DEVELOPMENT_BUILDINGS: "#header Development Buildings#!\nThere are a total of #variable [StatesPanel.GetNumDevelopmentLevels]#! Levels of Development Buildings in [State.GetName]"
  TECHNOLOGY_PROGRESS_FORMAT_NO_SPREAD: "#P $FIXED_TECH_PROGRESS|0$#!"
  TECHNOLOGY_PROGRESS_FORMAT_WITH_SPREAD: "#v $MIN_TECH_PROGRESS|0+$ - $MAX_TECH_PROGRESS|0+$#!"
  TECHNOLOGY_SPREAD_FORMAT: "#v $MIN_TECH_SPREAD|0+$ - $MAX_TECH_SPREAD|0+$#!"
  TECHNOLOGY_NO_SPREAD_FORMAT: "#v $TECH_SPREAD|0+$#!"
  TECHNOLOGY_PROGRESS_WEEKS_MIN_MAX: "$MIN_TIME$ - $MAX TIME$"
  BUILD_URBAN_BUILDING: "Build new Urban Building\nThis action has #v [StatesPanel.AccessState.GetNumConstructableUrbanBuildings|+]#! valid targets"
  STATE_GDP: "GDP: #variable [State.GetGDPContributionPercentage|%1]#!"
  STATE_TAX: "Tax: #variable [State.GetTaxationRevenue|+=K]#!"
  NUM_RURAL_BUILDINGS: "#header Rural Buildings#!\nThere are a total of #variable [StatesPanel.GetNumRuralLevels]#! Levels of Rural Buildings in [State.GetName]"
  NUM_RURAL_BUILDINGS_OVERVIEW: "#header Rural Buildings#!\nThere are a total of #variable [StatesPanel.GetNumRuralLevels]#! Levels of Rural Buildings in [State.GetName]"
  NUM_POPS: "#header Population#!\nThere is a total of [State.GetPopulationSize|Kv] people living in [State.GetName]"
  NUM_SOL: "#header [concept_sol]#! in [State.GetName]\n$TOOLTIP_DELIMITER$\nAverage Current: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetAverageStandardOfLivingAll)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_SOL_ALL [State.GetAverageStandardOfLivingAll|1v]#!#!)\nAverage $EXPECTED_SOL_SHORT$: [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingAll)|v] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_EXPECTED_SOL_ALL [State.GetExpectedStandardOfLivingAll|v1]#!#!)"
  STATE_SOL_ALL: "#header Average [concept_sol] for all [Concept('concept_pop', '$concept_pops$')] in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelAll] ([State.GetFormattedStandardOfLivingAll]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescAll]"
  STATE_SOL_POOR: "#header Average [concept_sol] for $poor$ in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelPoor] ([State.GetFormattedStandardOfLivingPoor]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescPoor]"
  STATE_SOL_MIDDLE: "#header Average [concept_sol] for $middle$ in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelMiddle] ([State.GetFormattedStandardOfLivingMiddle]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescMiddle]"
  STATE_SOL_RICH: "#header Average [concept_sol] for $rich$ in [State.GetName]#!\n#v [State.GetFormattedStandardOfLivingLabelRich] ([State.GetFormattedStandardOfLivingRich]#!)\n$TOOLTIP_DELIMITER$\n[State.GetAdditionalSOLFactorsDescRich]"
  STATE_EXPECTED_SOL_ALL: "#header Average [concept_expected_sol] for all [Concept('concept_pop', '$concept_pops$')] in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingAll)] ([State.GetExpectedStandardOfLivingAll|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescAll]"
  STATE_EXPECTED_SOL_POOR: "#header Average [concept_expected_sol] for $poor$ in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingPoor)] ([State.GetExpectedStandardOfLivingPoor|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescPoor]"
  STATE_EXPECTED_SOL_MIDDLE: "#header Average [concept_expected_sol] for $middle$ in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingMiddle)] ([State.GetExpectedStandardOfLivingMiddle|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescMiddle]"
  STATE_EXPECTED_SOL_RICH: "#header Average [concept_expected_sol] for $rich$ in [State.GetName]#!\n#v [LabelingHelper.GetLabelForStandardOfLivingCFixedPoint(State.GetExpectedStandardOfLivingRich)] ([State.GetExpectedStandardOfLivingRich|1]#!)\n$TOOLTIP_DELIMITER$\n[State.GetExpectedSOLFactorsDescRich]"
  WE_NOW_HAVE_LAW: "#bold We now have [PlayerMessageItem.GetLaw.GetName]!#!"
  GAINED_MODS: "#title Gained from changing to [PlayerMessageItem.GetLaw.GetName]:#!"
  LOST_MODS: "#title Lost from changing from [PlayerMessageItem.GetPrevLaw.GetName]:#!"
  ENACT_APPROVAL_CHANGES: "#title [concept_interest_group] approval changes from enacting [PlayerMessageItem.GetLaw.GetName]#!"
  ABOLISH_APPROVAL_CHANGES: "#title [concept_interest_group] approval changes from abolishing [PlayerMessageItem.GetPrevLaw.GetName]#!"
  LAW_LORE: "#lore #bold [PlayerMessageItem.GetLaw.GetName]#!\n[PlayerMessageItem.GetLaw.GetFlavor]#!"
  INVALID_ERA: "Invalid era"
  TECHNOLOGY_PROGRESS: "#v @innovation! [Technology.GetProgress(GetPlayer.Self)|D]#! / #maximum [Technology.GetCost(GetPlayer.Self)|D]#!"
  TECHNOLOGY_COST: "#bold @innovation![Technology.GetCost(GetPlayer.Self)|0]#!"
  TECHNOLOGY_PROGRESS_GAIN: "#v #tooltippable #tooltip:[Technology.GetTooltipTag],TECHNOLOGY_GAIN_BREAKDOWN [GetPlayer.GetWeeklyTechnologyProgressDescForTech(Technology.Self)]#!#!#!"
  TECHNOLOGY_PROGRESS_TIME_LEFT: "[Technology.GetTimeLeftDesc( GetPlayer.Self )] left"
  TECHNOLOGY_PROGRESS_WITH_GAIN: "$TECHNOLOGY_PROGRESS$ ($TECHNOLOGY_PROGRESS_GAIN$)"
  TECHNOLOGY_PROGRESS_WITH_GAIN_AND_TIME_LEFT: "$TECHNOLOGY_PROGRESS_WITH_GAIN$ ($TECHNOLOGY_PROGRESS_TIME_LEFT$)"
  NO_TECH_IN_RESEARCH_QUEUE: "No queued [Concept('concept_technology', '$concept_technologies$')]"
  RESEARCH_QUEUE: "Research Queue"
  ADD_TO_TECH_QUEUE: "Add [Technology.GetName] to the research queue"
  REMOVE_TECH_FROM_QUEUE: "Remove [Technology.GetName] from the research queue"
  HOW_TO_ADD_TO_RESEARCH_QUEUE: "Add [Concept('concept_technology', '$concept_technologies$')] to the research queue by SHIFT + clicking an available tech or click the #b +#! next to it."
  TECHNOLOGY_SPREAD_TOOLTIP: "#header [concept_technology_spread]#!\n$TOOLTIP_DELIMITER$\n[GetPlayer.GetWeeklyTechnologySpreadForTechDesc(Technology.Self)]"
  TECHNOLOGY_GAIN_BREAKDOWN: "#header Technology Progress#!\nFrom [concept_innovation]: #tooltippable #tooltip:[Technology.GetTooltipTag]|[GetPlayer.GetTooltipTag],INNOVATION_TOOLTIP #v [GetPlayer.GetWeeklyInnovationForTech(Technology.Self)|=+0]#!#!#!\nFrom [concept_technology_spread]: #tooltippable #tooltip:[Technology.GetTooltipTag],TECHNOLOGY_SPREAD_TOOLTIP [GetPlayer.GetWeeklyTechnologySpreadForTechDesc(Technology.Self)]#!#!"
  BASE_WEEKLY_TECH_SPREAD: "Base weekly [concept_technology_spread]: #v $VALUE|+2$#!"
  RANDOMIZED_WEEKLY_TECH_SPREAD: "This results in a [concept_technology_spread] of between #P $MIN|1$#! and #P $MAX|1$#! @innovation![concept_innovation] invested each week in [Concept('concept_technology', '$concept_technologies$')] that are spreading to us."
  TECH_SPREAD_FROM_NEIGHBOR: "[concept_technology_spread] from $COUNTRY|v$: #v $VALUE|+=2$#! (Neighbor)"
  TECH_SPREAD_FROM_PACT: "[concept_technology_spread] from $COUNTRY|v$: #v $VALUE|+=2$#! ($PACT$)"
  TECH_SPREAD_MAX_CAP: "[concept_technology_spread] capped at #v $VALUE|+2$#!/week"
  test.acquired_technology.t: "[ROOT.GetCountry.GetName] acquired [ROOT.GetTechnology.GetName]!"
  test.acquired_technology.d: "TODO Description"
  test.acquired_technology.f: "TODO Flavor"
  SHOW_MORE: "#header Show more#!"
  SHOW_LESS: "#header Show less#!"
  BATTLE_SIZE_BASE_TOTAL_BATTALIONS_ON_FRONT: "Total $concept_battalions$ on $concept_front$"
  BATTLE_SIZE_BASE_NAVAL_INVASION_GENERALS_BATTALIONS: "$concept_battalions$ that made landfall"
  BATTLE_SIZE_BASE_NAVAL_INVASION_GARRISONED_BATTALIONS: "Garrisoned $concept_battalions$"
  BATTLE_SIZE_NUMERIC_ADVANTAGE: "Numeric advantage on [concept_front]"
  BATTLE_SIZE_TERRAIN_INFRASTRUCTRE: "Limited by [concept_terrain] and [concept_infrastructure]\n$TAB$[SCOPE.sProvince('province').GetTerrainName] [concept_combat_width]: [SCOPE.sProvince('province').GetTerrainCombatWidth|v1]\n$TAB$[SCOPE.sProvince('province').GetState.GetName] $concept_infrastructure$: [SCOPE.sProvince('province').GetState.GetInfrastructure|v0]"
  BATTLE_SIZE_MAX_AMOUNT_REACHED: "Maximum number of Battalions reached"
  BATTLE_SIZE_MIN_AMOUNT_REACHED: "Minimum required to advance"
  BATTLE_SIZE_FRONT_SIZE: "From length of Front"
  BATTLE_SIZE_CONCENTRATION_ACROSS_LENGTH_OF_FRONT: "Low concentration of $concept_battalions$ across length of Front"
  JOURNAL_ENTRY_TOOLTIP: "#header [JournalEntry.GetName]#![SelectLocalization(Not(StringIsEmpty(JournalEntry.GetStatusDesc)), 'JOURNAL_ENTRY_STATUS', '' )][SelectLocalization(StringIsEmpty(JournalEntry.GetStatusDesc), 'JOURNAL_ENTRY_TOOLTIP_WITH_LINE', JournalEntry.GetTooltip )]"
  JOURNAL_ENTRY_STATUS: "\n$TOOLTIP_DELIMITER$\n[JournalEntry.GetStatusDesc]\n\n"
  JOURNAL_ENTRY_TOOLTIP_WITH_LINE: "\n$TOOLTIP_DELIMITER$\n[JournalEntry.GetTooltip]"
  JOURNAL_ENTRY_ACTIVATION_HEADER: "#title Will activate if:\n#!"
  JOURNAL_ENTRY_COMPLETION_HEADER: "#title Will complete if:\n#!"
  JOURNAL_ENTRY_FAILURE_HEADER: "#title Will fail if:\n#!"
  JOURNAL_ENTRY_INVALIDATION_HEADER: "#title Will become invalid if:\n#!"
  JOURNAL_ENTRY_TIMEOUT: "#title Will time out in #v $TIMELEFT_STRING$#!#!"
  DIPLO_PLAY_SET_POSITION: "Move"
  DIPLOMATIC_PLAY_CONFIRMATION_HEADER: "#header Confirm [DiplomaticPlayType.GetName]#!"
  SUPPORT_TARGET_DIPLOMATIC_PLAY_TOOLTIP: "Support #VARIABLE [DiplomaticPlay.GetTarget.GetName]#! in this [concept_diplomatic_play].\n\n[DiplomaticPlay.GetSupportTargetValidTooltip(GetPlayer)]"
  SUPPORT_INITIATOR_DIPLOMATIC_PLAY_TOOLTIP: "Support #VARIABLE [DiplomaticPlay.GetInitiator.GetName]#! in this [concept_diplomatic_play].\n\n[DiplomaticPlay.GetSupportInitiatorValidTooltip(GetPlayer)]"
  LEAN_TOWARDS_TARGET_DIPLOMATIC_PLAY_TOOLTIP: "Set your stance as #b Leaning Towards#! #VARIABLE [DiplomaticPlay.GetTarget.GetName]#! in this [concept_diplomatic_play].\n\n[DiplomaticPlay.GetLeanTowardsTargetValidTooltip(GetPlayer)]"
  LEAN_TOWARDS_INITIATOR_DIPLOMATIC_PLAY_TOOLTIP: "Set your stance as #b Leaning Towards#! #VARIABLE [DiplomaticPlay.GetInitiator.GetName]#! in this [concept_diplomatic_play].\n\n[DiplomaticPlay.GetLeanTowardsInitiatorValidTooltip(GetPlayer)]"
  BE_ON_THE_FENCE_DIPLOMATIC_PLAY_TOOLTIP: "Set your stance as #b On The Fence#! in this [concept_diplomatic_play].\n\n[DiplomaticPlay.GetBeOnTheFenceValidTooltip(GetPlayer)]"
  YIELD_DIPLOMATIC_PLAY_TOOLTIP: "#HEADER Yield#! your position in this [concept_diplomatic_play][ConcatIfNeitherEmpty('\n\n', DiplomaticPlay.GetYieldValidTooltip(GetPlayer))]"
  DECLARE_NEUTRALITY_DIPLOMATIC_PLAY_TOOLTIP: "Declare yourself to be neutral in this [concept_diplomatic_play][ConcatIfNeitherEmpty(DiplomaticPlay.GetDeclareNeutralityValidTooltip(GetPlayer),'\n\n')]"
  DIPLOMATIC_PLAY_INITIATOR_TOOLTIP: "#variable [DiplomaticPlay.GetInitiator.GetName]#! is the initiator of this [concept_diplomatic_play]"
  DIPLOMATIC_PLAY_DESCRIPTION_TOOLTIP: "This [concept_diplomatic_play] is to force #variable [DiplomaticPlay.GetTarget.GetName]#! to #variable [DiplomaticPlay.GetDiplomaticPlayType.GetName]#!"
  DIPLOMATIC_PLAY_INTEREST_MARKER_TOOLTIP: "#variable [DiplomaticPlay.GetTarget.GetName]#! has a Level #variable [DiplomaticPlay.GetInterestMarker(DiplomaticPlay.GetTarget).GetInterestStatus]#! [concept_interest] in the [concept_strategic_region] of this [concept_diplomatic_play]"
  DIPLOMATIC_PLAY_SUPPORTS_TOOLTIP: "#variable [Country.GetName]#! supports this"
  DIPLOMATIC_PLAY_OPPOSES_TOOLTIP: "#variable [Country.GetName]#! opposes this"
  DIPLOMATIC_PLAY_UNDECIDED_TOOLTIP: "#variable [Country.GetName]#! is undecided"
  DIPLOMATIC_PLAY_SWITCH_COUNTRY_TOOLTIP: "Play as [DiplomaticPlay.GetInitiator.GetName|v]\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetSwitchSideBreakdown][ConcatIfNeitherEmpty( GetDesc( DiplomaticPlay.SwitchSide( GetPlayer )), '\n\n' )]"
  DIPLOMATIC_PLAY_SWITCH_COUNTRY_BREAKDOWN_CURRENT_GOVERNMENT: "Current Government:"
  DIPLO_PLAY_TAKE_SIDE_CURRENT_BACKER_CONFIRM: "Abandon support for [COUNTRY.GetName]? Any [Concept('concept_war_goal', '$concept_war_goals$')] or [Concept('concept_obligation', '$concept_obligations$')] they have promised to us will be lost and our [concept_relations] with them will be reduced by #variable #N [GetDefine('NDiplomacy', 'DIPLOMATIC_PLAY_ABANDON_SUPPORT_RELATIONS_IMPACT')]#!#!"
  DIPLOMATIC_PLAY_ESCALATION: "[DiplomaticPlay.GetPhaseName|v]"
  DIPLOMATIC_PLAY_ESCALATION_TOOLTIP: "#header Escalation#!\nPhase: [DiplomaticPlay.GetPhaseName|v]\nValue: #variable [DiplomaticPlay.GetEscalation]#!"
  DIPLOMATIC_PLAY_SUPPORTS: "#header Supports#!"
  DIPLOMATIC_PLAY_OPPOSES: "#header Opposes#!"
  DIPLOMATIC_PLAY_UNDECIDED: "#header Undecided#!"
  DIPLOMATIC_PLAY_NAME: "[concept_diplomatic_play] in [DiplomaticPlay.GetStrategicRegion.GetName]"
  DIPLOMATIC_PLAY_SWITCH_COUNTRY: "Switch Sides"
  DIPLOMATIC_PLAY_OUTLINER_TOOLTIP: "#header [concept_diplomatic_play] in [DiplomaticPlay.GetStrategicRegion.GetName]#!\n$TOOLTIP_DELIMITER$\n$DIPLO_PLAY_INITIATOR$: [DiplomaticPlay.GetInitiator.GetName]\n$DIPLO_PLAY_TARGET$: [DiplomaticPlay.GetTarget.GetName]"
  COUNTRY_STRENGTH_POINT_ARMY_TOOLTIP: "Total Army Strength Point\n#variable [Country.GetStrengthPointArmy]#!\n\nEffectiveness: #variable [Country.GetCombatEffectivenessArmy|2]#!\nReinforcement Rate (not implemented): #variable [Country.GetReinforcementRateArmy]#!\nAvailable Barracks Strength Points capacity: #variable [Country.GetBarracksStrengthPointCapacityArmy] Strength Points#!"
  COUNTRY_STRENGTH_POINT_NAVY_TOOLTIP: "Total Navy Strength Point\n#variable [Country.GetStrengthPointNavy]#!\n\nKill Rate: #variable [Country.GetKillRateNavy]#!\nReinforcement Rate: #variable [Country.GetReinforcementRateNavy]#!\nAvailable Barracks Strength Points capacity: #variable [Country.GetBarracksStrengthPointCapacityNavy] Strength Points#!"
  NATIONAL_RESERVE_TOOLTIP: "#HEADER National Reserve#!\n$TOOLTIP_DELIMITER$\n[concept_gold_reserves_desc]"
  CHARACTER_INTEREST_GROUP: "#header [Character.GetFullName]#! is part of the #header [Character.GetInterestGroup.GetName]#!\n$TOOLTIP_DELIMITER$\n[concept_political_strength]: #variable [InterestGroup.GetPoliticalStrength|2*]#!\n$POL_STR_RATIO$\n\n#instruction Click#! to go to #bold [InterestGroup.GetName]#!"
  INTEREST_GROUP: "[concept_interest_group]"
  INCREASE: "increase"
  DECREASE: "decrease"
  ADMIRAL_REPAIRING_DATE: "[Character.GetFullName] has recently lost a naval battle and is unavailable until [Character.GetRepairDateEnd|v]"
  ADMIRAL_REPAIRING_DATE_TOOLTIP: "#header Repairing#!\n[Character.GetFullName] has recently lost a naval battle and is unavailable until [Character.GetRepairDateEnd|v]"
  NO_ORDERS: "No Orders"
  IN_RESERVE: "In Reserve"
  CURRENT: "Current"
  START_OF_BATTLE: "Start of Battle"
  UNDER_COMMAND: "Under Command"
  BORROWED: "Borrowed"
  DETAILS: "Details"
  YOU: "(You)"
  ENEMY: "(Enemy)"
  COMBAT_UNIT_NOT_MOBILIZED: "Inactive (not [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized$')])"
  COMBAT_UNIT_NOT_UNDER_DIRECT_COMMAND: "Inactive (in battle but not under direct command)"
  COMBAT_UNIT_INACTIVE_MODIFIER_GARRISONED: "Inactive (in [Concept('concept_garrison','$concept_garrisons$')])"
  BATTLE_IN: "Battle in $STATE_REGION_NAME$"
  BATTLE_NEAR: "Battle near $CITY_NAME$"
  BATTLE_FOR: "Battle for $CITY_NAME$"
  MILITARY_LENS_CHARACTER_TOOLTIP: "#HEADER $NAME$ #!"
  BATTLE_STATUS_OVERVIEW_TOOLTIP: "#header [BATTLE.GetName]#!\nA battle between #variable [BATTLE.GetAttacker.GetName]#! and #variable [BATTLE.GetDefender.GetName]#!"
  BATTLE_STATUS_WINNER_TOOLTIP: "This battle was won by #variable [BATTLE.GetWinner.GetName]#! and lasted between #variable [BATTLE.GetStartDate]#! and #variable [BATTLE.GetEndDate]#!"
  BATTLE_STATUS_INCONCLUSIVE_TOOLTIP: "This battle between #variable [BATTLE.GetAttacker.GetName]#! and #variable [BATTLE.GetDefender.GetName]#! ended inconclusively"
  BATTLE_UNITS_AT_START_TOOLTIP: "#header Initial number of [Concept('concept_unit','$concept_units$')]#!\n$UNIT_ICON$ [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )]: $VALUE|v$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  BATTLE_INITIAL_WANTED_UNITS: "Wanted $UNIT_ICON$ #tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#! [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )] at the start of the Battle"
  BATTLE_BATTALIONS_BREAKDOWN_HEADER: "$UNIT_ICON$ $VALUE|v$ [Select_CString( Battle.IsNavalBattle, Concept('concept_flotilla','$concept_flotillas$'), Concept('concept_battalion','$concept_battalions$') )]"
  BATTLE_BATTALIONS_BREAKDOWN_HEADER_ATTACKER_START_OF_BATTLE: "[ConcatIfNeitherEmpty( Battle.GetAttackerNumWantedUnitsDesc, '\n' )]Got $BATTLE_BATTALIONS_BREAKDOWN_HEADER$ attacking at the start of the Battle"
  BATTLE_BATTALIONS_BREAKDOWN_HEADER_DEFENDER_START_OF_BATTLE: "[ConcatIfNeitherEmpty( Battle.GetDefenderNumWantedUnitsDesc, '\n' )]Got $BATTLE_BATTALIONS_BREAKDOWN_HEADER$ defending at the start of the Battle"
  BATTLE_BATTALIONS_BREAKDOWN_HEADER_ATTACKER: "$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ Attacking with @manpower! [Battle.CalcCurrentAttackerManpower|*1v] [concept_manpower]"
  BATTLE_BATTALIONS_BREAKDOWN_HEADER_DEFENDER: "$BATTLE_BATTALIONS_BREAKDOWN_HEADER$ Defending with @manpower! [Battle.CalcCurrentDefenderManpower|*1v] [concept_manpower]"
  BATTLE_BATTALIONS_BREAKDOWN_DIRECTLY_COMMANDED: "$UNIT_ICON$ $VALUE|v$ under Direct Command of [Character.GetFullName]"
  BATTLE_BATTALIONS_BREAKDOWN_BY_GENERAL: "$UNIT_ICON$ $VALUE|v$ borrowed from [Character.GetFullName]"
  BATTLE_BATTALIONS_BREAKDOWN_GARRISON: "$UNIT_ICON$ $VALUE|v$ from [concept_garrison]"
  BATTLE_ATTACKER_CURRENT_MORALE_TOOLTIP: "Attackers morale is currently #[GetMoraleColorString( Battle.CalcCurrentAttackerMorale )] [Battle.CalcCurrentAttackerMorale|0%]#!"
  BATTLE_DEFENDER_CURRENT_MORALE_TOOLTIP: "Defenders morale is currently #[GetMoraleColorString( Battle.CalcCurrentDefenderMorale )] [Battle.CalcCurrentDefenderMorale|0%]#!"
  BATTLE_ATTACKER_INITIAL_MORALE_TOOLTIP: "Attackers initial morale was #[GetMoraleColorString( Battle.GetInitialAttackerMorale )] [Battle.GetInitialAttackerMorale|0%]#!"
  BATTLE_DEFENDER_INITIAL_MORALE_TOOLTIP: "Defenders initial morale was #[GetMoraleColorString( Battle.GetInitialDefenderMorale )] [Battle.GetInitialDefenderMorale|0%]#!"
  BATTLE_ATTACKER_ENDING_MORALE_TOOLTIP: "Attackers morale at the end was #[GetMoraleColorString( Battle.GetEndingAttackerMorale )] [Battle.GetEndingAttackerMorale|0%]#!"
  BATTLE_DEFENDER_ENDING_MORALE_TOOLTIP: "Defenders morale at the end was #[GetMoraleColorString( Battle.GetEndingDefenderMorale )] [Battle.GetEndingDefenderMorale|0%]#!"
  BATTLE_BATTALION_GROUP_AVERAGE_MORALE: "Average morale of units is #[GetMoraleColorString( BattleBuildingEntry.GetAverageMorale )] [BattleBuildingEntry.GetAverageMorale|0%]#!"
  BATTLE_NONALLY_VICTORY: "[Battle.GetWinner.GetName] was victorious!"
  BATTLE_ALLY_VICTORY: "Your ally [Battle.GetWinner.GetName] was victorious!"
  BATTLE_ALLY_DEFEAT: "Your ally [Battle.GetLoser.GetName] was defeated!"
  BATTLE_CAPTURING_COUNTRY: "[Battle.GetCapturingCountry.GetName] captured [Battle.GetNumCapturedProvinces|v] provinces"
  BATTLE_COUNTRY_DEFEAT: "[Battle.GetLoosingProvincesCountry.GetName] lost [Battle.GetNumCapturedProvinces|v] provinces"
  DEAD_TOOLTIP_ATTACKER: "The [Battle.GetAttacker.GetAdjective] side has suffered [Battle.GetAttackerTotalDead|0v] [concept_dead]"
  DEAD_TOOLTIP_DEFENDER: "The [Battle.GetDefender.GetAdjective] side has suffered [Battle.GetDefenderTotalDead|0v] [concept_dead]"
  WOUNDED_TOOLTIP_ATTACKER: "The [Battle.GetAttacker.GetAdjective] side has suffered [Battle.GetAttackerTotalWounded|0v] [concept_wounded]"
  WOUNDED_TOOLTIP_DEFENDER: "The [Battle.GetDefender.GetAdjective] side has suffered [Battle.GetDefenderTotalWounded|0v] [concept_wounded]"
  DEMORALIZED_TOOLTIP_ATTACKER: "The [Battle.GetAttacker.GetAdjective] side has suffered [Battle.GetAttackerTotalDemoralized|0v] [concept_morale_demoralized]"
  DEMORALIZED_TOOLTIP_DEFENDER: "The [Battle.GetDefender.GetAdjective] side has suffered [Battle.GetDefenderTotalDemoralized|0v] [concept_morale_demoralized]"
  BATTLE_MODIFIER_UNDER_COMMAND_HEADER: "Units under direct command gain following benefits:\n$TOOLTIP_DELIMITER$\n"
  BATTLE_MODIFIER_TOOLTIP_ATTACKER: "[Battle.GetAttackerUnderCommandBreakdown]"
  BATTLE_MODIFIER_TOOLTIP_DEFENDER: "[Battle.GetDefenderUnderCommandBreakdown]"
  BATTLE_BORROWED_TOOLTIP: "Borrowed units are not affected by the modifiers of the [concept_commander]"
  MISSING_CHARACTER: "#N There is no Character assigned to this Command#!"
  DETACHMENTS: "#title Detachments#!"
  MARKET_STATUS_MARKET_CAPITAL: "[concept_market_capital] of the [MARKET.GetName] (#variable [STATE.GetMarketAccess|%0v]#! [concept_market_access], [State.GetInfrastructureBalance|0+=] [concept_infrastructure])"
  MARKET_STATUS_CONNECTED_STATE: "[MARKET.GetName] (#variable [STATE.GetMarketAccess|%0v]#! [concept_market_access], [State.GetInfrastructureBalance|0+=] [concept_infrastructure])"
  MARKET_STATUS_ISOLATED: "Part of the [MARKET.GetName] ([concept_isolated_state])"
  MARKET_ACCESS_DESC_HEADER: "[concept_market_access] in [State.GetName]: $MARKET_ACCESS|%0v$\n$TOOLTIP_DELIMITER$\n"
  MARKET_ACCESS_DESC_BASE_MIN: "Because [concept_infrastructure] is at #b 0#!, base [concept_market_access] is #P $MARKET_ACCESS|%0v$#!"
  MARKET_ACCESS_DESC_BASE_MAX: "Because [concept_infrastructure_usage] is lower than or equal to [concept_infrastructure] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!), base [concept_market_access] is #P $MARKET_ACCESS|%0v$#!"
  MARKET_ACCESS_DESC_BASE: "@warning! Because [concept_infrastructure_usage] is higher than [concept_infrastructure] (#tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_DESC [State.GetInfrastructureBalance|0+=]#!#!), base [concept_market_access] is reduced to #N $MARKET_ACCESS|%0v$#!"
  MARKET_ACCESS_DESC_CONNECTED_LAND: "Connected to the [State.GetMarket.GetName] through a land route"
  MARKET_ACCESS_DESC_CONNECTED_OVERSEAS: "Connected to the [State.GetMarket.GetName] through the ports of [ShippingLane.GetBeginState.GetName] and [ShippingLane.GetEndState.GetName] at full base [concept_market_access] of #P $MARKET_ACCESS|%0v$#!"
  MARKET_ACCESS_DESC_CONNECTED_OVERSEAS_INEFFICIENT: "Connected to the [State.GetMarket.GetName] via [ShippingLane.GetCountry.GetAdjectiveNoFormatting] [concept_shipping_lane] through the ports of [ShippingLane.GetBeginState.GetName] and [ShippingLane.GetEndState.GetName], with [concept_market_access] reduced to #N $MARKET_ACCESS|%0v$#! due to low [concept_shipping_lane_effectiveness]"
  MARKET_ACCESS_DESC_DISCONNECTED_OVERSEAS: "Unable to connect to [State.GetMarket.GetName] through either land route or ports"
  MARKET_ACCESS_DESC_NO_EXIT_PORT: "Unable to connect to [State.GetMarket.GetName] via land, and [State.GetName] has no port"
  MARKET_ACCESS_DESC_NO_ENTRY_PORT: "Unable to connect to [State.GetMarket.GetName] via land, and the port in [State.GetName] has no other port to connect to in [State.GetMarket.GetName]"
  MARKET_PANEL_DETAILS_TAB_LABEL: "Goods"
  MARKET_PANEL_DETAILS_TAB_LABEL_BOLD: "#bold $MARKET_PANEL_DETAILS_TAB_LABEL$#!"
  MARKET_PANEL_STATES_TAB_LABEL: "Members"
  MARKET_PANEL_STATES_TAB_LABEL_BOLD: "#bold $MARKET_PANEL_STATES_TAB_LABEL$#!"
  MARKET_PANEL_TRADE_SUGGESTIONS_TAB_LABEL: "Highlights"
  MARKET_PANEL_GOODS_PRICE_GOLD: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=o]#!"
  MARKET_PANEL_GOODS_PRICE: "[Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=v]"
  MARKET_PANEL_GOODS_PRICE_BLUE: "#v [Goods.GetPercentageDeltaAgainstBasePrice(Goods.GetMarketPrice)|%0=u]#!"
  MARKET_PANEL_BALANCE_GOLD: "#v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|o=D]#!"
  MARKET_PANEL_BALANCE: "[FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|=Dv]"
  MARKET_PANEL_BALANCE_BLUE: "#v [FixedPointToInt(Goods.GetMarketBuyAndSellOrdersBalance)|u=D]#!"
  BUILDING_AVERAGE_WAGE: "@money!#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [Building.GetAverageAnnualWage|Dv]#!#! [concept_average_wage]"
  BUILDING_AVERAGE_WAGE_FLIPPED: "[concept_average_wage]: @money!#tooltippable #tooltip:[Building.GetTooltipTag],TOOLTIP_BUILDING_AVERAGE_WAGE [Building.GetAverageAnnualWage|Dv]#!#! "
  TOOLTIP_BUILDING_AVERAGE_WAGE: "#header [Building.GetName] [concept_average_wage]: @money![Building.GetAverageAnnualWage|Dv]#![AddLocalizationIf(Building.IsSubsidized,'INCLUDED_WAGE_SUBSIDIES')]\n$TOOLTIP_DELIMITER$\n[Building.GetAverageAnnualWageBreakdown]"
  INCLUDED_WAGE_SUBSIDIES: "\nIncludes @money![Building.GetAverageAnnualWageSubsidies|Dv] from being [Concept('concept_subsidies','$concept_subsidized$')]"
  POPTYPE_AVG_ANNUAL_WAGE_ENTRY: "#tooltippable #tooltip:[Building.GetTooltipTag]|[PopType.GetTooltipTag],TOOLTIP_BUILDING_POPTYPE_AVERAGE_WAGE @money!$WAGE|Dv$#!#! - [PopType.GetName] ([Building.GetNumEmployeesOfType(PopType.Self)|vD])"
  TOOLTIP_BUILDING_POPTYPE_AVERAGE_WAGE: "#header [PopType.GetName] in [Building.GetName]#!\n[concept_average_wage] @money![Building.GetAverageAnnualWageForPopType(PopType.Self)|Dv]\n$TOOLTIP_DELIMITER$\n[Building.GetAverageAnnualWageBreakdownForPopType(PopType.Self)]"
  POP_AVG_ANNUAL_WAGE_ENTRY: "@money!$WAGE|Dv$ - [Pop.GetCulture.GetName] [Pop.GetReligion.GetName] ([Pop.GetNumWorkforce|vD])"
  BALANCE_TOOLTIP: "#header [Building.GetBalance|D+=] Weekly Balance#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\nThe Balance of @money!#v [Building.GetBalance|D+=]#! is due to:\n$TAB$Weekly Revenue: #v @money![Building.GetLastRevenue|D+=]#!\n$TAB$Weekly Expenses: #v @money![Negate_CFixedPoint(Building.GetTotalExpenses)|+=D]#!"
  BUILDING_BALANCE_PROFIT: "#v @money![Building.GetBalance|D+]#! from positive Balance goes to:\n$BREAKDOWN$"
  BUILDING_BALANCE_PROFIT_WASTE: "Wasted profit:\n$BREAKDOWN$"
  BUILDING_BALANCE_LOSS: "#v @money![Negate_CFixedPoint(Building.GetBalance)|D-]#! to cover the negative Balance is taken from:\n$BREAKDOWN$"
  BALANCE_INVESTMENT: "[concept_reinvestment]: #v @money!$VAL|D$#!"
  BALANCE_CASH_DEPOSIT: "[concept_cash_reserves]: #v @money!$VAL|D$#!"
  BALANCE_SHAREHOLDER_DIVIDENDS: "[Concept('concept_ownership_share', '$concept_ownership_shares$')] [concept_dividends]: #v @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|D$#!#!#!"
  BALANCE_DIVIDENDS_TAX: "[concept_budget_dividends_taxes]: #v @money!$VAL|D$#!"
  BALANCE_CASH_WITHDRAW: "[concept_cash_reserves]: #v @money!$VAL|D-$#!"
  BALANCE_SHAREHOLDER_LOSSES: "[Concept('concept_ownership_share', '$concept_shareholder$')] pockets: #v @money!#tooltippable #tooltip:$BREAKDOWN_TAG$ $VAL|D-$#!#!#!"
  BALANCE_SUBSISTENCE_WASTE: "[concept_subsistence_building] waste: #v @money!$VAL|D-$#!"
  BALANCE_DIVIDENDS_TAX_WASTE: "[concept_tax_waste]: #v @money!$VAL|D-$#!"
  SHAREHOLDER_BALANCE: "@money!$VAL|Dv$ - [Pop.GetName] ($SHARE|%1$)"
  BUILDING_BUDGET: "Budget: #bold @money![Building.GetLastIncome|1]#!"
  BUILDING_TAXES: "Weekly Taxes:"
  TOOLTIP_BUILDING_TAXES_TOOLTIP: "#header Weekly Taxes#!\nTotal: @money![Building.GetTaxationRevenue|D+=]\n$TOOLTIP_DELIMITER$\n[Building.GetTaxationRevenueTooltip]\n\n[concept_taxes_desc]"
  UNINCORPORATED_STATE_NO_TAX: "Buildings in [Concept('concept_unincorporated_state', '$concept_unincorporated_states$')] do not pay any Income Taxes\n"
  BUILDING_TYPE_NO_TAX: "This type of [concept_building] does not pay out taxes\n"
  INCOME_TAX: "[concept_budget_income_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$INCOME_TAX_BREAKDOWN$')] #variable @money!$VAL|D+$#!#!#!"
  INCOME_TAX_BREAKDOWN: "#header Income taxes#!\nTotal: @money!$VAL|D+=$\n$TOOLTIP_DELIMITER$\nTax Rates:\n$BREAKDOWN$"
  INCOME_TAX_ENTRY: "$ENTRY_TYPE$: @money!$VAL|vD$\n$BREAKDOWN$"
  POLL_TAX: "[concept_budget_poll_taxes]: #tooltippable #tooltip:[GetRawTextTooltipTag('$POLL_TAX_BREAKDOWN$')] #variable @money!$VAL|D+$#!#!#!"
  POLL_TAX_BREAKDOWN: "#header Poll taxes#!\nTotal: @money!$VAL|D+=$\n$TOOLTIP_DELIMITER$\nTax Rates:\n$BREAKDOWN$"
  POLL_TAX_ENTRY: "$ENTRY_TYPE$: @money!$VAL|vD$\n$BREAKDOWN$"
  DIVIDENDS_TAX: "[concept_budget_dividends_taxes]: @money!$VAL|D+$"
  BUILDING_TAX_MODIFIER: "Building tax modifier: #variable $VAL|%0+$#!"
  MAINTAINING: "Maintaining @arrow_none!"
  HIRING: "Scaling up @arrow_up_up!"
  DOWNSIZING: "Tightening belt @arrow_down_down!"
  EARNINGS_BREAKDOWN: "#header Earnings#!\nValue: @money![Building.GetEarnings|vD=]\n$TOOLTIP_DELIMITER$\nRevenue: #bold #v @money![Building.GetLastRevenue|D+=]#!#![Building.GetLastMaterialExpensesDesc][Building.GetLastSlaveUpkeepDesc]"
  WORKFORCE: "#title Workforce #!"
  SORTED_BY: "Sorted by #bold Average Wage#!"
  WARS_LABEL: "#title Wars#!"
  WARS: "[Concept('concept_war','$concept_wars$')]"
  NO_WARS: "No $WARS$"
  ACTIVE_DIPLOMATIC_PLAYS: "Active [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
  NO_ACTIVE_DIPLOMATIC_PLAYS: "No $ACTIVE_DIPLOMATIC_PLAYS$"
  DIPLOMATIC_ACTION_NAME: "[DiplomaticAction.GetFullName]"
  DIPLO_ACTIONS: "[Concept('concept_diplomatic_action', '$concept_diplomatic_actions$')] targeting [Country.GetName]"
  NO_DIPLO_ACTIONS: "No Possible [concept_diplomatic_action]"
  NO_DIPLO_PLAYS: "No Possible [concept_diplomatic_play]"
  NO_ACTIVE_DIPLOMACY: "No Active Diplomacy"
  DIPLOMATIC_PLAYS_TARGETING_COUNTRY: "[Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] targeting [Country.GetName]"
  UNAVAILABLE_DIPLOMATIC_PLAYS_TARGETING_COUNTRY: "Unavailable $concept_diplomatic_plays_short$ targeting [Country.GetNameNoFormatting]"
  UNAVAILABLE_DIPLOMATIC_PLAYS_TARGETING_STATE: "Unavailable $concept_diplomatic_plays_short$ targeting States in [Country.GetNameNoFormatting]"
  NO_DIPLOMATIC_PLAYS_TARGETING_COUNTRY: "No [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')] available"
  DIPLOMATIC_STATUS_HEADER: "#title Diplomatic Status#!"
  TRUCES: "Truces"
  OBLIGATIONS_OWED_FROM: "Owes Obligations From"
  OBLIGATIONS_OWED_TO: "Owes Obligations To"
  INTEREST_MARKERS: "#title [Concept('concept_interest', '$concept_interests$')]#!"
  OH_DEER: "'#italic Oh deer', we have#! #bold [ErrorDeer.NumberOrErrors|v]#! #italic error(s)!#!"
  ERROR_DEER_SLOW_TICK_OPERATIONS: "#header Slow Tick Operations#!"
  NOT_AVAILABLE: "N/A"
  SOL_SHORT: "[Concept('concept_sol', '$SOL_SHORT_TEXT$')]"
  SOL_SHORT_TEXT: "SoL"
  TRUCE_WITH: "Truce with [Country.GetName]"
  TRUCE_TOOLTIP: "#header Truce with [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nTruce lasts until #variable [Truce.GetTruceDate]#!"
  BATTLE_LOSSES_ATTACKER_STATS: "Attacking Army losses: #v [Negate_int32(Battle.GetAttackerLostUnits)|+=]#!"
  BATTLE_LOSSES_DEFENDER_STATS: "Defending Army losses: #v [Negate_int32(Battle.GetDefenderLostUnits)|+=]#!"
  THEATER: "Theater"
  show_supply_areas_lens_option: "Show Supply Areas"
  show_supply_areas_lens_option_tooltip: "Show Supply Areas"
  planned_advance: "Planned Advance"
  rapid_advance: "Rapid Advance"
  dispersed: "Dispersed"
  defensive: "Defensive"
  TITLE_MAIN_OBJECTIVE: "#title Main Objective#!"
  STOCKPILE_CURRENT_TOOLTIP: "#header Stockpile#!\n$TOOLTIP_DELIMITER$\n$STOCKPILE_MAXIMUM_TOOLTIP$"
  STOCKPILE_MAXIMUM_TOOLTIP: "#title Stockpile modifiers:#!\n[Stockpile.GetCapacityBreakdown]\n\n$STRATEGIC_GOODS_STOCKPILE_CONCEPT$"
  PACKAGE_TOOLTIP: ""
  STRATEGIC_GOODS_STOCKPILE_CONCEPT: "#concept How many Munitions Crates that are currently in the Stockpile / How many Munition Crates there can be in the Stockpile at most.#!"
  OBJ_STANCE_TOOLTIP: "#header Objective Stance: #![AreaOfOperation.GetAOStance(GetPlayer)]"
  OBJ_STANCE_DETACHMENT_TOOLTIP: "#header Objective Stance: #![MilitaryCommandDetachment.GetAOStance]"
  occupation_lens_option: "Occupation"
  occupation_lens_option_tooltip: "#header Occupation#!"
  power_projection_lens_option: "Power Projection"
  power_projection_lens_option_tooltip: "#header Power Projection#!"
  no_power_projection: "Remove Power Projection"
  HAS_NO_POWER_PROJECTION: "#N There is no power projection in this state#!"
  HAS_POWER_PROJECTION: "#N There is a power projection in progress in this state#!"
  ALREADY_HAS_POWER_PROJECTION: "#N This command already has $LEVEL$#!"
  COMMAND_NOT_ADJACENT_TO_STRATEGIC_REGION: "#N This command is not adjacent to this strategic region#!"
  COMMAND_NOT_IN_STRATEGIC_REGION: "#N This command is not in this strategic region#!"
  establish_presence: "Establish Presence"
  project_power: "Project Power"
  project_great_power: "Project Great Power"
  presence: "Presence"
  power: "Power"
  no_power: "No Power"
  RANK_HEADER: "#header Power Rank#!"
  RANK_TOOLTIP_NEXT: "If the $concept_prestige$ of [COUNTRY.GetName] becomes at least [COUNTRY.GetPrestigeForNextRank|v], their $concept_rank$ will increase to [COUNTRY.GetNextRank|v]"
  RANK_TOOLTIP_PREV: "If the $concept_prestige$ of [COUNTRY.GetName] is reduced below [COUNTRY.GetPrestigeToMaintainRank|v] for an extended time, their $concept_rank$ will decrease to [COUNTRY.GetPreviousRank|v]"
  RANK_TOOLTIP_MAX_SUBJECT: "@information! [COUNTRY.GetName] cannot achieve a higher $concept_rank$ than $HIGHEST_RANK|v$ due to being the [concept_subject] of [Country.GetOverlord.GetName], limiting them to a maximum score position of #v ##$HIGHEST_POSITION$#! in the world"
  RANK_TOOLTIP_MAX_COUNTRY_TYPE: "@information! [COUNTRY.GetName] cannot achieve a higher $concept_rank$ than $HIGHEST_RANK|v$ due to their $COUNTRY_TYPE|v$ status, limiting them to a maximum score position of #v ##$HIGHEST_POSITION$#! in the world"
  COUNTRY_RANK_TOOLTIP: "#header [concept_rank]#!\n$TOOLTIP_DELIMITER$\n[COUNTRY.GetName] currently holds the $concept_rank$ of #variable [COUNTRY.GetRank]#! with an overall score position of #variable ##[COUNTRY.GetCountryScorePositionDesc]#! in the world.\n\nCurrent [concept_prestige]: #tooltippable #tooltip:[COUNTRY.GetTooltipTag],COUNTRY_PRESTIGE_BREAKDOWN [COUNTRY.GetPrestige|v]#!#!"
  COUNTRY_PRESTIGE_BREAKDOWN: "#header [concept_prestige] of [Country.GetName]: [Country.GetPrestige|v]#!\n$TOOLTIP_DELIMITER$\n[Country.GetPrestigeDesc]"
  OBSERVER_RANK_TOOLTIP: "#header [concept_rank]#!\n#v ##0 #!$OBSERVER_NO_COUNTRY_SELECTED$"
  HOMELAND_MAP_MARKER_TOOLTIP: "The [HomelandMarker.GetCulture.GetName] people considers [State.GetName] their [concept_homeland].\nOwner: [State.GetOwner.GetName]"
  CURRENT_RANK_INFO: "Becoming a #variable [COUNTRY.GetNextRank]#! requires #variable #bold [COUNTRY.GetPrestigeForNextRank]#!#! Prestige.\n\nTheir [concept_prestige] of #variable #bold [COUNTRY.GetPrestige]#!#! is due to:\n[COUNTRY.GetPrestigeDesc]\n\nIf [concept_prestige] drops below #v [COUNTRY.GetPrestigeForCurrentRank]#!, they will lose their #v [COUNTRY.GetRank]#! status."
  CURRENT_RANK_INFO_LOWERCASE: "Becoming a #variable [Country.GetNextRank]#! requires #variable #bold [Country.GetPrestigeForNextRank]#!#! [concept_prestige].\n\nTheir [concept_prestige] of #variable #bold [Country.GetPrestige]#!#! is due to:\n[Country.GetPrestigeDesc]\n\nIf [concept_prestige] drops below #v [Country.GetPrestigeForCurrentRank]#!, they will lose their #v [Country.GetRank]#! status."
  AGENDAS_TITLE: "\n#title Agendas:#!"
  COST: "Cost: #variable $VALUE$#! $TYPE$"
  COST_MONEY: "Cost: @money!#variable $VALUE|K$#!"
  COST_CREDIT: "Cost: @money!#variable $VALUE|K$#! credit"
  AUTHORITY: "@aut![Nbsp][concept_authority]"
  BUREAUCRACY: "@bur![Nbsp][concept_bureaucracy]"
  INFLUENCE: "@inf![Nbsp][concept_influence]"
  VERY_STRONGLY_AGAINST_PROGRESS: "#N #bold Very Strongly Against#!#!"
  STRONGLY_AGAINST_PROGRESS: "#N #bold Strongly Against#!#!"
  AGAINST_PROGRESS: "#N #bold Against#!#!"
  FOR_PROGRESS: "#P #bold For#!#!"
  STRONGLY_FOR_PROGRESS: "#P #bold Strongly For#!#!"
  VERY_STRONGLY_FOR_PROGRESS: "#P #bold Very Strongly For#!#!"
  STARTING_DIPLO_PLAYS: "Starting [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')]"
  MODIFIER_LABEL: ""
  MODIFIERS_HEADER: "#title Modifiers#!"
  MODIFIERS_ATTACKER_HEADER: "#title Attacker Modifiers#!"
  MODIFIERS_DEFENDER_HEADER: "#title Defender Modifiers#!"
  CASUALTIES_ATTACKER_HEADER: "#title Attacker Casualties#!"
  CASUALTIES_DEFENDER_HEADER: "#title Defender Casualties#!"
  CASUALTY_ENTRY_HEADER: "[CultureCasualtyStatistics.GetCulture.GetName]"
  CASUALTY_ENTRY_DEAD: "Dead: [CultureCasualtyStatistics.GetDead]"
  CASUALTY_ENTRY_WOUNDED: "Wounded: [CultureCasualtyStatistics.GetWounded]"
  CASUALTY_ENTRY_TOOLTIP: "[CultureCasualtyStatistics.GetDead|v] dead and [CultureCasualtyStatistics.GetWounded|v] wounded [CultureCasualtyStatistics.GetCulture.GetName] [Concept('concept_pop', '$concept_pops$')] on this side of the battle"
  SETUP_HEADER: "Battle Setup Variables"
  SETUP_ATTACKER_HEADER: "#title Attacker Setup#!"
  SETUP_DEFENDER_HEADER: "#title Defender Setup#!"
  SETUP_IS_WITHOUT_COMMANDER: "Without Commander: [BattleSetupSideData.IsWithoutCommander|b]"
  SETUP_RAW_REINFORCEMENT_ROLL: "Reinforcement raw: [BattleSetupSideData.GetReinforcementRaw|%1+]"
  SETUP_RAW_REINFORCEMENT_FINAL_ROLL: "Reinforcement final: [BattleSetupSideData.GetReinforcementFinal|%1+]"
  SETUP_TROOPS_TOTAL: "Total on Front: [Battle.GetUnitIcon] [BattleSetupSideData.GetTroopsTotal|+]"
  SETUP_TROOPS_IN_BATTLE: "In prior battles: [Battle.GetUnitIcon] [BattleSetupSideData.GetTroopsInBattle|+]"
  SETUP_TROOPS_AVAILABLE: "Available: [Battle.GetUnitIcon] [BattleSetupSideData.GetTroopsAvailable|+]"
  SETUP_TROOPS_MIN_MAX: "Desired: [Battle.GetUnitIcon] [BattleSetupSideData.GetTroopsMin|+] - [BattleSetupSideData.GetTroopsMax|+]"
  SETUP_TROOPS_POSSIBLE_REINFORCEMENT: "Possible extra: [Battle.GetUnitIcon] [BattleSetupSideData.GetTroopsPossibleReinforcement|+=]"
  SETUP_TROOPS_BASELINE: "Troops (baseline): [Battle.GetUnitIcon] [BattleSetupSideData.GetTroopsFromBaseline|+]"
  SETUP_TROOPS_REINFORCEMENTS: "Troops (reinf.): [Battle.GetUnitIcon] [BattleSetupSideData.GetTroopsExtraReinforcement|+=]"
  BATTLE_STARTING_ATTACKER_STATS: "Attacking army at start of battle:\nBattalions: [Battle.GetStartingAttackerUnits|v]\nMen: [Battle.GetStartingAttackerManpower|v]"
  BATTLE_END_ATTACKER_STATS: "Attacking army at end of battle:\nBattalions: [Battle.GetFinalAttackerUnits|v]\nFighting-capable Men: [Battle.GetFinalAttackerManpower|v]"
  BATTLE_STARTING_DEFENDER_STATS: "Defending army at start of battle:\nBattalions: [Battle.GetStartingDefenderUnits|v]\nMen: [Battle.GetStartingDefenderManpower|v]"
  BATTLE_END_DEFENDER_STATS: "Defending army at end of battle:\nBattalions: [Battle.GetFinalDefenderUnits|v]\nFighting-capable Men: [Battle.GetFinalDefenderManpower|v]"
  OFFER_OBLIGATION: "Offer Obligation"
  CALL_IN_OBLIGATION: "Call in Obligation"
  OFFER_WARGOAL: "Offer [WarGoal.GetName]"
  OFFER_WARGOAL_TYPE: "Offer [WarGoalType.GetName]"
  DIPLO_PLAY_PREFERENCE_ON_THE_FENCE: "No preference for either side"
  DIPLO_PLAY_STRONG_PREFERENCE_INITIATOR: "Preference for [DiplomaticPlay.GetInitiator.GetName]"
  DIPLO_PLAY_STRONG_PREFERENCE_TARGET: "Preference for [DiplomaticPlay.GetTarget.GetName]"
  DIPLO_PLAY_PREFERENCE_INITIATOR: "Slight preference for [DiplomaticPlay.GetInitiator.GetName]"
  DIPLO_PLAY_PREFERENCE_TARGET: "Slight preference for [DiplomaticPlay.GetTarget.GetName]"
  DIPLO_PLAY_PREFERENCE_FOR_COUNTRY_DESC: "#header [Country.GetName] Preference for [COUNTRY_THIRD_PARTY.GetName]#!\nTotal: $TOTAL_VALUE|v=+$\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  DIPLO_PLAY_PREFERENCE_TOOLTIP: "#header Support Preferences of [Country.GetName]#!\n$TOOLTIP_DELIMITER$\nTendency to support [INITIATOR_COUNTRY.GetName]: #tooltippable #tooltip:$INITIATOR_BREAKDOWN_TAG$ $INITIATOR_SCORE|v$#!#!\nTendency to support [TARGET_COUNTRY.GetName]: #tooltippable #tooltip:$TARGET_BREAKDOWN_TAG$ $TARGET_SCORE|v$#!#!"
  DIPLO_PLAY_PREFERENCE_DESC: "[COUNTRY.GetAdjective] Relative Preference for [ALLY_COUNTRY.GetName]: #tooltippable #tooltip:$BREAKDOWN_TAG$ $SCORE|+=$#!#!"
  DIPLO_PLAY_PREFERENCE_BREAKDOWN: "#header [COUNTRY.GetAdjective] Relative Preference for [ALLY_COUNTRY.GetName]: $SCORE|+=$#!\n$TOOLTIP_DELIMITER$\nPreference to support [ALLY_COUNTRY.GetName]: #tooltippable #tooltip:$ALLY_BREAKDOWN_TAG$ $ALLY_SCORE|v$#!#!\nPreference to support [ENEMY_COUNTRY.GetName]: #tooltippable #tooltip:$ENEMY_BREAKDOWN_TAG$ $ENEMY_SCORE|v$#!#!\n[concept_neutrality]: #tooltippable #tooltip:$NEUTRALITY_BREAKDOWN_TAG$ $NEUTRALITY_SCORE|v$#!#!\n\n@information! Relative Preference is calculated from the [COUNTRY.GetAdjective] preference to support [ALLY_COUNTRY.GetName] minus either their preference to support [ENEMY_COUNTRY.GetName] or their [concept_neutrality] score, whichever result ends up lower"
  SWAY_OFFER_TITLE: "Attempt to Sway"
  SWAY_OFFER_WARGOAL_DESC: "[Proposal.GetActor.GetName] offers us a [concept_war_goal] to #variable [Proposal.GetDiplomaticPlay.GetSwayOfferWarGoal(Proposal.GetActor.Self).GetName]#! if we will back them in the ongoing [concept_diplomatic_play]."
  SWAY_OFFER_OBLIGATION_DESC: "[Proposal.GetActor.GetName] offers to owe us a [concept_obligation] if we will back them in the ongoing [concept_diplomatic_play] against [Proposal.GetTarget.GetName]."
  ALREADY_HAS_SWAY_OFFER: "We are already attempting to sway another country."
  ALREADY_OWES_OBLIGATION_TO: "We already owe #variable [COUNTRY.GetName]#! an [concept_obligation]."
  ADD_WARGOAL_PANEL_HEADER: "#bold Add [concept_war_goal]#!"
  ADD_WARGOAL_NOT_ALLOWED: "This [concept_diplomatic_play] does not allow adding additional wargoals."
  ADD_WARGOAL_TOOLTIP: "#header Add [concept_war_goal]#!\n[DiplomaticPlay.GetCountryCanAddWarGoalDesc(GetPlayer)]"
  CLICK_TO_ADD_WARGOAL: "#instruction Click to open [concept_war_goal] selection#!"
  WARGOAL_TRUST_COST: "Trust cost: #bold #N [WarGoalType.GetTrustCost]#!#!"
  TOOLTIP_WARGOAL_TRUST_COST: "The amount of Trust deducted when adding this wargoal"
  ADD_WARGOAL_NOT_PARTICIPANT: "[COUNTRY.GetName] is not part of this [concept_diplomatic_play]"
  ADD_WARGOAL_NOT_PRIMARY_PARTICIPANT: "[COUNTRY.GetName] is not a primary participant of this [concept_diplomatic_play]"
  SIDE_NOT_VALID_IN_DIPLOMATIC_PLAY: "No valid side to join"
  ADD_WARGOAL_NOT_ENOUGH_TRUST: "Need $COST$ Trust to add this wargoal"
  ADD_WARGOAL_TARGET_NOT_IN_REGION: "[COUNTRY.GetName] is not present in #variable $REGION$#!"
  ADD_WARGOAL_ALREADY_EXISTS: "This wargoal is already part of the war"
  ADD_WARGOAL_NOT_ENOUGH_MANEUVERS: "We need at least $COST|v$ [Concept('concept_maneuver', '$concept_maneuvers$')] to take this action"
  ADD_WARGOAL_NO_MANEUVERS_REMAINING: "No [Concept('concept_maneuver', '$concept_maneuvers$')] left for this side of the [concept_diplomatic_play]"
  ADD_WARGOAL_ON_ALLY: "Cannot add a wargoal on an ally"
  ADD_WARGOAL_WAR_HAS_STARTED: "The war has already started"
  JOIN_DIPLO_PLAY_COUNTRY_ALREADY_SWAYED: "[COUNTRY.GetName] already has an accepted sway offer"
  NUM_BUILDINGS_WITH_PROD_METHOD_ACTIVE: "[ProductionMethod.GetNumOfBuildingsUsingThis(GetPlayer.Self)|v] [Concept('concept_building', '$concept_buildings$')] currently have [ProductionMethod.GetName] active:\n[ProductionMethod.GetBuildingTypesUsingThisDesc(GetPlayer.Self)]"
  BUILDING_TYPE_USING_PM_ENTRY: "[BuildingType.GetName]: #variable $NUM$#!"
  ACTIVE_PRODUCTION_METHODS_PRODUCING: "[Concept('concept_production_method', '$concept_production_methods$')] producing [Goods.GetTextIcon][Nbsp][Goods.GetName] in [GetPlayer.GetName]"
  ACTIVE_PRODUCTION_METHODS_CONSUMING: "[Concept('concept_production_method', '$concept_production_methods$')] using [Goods.GetTextIcon][Nbsp][Goods.GetName] in [GetPlayer.GetName]"
  INACTIVE_PRODUCTION_METHODS: "Not currently active"
  PRODUCTION_METHOD_ITEM: "#variable [ProductionMethod.GetName]#!"
  OUTLINER_SECTION_FORMAT: "$TITLE$"
  PARTIES_TITLE: "#title Parties#!"
  COLONIZABLE_NO_POWER_PROJECTION: "#N Colonizable nations cannot initiate Power Projections#!"
  MARKET_CONTROLLER_TOOLTIP: "[concept_market_owner_desc]"
  MILITARY_THEATER: "[concept_theater]"
  STRATEGIC_REGION_MARKER_ADD_IM: "#header Add  [concept_interest]#!\nChoose a #bold Power Projection#! Regional Mission to use your military Strength Points to project your Power in #variable [StrategicRegion.GetName]#!\n\n[concept_power_projection_desc]"
  STRATEGIC_REGION_MARKER_START_DP: "#header Start [concept_diplomatic_play]#!\nYou have an #variable Interest#! in #variable [StrategicRegion.GetName]#!, meaning you can start a [concept_diplomatic_play] here"
  SITUATION_TOOLTIP: "#HEADER [EVENT.GetTitle]#!\n$TOOLTIP_DELIMITER$\nLocation: [EVENT.GetState.GetName]\n\nTime remaining: #variable [EVENT.GetRemainingDays]#! days"
  SITUATION_DEBUG_TOOLTIP: "$TOOLTIP_DELIMITER$\nEvent ID: [EVENT.GetKey|v]"
  TOOLTIP_INTEREST_GROUP: "#header [InterestGroup.GetName]#!\n$TOOLTIP_DELIMITER$\nLeader Ideology: [InterestGroup.GetLeaderIdeologyDesc]\nIdeologies: [InterestGroup.GetIdeologyDesc]\n\nClout: [InterestGroup.GetClout|%1v]\nPopulation: #variable [InterestGroup.GetPopulation|*]#!\n\n#lore [InterestGroup.GetDesc]#!\n"
  TOOLTIP_ENACT_LAW: "#header Change to [Law.GetName] from [Law.GetActiveGroupLaw.GetName]#!$TOOLTIP_ENACT_COMMON$"
  TOOLTIP_CANCEL_LAW: "#header Cease Enacting [Law.GetName]#!\nYou will lose all progress."
  TOOLTIP_CANCEL_LAW_COOLDOWN: "@warning! You will be unable to make another enaction attempt for [GetDefine('NPolitics','LAW_ENACTMENT_COOLDOWN_DAYS')|0] days."
  TOOLTIP_ENACT_COMMON: "\n$TOOLTIP_DELIMITER$\n[JoinText('\n\n', Law.CannotEnactDesc, JoinText('\n\n', Law.GetReplacedLawEffect, JoinText('\n\n', Law.PredictLegitimacyChangeToEnactDesc, Law.PredictApprovalChangesDuringEnactmentDesc)))]"
  PREDICT_APPROVAL_WHILE_ENACT: "#bold Temporary Approval Changes From Enactment:#!\n$BREAKDOWN$"
  CLICK_TO_OPEN_LAW_GROUP: "#instruction Click to view [concept_law_group]#!"
  LAW_ENACTMENT_PROGRESS_TOPBAR: "[SelectLocalization( GetPlayer.IsEnactingLaw, 'ENACTING_LAW', 'NOT_ENACTING_LAW' )]\n[GetPlayer.GetLawEnactmentProgressDesc]"
  ENACTING_LAW: "[GetPlayer.GetName] is currently enacting #variable [GetPlayer.GetLawBeingEnacted.GetName]#!"
  NOT_ENACTING_LAW: "[GetPlayer.GetName] is not actively enacting a new [concept_law]."
  LAW_ENACTMENT_ATTEMPT_TOO_SOON: "An attempt to enact [Law.GetName] was made too recently. Wait $TIME_REMAINING$ before another attempt."
  LAW_ENACTMENT_PROGRESS: "[ConcatIfNeitherEmpty(Law.PredictLegitimacyChangeToEnactDesc, '\n')][SelectLocalization(EqualTo_CFixedPoint(Law.GetCountry.GetModifier.GetValueFor('country_cannot_enact_laws'), '(CFixedPoint)0'), 'LAW_ENACTMENT_PROGRESS_NOT_STALLED', 'LAW_ENACTMENT_PROGRESS_STALLED')]"
  LAW_ENACTMENT_PROGRESS_NOT_STALLED: "[Law.GetCheckpointRemainingDays|v] days until next checkpoint\n\n$LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC$"
  LAW_ENACTMENT_PROGRESS_STALLED: "$LAW_ENACTMENT_STALLED_WARNING$#indent_newline: \n$LAW_ENACTMENT_STALL_BREAKDOWN$#!\n$LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_DATE$"
  LAW_ENACTMENT_STALLED_WARNING: "#r Law enactment is currently stalled!#!"
  LAW_ENACTMENT_STALL_BREAKDOWN: "[Law.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws')]"
  LAW_ENACTMENT_STALL_BREAKDOWN_FULL: "[Law.GetCountry.GetModifier.GetTooltipFor('country_cannot_enact_laws')]"
  LAW_NEXT_CHECKPOINT_TIME: "In [Law.GetCheckpointRemainingDays|v] days ([Law.GetCheckpointEndDateString])"
  LAW_NEXT_CHECKPOINT_TIME_DESC: "#header Next Checkpoint#!\nEstimated: #v [Law.GetCheckpointEndDateString]#!\n$TOOLTIP_DELIMITER$\n$LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_NESTING$\n\n#tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP $LAW_NEXT_CHECKPOINT_TIME_FACTORS$#!#!"
  LAW_NEXT_CHECKPOINT_TIME_FACTORS: "Factors for the total time between checkpoints of [Law.GetCheckpointTotalDays|v] days."
  LAW_NEXT_CHECKPOINT_TIME_FACTORS_TOOLTIP: "Base Days for [Law.GetName]: [Law.GetCheckpointBaseDays|v]\n[Law.GetCheckpointTotalDaysBreakdown]"
  LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC: "$NEXT_CHECKPOINT$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
  LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_DATE: "$NEXT_CHECKPOINT_NO_DATE$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
  LAW_NEXT_CHECKPOINT_OUTCOME_CHANCES_DESC_NO_NESTING: "$NEXT_CHECKPOINT_NO_NESTING$\n$TAB$$OUTCOME_SUCCESS$\n$TAB$$OUTCOME_ADVANCE$\n$TAB$$OUTCOME_DEBATE$\n$TAB$$OUTCOME_STALL$"
  NEXT_CHECKPOINT: "On next checkpoint on #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#!, one of the following will happen:"
  NEXT_CHECKPOINT_NO_DATE: "On next checkpoint, one of the following will happen:"
  NEXT_CHECKPOINT_SHORT: "#tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#!:"
  NEXT_CHECKPOINT_IS: "The next checkpoint is: #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC #v [Law.GetCheckpointEndDateString]#!#!#!"
  NEXT_CHECKPOINT_NO_NESTING: "On next checkpoint on #v [Law.GetCheckpointEndDateString]#!, one of the following will happen:"
  OUTCOME_SUCCESS: "[Concept('concept_enactment_success', '$concept_enactment_success_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|v%1]#!#!"
  OUTCOME_ADVANCE: "[Concept('concept_enactment_advance', '$concept_enactment_advance_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN [Law.GetCheckpointAdvanceChance|v%1]#!#!"
  OUTCOME_DEBATE: "[Concept('concept_enactment_debate', '$concept_enactment_debate_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_DEBATE_CHANCE_BREAKDOWN [Law.GetCheckpointDebateChance|v%1]#!#!"
  OUTCOME_STALL: "[Concept('concept_enactment_stall', '$concept_enactment_stall_short$')]: #tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_STALL_CHANCE_BREAKDOWN [Law.GetCheckpointStallChance|v%1]#!#!"
  CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN: "#header [concept_enactment_success] Chance#!\nThe current [concept_enactment_success] chance is [Law.GetCheckpointSuccessChance|v%1] due to:\n$TOOLTIP_DELIMITER$\n[Law.GetCheckpointSuccessBreakdown]"
  CHECKPOINT_ADVANCE_CHANCE_BREAKDOWN: "#header [concept_enactment_advance] Chance#!\nThe current [concept_enactment_advance] chance is [Law.GetCheckpointAdvanceChance|v%1] due to:\n$TOOLTIP_DELIMITER$\n[Law.GetCheckpointAdvanceBreakdown]"
  CHECKPOINT_DEBATE_CHANCE_BREAKDOWN: "#header [concept_enactment_debate] Chance#!\nThe current [concept_enactment_debate] chance is [Law.GetCheckpointDebateChance|v%1] due to:\n$TOOLTIP_DELIMITER$\n[Law.GetCheckpointDebateBreakdown]"
  CHECKPOINT_STALL_CHANCE_BREAKDOWN: "#header [concept_enactment_stall] Chance#!\nThe current [concept_enactment_stall] chance is [Law.GetCheckpointStallChance|v%1] due to:\n$TOOLTIP_DELIMITER$\n[Law.GetCheckpointStallBreakdown]"
  ENACTMENT_SUPPORTING_IGS_BREAKDOWN_HEADER: "From supporting [Concept('concept_interest_group', '$concept_interest_groups$')]:"
  ENACTMENT_SUPPORTING_IGS_BREAKDOWN_ITEM: "$TAB$[InterestGroup.GetName]: [InterestGroup.GetClout|=v%1]"
  ENACTMENT_OPPOSING_IGS_BREAKDOWN_HEADER: "From opposing [Concept('concept_interest_group', '$concept_interest_groups$')]:"
  ENACTMENT_OPPOSING_IGS_BREAKDOWN_ITEM: "$TAB$[InterestGroup.GetName]: [InterestGroup.GetClout|=v%1]"
  ENACTMENT_SUPPORTING_MOVEMENTS_BREAKDOWN_HEADER: "From supporting [Concept('concept_political_movement', '$concept_political_movements$')]:"
  ENACTMENT_SUPPORTING_MOVEMENTS_BREAKDOWN_ITEM: "$TAB$[PoliticalMovement.GetName]: [Multiply_CFixedPoint(PoliticalMovement.GetSupport,'(CFixedPoint)0.01')|=v%1]"

  ENACTMENT_RULER_BREAKDOWN_ITEM: "[Character.GetFullName] has the [Ideology.GetName] [concept_ideology]: $VALUE|=v%1$"
  ENACTMENT_OPPOSING_MOVEMENTS_BREAKDOWN_HEADER: "From opposing [Concept('concept_political_movement', '$concept_political_movements$')]:"
  ENACTMENT_OPPOSING_MOVEMENTS_BREAKDOWN_ITEM: "$TAB$[PoliticalMovement.GetName]: [Multiply_CFixedPoint(PoliticalMovement.GetSupport,'(CFixedPoint)0.01')|=v%1]"
  ENACTMENT_PAST_CHECKPOINTS_HEADER: "From past checkpoints:"
  ENACTMENT_DEBATE_CHANCE_EFFECTS_BREAKDOWN: "[concept_enactment_debate] chance of $DEBATE_CHANCE|v%1$ results in:\n$TAB$$DESC$"
  ENACTMENT_FACTOR_ENTRY: "[concept_end_of_discussion_factor]: x$VAL|v2$"
  ENACTMENT_BREAKDOWNS_BASE_CHANCE_ENTRY: "Base: $VAL|v%1$"
  ENACTMENT_BASE_SUCCESS_CHANCE_ENTRY: "[concept_base_success_chance]: $VAL|=v%1$"
  ENACTMENT_SUCCESS_CHANCE_ENTRY: "[concept_enactment_success] chance: $VAL|=v%1$"
  ENACTMENT_ADVANCE_CHANCE_ENTRY: "[concept_enactment_advance] chance: $VAL|=v%1$"
  ENACTMENT_ADVANCE_FACTOR_ENTRY: "[concept_advance_factor]: x$VAL|v2$"
  ENACTMENT_STALL_CHANCE_ENTRY: "[concept_enactment_stall] chance: $VAL|=v%1$"
  ENACTMENT_FASTENACT_IS_ACTIVE: "'fastenact' is active"
  LAWS_WITH_GVT_SUPPORT: "Laws with Governmental or Movement support"
  LAWS_WITHOUT_GVT_SUPPORT: "Laws without Governmental or Movement support"
  CHEAPEST_LAWS_HEADER: "$LAWS_WITH_GVT_SUPPORT$ ([GetDataModelSize(AccessPlayer.AccessLawsWithGovernmentOrMovementSupport)|v])"
  LAWS_WITHOUT_SUPPORT: "$LAWS_WITHOUT_GVT_SUPPORT$ ([GetDataModelSize(AccessPlayer.AccessLawsWithoutGovernmentOrMovementSupport)|v])"
  CHEAPEST_LAWS_HEADER_REFORM: "$LAWS_WITH_GVT_SUPPORT$ ([GetDataModelSize(ReformGovernment.GetPredictedLawsWithGovernmentOrMovementSupport)|v])"
  LAWS_WITHOUT_SUPPORT_REFORM: "$LAWS_WITHOUT_GVT_SUPPORT$ ([GetDataModelSize(ReformGovernment.GetPredictedLawsWithoutGovernmentOrMovementSupport)|v])"
  LAWS_HAS_CHANGED: "Will Change!"
  CHEAPEST_LAWS_IG_HEADER: "#bold Laws the [InterestGroup.GetName] wants to pass#!"
  PREDICTED_LAWS_WITH_GVT_SUPPORT: "$LAWS_WITH_GVT_SUPPORT$ ($PREDICTION$)"
  PREDICTED_LAWS_WITHOUT_GVT_SUPPORT: "$LAWS_WITHOUT_GVT_SUPPORT$ ($PREDICTION$)"
  TOOLTIP_CHANGE_FROM_LAW: "#header Change [LawGroup.GetName] [concept_law]#!\nYou have #variable [LawGroup.GetNumEnactable|+]#! available alternatives to [LawGroup.GetName] in [Law.GetName]"
  TOOLTIP_CHANGE_FROM_LAW_CURRENTLY_ENACTING: "#header Change [LawGroup.GetName] [concept_law]#!\nYou are currently enacting [GetPlayer.GetLawBeingEnacted.GetName] in [GetPlayer.GetLawBeingEnacted.GetGroup.GetName]\nIf you were not, you would have #variable [LawGroup.GetNumPotentialEnactable|+]#! available alternatives to [LawGroup.GetName] in [Law.GetName]"
  PREDICT_LEGITIMACY_TO_ENACT: "Once enacted, this Law would change the current Government's Legitimacy by #variable $VAL|=+0$#!"
  LAW_BEING_ENACTED: "Being Enacted"
  ENACTING_TO_LAW: "Enacting [GetPlayer.GetLawBeingEnacted.GetName]"
  LAW_NO_EFFECT: "#italic No effect#!\n"
  ENACT_LAW: "Enact (#tooltippable #tooltip:[Law.GetTooltipTag],CHECKPOINT_SUCCESS_CHANCE_BREAKDOWN [Law.GetCheckpointSuccessChance|v0%]#!#! chance every [Law.GetCheckpointBaseDays|v] days)"
  REENACT_LAW: "Re-enact"
  CHANGE_FROM_LAW: "Change"
  LAW_CANNOT_ENACT_TRIGGER_DESC: "To enact this Law you must satisfy the following:\n$REASON$\n"
  LAW_WOULD_CAUSE_STABILITY_DROP_DESC: "Enacting this Law would cause a Stability penalty of #bold #N -$VAL|0%$#!#!\n$REASON$\n"
  CHANGE_LAW_HEADER: "#bold $concept_law_group$#!"
  LAW_ALREADY_ENACTED: "[Law.GetName] has already been enacted"
  LAW_ALREADY_ENACTING: "[Law.GetCountry.GetName] is already enacting #variable [Law.GetName]#!, the progress so far is #variable [Law.GetCheckpointProgress|%1]#!"
  LAW_IS_CIVIL_WAR: "#N Cannot do this while in Civil War!#!"
  LAW_CANNOT_ENACT: "[Law.GetCountry.GetName] is unable to enact any [Concept('concept_law','$concept_laws$')]#indent_newline: \n[Law.GetCountry.GetModifier.GetDescFor('country_cannot_enact_laws')]#!"
  YOU_MUST_HAVE: "You #bold must#! have "
  YOU_CANNOT_HAVE: "You #bold can not#! have "
  ENACTED: " enacted"
  OR_WITH_SPACE: " $OR$ "
  DIPLOMACY: "Diplomacy"
  BUTTON_DIPLOMATIC_OVERVIEW: "#header Diplomacy#!"
  BUTTON_JOURNAL: "#header Journal#!"
  BUTTON_BUILDINGS: "#header Buildings#!"
  BUTTON_DECISIONS: "#header Decisions#!"
  LAW_ABOLITION_COST: "Cost to abolish: #variable @aut!$VAL$#!"
  LAW_ABOLITION_BASECOST: "Base cost: #variable $VAL$#!"
  LAW_ABOLITION_PREMIUM: "Premium from government resistance: #N #bold +$VAL$#!#!"
  SWITCHING_TO: "Reform Underway:"
  ACTIVE_LAWS_TITLE: "#title [Concept('concept_law', '$concept_laws$')]#!"
  ACTIVE_INSTITUTIONS_TITLE: "#title Institutions#!"
  REFORM: "Reform"
  tariff_import_priority: "Protect Domestic Supply"
  tariff_export_priority: "Encourage Exports"
  tariff_no_priority: "No Priority"

  tariff_level_very_low: "Very Low"
  tariff_level_low: "Low"
  tariff_level_medium: "Medium"
  tariff_level_high: "High"
  tariff_level_very_high: "Very High"
  expense_level_very_low: "Very Low"
  expense_level_low: "Low"
  expense_level_medium: "Medium"
  expense_level_high: "High"
  expense_level_very_high: "Very High"
  government_wages_very_low: "$expense_level_very_low$ [concept_budget_government_wages]"
  government_wages_low: "$expense_level_low$ [concept_budget_government_wages]"
  government_wages_medium: "$expense_level_medium$ [concept_budget_government_wages]"
  government_wages_high: "$expense_level_high$ [concept_budget_government_wages]"
  government_wages_very_high: "$expense_level_very_high$ [concept_budget_government_wages]"
  military_wages_very_low: "$expense_level_very_low$ [concept_budget_military_wages]"
  military_wages_low: "$expense_level_low$ [concept_budget_military_wages]"
  military_wages_medium: "$expense_level_medium$ [concept_budget_military_wages]"
  military_wages_high: "$expense_level_high$ [concept_budget_military_wages]"
  military_wages_very_high: "$expense_level_very_high$ [concept_budget_military_wages]"
  tax_level_very_low: "Very Low"
  tax_level_low: "Low"
  tax_level_medium: "Medium"
  tax_level_high: "High"
  tax_level_very_high: "Very High"
  tax_modifier_very_low: "$tax_level_very_low$ [concept_budget_income_taxes]"
  tax_modifier_low: "$tax_level_low$ [concept_budget_income_taxes]"
  tax_modifier_medium: "$tax_level_medium$ [concept_budget_income_taxes]"
  tax_modifier_high: "$tax_level_high$ [concept_budget_income_taxes]"
  tax_modifier_very_high: "$tax_level_very_high$ [concept_budget_income_taxes]"
  EFFECTS_FOR_TAX_LEVELS: "Effects on [Concept('concept_taxes','$concept_taxation$')] levels:#indent_newline: \n$BREAKDOWN$#!"
  EFFECTS_FOR_CURRENT_TAX_LEVEL: "#variable $LEVEL$#! $TAX_OR_EXPENSE_LEVEL_CURRENT$#indent_newline: \n$BREAKDOWN$#!"
  EFFECTS_FOR_OTHER_TAX_LEVEL_TITLE: "#variable $LEVEL$ [Concept('concept_taxes','$concept_taxation$')] Level#!\nWith $LAW$ [concept_law]"
  EFFECTS_FOR_OTHER_TAX_LEVEL: "#tooltippable #tooltip:$BREAKDOWN_TAG$ #variable $LEVEL$#!#!#!"
  INCOME_TAX_LEVEL_TITLE: "#title Income Taxes#!"
  CONSUMPTION_TAX_LEVEL_TITLE: "#title Consumption Taxes#!"
  PREDICTED_TAX_LEVEL_REVENUE: "Predicted Revenue: @money!$VALUE|Kv$"
  CURRENT_TAX_LEVEL_REVENUE: "Current Revenue: @money!$VALUE|Kv$"
  PREDICTED_TAX_LEVEL_DELTA: "Change in revenue from current tax level: #variable @money!$DELTA_INCOME|+=D$#!"
  PREDICTED_TAX_LAW_DELTA: "Change in revenue from current tax law: #variable @money!$DELTA_INCOME|+=D$#!"
  TAX_LEVEL_HEADER: "#variable $TAX_LEVEL$ Taxes#!"
  TAX_LEVEL_TAX_LAW: "Taxation Law: [LawType.GetName]"
  TAX_LEVEL_NO_TAX_LAW: "Taxation Law: None"
  TAXED_GOODS: "Currently Taxed [Concept('concept_good', '$concept_goods$')]: $GOODSDESC$"
  TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER: "#header Effects:#!"
  TAX_OR_EXPENSE_LEVEL_CURRENT: "#i #b (Current Level)#!#!"
  GOVERNMENT_WAGES_LEVEL: "$GOVERNMENT_WAGES_LEVEL_HEADER$ $CURRENT$\n$TOOLTIP_DELIMITER$\n$TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER$"
  GOVERNMENT_WAGES_LEVEL_TITLE: "#title Government Wages#!"
  GOVERNMENT_WAGES_LEVEL_HEADER: "#variable $EXPENSE_LEVEL$ Government Wages#!"
  GOVERNMENT_WAGES_WEEKLY_EXPENSES_CURRENT: "The average annual government wage of @money!$CURRENT_AVERAGE_ANNUAL_WAGE|v2$ costs @money!$CURRENT_WEEKLY_EXPENSES|vD$ weekly"
  GOVERNMENT_WAGES_WEEKLY_EXPENSES_NEW: "Changing it by #variable $WAGE_CHANGE_MULT|-=%0$#! to @money!$NEW_AVERAGE_ANNUAL_WAGE|v2$ would $CHANGETYPE$ costs by #variable @money!$DELTA_EXPENSES|-=D$#! to @money!$NEW_WEEKLY_EXPENSES|vD$"
  MILITARY_WAGES_LEVEL: "$MILITARY_WAGES_LEVEL_HEADER$ $CURRENT$\n$TOOLTIP_DELIMITER$\n$TAX_OR_EXPENSE_LEVEL_EFFECTS_HEADER$"
  MILITARY_WAGES_LEVEL_TITLE: "#title Military Wages#!"
  MILITARY_WAGES_LEVEL_HEADER: "#variable $EXPENSE_LEVEL$ Military Wages#!"
  MILITARY_WAGES_WEEKLY_EXPENSES_CURRENT: "The average annual military wage of @money!$CURRENT_AVERAGE_ANNUAL_WAGE|v2$ costs @money!$CURRENT_WEEKLY_EXPENSES|vD$ weekly"
  MILITARY_WAGES_WEEKLY_EXPENSES_NEW: "Changing it by #variable $WAGE_CHANGE_MULT|-=%0$#! to @money!$NEW_AVERAGE_ANNUAL_WAGE|v2$ would $CHANGETYPE$ costs by #variable @money!$DELTA_EXPENSES|-=D$#! to @money!$NEW_WEEKLY_EXPENSES|vD$"
  WELFARE_PAYMENTS_BREAKDOWN: "#tooltip_header Welfare Payments#!\nTotal: #v #N @money!-[GetPlayer.GetWelfarePaymentsExpenses|D-]"
  NO_TARIFFS: "No [concept_tariffs] for any [Concept('concept_good', '$concept_goods$')]"
  NO_TARIFFS_SINGLE_GOOD: "No [concept_tariffs] for [Goods.GetName]"
  EFFECTS_FOR_TARIFF_LEVEL: "Effects for #variable $LEVEL$#! [concept_tariffs]:"
  PREDICTED_TARIFF_LEVEL_REVENUE: "Predicted Revenue: @money!$VALUE|Kv$"
  PREDICTED_TARIFF_LEVEL_DELTA: "Change in revenue from current [Concept('concept_tariffs','$concept_tariff$')] focus: #variable @money!$DELTA_INCOME|+=D$#!"
  PREDICTED_TARIFF_LAW_DELTA: "Change in revenue from current [Concept('concept_tariffs','$concept_tariff$')] law: #variable @money!$DELTA_INCOME|+=D$#!"
  TARIFF_LEVEL_HEADER: " #header [concept_market_good_policy]: $TARIFF_LEVEL$ #!"
  TARIFF_LEVEL_TARIFF_LAW: "Trade Policy: [LawType.GetName]"
  TARIFF_LEVEL_NO_TARIFF_LAW: "Trade Policy: None"
  LAW_FROM_TO: "[GetPlayer.GetActiveLawFromGroup(Law.GetGroup.GetKey).GetName] to [Law.GetName]"
  GROW_INSTITUTION: "#header Increase [INSTITUTION.GetName]'s investment level#!"
  SHRINK_INSTITUTION: "#header Decrease [INSTITUTION.GetName]'s investment level#!"
  INSTITUTION_CHANGE_TITLE: "#bold Effect of Level $LEVEL|v$:#!"
  CANCEL_INSTITUTION_SIZE_CHANGE_TOOLTIP: "Cancel increasing institution's investment level"
  LAW_INSTITUTION_TOOLTIP: "#header [Law.GetInstitutionType.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  INSTITUTION_TYPE_EFFECT_PER_LEVEL: "#b [INSTITUTION_TYPE.GetName] effect per level:#!\n$BREAKDOWN$"
  LAW_INSTITUTION_EFFECT_PER_LEVEL: "#b Effect per level from [Law.GetName]:#!\n$BREAKDOWN$"
  INSTITUTION_PROVIDING_LAWS: "$LAW_LIST$ [concept_law]"
  DISABLES_INSTITUTION: "Disables the [INSTITUTION.GetName] [concept_institution]"
  PROVIDES_INSTITUTION_TYPE: "Enables the [INSTITUTION_TYPE.GetName] [concept_institution]\nAdditional $BUREAUCRACY$ Cost: $COST|=v1$"
  PROVIDES_INSTITUTION: "Enables the [INSTITUTION.GetName] [concept_institution]"
  INSTITUTION_TYPE_NEW_EFFECT: "[LawType.GetName] would provide [INSTITUTION_TYPE.GetName] with:\n$EFFECTS$"
  INSTITUTION_NEW_EFFECT: "[LawType.GetName] would provide [INSTITUTION.GetName] with:\n$EFFECTS$"
  INSTITUTION_SAME_EFFECT: "[LawType.GetName] is providing [INSTITUTION.GetName] with:\n$EFFECTS$"
  COUNTRY_CANNOT_AFFORD_NEW_INSTITUTION_TYPE: "@red_cross! [Law.GetCountry.GetName] lacks the #v @bur![Multiply_CFixedPoint(GetPlayer.GetInstitutionInvestmentBureaucracyFactor,'(CFixedPoint)-1')]#! [concept_bureaucracy] required to fund a new [INSTITUTION_TYPE.GetName] [concept_institution]"
  INVESTMENT_CURRENT_LEVEL: "This is the current [concept_investment_level]."
  INVESTMENT_TOO_LOW: "You cannot reduce your level of investment in this institution below its minimum level of $MIN|v$."
  INVESTMENT_TOO_HIGH: "You cannot increase your level of investment in this institution above its maximum level of $MAX|v$.\n\nThe max level of this institution is due to:\n$BREAKDOWN$"
  INVESTMENT_EXCEEDS_INCOME: "You cannot afford the #v @bur!$BUR_REQ|0$#! [concept_bureaucracy] required for this investment level."
  INVESTMENT_WEEKLY_COST_CHANGE: "Weekly cost change: #variable @bur! $COSTCHANGE|1=$#!"
  LAW_DOES_NOT_SUPPORT_INVESTMENT: "This Law does not have [Concept('concept_investment_level', '$concept_investment_levels$')]"
  ON_ENACT: "#title When enacted:#!"
  ON_REVOKE: "#title When revoked:#!"
  ON_REVOKE_ACTIVE: "#title When the currently active $LAW$ is revoked#!"
  THIS_IS_DUE_TO: "#title The total effect of this Law is due to:#!"
  LAW_EFFECT: "#bold Effect(s):#!"
  LAW_EFFECT_FOR_LEVEL: "#bold Effect(s) for [concept_investment_level] #variable $LEVEL$#!:#!"
  BASE_LAW_EFFECT: "#bold Base Effect(s):#!"
  FOR_EACH_LAW_INVESTMENT_LEVEL: "#bold Effect(s) Per [concept_investment_level]:#!"
  LAW_EFFECT_FOR_CURRENT_INVESTMENT_LEVEL: "#bold You are currently getting the following for [concept_investment_level] #variable $LEVEL$#!:#!"
  LAW_EFFECT_FOR_TARGET_INVESTMENT_LEVEL: "#bold You would get the following for [concept_investment_level] #variable $LEVEL$#!:#!"
  LAW_ALLOWED_BUILDING_GROUPS_FROM_INVESTMENT_POOL: "Funds in the [concept_investment_pool] can be used to build "
  CULTURE_ACCEPT_RULE_CHANGE: "Culture(s) will be accepted based on:\n"
  RELIGION_ACCEPT_RULE_CHANGE: "Religion(s) will be accepted based on:\n"
  MARKET_TITLE: "#title Market#!"
  UNITS_PRODUCED_TITLE: "#title Units Produced#!"
  PRICE_TITLE: "#title Price#!"
  IMPORTED: "Imported"
  EXPORTED: "Exported"
  ARMY_STOCKPILE: "Army Stockpile"
  NAVY_STOCKPILE: "Navy Stockpile"
  CHARACTER_NAME_FORMAT: "$FIRST$ $LAST$"
  CHARACTER_NAME_WITH_TITLE_FORMAT: "$TITLE$ $FIRST$ $LAST$"
  EXPORT_ROUTE: "[concept_trade_route]"
  IMPORT_ROUTE: "[concept_trade_route]"
  TO_MARKET: "To [MARKET.GetName]"
  FROM_MARKET: "From [MARKET.GetName]"

  CHARACTER_PANEL_SUBTITLE: "[SelectLocalization(Character.IsRuler, Concept('concept_ruler', Character.GetPrimaryRoleTitle), Character.GetPrimaryRoleName)] [SelectLocalization(Character.IsRuler, 'of','in')] [Character.GetCountry.GetName]"
  INSUFFICIENT_AUT: "You need #variable #N $VAL$#!#! $AUTHORITY$ but have only #variable $CURRENT$#!"
  INSUFFICIENT_BUR: "You need #variable #N $VAL$#!#! $BUREAUCRACY$ but have only #variable $CURRENT$#!"
  INSUFFICIENT_DIP: "You need #variable #N $VAL$#!#! $INFLUENCE$ but have only #variable $CURRENT$#!"
  GDP: "[concept_gdp]"
  GDP_SHORT: "[Concept('concept_gdp', '$concept_gdp_short$')]"
  TOOLTIP_GDP: "The [concept_gdp] of the country, is based on the production of goods and their market prices"
  GOV_EXP_SHORT: "[Concept('concept_government_expenses', '$concept_government_expenses_short$')]"
  CREDIT: "[concept_credit]"
  CREDIT_TOOLTIP: "#header Credit Limit: #N @money!$CREDIT|Dv$#!#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$\n\n[concept_credit_desc]"
  CREDIT_DETAIL_BASE: "Base: #N @money!$BASE|Dv$#!"
  CREDIT_DETAIL: "[BUILDING_TYPE.GetName]: #N @money!$RESERVES|Dv$#!"
  GOLD_RESERVE_LIMIT: "Gold Reserve Limit: #N @money!$LIMIT|Dv$#![ConcatIfNeitherEmpty('\n','$MODIFIER$')]\n\n[concept_gold_reserves_desc]"
  RESERVES: "Reserves:"
  PRINCIPAL: "[concept_principal]:"
  TOOLTIP_PRINCIPAL: "#header [concept_principal]#!\n$TOOLTIP_DELIMITER$\n[concept_principal_desc]"
  REMAINING_CREDIT: "Remaining [concept_credit]:"
  NO_MODIFIER_DATA_COLLECTED: "No modifier data has been collected, modifier breakdowns are not stored in the savegame to reduce savegame size, try running a while to get a proper breakdown"
  DOMESTIC_LOANS: "#title [concept_loans]#!"
  TOOLTIP_DOMESTIC_LOANS: "#header [concept_loans]#!\n$TOOLTIP_DELIMITER$\n[concept_loans_desc]"
  INTEREST_RATE: "Interest Rate: #variable [GetPlayer.GetYearlyInterestRate|1%]#!"
  TOOLTIP_INTEREST_RATE: "#header Interest rate#!\nLast week you paid @money!#variable [GetPlayer.GetInterestPayment|1]#! in interest at a yearly interest rate of #variable [GetPlayer.GetYearlyInterestRate|2%]#!\n$TOOLTIP_DELIMITER$\n"
  TOOLTIP_INTEREST_RATE_ADD: "#bold #v Additive Interest Rate Modifiers#!#!"
  TOOLTIP_INTEREST_RATE_PER_LOAN: "#bold #v Interest Rate Per Loan Modifiers#!#!"
  TOOLTIP_INTEREST_RATE_MULT: "#bold #v Multiplicative Interest Rate Modifiers#!#!"
  TOOLTIP_INTEREST_RATE_GOVERNMENT_OWNED_DEBT: "Multiplied by #v x$MULTIPLIER$#! from the proportion of [concept_cash_reserves] held by [Concept('concept_government_ownership_share', '$concept_government_ownership_shares$')]"
  TOOLTIP_DISCRIMINATION_POLSTR: "Total [concept_political_strength] of #variable $BEFOREVAL|0*$#! is changed by #bold $MULTVAL|+%0$#! to #variable $VAL|1*$#! due to:\n$TAB$$BREAKDOWN$#!#!"
  TAKE_LOAN: "Borrow #variable @money![GetPlayer.GetLoanIncrement|1*]#!"
  TOOK_LOAN: "Took a domestic loan"
  TOOLTIP_TAKE_LOAN: "#header Take Loan#!\n$TOOLTIP_DELIMITER$\nBorrow #variable @money!$AMOUNT$#! from Domestic sources.\nThis will increase your Principal and Interest Rate\n\n"
  TAKE_LOAN_NOT_ENOUGH_CREDIT: "#N You do not have enough Credit to take out another Loan!#!"
  TAKE_LOAN_NEGATIVE_CASHFLOW: "#N Your projected Expenses for next week are greater than your current treasury!#!"
  TAKE_LOAN_NOT_ENOUGH_POWER: "#N You do not have enough power capital to take a loan!#!"
  PAY_BACK_LOAN: "Repay #variable @money!$AMOUNT|1*$#!"
  PAID_BACK_LOAN: "Repaid a domestic loan"
  TOOLTIP_PAY_BACK_LOAN: "#header Repay Loan#!\n$TOOLTIP_DELIMITER$\nRepay #variable @money!$AMOUNT$#! of our domestic loans.\nThis will decrease our principal and interest rate\n\n"
  PAY_BACK_LOAN_NOT_ENOUGH_MONEY: "#N You do not have enough money to pay back any loans!#!"
  PAY_BACK_LOAN_NO_LOANS: "#N You have no loans to pay back!#!"
  PAY_BACK_LOAN_NOT_ENOUGH_POWER: "#N You do not have enough power capital to pay back loans!#!"
  PAY_BACK_SEVERAL_LOANS: "Repay #variable @money!$AMOUNT$#!"
  PAID_BACK_SEVERAL_LOANS: "Repaid several domestic loans"
  TOOLTIP_PAY_BACK_SEVERAL_LOANS: "#header Repay all Loans#!\n$TOOLTIP_DELIMITER$\nRepay #variable @money!$AMOUNT$#!.\nThis will decrease our principal and interest rate\n\n"
  NAVAL_MISSION_NOT_HOSTILE: "#N Target state does not belong to a nation you are at war with!#!"
  NAVAL_MISSION_NO_COASTLINE: "#N Target state is not a coastal state!#!"
  NAVAL_MISSION_NO_PORT: "#N Target state has no ports!#!"
  NAVAL_INVASION_NO_BEACHHEAD: "#N Target state has no province were we can create a beachhead!#!"
  BLOCKADE_MISSION_NOT_AT_WAR: "#N Can only blockade ports when at war!#!"
  TIMED_MODIFIERS: "[Concept('concept_timed_modifier', '$concept_timed_modifiers$')]"
  maintain: "Maintain"
  maintain_desc: "The character is maintaining a naval presence here and may seize opportunities for interception or escape as they arise."
  evade: "Evade"
  evade_desc: "The character is evading enemy fleets, sinking supply flotillas vessels as they are able without exposing their position."
  bulwark: "Bulwark"
  bulwark_desc: "The character is escorting friendly supply flotillas for protection, doing minimal damage to enemy forces."
  CASUALTIES_DUE_TO_ATTRITION_TOOLTIP: "#header Casualties from Attrition#!\nFrom Desertion: #variable $SPIRIT_SP|+=3$#! SP last tick\nFrom lower Concentration: #variable $CONCENTRATION_SP|+=3$#! SP last tick"
  POP_ACCEPTANCE_RULE: "#title Pop Acceptance rule:#!"
  POP_CULTURE_ACCEPTANCE: "[Pop.GetCulturalDiscriminationDesc]"
  POP_RELIGION_ACCEPTANCE: "[Pop.GetReligiousDiscriminationDesc]"
  POP_DISCRIMINATION: "[Pop.GetDiscriminationDesc]"
  outliner_title_wars: "#outliner_header Wars#!"
  outliner_title_diplo_plays: "#outliner_header Diplomatic Plays#!"
  outliner_title_situations: "#outliner_header Events#!"
  outliner_title_commanders: "#outliner_header Commanders#!"
  outliner_title_politicians: "#outliner_header Politicians#!"
  outliner_title_generals: "#outliner_header Generals#!  (#tooltip:[GetPlayer.GetTooltipTag],PANEL_MILITARY_ARMY_CURRENT_BATTALIONS_TOOLTIP #variable @battalions![GetPlayer.GetBattalions|0]#!#!)"
  outliner_title_admirals: "#outliner_header Admirals#!  (#tooltip:[GetPlayer.GetTooltipTag],PANEL_MILITARY_NAVY_CURRENT_FLOTILLAS_TOOLTIP #variable @navy_SP![GetPlayer.GetWarships|0]#!#!)"
  outliner_title_interest_groups: "#outliner_header Interest Groups#!"
  outliner_title_marginalized_interest_groups: "#outliner_header Marginalized Groups#!"
  outliner_title_markets: "#outliner_header Markets#!"
  outliner_title_isolated_states: "#outliner_header Isolated States#!"
  outliner_title_colonies: "#outliner_header Colonies#!"
  outliner_title_states: "#outliner_header States#!"
  outliner_title_unincorporated_states: "#outliner_header Unincorporated Territory#!"
  outliner_title_players: "#outliner_header Players#!"
  outliner_title_market: "#outliner_header [OutlinerEntry.AccessScope.AccessMarket.GetNameNoFormatting]#!"
  outliner_title_goods: "#outliner_header Goods#!"
  outliner_title_staple: "#outliner_header Staple Goods#!"
  outliner_title_industrial: "#outliner_header Industrial Goods#!"
  outliner_title_luxury: "#outliner_header Luxury Goods#!"
  outliner_title_military: "#outliner_header Military Goods#!"
  ADD_ANYTHING_TO_OUTLINER: "#title You can Pin more stuff here!#!"
  POLITICS_PANEL_HEADER: "Politics"
  LAW_CATEGORIES_HEADER: "Legal Categories#!"
  POLITICS_PANEL_HEADER_CHANGE_CONSTITUTION: "#bold Change [concept_law]#!"
  POLITICS_PANEL_HEADER_CHANGE_LAW: "#bold Change Law#!"
  ENACT_NEW_LAW: "Enact New Law"
  ABOLISH: "Abolish"
  NARROW_VICTORY: "Narrow victory in the $BATTLE_NAME$"
  NARROW_LOSS: "Unforeseen defeat in the $BATTLE_NAME$"
  NORMAL_VICTORY: "Battlefield victory in the $BATTLE_NAME$"
  NORMAL_LOSS: "Battlefield defeat in the $BATTLE_NAME$"
  HEROIC_VICTORY: "Heroic victory in the $BATTLE_NAME$"
  HEROIC_LOSS: "Humiliating defeat in the $BATTLE_NAME$"
  YEARLYGROWTH: "Annual Net Growth: #variable $NETGROWTHRATE|%=+1$#!"
  YEARLYBIRTHS: "Yearly Births: #variable $VAL|+0$#! (Annual Birthrate: #tooltippable #tooltip:$BREAKDOWN_TAG$ $BIRTHRATE|%1=+$#!#!)"
  BIRTHS_FROM_SOL: "From [concept_sol]: #variable $VAL|+=0$#!"
  MALNOURISHMENT_FROM_SOL: "Malnourished: $VAL|+=%1$"
  YEARLYDEATHS: "Yearly Deaths: #variable $VAL|-0$#! (Annual Mortality: #tooltippable #tooltip:$BREAKDOWN_TAG$ $MORTALITY|%1=-$#!#!)"
  DEATHS_FROM_SOL: "From [concept_sol]: #variable $VAL|-=0$#!"
  CURRENTLITERACY: "Literate members of population: $VAL|1*v$\nLiteracy Rate: $RATE|%2v$ $TRENDARROW$"
  POP_ASSIMILATION: "#header Monthly [concept_assimilation] to [CULTURE.GetName]: $TOTAL_ASSIMILATED_POPS|v0$#!\n$TOOLTIP_DELIMITER$\nBase: $BASE_ASSIMILATED_POPS|v0$\n$TAB$$POPULATION$: [Pop.GetTotalSize|Dv]\n$TAB$Conversion Base Rate: [GetDefine('NPops','ASSIMILATION_RATE')|v%][ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]\nSince the [Pop.GetName] is of an [concept_accepted_culture], live in an [concept_incorporated_state], and don't consider [Pop.GetState.GetName] a [concept_homeland], they are $concept_assimilating$ into [CULTURE.GetName] $concept_culture$ as it is the most prominent [Concept('concept_primary_cultures','$concept_primary_culture$')] where they live."
  POP_CONVERSION: "#header Monthly [concept_conversion] to [RELIGION.GetName]: $TOTAL_CONVERTED_POPS|v0$#!\n$TOOLTIP_DELIMITER$\nBase: $BASE_CONVERTED_POPS|v0$\n$TAB$$POPULATION$: [Pop.GetTotalSize|Dv]\n$TAB$Conversion Base Rate: [GetDefine('NPops','CONVERSION_RATE')|v%][ConcatIfNeitherEmpty('\n','$MODIFIER_DESC$')]\n[RELIGION.GetName] is selected as it is the most prominent [concept_accepted_religion] in [Pop.GetState.GetName]"
  POP_ASSIMILATION_MIN: "Minimum assimilation of $MIN|v$\n"
  POP_CONVERSION_MIN: "Minimum conversion of $MIN|v$\n"
  EDUCATION_ACCESS_HEADER: "[concept_education_access]: #tooltippable #tooltip:$TAG$,EDUCATION_ACCESS_DETAILS_TOOLTIP $VAL|2%$#!#!"
  EDUCATION_ACCESS_DETAILS: "[concept_education_access]\nEducation Access: [POP.GetEducationAccess|2%v]\n$TOOLTIP_DELIMITER$\n$DETAILS$"
  EDUCATION_ACCESS_UNIVERSAL: "From $institution_schools$ level of #b $INSTITUTE_LEVEL|v$#!: #b $VALUE|=+2%$#!"
  EDUCATION_ACCESS_DETAILS_TOOLTIP: "[Pop.GetEducationAccessDetailsDesc]"
  EDUCATION_ACCESS_FROM_WEALTH: "From [concept_wealth] level of $WEALTH|v$: #b $TOTAL|=+2%$#!\n#P #b $PER_LEVEL|%|2$#!#! for each level of [concept_wealth]:"
  EDUCATION_ACCESS_POP_TYPE: "From [POP.GetPopType.GetName] [concept_profession]: #b $VALUE|=+%2$#!"
  INSTITUTION_FROM_EACH_LEVEL: "each level of $INSTITUTION_TYPE$ (#b $INSTITUTE_LEVEL|v$#!)"
  INSTITUTION_PER_LEVEL: "per level of $INSTITUTION_TYPE$ (#b $INSTITUTE_LEVEL|v$#!)"
  STATE_POTENTIAL_QUALIFICATIONS: "#header Potential [concept_pop_qualifications] in [State.GetName]#!\n[SelectLocalization(State.HasInsufficientQualificationsForAvailablePositions, '$INSUFFICENT_QUALIFICATIONS$', '@green_checkmark! Has Qualifications to fill all current Vacancies')]\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  INSUFFICIENT_QUALIFICATIONS_TO_FILL_POSITIONS: "@red_cross! $POSITIONS|vD$ [POP_TYPE.GetName] needed for full employment, only $QUALIFICATIONS|vD$ available"
  STATE_POTENTIAL_QUALIFICATIONS_ENTRY: "#tooltippable #tooltip:[State.GetTooltipTag]|[PopType.GetTooltipTag],STATE_POTENTIAL_POPTYPE_QUALIFICATIONS $POTENTIAL_QUALIFICATIONS|vD$#!#! [PopType.GetName] ($POTENTIAL_QUALIFICATIONS_CHANGE|=vD$ / month)"
  STATE_POTENTIAL_POPTYPE_QUALIFICATIONS: "[State.GetPotentialQualificationsBreakdown(PopType.Self)]"
  STATE_POTENTIAL_QUALIFICATIONS_BREAKDOWN: "#header Potential Qualified [PopType.GetName] in [State.GetName]: [State.GetPotentialQualifications(PopType.Self)|vD]#!\nMonthly change: $TOTAL_QUALIFICATIONS_CHANGE|=vD$\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  STATE_POTENTIAL_QUALIFICATIONS_BREAKDOWN_ENTRY: "$EMPLOYABLE_QUALIFICATIONS|vD$ [AddTextIf( Not(Pop.IsEmployed), '$concept_unemployed$')] [Pop.GetName] [AddTextIf( Pop.IsEmployed, Concatenate('in ', Pop.GetBuilding.GetName))] (#tooltippable #tooltip:[Pop.GetTooltipTag]|[PopType.GetTooltipTag],POP_POPTYPE_QUALIFICATIONS_CHANGE $QUALIFICATIONS_CHANGE|=vD$#!#! / month)"
  POP_POPTYPE_QUALIFICATIONS_CHANGE: "[Pop.GetQualificationsChangeDesc(PopType.Self)]"
  POP_QUALIFICATIONS_ENTRY: "[PopType.GetName]: $QUALIFICATIONS|v0$ (#tooltippable #tooltip:$TAG$|[PopType.GetTooltipTag],POP_POPTYPE_QUALIFICATIONS_CHANGE $CHANGEVAL|+=0$#!#! / month)"
  QUALIFICATIONS_CHANGE_POPTYPE_TOOLTIP: "#header Monthly Change in Qualifications#!\nEach month $MONTHLY_CHANGE|=vD$ of the Workforce Qualify to become [PopType.GetName] due to\n$BASE_VALUE|v2$ due to Pop Attributes:\n$BREAKDOWN$\n$QUALIFICATIONS_WORKFORCE_FACTOR$[ConcatIfNeitherEmpty('\n','$MODIFIER$')][ConcatIfNeitherEmpty('\n\n',PopType.GetQualificationsGrowthDesc)]"
  TOTAL_TIME_CONSTRUCTION: "[Country.GetWeeksLeftUntilConstructionQueueFinished|v] weeks"
  TOTAL_TIME_CONSTRUCTION_TOOLTIP: "The total number of weeks left for all the [Concept('concept_building', '$concept_buildings$')] in the [concept_construction_queue] and [concept_under_construction] to finish building"
  NUM_PRIVATE_CONSTRUCTION_TOOLTIP: "#header [Concept('concept_private_construction', '$concept_private_constructions$')]#!\nThere are [Country.GetNumPrivateConstructionsInQueue|v] [Concept('concept_private_construction', '$concept_private_constructions$')] in the [Country.GetAdjective] [concept_construction_queue]"
  NUM_GOVERNMENT_CONSTRUCTION_TOOLTIP: "#header [Concept('concept_government_construction', '$concept_government_constructions$')]#!\nThere are [Country.GetNumGovernmentConstructionsInQueue|v] [Concept('concept_government_construction', '$concept_government_constructions$')] in the [Country.GetAdjective] [concept_construction_queue]"
  QUALIFICATIONS_LITERACY_FACTOR: "From [concept_literacy] [Pop.GetLiteracyRate|v0%]"
  QUALIFICATIONS_WEALTH_FACTOR: "From [concept_wealth] [Pop.GetCurrentWealth|v0]"
  QUALIFICATIONS_FAVORED_TYPE: "From being [Pop.GetPopType.GetName]"
  QUALIFICATIONS_CULTURAL_DISCRIMINATION: "From [Concept('concept_culture', 'Cultural')] [concept_discrimination] ([Pop.GetCulture.GetName])"
  QUALIFICATIONS_RELIGIOUS_DISCRIMINATION: "From [Concept('concept_religion', 'Religious')] [concept_discrimination] ([Pop.GetReligion.GetName])"
  QUALIFICATIONS_CULTURAL_RELIGIOUS_ACCEPTANCE: "From [concept_accepted_culture] ([Pop.GetCulture.GetName]) and [concept_accepted_religion] ([Pop.GetReligion.GetName])"
  QUALIFICATIONS_INSUFFICIENT_LITERACY_DECAY: "From insufficient [concept_literacy] ([Pop.GetLiteracyRate|v0%])"
  QUALIFICATIONS_INSUFFICIENT_WEALTH_DECAY: "From insufficient [concept_wealth] ([Pop.GetCurrentWealth|v0])"
  QUALIFICATIONS_PEASANTS_UNDER_SERFDOM: "From being [Pop.GetPopType.GetName] under [GetLawType('law_serfdom').GetName]"
  QUALIFICATIONS_WORKFORCE_FACTOR: "#b ×$WORKFORCE_FACTOR|v2$#! from the Workforce size of [Pop.GetNumWorkforce|vD]"
  QUALIFICATIONS_OFFICERS_PEASANT_LEVIES: "From [GetLawType('law_peasant_levies').GetName]"
  QUALIFICATIONS_OFFICERS_PEASANT_LEVIES_DESC: "Most [GetPopType('officers').GetName] [concept_pop_qualifications] will originate from [GetPopType('aristocrats').GetName]"
  STATUS_TITLE: "#title [Concept('concept_discrimination','Acceptance')]#!"
  GROWTH_TITLE: "#title Growth#!"
  LITERACY_TITLE: "#title [concept_literacy]#!"
  INCOME_TITLE: "#title Income#!"
  EXPENSES_TITLE: "#title Expenses#!"
  PRIMARY_IG_TITLE: "#title [Concept('concept_interest_group','$concept_interest_groups$')]#!"
  IG_TITLE: "#title IG#!"
  POP_TYPE_INFORMATION: "[Pop.GetPopType.GetName] in [Pop.GetState.GetOwner.GetName]"
  GOODS_IN_COUNTRY: "[Goods.GetName] in [GetPlayer.GetName]"
  GUIDE_ME: "Guide Me"
  # TUTORIAL_CANNOT_START: "Cannot start lesson while another tutorial lesson is active"
  TELL_ME_HOW: "Tell Me How"
  TELL_ME_WHY: "Tell Me Why"
  RADICALS_TITLE: "$concept_radicals$"
  LOYALISTS_TITLE: "$concept_loyalists$"
  IG_RADICALS_TOOLTIP: "#header [Concept('concept_radical', '$concept_radicals$')]#!\nThere are [InterestGroup.CalcNumRadicals|Kv] [Concept('concept_radical', '$concept_radicals$')] in the [InterestGroup.GetName]"
  IG_LOYALISTS_TOOLTIP: "#header [Concept('concept_loyalist', '$concept_loyalists$')]#!\nThere are [InterestGroup.CalcNumLoyalists|Kv] [Concept('concept_loyalist', '$concept_loyalists$')] in the [InterestGroup.GetName]"
  RELATIONS_TITLE: "#title Relation#!"
  TOWARDS_THEM_TITLE: "#title Us @arrow_right! Them#!"
  TOWARDS_US_TITLE: "#title Them @arrow_right! Us#!"
  OUR_COUNTRY_TEXT: "We are playing as #variable [Country.GetName]#!"
  RELATION_WITH: "Our relations are #bold [Country.GetRelationsWithDesc( GetPlayer )]#! ([Country.GetRelationsWith(GetPlayer)|+])"
  CULTURALLY_ACCEPTED_TOOLTIP: "#header Pop Culture#!\n[Culture.GetName] is [Concept('concept_accepted_culture','$concept_accepted_culture_short$')] in [Pop.GetCountry.GetName]\nThis is due to the [concept_law] [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_citizenship').GetName] for [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_citizenship').GetGroup.GetName]"
  CULTURALLY_DISCRIMINATED_TOOLTIP: "#header Pop Culture#!\n[Culture.GetName] is [Concept('concept_discrimination','$concept_discriminated_against$')] in [Pop.GetCountry.GetName]\nThis is due to the [concept_law] [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_citizenship').GetName] for [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_citizenship').GetGroup.GetName]"
  RELIGIOUSLY_ACCEPTED_TOOLTIP: "#header Pop Religion#!\n[Religion.GetName] is [Concept('concept_accepted_religion','$concept_accepted_religion_short$')] in [Pop.GetCountry.GetName]\nThis is due to the [concept_law] [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetName] for [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetGroup.GetName]"
  RELIGIOUSLY_DISCRIMINATED_TOOLTIP: "#header Pop Religion#!\n[Religion.GetName] is [Concept('concept_discrimination','$concept_discriminated_against$')] in [Pop.GetCountry.GetName]\nThis is due to the [concept_law] [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetName] for [Pop.GetCountry.GetActiveLawFromGroup('lawgroup_church_and_state').GetGroup.GetName]"
  CANNOT_MOVE_COMMANDER_NON_FRIENDLY_HQ: "#N [Hq.GetName] is not own or ally [concept_hq]#!"
  MOVE_COMMANDER_ALREADY_THERE_TOOLTIP: "#N [Character.GetFullName] is already at [Hq.GetName]#!"
  ADD_GENERAL_ROLE: "Grant Command"
  REMOVE_GENERAL_ROLE: "Remove Command"
  ADD_GENERAL_ROLE_DESC: "#header $ADD_GENERAL_ROLE$#!\n$TOOLTIP_DELIMITER$\nAllow [CHARACTER.GetFullName]  to become a [concept_general] and command an army in addition to their current duties[ConcatIfNeitherEmpty( '\n', '$COMMAND_DESC$' )]"
  REMOVE_GENERAL_ROLE_DESC: "#header $REMOVE_GENERAL_ROLE$#!\n$TOOLTIP_DELIMITER$\nRemove [CHARACTER.GetFullName] from their command as a [concept_general][ConcatIfNeitherEmpty( '\n', '$COMMAND_DESC$' )]"
  REMOVE_CHARACTER_ROLE_LAST_ROLE: "#N Cannot remove the last role from [CHARACTER.GetFullName]#!"
  REMOVE_CHARACTER_ROLE_DOES_NOT_HAVE_ROLE: "#N [CHARACTER.GetFullName] is not a #v $ROLE$#!#!"
  REMOVE_CHARACTER_MOBILIZED_GENERAL: "#n [CHARACTER.GetFullName] cannot be removed from their [concept_general] role while mobilized#!"
  ADD_CHARACTER_ROLE_ALREADY_HAS_ROLE: "#N [CHARACTER.GetFullName] is already a #v $ROLE$#!#!"
  ADD_CHARACTER_ROLE_CANNOT_BE_ADMIRAL_AND_GENERAL: "#N [CHARACTER.GetFullName] cannot both be a [concept_general] and an [concept_admiral] at the same time#!"
  ADD_CHARACTER_ROLE_NO_HQ_FOR_COMMANDER: "#N [CHARACTER.GetFullName] is unable to be assigned to a valid [concept_hq]#!"
  ADD_CHARACTER_ROLE_ONLY_RULER_ALLOWED: "#N Only the [concept_ruler] can be made into a [concept_commander]#!"
  ADD_CHARACTER_ROLE_WRONG_GOVERNMENT_TYPE: "#N The [concept_ruler] can only be a [concept_commander] if you have #v $transfer_of_power_dictatorial$#! or #v $transfer_of_power_hereditary$#! [Concept('concept_government_type','$concept_government_type_transfer_of_power$')]#!"
  ADD_CHARACTER_ROLE_UNDER_AGE: "[CHARACTER.GetFullName] cannot be a #v $ROLE$#! because [CHARACTER.GetSheHe] is under #v $AGE$#!"
  ADD_CHARACTER_ROLE_DISALLOWED_GENDER: "[CHARACTER.GetFullName] cannot be a #v $ROLE$#! because [CHARACTER.GetSheHe] is $GENDER$"
  MAP_INTERACTION_MOVE_COMMANDER_DESC: "Select Headquarters for [Character.GetFullName] to move to"
  MAP_INTERACTION_MOVE_COMMANDER_PERFORMED: "[Character.GetFullName] moved"
  MAP_INTERACTION_MOVE_COMMANDER_TOOLTIP: "#header Move#!\nMove [Character.GetFullName] ([GetUnitStrengthHeader( Character.GetNumCombatUnits, Character.GetMaxNumCombatUnits, Character.GetCombatUnitsTypeIcon )]) from [Character.GetLocationHQ.GetNameNoFlag] to [Hq.GetNameNoFlag]\n$TOOLTIP_DELIMITER$\nThis will result in:\n[Character.GetCombatUnitsTypeIcon] $TARGET_HQ_RESULT|v0$ at [Hq.GetNameNoFlag]\n[Character.GetCombatUnitsTypeIcon] $CURRENT_HQ_RESULT|v0$ at [Character.GetLocationHQ.GetNameNoFlag]"
  MAP_INTERACTION_INTERCEPTION_DESC: "Select Headquarter for [Character.GetFullName] to guard against hostile navies"
  MAP_INTERACTION_INTERCEPTION_PERFORMED: "#variable [COMMANDER_ORDER_TYPE.GetName]#! Order given to [Character.GetFullName]"
  MAP_INTERACTION_INTERCEPTION_TOOLTIP: "Issue [Character.GetFullName] an #header [COMMANDER_ORDER_TYPE.GetName]#! Order on [Hq.GetName][ConcatIfNeitherEmpty( '\n$TOOLTIP_DELIMITER$\n', '$ERRORS$' )]"
  MAP_INTERACTION_INTERCEPTION_NO_HQ_TOOLTIP: "#N No coastline for [COMMANDER_ORDER_TYPE.GetName] Order#!"
  MAP_INTERACTION_CONVOY_RAIDING_DESC: "Select Sea Node for [Character.GetFullName] to raid convoys"
  MAP_INTERACTION_CONVOY_RAIDING_PERFORMED: "Convoy raiding started"
  MAP_INTERACTION_CONVOY_RAIDING_TOOLTIP: "Issue [Character.GetFullName] an #header [COMMANDER_ORDER_TYPE.GetName]#! Order in the [STRATEGIC_REGION.GetName]"
  MAP_INTERACTION_PATROL_DESC: "Select Headquarters for [Character.GetFullName] to patrol towards"
  MAP_INTERACTION_PATROL_PERFORMED: "#variable [COMMANDER_ORDER_TYPE.GetName]#! Order given to [Character.GetFullName]"
  MAP_INTERACTION_PATROL_TOOLTIP: "[Character.GetFullName] will protect shipping lanes between [Character.GetLocationHQ.GetName] and [Hq.GetName][ConcatIfNeitherEmpty( '\n$TOOLTIP_DELIMITER$\n', '$ERRORS$' )]"
  MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_DESC: "Reset Production Methods to national standards"
  MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_SELECT: "#header Reset Production Methods#!\nThe following adjustments will be made across [State.GetName]:\n\n$LIST$"
  MAP_INTERACTION_RESET_PRODUCTION_METHODS_STATE_PERFORMED: "$concept_production_methods$ aligned"
  RESET_PRODUCTION_METHODS_ALL_BUILDINGS_STANDARD: "All [Concept('concept_production_method','$concept_production_methods$')] already aligned with the national standard"
  RESET_PRODUCTION_METHOD_TOOLTIP_LIST_ENTRY: "[Building.GetName]: $ACTIVE_METHOD$ @arrow_right! $STANDARD_METHOD$"

  notification_peace_agreement_signed_war_leader_tooltip: "#header $notification_peace_agreement_signed_war_leader_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_war_leader_desc$"
  notification_peace_agreement_signed_war_leader_name: "Peace with [SCOPE.sC('recipient').GetName]"
  notification_peace_agreement_signed_war_leader_desc: "We signed a peace agreement with #variable [SCOPE.sC('recipient').GetName]#!, ending our state of hostilities."
  notification_peace_agreement_signed_war_participant_tooltip: "#header $notification_peace_agreement_signed_war_participant_name$#!\n$TOOLTIP_DELIMITER$\n$notification_peace_agreement_signed_war_participant_desc$"
  notification_peace_agreement_signed_war_participant_name: "Peace between [SCOPE.sC('actor').GetName] and [SCOPE.sC('target').GetName]"
  notification_peace_agreement_signed_war_participant_desc: "#variable [SCOPE.sC('actor').GetName]#! signed a peace agreement with #variable [SCOPE.sC('target').GetName]#!, ending our state of hostilities."
  notification_peace_agreement_signed_non_participant_tooltip: "#header $notification_peace_agreement_signed_non_participant_name$#!\n$TOOLTIP_DELIMITER$\n$ notification_peace_agreement_signed_non_participant_desc$"
  notification_peace_agreement_signed_non_participant_name: "Peace between [SCOPE.sC('actor').GetName] and [SCOPE.sC('target').GetName]"
  notification_peace_agreement_signed_non_participant_desc: "#variable [SCOPE.sC('actor').GetName]#! signed a peace agreement with #variable [SCOPE.sC('target').GetName]#!, ending the state of hostilities between them."
  notification_self_capitulated_tooltip: "#header $notification_self_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_self_capitulated_desc$"
  notification_self_capitulated_name: "Our Country Capitulates"
  notification_self_capitulated_desc: "Our Country has capitulated. All wargoals targeting us have been enforced."
  notification_enemy_capitulated_tooltip: "#header $notification_enemy_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_enemy_capitulated_desc$"
  notification_enemy_capitulated_name: "#variable [SCOPE.sC('target').GetName]#! capitulates"
  notification_enemy_capitulated_desc: "Our enemy #variable [SCOPE.sC('target').GetName]#! has capitulated. All wargoals targeting them have been enforced."
  notification_ally_capitulated_tooltip: "#header $notification_ally_capitulated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ally_capitulated_desc$"
  notification_ally_capitulated_name: "#variable [SCOPE.sC('target').GetName]#! capitulates"
  notification_ally_capitulated_desc: "Our ally #variable [SCOPE.sC('target').GetName]#! has capitulated. All wargoals targeting them have been enforced."
  notification_diplo_play_start_notification_tooltip: "#header $notification_diplo_play_start_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_start_notification_desc$"
  notification_diplo_play_start_notification_name: "[SCOPE.sC('actor').GetAdjective] [concept_diplomatic_play] against us"
  notification_diplo_play_start_notification_desc: "[SCOPE.sC('actor').GetName] started a [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] [concept_diplomatic_play] against us."
  notification_diplo_play_start_third_party_notification_tooltip: "#header $notification_diplo_play_start_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_start_third_party_notification_desc$"
  notification_diplo_play_start_third_party_notification_name: "[SCOPE.sC('actor').GetFlagTextIcon] [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] in [SCOPE.GetRootScope.GetDiplomaticPlay.GetStrategicRegion.GetName]"
  notification_diplo_play_start_third_party_notification_desc: "[SCOPE.sC('actor').GetName] started a [SCOPE.GetRootScope.GetDiplomaticPlay.GetDiplomaticPlayType.GetName|b] [concept_diplomatic_play] against [SCOPE.sC('target').GetName]."
  notification_diplo_play_back_down_notification_tooltip: "#header $notification_diplo_play_back_down_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_back_down_notification_desc$"
  notification_diplo_play_back_down_notification_name: "[SCOPE.sC('actor').GetName] backs down"
  notification_diplo_play_back_down_notification_desc: "[SCOPE.sC('actor').GetName] backed down in our [concept_diplomatic_play], yielding the primary wargoal to us."
  notification_diplo_play_back_down_involved_notification_tooltip: "#header $notification_diplo_play_back_down_involved_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_back_down_involved_notification_desc$"
  notification_diplo_play_back_down_involved_notification_name: "[SCOPE.sC('actor').GetName] backs down"
  notification_diplo_play_back_down_involved_notification_desc: "[SCOPE.sC('actor').GetName] backed down in the [concept_diplomatic_play] against [SCOPE.sC('target').GetName]."
  notification_diplo_play_join_side_notification_tooltip: "#header $notification_diplo_play_join_side_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_join_side_notification_desc$"
  notification_diplo_play_join_side_notification_name: "[SCOPE.sC('actor').GetName] sides with [SCOPE.sC('target').GetName]"
  notification_diplo_play_join_side_notification_desc: "[SCOPE.sC('actor').GetName] sided with [SCOPE.sC('target').GetName] in the [concept_diplomatic_play] against [SCOPE.sC('recipient').GetName]."
  notification_diplo_play_abandon_side_notification_tooltip: "#header $notification_diplo_play_abandon_side_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_abandon_side_notification_desc$"
  notification_diplo_play_abandon_side_notification_name: "[SCOPE.sC('actor').GetName] abandoned [SCOPE.sC('target').GetName]"
  notification_diplo_play_abandon_side_notification_desc: "[SCOPE.sC('actor').GetName] abandoned their support for [SCOPE.sC('target').GetName] in the [concept_diplomatic_play] against [SCOPE.sC('recipient').GetName]."
  notification_diplo_play_war_start_third_party_notification_tooltip: "#header $notification_diplo_play_war_start_third_party_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_war_start_third_party_notification_desc$"
  notification_diplo_play_war_start_third_party_notification_name: "War between [SCOPE.sC('actor').GetName] and [SCOPE.sC('target').GetName]"
  notification_diplo_play_war_start_third_party_notification_desc: "War has broken out between [SCOPE.sC('actor').GetName] and [SCOPE.sC('target').GetName]."
  notification_diplo_play_subject_released_notification_tooltip: "#header $notification_diplo_play_subject_released_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_subject_released_notification_desc$"
  notification_diplo_play_subject_released_notification_name: "[SCOPE.sC('target').GetName] breaks free"
  notification_diplo_play_subject_released_notification_desc: "Due to the failure of [SCOPE.sC('actor').GetName] to protect their subject [SCOPE.sC('target').GetName] their pact is now null and void."
  notification_diplo_play_subject_released_overlord_notification_tooltip: "#header $notification_diplo_play_subject_released_overlord_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_subject_released_overlord_notification_desc$"
  notification_diplo_play_subject_released_overlord_notification_name: "[SCOPE.sC('target').GetName] breaks free"
  notification_diplo_play_subject_released_overlord_notification_desc: "Due to our failure to protect our subject of [SCOPE.sC('target').GetName] they have become independent."
  notification_diplo_play_declare_neutrality_notification_tooltip: "#header $notification_diplo_play_declare_neutrality_notification_name$#!\n$TOOLTIP_DELIMITER$\n$notification_diplo_play_declare_neutrality_notification_desc$"
  notification_diplo_play_declare_neutrality_notification_name: "[SCOPE.sC('actor').GetName] declares neutrality"
  notification_diplo_play_declare_neutrality_notification_desc: "[SCOPE.sC('actor').GetName] declared themselves to be neutral in [concept_diplomatic_play] between [SCOPE.sC('initiator').GetName] and [SCOPE.sC('target').GetName]."
  notification_resource_discovered_tooltip: "#header $notification_resource_discovered_name$#!\n$TOOLTIP_DELIMITER$\n$notification_resource_discovered_desc$"
  notification_resource_discovered_name: "[SCOPE.sBT('target').GetDiscoveredResourceName] discovered in [SCOPE.GetRootScope.GetStateRegion.GetName]"
  notification_resource_discovered_desc: "[SCOPE.sBT('target').GetDiscoveredResourceName] has been discovered in [SCOPE.GetRootScope.GetStateRegion.GetName]. The [concept_state_region] can now support additional [SCOPE.sBT('target').GetName]."
  notification_resource_depleted_tooltip: "#header $notification_resource_depleted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_resource_depleted_desc$"
  notification_resource_depleted_name: "[SCOPE.sBT('target').GetDiscoveredResourceName] depleted in [SCOPE.GetRootScope.GetStateRegion.GetName]"
  notification_resource_depleted_desc: "[SCOPE.sBT('target').GetDiscoveredResourceName] has been depleted in [SCOPE.GetRootScope.GetStateRegion.GetName]. The [concept_state_region] can now support fewer [SCOPE.sBT('target').GetName]."
  notification_new_culture_obsession_tooltip: "#header $notification_new_culture_obsession_name$#!\n$TOOLTIP_DELIMITER$\n$notification_new_culture_obsession_desc$"
  notification_new_culture_obsession_name: "[SCOPE.GetRootScope.GetCulture.GetName] obsessed with [SCOPE.sG('goods').GetName]"
  notification_new_culture_obsession_desc: "The [SCOPE.GetRootScope.GetCulture.GetName] culture has become obsessed with [SCOPE.sG('goods').GetName]."
  notification_commander_order_invalidated_tooltip: "#header $notification_commander_order_invalidated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_commander_order_invalidated_desc$"
  notification_commander_order_invalidated_name: "New Commander Order"
  notification_commander_order_invalidated_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName] now has [SCOPE.sCOT('target').GetName] Order (Previously [SCOPE.sCOT('actor').GetName])"
  notification_commander_moved_to_other_front_tooltip: "#header $notification_commander_moved_to_other_front_name$#!\n$TOOLTIP_DELIMITER$\n$notification_commander_moved_to_other_front_desc$"
  notification_commander_moved_to_other_front_name: "[SCOPE.sCha('actor').GetFullName] (@battalions!#variable [SCOPE.sCha('actor').GetNumCombatUnits]#!) Moved"
  notification_commander_moved_to_other_front_desc: "[SCOPE.sCha('actor').GetFullName] (@battalions!#variable [SCOPE.sCha('actor').GetNumCombatUnits]#!) moved to [SCOPE.GetRootScope.GetFront.GetName]"
  notification_migration_target_created_tooltip: "#header $notification_migration_target_created_name$#!\n$TOOLTIP_DELIMITER$\n$notification_migration_target_created_desc$"
  notification_migration_target_created_name: "[SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName] Mass Immigration"
  notification_migration_target_created_desc: "Large numbers of [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName] people have begun migrating from [SCOPE.sC('country').GetName] to [SCOPE.GetRootScope.GetState.GetName] and the surrounding [Concept('concept_state', '$concept_states$')]."
  notification_migration_target_created_other_tooltip: "#header $notification_migration_target_created_other_name$#!\n$TOOLTIP_DELIMITER$\n$notification_migration_target_created_other_desc$"
  notification_migration_target_created_other_name: "[SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName] Mass Emigration"
  notification_migration_target_created_other_desc: "Large numbers of [SCOPE.GetRootScope.GetState.GetMassMigrationCulture.GetName] people have begun migrating from our [concept_country] to [SCOPE.GetRootScope.GetState.GetName] and the surrounding [Concept('concept_state', '$concept_states$')]."
  notification_country_swayed_tooltip: "#header $notification_country_swayed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_swayed_desc$"
  notification_country_swayed_name: "[SCOPE.sC('recipient').GetName] swayed"
  notification_country_swayed_desc: "[SCOPE.sC('recipient').GetName] was swayed to the side of [SCOPE.sC('actor').GetName] in their [concept_diplomatic_play] against [SCOPE.sC('target').GetName]"
  notification_sway_offer_accepted_tooltip: "#header $notification_sway_offer_accepted_name$#!\n$TOOLTIP_DELIMITER$\n$notification_sway_offer_accepted_desc$"
  notification_sway_offer_accepted_name: "[SCOPE.sC('recipient').GetName] swayed"
  notification_sway_offer_accepted_desc: "[SCOPE.sC('recipient').GetName] was swayed to our side in the [concept_diplomatic_play] against [SCOPE.sC('target').GetName]"
  notification_sway_offer_rejected_tooltip: "#header $notification_sway_offer_rejected_name$#!\n$TOOLTIP_DELIMITER$\n$notification_sway_offer_rejected_desc$"
  notification_sway_offer_rejected_name: "Attempt to sway [SCOPE.sC('recipient').GetName] failed"
  notification_sway_offer_rejected_desc: "[SCOPE.sC('recipient').GetName] refused to be swayed to our side in the [concept_diplomatic_play] against [SCOPE.sC('target').GetName]"
  notification_interest_activated_tooltip: "#header $notification_interest_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_activated_desc$"
  notification_interest_activated_name: "[SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] [concept_interest] activated"
  notification_interest_activated_desc: "We will now be able to participate in [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')], conduct diplomacy, create [Concept('concept_trade_route', '$concept_trade_routes$')] with [Concept('concept_country', '$concept_countries$')] in the [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] region."
  notification_interest_deactivated_tooltip: "#header $notification_interest_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_deactivated_desc$"
  notification_interest_deactivated_name: "[SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] [concept_interest] deactivated"
  notification_interest_deactivated_desc: "We may no longer be able to participate in [Concept('concept_diplomatic_play', '$concept_diplomatic_plays$')], conduct diplomacy, create [Concept('concept_trade_route', '$concept_trade_routes$')] with [Concept('concept_country', '$concept_countries$')] in the [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName] region."

  notification_interest_activated_third_party_tooltip: "#header $notification_interest_activated_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_activated_third_party_desc$"
  notification_interest_activated_third_party_name: "Diplomactic ties with [SCOPE.sCountry('actor').GetName]"
  notification_interest_activated_third_party_desc: "Due to [SCOPE.sCountry('actor').GetName] establishing an [concept_interest] in [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName], we can now conduct diplomacy with them."
  notification_interest_deactivated_third_party_tooltip: "#header $notification_interest_deactivated_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_interest_deactivated_third_party_desc$"
  notification_interest_deactivated_third_party_name: "Diplomatic ties with [SCOPE.sCountry('actor').GetName] lost"
  notification_interest_deactivated_third_party_desc: "Due to [SCOPE.sCountry('actor').GetName] losing their [concept_interest] in [SCOPE.GetRootScope.GetInterest.GetStrategicRegion.GetName], we are no longer able to conduct diplomacy with them."
  notification_colony_created_tooltip: "#header $notification_colony_created_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_created_desc$"
  notification_colony_created_name: "[SCOPE.sCountry('actor').GetName] colonized [SCOPE.GetRootScope.GetState.GetStateRegion.GetName]"
  notification_colony_created_desc: "[SCOPE.sCountry('actor').GetName] has established the [concept_colony] of [SCOPE.GetRootScope.GetState.GetName]."

  notification_colony_complete_tooltip: "#header $notification_colony_complete_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_complete_desc$"
  notification_colony_complete_name: "Colonization of [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] completed"
  notification_colony_complete_desc: "Our colonization of [SCOPE.GetRootScope.GetState.GetName] has completed, and the former [concept_colony] is now a proper [concept_state]."

  notification_colony_complete_third_party_tooltip: "#header $notification_colony_complete_third_party_name$#!\n$TOOLTIP_DELIMITER$\n$notification_colony_complete_third_party_desc$"
  notification_colony_complete_third_party_name: "[SCOPE.sCountry('actor').GetAdjective] colonization of [SCOPE.GetRootScope.GetState.GetStateRegion.GetName] completed"
  notification_colony_complete_third_party_desc: "The [SCOPE.sCountry('actor').GetName] colonization of [SCOPE.GetRootScope.GetState.GetName] has completed, and the former [concept_colony] is now a proper [concept_state]."
  notification_ig_trait_activated_tooltip: "#header $notification_ig_trait_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_trait_activated_desc$"
  notification_ig_trait_activated_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sInterestGroupTrait('target').GetName(SCOPE.GetRootScope.GetInterestGroup.Self)] activated"
  notification_ig_trait_activated_desc: "This is due to their [concept_approval] of [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)\n\n#title Effects#!\n[SCOPE.sInterestGroupTrait('target').GetModifiersDesc(SCOPE.GetRootScope.GetInterestGroup.Self)]"
  notification_ig_became_influential_tooltip: "#header $notification_ig_became_influential_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_became_influential_desc$"
  notification_ig_became_influential_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] are now [concept_influential]"
  notification_ig_became_influential_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] used to be [concept_marginalized], and now they are [concept_influential]."
  notification_ig_became_powerful_tooltip: "#header $notification_ig_became_powerful_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_became_powerful_desc$"
  notification_ig_became_powerful_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] are now [concept_powerful]"
  notification_ig_became_powerful_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] used to be [concept_influential], and now they are [concept_powerful]."
  notification_ig_no_longer_powerful_tooltip: "#header $notification_ig_no_longer_powerful_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_no_longer_powerful_desc$"
  notification_ig_no_longer_powerful_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] are no longer [concept_powerful]"
  notification_ig_no_longer_powerful_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] used to be [concept_powerful], and now they are [concept_influential]."
  notification_ig_no_longer_influential_tooltip: "#header $notification_ig_no_longer_influential_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_no_longer_influential_desc$"
  notification_ig_no_longer_influential_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] are no longer [concept_influential]"
  notification_ig_no_longer_influential_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] used to be [concept_influential], and now they are [concept_marginalized]."
  notification_ig_trait_deactivated_tooltip: "#header $notification_ig_trait_deactivated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_trait_deactivated_desc$"
  notification_ig_trait_deactivated_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - [SCOPE.sInterestGroupTrait('target').GetName(SCOPE.GetRootScope.GetInterestGroup.Self)] deactivated"
  notification_ig_trait_deactivated_desc: "This is due to their [concept_approval] of [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)\n\n#title Effects (no longer being provided)#!\n[SCOPE.sInterestGroupTrait('target').GetModifiersDesc(SCOPE.GetRootScope.GetInterestGroup.Self)]"
  notification_ig_movement_left_marginal_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - left [SCOPE.sPoliticalMovement('political_movement').GetName]"
  notification_ig_movement_left_marginal_desc: "This is due to interest group becoming marginal"
  notification_ig_movement_left_marginal_tooltip: "#header $notification_ig_movement_left_marginal_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_marginal_desc$"
  notification_ig_movement_left_in_government_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - left [SCOPE.sPoliticalMovement('political_movement').GetName]"
  notification_ig_movement_left_in_government_desc: "This is due to interest group becoming a part of the government"
  notification_ig_movement_left_in_government_tooltip: "#header $notification_ig_movement_left_in_government_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_in_government_desc$"
  notification_ig_movement_left_happy_name: "[SCOPE.GetRootScope.GetInterestGroup.GetName] - left [SCOPE.sPoliticalMovement('political_movement').GetName]"
  notification_ig_movement_left_happy_desc: "This is due to their [concept_approval] of [SCOPE.GetRootScope.GetInterestGroup.GetApprovalRating] (#tooltippable #tooltip:[SCOPE.GetRootScope.GetInterestGroup.GetTooltipTag],IG_APPROVAL_BREAKDOWN [SCOPE.GetRootScope.GetInterestGroup.GetApprovalValue|=+]#!#!)"
  notification_ig_movement_left_happy_tooltip: "#header $notification_ig_movement_left_happy_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_movement_left_happy_desc$"

  notification_parties_activated_name: "Newly formed parties"
  notification_parties_activated_desc: "New parties formed in our country: [SCOPE.GetRootScope.GetCountry.GetRecentPartiesDesc]"
  notification_parties_activated_tooltip: "#header $notification_parties_activated_name$#!\n$TOOLTIP_DELIMITER$\n$notification_parties_activated_desc$"

  RECENT_PARTIES_ITEM: "[Party.GetName]"
  RECENT_PARTIES_DESC: "$PARTIES_LIST$"
  notification_ig_resigned_government_tooltip: "#header $notification_ig_resigned_government_name$#!\n$TOOLTIP_DELIMITER$\n$notification_ig_resigned_government_desc$"
  notification_ig_resigned_government_name: "Resignation from [concept_government]"
  notification_ig_resigned_government_desc: "[SCOPE.GetRootScope.GetInterestGroup.GetName] has resigned from the [concept_government] due to their [concept_approval] being at $ig_approval_angry$"
  notification_violate_sovereignty_third_party_joins_name: "[SCOPE.sC('third_party_country').GetName] aids [SCOPE.sC('target_country').GetName]"
  notification_violate_sovereignty_third_party_joins_desc: "[SCOPE.sC('third_party_country').GetName] has come to the aid of [SCOPE.sC('target_country').GetName] after their sovereignty was violated by [SCOPE.sC('initiator').GetName]."
  SUBSIDIZED_YES: "$SUBSIDIZED_YES_HEADER$[ConcatIfNeitherEmpty('\n\n', Building.GetSubsidiesDesc)]\n\n[SelectLocalization(IsValid( Building.ToggleSubsidies ), 'REVOKE_SUBSIDIES_POSSIBLE', GetDesc(Building.ToggleSubsidies))]"
  SUBSIDIZED_YES_HEADER: "#header [Concept('concept_subsidies', '$concept_subsidized$')]#!\n$TOOLTIP_DELIMITER$\nThis building is $concept_subsidized$ and costs #N #bold @money! [Building.GetSubsidies|D]#!#! / week"
  REVOKE_SUBSIDIES_POSSIBLE: "#instruction Click to stop subsidizing it#!"
  SUBSIDIES_MANDATED_BY_MODIFIER: "$MODIFIERNAME$#indent_newline: \n$DESCRIPTION$#!"
  SUBSIDIZED_NO: "$SUBSIDIZED_NO_HEADER$\n\n[SelectLocalization(IsValid( Building.ToggleSubsidies ), 'SUBSIDIZE_POSSIBLE', GetDesc(Building.ToggleSubsidies))]"
  SUBSIDIZED_NO_HEADER: "#header Not [Concept('concept_subsidies', '$concept_subsidized$')]#!\n$TOOLTIP_DELIMITER$\nThis building is not $concept_subsidized$"
  SUBSIDIZE_POSSIBLE: "#instruction Click to subsidize it#!"
  NOT_PERMITTED_TO_SUBSIDIZE_BUILDING_GROUP: "Subsidizing this building is not permitted in our country. This is usually determined by economic [Concept('concept_law', '$concept_laws$')]."
  CANNOT_SUBSIDIZE_GOVERNMENT_BUILDINGS: "[Concept('concept_government_building', '$concept_government_buildings$')] cannot be subsidized."
  CANNOT_SUBSIDIZE_SUBSISTENCE_BUILDINGS: "[Concept('concept_subsistence_building', '$concept_subsistence_buildings$')] cannot be subsidized."
  SUBSIDIZED_ALL_YES: "All buildings in this group are [Concept('concept_subsidies', '$concept_subsidized$')].\n\n#instruction Click to remove all subsidies.#!"
  SUBSIDIZED_ALL_NO: "None of the buildings in this group are [Concept('concept_subsidies', '$concept_subsidized$')].\n\n#instruction Click to subsidize all buildings.#!"
  SUBSIDIZED_ALL_MIXED: "Some of the buildings in this group are [Concept('concept_subsidies', '$concept_subsidized$')].\n\n#instruction Click to subsidize all buildings.#!"
  AUTO_EXPAND_ALL_YES: "#header Automatic Expansion#!\nAll buildings in this group are being Automatically Expanded.\n\n#instruction Click to remove all Automatic Expansion.#!"
  AUTO_EXPAND_ALL_NO: "#header No Automatic Expansion#!\nNone of the buildings in this group are being Automatically Expanded.\n\n#instruction Click to Automatically Expand all buildings.#!"
  AUTO_EXPAND_ALL_MIXED: "#header Some Automatic Expansion#!\nSome of the buildings in this group are being Automatically Expanded.\n\n#instruction Click to Automatically Expand all buildings.#!"
  SUBSIDIES_TOOLTIP: "Wage [concept_subsidies] required: #v @money!$VAL|-0$#!\n$TAB$[Concept('concept_building_wage', '$concept_building_wages$')] required to maintain full employment: #v @money!$SUB_VAL|0$#!\n$TAB$$NAME$ capacity to pay: #v @money!$REG_VAL|0+$#!\n\nInput Goods Subsidy required #v @money!$BALANCE_VAL|-0$#!"
  BUILDING_RIGHT_CLICK_MENU_TITLE: "[Building.GetName]"
  BUILDING_RIGHT_CLICK_MENU_SUBTITLE: "in [State.GetName]"
  BUILDING_RIGHT_CLICK_MENU_EXPAND: "Expand in [State.GetName]"
  BUILDING_RIGHT_CLICK_MENU_DOWNSIZE: "Downsize"
  BUILDING_RIGHT_CLICK_MENU_CANCEL_CONSTRUCTION: "Cancel Expansion"
  BUILDING_RIGHT_CLICK_MENU_SUBSIDIZE_ON: "Subsidize"
  BUILDING_RIGHT_CLICK_MENU_SUBSIDIZE_OFF: "Revoke Subsidies"
  BUILDING_RIGHT_CLICK_MENU_AUTOEXPAND_ON: "Auto-Expand"
  BUILDING_RIGHT_CLICK_MENU_AUTOEXPAND_OFF: "Stop Auto-Expanding"
  CANCEL_CONSTRUCTION_TOOLTIP: "#header $BUILDING_RIGHT_CLICK_MENU_CANCEL_CONSTRUCTION$#!\nCancel the ongoing expansion of this building."
  CANCEL_CONSTRUCTION_MODIFIERS_INSTRUCTIONS: "#instruction Click to cancel 1 level#!\n#instruction $SHORTCUT_KEY_MOD_shift$Click to cancel $SHIFT_NUM_LEVELS$ levels#!\n#instruction $SHORTCUT_KEY_MOD_ctrl$Click to cancel $CTRL_NUM_LEVELS$ levels#!"
  IG_RIGHT_CLICK_MENU_TITLE: "[InterestGroup.GetName]"
  IG_RIGHT_CLICK_MENU_ADD_GOV: "Add to Government"
  IG_RIGHT_CLICK_MENU_REM_GOV: "Remove from Government"
  IG_RIGHT_CLICK_MENU_SUPPRESS: "$SUPPRESS_SHORT$"
  IG_RIGHT_CLICK_MENU_SUPPRESS_NOT: "$SUPPRESS_NOT_SHORT$"
  IG_RIGHT_CLICK_MENU_PROMOTE: "$PROMOTE_SHORT$"
  IG_RIGHT_CLICK_MENU_PROMOTE_NOT: "$PROMOTE_NOT_SHORT$"
  IG_RIGHT_CLICK_MENU_RULER_JOIN_IG: "$RULER_JOIN_IG_LONG$"
  IG_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(InterestGroup.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
  CHARACTER_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Character.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
  STATE_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(State.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
  MARKET_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Market.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
  GOODS_RIGHT_CLICK_MENU_PIN_IN_OUTLINER: "[SelectLocalization(Goods.IsPinnedInOutliner, 'UNPIN_IN_OUTLINER', 'PIN_IN_OUTLINER')]"
  PIN_IN_OUTLINER: "Pin in Outliner"
  UNPIN_IN_OUTLINER: "Unpin from Outliner"
  CHARACTER_RIGHT_CLICK_MENU_TITLE: "[Character.GetFullName]"
  CHARACTER_RIGHT_CLICK_MENU_SUBTITLE: "[Character.GetRoleTitle]"
  CHARACTER_RIGHT_CLICK_MENU_MANAGE_COMMANDER: "Manage Assignments"
  CHARACTER_RIGHT_CLICK_MENU_MANAGE_COMMANDER_TOOLTIP: "Manage Assignments"
  CHARACTER_RIGHT_CLICK_MENU_RETIRE_COMMANDER: "Retire"
  CHARACTER_RIGHT_CLICK_MENU_PROMOTE_COMMANDER: "Promote"
  DECREE_RIGHT_CLICK_MENU_TITLE: "[Decree.GetName] in [Decree.GetState.GetName]"
  DECREE_RIGHT_CLICK_MENU_REMOVE: "Cancel"

  STATE_RIGHT_CLICK_MENU_DECLARE_INTEREST: "Declare Interest"
  STATE_RIGHT_CLICK_MENU_REVOKE_INTEREST: "Revoke Interest"
  STATE_RIGHT_CLICK_MENU_REVOKE_INTEREST_TOOLTIP: "Revoke our Interest in [State.GetStateRegion.GetStrategicRegion.GetName]"
  STATE_RIGHT_CLICK_MENU_DECLARE_INTEREST_TOOLTIP: "Declare an Interest in [State.GetStateRegion.GetStrategicRegion.GetName]"

  DECREE_DUPLICATE_ROAD_MAINTENANCE: "No other countries have set $decree_road_maintenance$ in the [concept_state_region]"
  NAVAL_INVASION_RIGHT_CLICK_MENU_TITLE: "Select General for amphibious landing in [State.GetName]"
  NAVAL_INVASION_RIGHT_CLICK_MENU_TOOLTIP: "Send [Character.GetFullName] to perform amphibious landing[ConcatIfNeitherEmpty('\n$TOOLTIP_DELIMITER$\n', GetDesc( MapInteractions.AccessMapInteractionCharacter.GetNavalInvasionCommand( Character.Self, State.Self ) ) )]"
  MARKET_RIGHT_CLICK_MENU_TITLE: "[Market.GetName]"
  MARKET_RIGHT_CLICK_MENU_MANAGE_MARKET: "Manage Market"
  MANAGE_MARKET: "Manage"
  STATE_RIGHT_CLICK_MENU_TITLE: "[Country.GetName]"
  STATE_RIGHT_CLICK_MENU_SUBTITLE: "[State.GetName]"
  STATE_RIGHT_CLICK_MENU_COUNTRY_TITLE: "#header [Country.GetNameNoFlag]#! (Country)"
  STATE_RIGHT_CLICK_MENU_STATE_TITLE: "#header [State.GetName]#! (State)"
  MARKET_RIGHT_CLICK_MENU_MARKET_TITLE: "#header [State.GetMarket.GetName]#! (Market)"
  STATE_RIGHT_CLICK_MENU_STRATEGIC_REGION_TITLE: "#header [State.GetStateRegion.GetStrategicRegion.GetName]#! ([concept_strategic_region])"
  STATE_RIGHT_CLICK_MENU_DIPLOMACY: "Open Diplomacy"
  STATE_RIGHT_CLICK_MENU_COUNTRY_INFORMATION: "Information"
  STATE_RIGHT_CLICK_MENU_COLONIZE: "Colonize"
  STATE_RIGHT_CLICK_MENU_CREATE_MARKET: "Create Market"
  STATE_RIGHT_CLICK_MENU_INCORPORATE: "$INCORPORATE$"
  STATE_RIGHT_CLICK_MENU_CANCEL_INCORPORATION: "Cancel Incorporation ([State.GetIncorporationProgress|v%0] complete)"
  BUILD_URBAN_BUILDINGS: "Build Urban Buildings"
  ADD_CONSUMPTION_TAX: "Add Consumption Tax"
  ADD_CONSUMPTION_TAX_ENTRY: "[Goods.GetNameNoFormatting]"
  ADD_CONSUMPTION_TAX_ENTRY_COST: "@money!#v [Goods.CalcPotentialConsumptionTaxAmount(GetPlayer)|+=D]#! ( @aut! [Multiply_CFixedPoint(Goods.CalcConsumptionTaxAuthorityCost(GetPlayer),'(CFixedPoint)-1')|v0+])"
  BUDGET_CONSUMPTION_TAX_TOOLTIP: "#header [concept_consumption_tax] on [Goods.GetName]#!\nCurrent cost: @aut! [Multiply_CFixedPoint(Goods.CalcConsumptionTaxAuthorityCost(GetPlayer),'(CFixedPoint)-1')|v0+]\nCurrent Revenue: #v [Goods.CalcConsumptionTaxAmount(GetPlayer)|+K]#!"
  GOODS_ADD_REMOVE_CONSUMPTION_TAX_TOOLTIP: "#header [SelectLocalization(GreaterThan_CFixedPoint(Goods.CalcConsumptionTaxAmount(GetPlayer), '(CFixedPoint)0'), 'Remove', 'Add')] [concept_consumption_tax] on [Goods.GetName]#!\n$TOOLTIP_DELIMITER$\nCurrent Revenue: #v [Goods.CalcConsumptionTaxAmount(GetPlayer)|+K]#!"
  COUNTRY_RIGHT_CLICK_MENU_OBSERVE: "[SelectLocalization(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, Country.Self), 'COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVING', 'COUNTRY_RIGHT_CLICK_MENU_START_OBSERVING')]"
  COUNTRY_RIGHT_CLICK_MENU_START_OBSERVING: "Observe [Country.GetName]"
  COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVING: "Stop observing [Country.GetName]"
  COUNTRY_RIGHT_CLICK_MENU_OBSERVE_TOOLTIP: "[SelectLocalization(ObjectsEqual(GetMetaPlayer.GetPlayedOrObservedCountry.Self, Country.Self), 'COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVE_TOOLTIP', 'COUNTRY_RIGHT_CLICK_MENU_START_OBSERVE_TOOLTIP')]"
  COUNTRY_RIGHT_CLICK_MENU_START_OBSERVE_TOOLTIP: "Start observing this country"
  COUNTRY_RIGHT_CLICK_MENU_STOP_OBSERVE_TOOLTIP: "Stop observing this country"
  OBSERVER_NO_COUNTRY_SELECTED: "\n$TOOLTIP_DELIMITER$\n@red_cross! No country selected"
  OBSERVER_NO_COUNTRY_SELECTED_TOOLTIP: "#header You are in observer mode!#!\n$TOOLTIP_DELIMITER$\n@red_cross! No country selected to be observed"
  GOODS_RIGHT_CLICK_MENU_TITLE: "[Goods.GetTextIcon][Nbsp][Goods.GetName]"
  GOODS_IN_MARKET_RIGHT_CLICK_MENU_TITLE: "[Goods.GetTextIcon][Nbsp][Goods.GetName] in [Goods.GetMarket.GetName]"
  MAP_INTERACTION_SHOW_SUPPLY_AREAS_DESC: "Click on a state to show its supply area"
  MAP_INTERACTION_SHOW_SUPPLY_AREAS_PERFORMED: "Supply area is shown"
  MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_HEADER: "This supply area consists of the following theaters for [COUNTRY.GetName]:"
  MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_ITEM: "#variable [THEATER.GetName]#! (#variable [THEATER.GetOwner.GetName]#!)"
  MAP_INTERACTION_SHOW_SUPPLY_AREAS_TOOLTIP_NONE: "[COUNTRY.GetName] does not have a supply area here."
  MAP_LIST_PANEL_TITLE: "[GetSelectedMapModeName][SelectLocalization( MapListPanelManager.HasCurrentInteraction, '', ' Ledger')]"
  MAP_LIST_PANEL_BUTTON_SHOW_MAP_LIST_PANEL: "Show list of #v [GetSelectedMapModeName]#!\nHide #v Information Panel#!"
  MAP_LIST_PANEL_BUTTON_SHOW_INFORMATION_PANEL: "Show #v Information Panel#!\nHide list of #v [GetSelectedMapModeName]#!"
  MAP_MODE_ATTITUDE: "Show [concept_attitude] on the map"
  MAP_MODE_RELATIONS: "Show [concept_relations] on the map"
  MAP_MODE_INFAMY: "Show [concept_infamy] on map"
  MAP_MODE_POTENTIALS: "Show [Concept('concept_resource_potential','$concept_resource_potentials_short$')] on map"
  MAP_MODE_PRODUCTION: "Show [concept_good_production] on map"
  MAP_MODE_CONSUMPTION: "Show [concept_good_consumption] on map"
  SORT_BY_RANK: "Sort by [concept_rank]"
  SORT_BY_MARKET_GOODS: "Sort by [Concept('concept_good', '$concept_goods$')]"
  SORT_BY_BALANCE_TOOLTIP: "Sort by Balance. The number you get when you subtract [concept_buy_orders] from [concept_sell_orders]."
  SORT_BY_COUNTRY: "Sort by [concept_country] name"
  SORT_BY_MAREKT_PRICE: "Sort by [concept_market_price]"
  SORT_BY_AMOUNT_CONSUMED: "Sort by amount of [Concept('concept_good', '$concept_goods$')] [Concept('concept_good_consumption', '$concept_good_consumed$')]"
  SORT_BY_BUDGET_EXPENDITURE: "Sort by the percentage of the [Concept('concept_pop', '$concept_pop_possessive$')] budget spent on each [concept_good]"
  MAP_MODE_ATTITUDE_COUNTRY: "Show [concept_attitude] to [CountryPanel.GetCountry.GetName] on the map"
  MAP_MODE_RELATIONS_COUNTRY: "Show [concept_relations] to [CountryPanel.GetCountry.GetName] on the map"
  DEFAULT_MAP_LIST_PANEL_STATUS_HEADER: "Status"
  DEFAULT_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of this interaction on each entry.\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.\n@map_list_cross_and_checkmark!: You are already doing this here, but you can NOT select this.#!"
  DEFAULT_MAP_LIST_PANEL_TITLE_HEADER: "Title"
  DEFAULT_MAP_LIST_PANEL_TITLE_HEADER_TOOLTIP: "#header Title#!\n$TOOLTIP_DELIMITER$\n#concept The title of this option.#!"
  BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER: "Labor"
  BUILDING_MAP_LIST_PANEL_AVAILABLE_LABOR_HEADER_TOOLTIP: "#header Available Labor#!\n$TOOLTIP_DELIMITER$\nHow many Pops that are either [concept_unemployed] or work in [Concept('concept_subsistence_building', '$concept_subsistence_buildings$')] in the State"
  BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER: "Infra"
  BUILDING_MAP_LIST_PANEL_INFRASTRUCTURE_HEADER_TOOLTIP: "#header Infrastructure Balance#!\n$TOOLTIP_DELIMITER$\nHow much [concept_infrastructure] is available in the State"
  BUILDING_MAP_LIST_PANEL_STATUS_HEADER: "Status"
  BUILDING_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of expanding this [concept_building] in each [concept_state].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.\n@map_list_cross_and_checkmark!: You are already doing this here, but you can NOT select this.#!"
  BUILDING_MAP_LIST_PANEL_STATE_HEADER: "State"
  BUILDING_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state]#!\n$TOOLTIP_DELIMITER$\n#concept The $concept_state$ where the [concept_building] will be built.#!"
  BUILDING_MAP_LIST_PANEL_EFFICIENCY_HEADER: "Eff."
  BUILDING_MAP_LIST_PANEL_EFFICIENCY_HEADER_TOOLTIP: "#header @construction![Nbsp][concept_construction] Efficiency#!\n$TOOLTIP_DELIMITER$\n#concept The @construction! $concept_construction$ Efficiency where the [concept_building] will be built. A positive value reduces the amount of @construction![Nbsp][concept_construction] required per week and vice versa.#!"
  BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER: "Peasants"
  BUILDING_MAP_LIST_PANEL_PEASANTS_HEADER_TOOLTIP: "#header Peasants#!"
  BUILDING_MAP_LIST_PANEL_CONSTRUCTION_HEADER: "@construction!"
  BUILDING_MAP_LIST_PANEL_CONSTRUCTION_HEADER_TOOLTIP: "#header @construction![Nbsp][concept_construction]#!\n$TOOLTIP_DELIMITER$\n#concept How much total @construction! $concept_construction$ the [concept_building] will require to complete.#!"
  BUILDING_MAP_LIST_PANEL_STATUS_BUILD: "Build"
  BUILDING_MAP_LIST_PANEL_STATUS_EXPAND: "Expand"
  BUILDING_MAP_LIST_PANEL_EFFICIENCY_TOOLTIP: "#header [concept_construction] Efficiency in [State.GetName]: $VAL|v%1$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_HEADER: "Earnings"
  BUILDING_MAP_LIST_PANEL_PROFIT_IMPACT_TOOLTIP: "#header Predicted earnings after expansion#!\n$TOOLTIP_DELIMITER$\nA prediction of how much expanding this building would affect its weekly earnings."
  COLONY_MAP_LIST_PANEL_STATUS_HEADER: "Status"
  COLONY_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of colonizing each [concept_state_region].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.\n@map_list_cross_and_checkmark!: You are already doing this here, but you can NOT select this.#!"
  COLONY_MAP_LIST_PANEL_REGION_HEADER: "Region"
  COLONY_MAP_LIST_PANEL_REGION_HEADER_TOOLTIP: "#header [concept_state_region]#!\n$TOOLTIP_DELIMITER$\n#concept Target $concept_state_region$.#!"
  COLONY_MAP_LIST_PANEL_STATE_HEADER: "State"
  COLONY_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state]#!\n$TOOLTIP_DELIMITER$\n#concept Target $concept_state$.#!"
  DIPLO_ACTION_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of this [concept_diplomatic_action] in each [concept_country].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.\n@map_list_cross_and_checkmark!: You are already doing this here, but you can NOT select this.#!"
  DIPLO_ACTION_LIST_PANEL_STATUS_HEADER: "Country"
  DIPLO_ACTION_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header [concept_country]#!"
  DIPLO_ACTION_LIST_PANEL_STATUS_SEND: "Send"
  DIPLO_ACTION_LIST_PANEL_STATUS_NOT_POSSIBLE: "Unavailable"
  DECREE_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of this [concept_decree] in each [concept_state].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.\n@map_list_cross_and_checkmark!: You are already doing this here, but you can NOT select this.#!"
  DECREE_LIST_PANEL_STATE_HEADER: "State"
  DECREE_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header [concept_state]#!"
  DECREE_LIST_PANEL_COST_HEADER: "Cost"
  DECREE_LIST_PANEL_COST_HEADER_TOOLTIP: "#header Cost to keep maintaining this decree#!"
  TRADE_ROUTE_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of this [concept_trade_route] to each [concept_market].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.\n@map_list_cross_and_checkmark!: You are already doing this here, but you can NOT select this.#!"
  TRADE_ROUTE_LIST_PANEL_MARKET_HEADER: "Market"
  TRADE_ROUTE_LIST_PANEL_MARKET_HEADER_TOOLTIP: "#header Sort [Concept('concept_market','$concept_markets$')] alphabetically#!"
  TRADE_ROUTE_LIST_PANEL_VALUE_HEADER: "Productivity"
  TRADE_ROUTE_LIST_PANEL_VALUE_HEADER_TOOLTIP: "#header Amount of [concept_trade_revenue]/employee annually#!"
  TRADE_ROUTE_LIST_PANEL_QUANTITY_HEADER: "Amount"
  TRADE_ROUTE_LIST_PANEL_QUANTITY_HEADER_TOOLTIP: "#header Units of [Concept('concept_good', '$concept_goods$')] Traded#!"
  TRADE_ROUTE_LIST_PANEL_LEVEL_HEADER: "Level"
  TRADE_ROUTE_LIST_PANEL_LEVEL_HEADER_TOOLTIP: "#header Level of [concept_trade_route]#!"
  TRADE_ROUTE_LIST_PANEL_CONVOYS_HEADER: "@convoys"
  TRADE_ROUTE_LIST_PANEL_CONVOYS_HEADER_TOOLTIP: "#header Number of @convoys![concept_convoys] required#!"
  TRADE_ROUTE_PLAYER: "Your Owned Routes ([MarketGoods.GetNumPlayerOwnedTradeRoutes]):"
  TRADED_GOODS_IMPORTED_AND_NUMBER_OF_IMPORT_ROUTES: "[MarketGoods.GetImportAmount|Dv] ([MarketGoods.GetNumImportTradeRoutes])"
  TRADED_GOODS_EXPORTED_AND_NUMBER_OF_EXPORT_ROUTES: "[MarketGoods.GetExportAmount|Dv] ([MarketGoods.GetNumExportTradeRoutes])"
  TRADED_GOODS_IMPORTED_TOOLTIP: "[MarketGoods.GetMarket.GetOwner.GetName] is importing [MarketGoods.GetImportAmount|Dv] [MarketGoods.GetGoods.GetTextIcon] [MarketGoods.GetGoods.GetName] with [MarketGoods.GetNumImportTradeRoutes] import [Concept('concept_trade_route', '$concept_trade_routes$')]"
  TRADED_GOODS_EXPORTED_TOOLTIP: "[MarketGoods.GetMarket.GetOwner.GetName] is exporting [MarketGoods.GetExportAmount|Dv] [MarketGoods.GetGoods.GetTextIcon] [MarketGoods.GetGoods.GetName] with [MarketGoods.GetNumExportTradeRoutes|v] export [Concept('concept_trade_route', '$concept_trade_routes$')]"
  COUNTRY_IMPORTED_AND_NUMBER_OF_IMPORT_ROUTES: "[Country.GetImportAmountOnMarket(Market.Self)|Dv] ([Country.GetNumImportTradeRoutesOnMarket(Market.Self)])"
  COUNTRY_EXPORTED_AND_NUMBER_OF_EXPORT_ROUTES: "[Country.GetExportAmountOnMarket(Market.Self)|Dv] ([Country.GetNumExportTradeRoutesOnMarket(Market.Self)])"
  COUNTRY_IMPORTED_TOOLTIP: "[Country.GetName] is importing [Country.GetImportAmountOnMarket(Market.Self)|Dv] units of Goods with [Country.GetNumImportTradeRoutesOnMarket(Market.Self)|v] import [Concept('concept_trade_route', '$concept_trade_routes$')]"
  COUNTRY_EXPORTED_TOOLTIP: "[Country.GetName] is exporting [Country.GetExportAmountOnMarket(Market.Self)|Dv] units of Goods with [Country.GetNumExportTradeRoutesOnMarket(Market.Self)|v] export [Concept('concept_trade_route', '$concept_trade_routes$')]"
  COUNTRY_NAME_WITH_TRADE_ROUTES: "#header [Country.GetNameNoFormatting]#! ([Country.GetNumTradeRoutesOnMarket(Market.Self)|v] [SelectLocalization(EqualTo_int32(Country.GetNumTradeRoutesOnMarket(Market.Self), '(int32)1'), 'route', 'routes')])"
  GOODS_NAME_WITH_TRADE_ROUTES: "#header [Goods.GetNameNoFormatting]#! $GOODS_NAME_WITH_TRADE_ROUTES_OWNED$"
  GOODS_NAME_WITH_TRADE_ROUTES_OWNED: "[SelectLocalization(EqualTo_int32(MarketGoods.GetNumPlayerOwnedTradeRoutes, '(int32)0'), '', 'GOODS_NAME_WITH_TRADE_ROUTES_NUMBER')]"
  GOODS_NAME_WITH_TRADE_ROUTES_NUMBER: "([MarketGoods.GetNumPlayerOwnedTradeRoutes|v] [GetPlayer.GetAdjectiveNoFormatting] [SelectLocalization(EqualTo_int32(MarketGoods.GetNumPlayerOwnedTradeRoutes, '(int32)1'), 'route', 'routes')])"
  GOODS_NUMBER_WITH_TRADE_LEVEL: "[TradeRoute.GetTradeQuantity|Dv]  (Level [TradeRoute.GetLevel|v])"
  NOT_PLAYER_MARKET_CONSUMPTION_TAXES: "@red_cross! Can #b not#! set [Concept('concept_consumption_tax','$concept_consumption_taxes$')] on [Goods.GetName] in the [Goods.GetMarket.GetName] since you are not part of this [concept_market]"
  NOT_PLAYER_MARKET_PRIORITY: "@red_cross! Can #b not#! set priority on [Goods.GetName] in the [Goods.GetMarket.GetName] since you are not part of this [concept_market]"
  CURRENT_TRADE_FILTERS_DESC: "[SelectLocalization(Market.GetOnlyShowPlayerTradeRoutes, 'YOUR', 'ALL')] Routes[AddTextIf( GetVariableSystem.HasValue( 'trade_route_grouping', 'goods' ), '$GROUPED_BY_GOODS$' )][AddTextIf( GetVariableSystem.HasValue( 'trade_route_grouping', 'country' ), '$GROUPED_BY_COUNTRY$' )]"
  CURRENT_GOODS_FILTERS: "[SelectLocalization(And(MarketPanel.IsSelected('staple'), MarketPanel.IsSelected('military')), 'ALL_GOODS', 'SELECTED_FILTER')]"
  SELECTED_FILTER: "[AddTextIf(MarketPanel.IsSelected('staple'), '$STAPLE_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('industrial'), '$INDUSTRIAL_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('military'), '$MILITARY_FILTER_NAME$')][AddTextIf(MarketPanel.IsSelected('luxury'), '$LUXURY_FILTER_NAME$')]"
  ALL_GOODS: "All Goods"
  STAPLE_FILTER_NAME: "Staple Goods"
  INDUSTRIAL_FILTER_NAME: "Industrial Goods"
  MILITARY_FILTER_NAME: "Military Goods"
  LUXURY_FILTER_NAME: "Luxury Goods"
  ALL: "All"
  YOUR: "Your"
  GROUPED_BY_GOODS: ", grouped by Goods"
  GROUPED_BY_COUNTRY: ", grouped by Country"
  FILTER_GOODS: "Filter Goods"
  GROUP: "Group"
  FILTER_BY_OWNER: "Filter by Owner"
  BY_GOODS: "By Goods"
  BY_COUNTRY: "By Country"
  ONLY_YOURS: "Only Yours"
  TRADE_ROUTES_SORT_GOODS: "Goods"
  TRADE_ROUTES_SORT_AMOUNT: "Units"
  TRADE_ROUTES_SORT_DIRECTION: "Dir."
  TRADE_ROUTES_SORT_COUNTRY: "Count"
  TRADE_ROUTES_SORT_COST: "Cost"
  TRADE_ROUTES_SORT_PRODUCTIVITY: "Prod."
  TRADE_ROUTES_SORT_REVENUE: "Revenue"
  TRADE_ROUTES_SORT_OWNER: "Owner"
  EMBARGO: "Embargo"
  TRADE_AGREEMENT: "Trade Agreement"
  ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of activating the [concept_conscription_center] in each [concept_state].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.\n@map_list_cross_and_checkmark!: You are already doing this here, but you can NOT select this.#!"
  ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_HEADER: "State"
  ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_STATE_HEADER_TOOLTIP: "#header State#!\n$TOOLTIP_DELIMITER$\nThe [concept_state] where [concept_conscription_center] will be activated."
  ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_SIZE_TOOLTIP: "#header Size#!\n$TOOLTIP_DELIMITER$\nThe size of the [concept_conscription_center]."
  ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS: "Units"
  ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS_TOOLTIP: "#header Units#!\n$TOOLTIP_DELIMITER$\nThe number of units that will be drafted by the [concept_conscription_center]."
  ACTIVATE_CONSCRIPTION_CENTER_MAP_LIST_PANEL_UNITS_TEXT: "@battalions! [MapListOption.GetActivateConscriptionCenterData.GetBuilding.GetCombatUnitCapacity|v]"
  FRONT_MAP_LIST_PANEL_UNITS: "Units"
  FRONT_MAP_LIST_PANEL_UNITS_TOOLTIP: "#header Units#!\n$TOOLTIP_DELIMITER$\nThe number of units present on the [concept_front]."
  RECRUIT_COMMANDERS_MAP_LIST_PANEL_STATUS_HEADER_TOOLTIP: "#header Status#!\n$TOOLTIP_DELIMITER$\n#concept The availability of recruiting a [concept_general] in each [concept_hq].\n\n@map_list_plus!: You can select this.\n@map_list_plus_and_checkmark!: You can select this and you are already doing this here.\n@map_list_checkmark!: You are already doing this here and you can deselect this.\n@map_list_lock!: You are already doing this here, but you can NOT deselect this.\n@map_list_cross!: You can NOT select this.\n@map_list_cross_and_checkmark!: You are already doing this here, but you can NOT select this.#!"
  RECRUIT_COMMANDERS_MAP_LIST_PANEL_CURRENT_NUM: "Current"
  RECRUIT_COMMANDERS_MAP_LIST_PANEL_CURRENT_GENERALS_TOOLTIP: "#header Current number of [Concept( 'concept_general', '$concept_generals$' )]#!"
  RECRUIT_COMMANDERS_MAP_LIST_PANEL_CURRENT_ADMIRALS_TOOLTIP: "#header Current number of [Concept( 'concept_admiral', '$concept_admirals$' )]#!"
  RECRUIT_COMMANDERS_MAP_LIST_PANEL_CURRENT_BATTALIONS_TOOLTIP: "#header Units#!\n$TOOLTIP_DELIMITER$\nThe number of battalions without a [concept_general] in a [concept_hq]."
  RECRUIT_COMMANDERS_MAP_LIST_PANEL_CURRENT_FLOTILLAS_TOOLTIP: "#header Units#!\n$TOOLTIP_DELIMITER$\nThe number of flotillas without a [concept_admiral]in a [concept_hq]."
  RECRUIT_COMMANDERS_CHARACTERS_POPUP: "Will Command $DESC$"
  COLONY_MAP_MARKER_DAYS_LEFT: "#bold [State.GetColonyProgressAsDays]#! Days"
  BUILDING_MAP_MARKER_WEEKS_LEFT: "#bold [Building.GetConstructionRemainingWeeksDesc]#!"
  CLOUT_GRAPH_TITLE: "#title [concept_clout]#!"
  VOTES_GRAPH_TITLE: "#title [Concept('concept_votes', 'Current Polls')]#!"
  ELECTION_PANEL_ACTIVE_CAMPAIGN_TITLE: "[Election.GetNextElectionYearRaw] Campaign"
  ELECTION_PANEL_ELECTION_RESULT_TITLE: "[Election.GetLastElectionYearRaw] Election results"
  ELECTION_PANEL_HEADER_LINE_ONE: "[Election.GetTitle]"
  ELECTION_PANEL_HEADER_LINE_TWO: "[concept_election] in [Election.GetCountryName]"
  IG_VOTERS_TITLE: "Voters:"
  TOTAL_VOTERS: "Total Voters"
  DATE_OF_ELECTION: "Date of [concept_election]"
  ELECTION_DATE: "$DATE$ (in $NUM_DAYS$ days)"
  ELECTION_DATE_ONE_DAY: "$DATE$ (in one day)"
  ELECTION_DATE_LESS_THAN_ONE_DAY: "$DATE$ (less than one day)"
  PARTIES: "[Concept('concept_party', '$concept_parties$')]"
  LAST_ELECTION_RESULTS: "Last [concept_election] Results: [Election.GetLastElectionDateDesc]"
  PARTY_AFFILIATION: "Party Affiliation"
  PROJECTED_VOTES_TITLE: "Projected Votes:"
  PROJECTED_VOTES: "$VOTING_POWER|K$ ($SHARE|%0$)"
  PARTY_AFFILIATION_TOOLTIP: "#header [InterestGroup.GetName] Affiliation with [Party.GetName]: $SCORE|v0$#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  CULTURE_IN_STATE_ITEM: "[STATE.GetPopulationForCulture( CULTURE.Self )|vD] [CULTURE.GetName] ([STATE.GetPolStrForCulture( CULTURE.Self )|vD] [concept_political_strength])"
  CULTURE_IN_STATE_FORMAT: "#header Cultures in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  IG_IN_STATE_ITEM: "$VAL|vD$ - [INTEREST_GROUP.GetName]"
  IGS_IN_STATE_FORMAT: "#header [concept_political_strength] in [STATE.GetName]#!\n$TOOLTIP_DELIMITER$\n$BREAKDOWN$"
  TECHNOLOGY: "Technology"
  TOOLTIP_REQUIREMENTS_ANY: "#title Requires one of the following:#!"
  TOOLTIP_REQUIREMENTS_ALL: "#title Requires all of the following:#!"
  TECHNOLOGY_RESEARCHED: "#i Already Researched#!"
  TOOLTIP_UNLOCKS: "#title Unlocks#!"
  TOOLTIP_UNLOCK_PRODUCTION_METHOD: "Unlocks $PRODUCTION_METHOD$ for $BUILDING_TYPE$ ([concept_production_method])"
  TOOLTIP_DISALLOW_PRODUCTION_METHOD: "Disallows $PRODUCTION_METHOD$ for $BUILDING_TYPE$ ([concept_production_method])"
  TOOLTIP_UNLOCK_BUILDING_TYPE: "Unlocks $BUILDING_TYPE$ ([concept_building])"
  TOOLTIP_UNLOCK_STATE_TRAIT_COLONIZATION: "Allows establishment of [Concept('concept_colony','$concept_colonies$')] in [Concept('concept_state', '$concept_states$')] with [STATE_TRAIT.GetName]"
  TOOLTIP_DISABLE_STATE_TRAIT: "Removes all effects from [STATE_TRAIT.GetName] in your owned [Concept('concept_colony','$concept_colonies$')] in [Concept('concept_state', '$concept_states$')]"
  TOOLTIP_UNLOCK_LAW_TYPE: "Unlocks $LAW$"
  TOOLTIP_UNLOCK_PARTY: "Unlocks $PARTY$"
  TOOLTIP_UNLOCK_DECREE: "Unlocks [DECREE_TYPE.GetName] ([concept_decree])"
  TOOLTIP_UNLOCK_DIPLOMATIC_ACTION: "Unlocks [DIPLOMATIC_ACTION_TYPE.GetName] ([concept_diplomatic_action])"
  TOOLTIP_UNLOCK_TECH_TYPE: "Leads to $TECH_TYPE$ ([concept_technology])"
  TOOLTIP_UNLOCK_CANAL: "Required for $DATA_CANAL_TYPE_NAME_FORMAT$"
  TOOLTIP_DISALLOW_LAW_TYPE: "Disallows $LAW$"
  TOOLTIP_UNLOCKED_BY_LAW_TYPE: "Unlocked by $LAW$"
  TOOLTIP_DISALLOWED_BY_LAW_TYPE: "Disallowed by $LAW$"
  TOOLTIP_UNLOCKED_BY_TECHNOLOGY: "$TECHNOLOGY$"
  TOOLTIP_UNLOCKS_NO_BREAKDOWN: "$UNLOCKED_DESC$"
  TOOLTIP_UNLOCKS_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Unlocks $UNLOCKED_CATEGORIES_LIST$#!#!"
  TOOLTIP_UNLOCK_LAW_SINGLE: "a new [concept_law]"
  TOOLTIP_UNLOCK_LAW_MANY: "multiple new [Concept('concept_law', '$concept_laws$')]"
  TOOLTIP_UNLOCK_PM_SINGLE: "a new [concept_production_method]"
  TOOLTIP_UNLOCK_PM_MANY: "multiple new [Concept('concept_production_method', '$concept_production_methods$')]"
  TOOLTIP_UNLOCK_DECREE_SINGLE: "a new [concept_decree]"
  TOOLTIP_UNLOCK_DECREE_MANY: "multiple new [Concept('concept_decree', '$concept_decrees$')]"
  TOOLTIP_DISALLOWS_NO_BREAKDOWN: "$DISALLOWED_DESC$"
  TOOLTIP_DISALLOWS_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ Disallows $DISALLOWED_CATEGORIES_LIST$#!#!"
  TOOLTIP_DISALLOW_PM_SINGLE: "a [concept_production_method]"
  TOOLTIP_DISALLOW_PM_MANY: "multiple [Concept('concept_production_method', '$concept_production_methods$')]"
  STANDARD_PM_LIST_ITEM: "\n$PRODUCTION_METHOD$"
  STANDARD_PMS_DESC: "#header Reset to Standard [Concept('concept_production_method', '$concept_production_methods$')]#!$LIST$"
  CURRENTLY_ACTIVE_LAW: "#b Active Law#!"
  CURRENTLY_ACTIVE_LAW_IN_LAWGROUP: "Currently Active [Law.GetGroup.GetName] Law"
  LAW_CURRENTLY_BEING_ENACTED: "#b Trying to enact this#!"
  CURRENT_LAW_BEING_ENACTED: "#b Enacting Law#!"
  NO_LAW_IN_THIS_LAWGROUP_IS_BEING_ENACTED: "No [LawGroup.GetName] [concept_law] enacting"
  ACTIVE_LAW: "@green_checkmark! Part of our [Concept('concept_law', '$concept_laws$')]"
  BEING_ENACTED_LAW: "#v Currently being enacted#! (next checkpoint in #tooltippable #tooltip:[Law.GetTooltipTag],LAW_NEXT_CHECKPOINT_TIME_DESC [Law.GetCheckpointRemainingDays|v] days#!#!)"
  INACTIVE_LAW: "@red_cross! Not part of our [Concept('concept_law', '$concept_laws$')]"
  LAW_FULL_NAME: "$LAW_TYPE$ ($LAW_TYPE_TYPE$) in $LAW_GROUP$"
  LAW_TYPE_TYPE_DESC_LAW: "[concept_law]"
  LAW_TYPE_TYPE_DESC_INSTITUTION: "Institution"
  MESSAGE_SETTINGS: "Message Settings"
  MESSAGE_SETTINGS_NOTIFICATION_TYPES: "Notification Types"
  MESSAGE_SETTINGS_DIPLOMATICALLY_INTERESTING: "Interesting Countries"
  MESSAGE_SETTINGS_NOTIFICATIONS_LOG: "Notification Log"
  MESSAGE_SETTINGS_SORT_NOTIFICATION_TYPE: "Notification Type"
  MESSAGE_SETTINGS_SORT_APPEARANCE: "Appearance"
  MESSAGE_SETTINGS_SORT_PAUSE: "Pause?"
  peace_agreement_notification_group: "Peace Agreement"
  acquired_technology_notification_group: "Acquired Technology"
  diplomatic_proposal_declined_notification_group: "Diplomatic Proposal Declined"
  peace_agreement_signed_non_participant_notification_group: "Peace Agreement Signed Non Participant"
  capitulated_notification_group: "Capitulated"
  diplo_play_war_start_notification_group: "Diplomatic Play War Start"
  law_changed_notification_group: "Law Changed"
  law_notification_group: "Law Progression"
  resource_discovery_notification_group: "Resource Discovery"
  institution_investment_notification_group: "Institution Investment"
  country_rank_changed_notification_group: "Country Rank Changed"
  diplomatic_action_notification_group: "Diplomatic Action"
  diplomatic_proposal_accepted_notification_group: "Diplomatic Proposal Accepted"
  migration_target_created_notification_group: "Migration Target Created"
  migration_target_created_other_notification_group: "Migration Target Created (Other)"
  diplo_play_start_notification_group: "Diplomatic Play Start"
  diplo_play_back_down_notification_group: "Diplomatic Play Back Down"
  diplo_play_back_down_involved_notification_group: "Diplomatic Play Back Down (Involved)"
  diplo_play_join_side_notification_group: "Diplomatic Play Join Side"
  diplo_play_abandon_side_notification_group: "Diplomatic Play Abandon Side"
  colony_notification_group: "Colony"
  parties_activated_notification_group: "Parties Activated"
  country_revolution_notification_group: "Country Revolution"
  country_secession_notification_group: "Country Secession"
  election_results_notification_group: "Election Results"
  journal_entry_completed_notification_group: "Journal Entry Completed"
  native_uprising_notification_group: "Native Uprising"
  spreading_technology_notification_group: "Spreading Technology"
  heir_born_notification_group: "Heir Born"
  character_died_notification_group: "Character Died"
  diplomatic_action_break_notification_group: "Diplomatic Action Break"
  diplomatic_proposal_break_notification_group: "Diplomatic Proposal Break"
  diplomatic_proposal_third_party_notification_group: "Diplomatic Proposal (Third Party)"
  diplomatic_pact_notification_group: "Diplomatic Pact"
  diplomatic_pact_third_party_notification_group: "Diplomatic Pact (Third Party)"
  diplo_play_start_third_party_notification_group: "Diplomatic Play Start (Third Party)"
  diplo_play_declare_neutrality_notification_group: "Diplomatic Play Declare Neutrality"
  diplo_play_war_start_third_party_notification_group: "Diplomatic Play War Start (Third Party)"
  diplo_play_subject_notification_group: "Diplomatic Play Subject"
  country_swayed_notification_group: "Country Swayed"
  sway_offer_notification_group: "Sway Offer"
  interest_notification_group: "Interest"
  interest_third_party_notification_group: "Interest (Third Party)"
  colony_third_party_notification_group: "Colony (Third Party)"
  ig_trait_notification_group: "Interest Group Trait"
  ig_influence_level_notification_group: "Interest Group Influence Level"
  ig_movement_left_notification_group: "Interest Group Movement Left"
  ig_resigned_government_notification_group: "Interest Group Resigned Government"
  new_culture_obsession_notification_group: "New Culture Obsession"
  commander_order_invalidated_notification_group: "Commander Order Invalidated"
  commander_moved_to_other_front_notification_group: "Commander Moved To Other Front"
  country_mobilization_notification_group: "Country Mobilization"
  country_conscription_notification_group: "Country Conscription"
  wargoal_notification_group: "Wargoal"
  trade_route_notification_group: "Trade Route"
  significant_trade_route_notification_group: "Significant Trade Route"
  commander_move_notification_group: "Commander Move"
  naval_invasion_against_us_notification_group: "Naval Invasion Against Us"
  naval_invasion_notification_group: "Naval Invasion"
  convoy_raiders_intercepted_notification_group: "Convoy Raiders Intercepted"
  journal_entry_activation_notification_group: "Journal Entry Activation"
  political_movement_notification_group: "Political Movement"
  country_owes_obligation_notification_group: "Country Owes Obligation"
  country_owed_obligation_notification_group: "Country Owed Obligation"
  obligation_expired_notification_group: "Obligation Expired"
  unification_candidate_notification_group: "Unification Candidate"
  unification_support_notification_group: "Unification Support"
  shipping_lane_trade_route_invalidated_notification_group: "Shipping Lane Trade Route Invalidated"
  shipping_lane_commander_order_invalidated_notification_group: "Shipping Lane Commander Order Invalidated"
  ig_leader_memento_mori_notification_group: "Interest Group Leader Dies"
  convoys_raided_notification_group: "Convoys Raided"
  price_report_notification_group: "Price Report"
  building_built_notification_group: "Building Built"
  building_expanded_notification_group: "Building Expanded"
  POP_TYPE_SUPPORT_TITLE: "#b [PopType.GetName] [concept_interest_group] support in [Country.GetName]:#!"
  POP_TYPE_SUPPORT_SINGLE: "[INTEREST_GROUP.GetName]: $SUPPORT_PERCENTAGE|%1v$"
  POP_TYPE_SUPPORT_SINGLE_FORMAT: "$TAB$$POP_TYPE_SUPPORT_SINGLE$"
  POP_TYPE_SUPPORT_FORMAT: "$POP_TYPE_SUPPORT_TITLE$\n$BODY$"
  POP_TYPE_SUPPORT_NONE: "[PopType.GetName] in [Country.GetName] do not support any $concept_interest_group$"
  POP_TYPE_SUPPORTED_BY_OTHER_HEADER: "#header Other supported [Concept('concept_interest_group', '$concept_interest_groups$')]#!\n$TOOLTIP_DELIMITER$"
  POP_TYPE_SUPPORTED_BY_OTHER: "$TAB$Other $concept_interest_groups$: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] $OTHER_PERCENTAGE|%1v$#!#!"
  POP_TYPE_IN_PLAYER_COUNTRY: "#b [PopType.GetName] in [GetPlayer.GetName]#!:\nPopulation: [PopType.GetPopulation(GetPlayer.Self)|kv]\n[concept_political_strength]: [PopType.GetPolStr(GetPlayer.Self)|kv]\n\n[PopType.GetInterestGroupSupportDesc( GetPlayer.Self )]"
  POP_TYPE_IN_BUILDING: "#b [PopType.GetName] in [Building.GetState.GetCountry.GetName]#!:\n$TAB$$TAB$[concept_pop]: [PopType.GetPopulation(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(Building.GetState.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(Building.GetState.GetCountry)|kv][SelectLocalization(Building.GetState.GetCountry.IsPlayer, 'POP_TYPE_IN_BUILDING_SUPPORT', '')]"
  POP_TYPE_IN_BUILDING_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc( Building.GetState.GetCountry )]"
  POP_TYPE_IN_BUILDING_HEADER: "[PopListItem.GetWorkingAdultsPopSize|vD] [PopType.GetNameNoIcon] in [Building.GetName]"
  POP_TYPE_IN_STATE: "#b [PopType.GetName] in [State.GetCountry.GetName]#!:\n$TAB$$TAB$Population: [PopType.GetPopulation(State.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(State.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(State.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(State.GetCountry)|kv][SelectLocalization(State.GetCountry.IsPlayer, 'POP_TYPE_IN_STATE_SUPPORT', '')]"
  POP_TYPE_IN_STATE_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc( State.GetCountry )]"
  POP_TYPE_IN_STATE_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] in [State.GetName]"
  POP_TYPE_IN_CULTURE: "[SelectLocalization(GreaterThan_int32(Culture.GetPopulation(GetPlayer.Self), '(int32)0'), 'POP_TYPE_IN_CULTURE_PLAYER_POPULATION', 'POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION')]"
  POP_TYPE_IN_CULTURE_NO_PLAYER_POPULATION: "There are no [Culture.GetName] [Concept('concept_pop','$concept_pops$')] in [GetPlayer.GetName]"
  POP_TYPE_IN_CULTURE_PLAYER_POPULATION: "#b [Culture.GetName] [Concept('concept_pop','$concept_pops$')] in [GetPlayer.GetName]:#!\n$TAB$$TAB$Population: [Culture.GetPopulation(GetPlayer.Self)|kv]\n$TAB$$TAB$[concept_political_strength]: [Culture.GetPolStr(GetPlayer.Self)|kv]"
  POP_TYPE_IN_CULTURE_HEADER: "[PopListItem.GetTotalPopSize|vD] [Culture.GetName] [PopType.GetNameNoIcon]"
  POP_TYPE_IN_RELIGION: "[SelectLocalization(GreaterThan_int32(Religion.GetPopulation(GetPlayer.Self), '(int32)0'), 'POP_TYPE_IN_RELIGION_PLAYER_POPULATION', 'POP_TYPE_IN_RELIGION_NO_PLAYER_POPULATION')]"
  POP_TYPE_IN_RELIGION_NO_PLAYER_POPULATION: "There are no [Religion.GetName] [Concept('concept_pop','$concept_pops$')] in [GetPlayer.GetName]"
  POP_TYPE_IN_RELIGION_PLAYER_POPULATION: "#b [Religion.GetName] [Concept('concept_pop','$concept_pops$')] in [GetPlayer.GetName]:#!\n$TAB$$TAB$Population: [Religion.GetPopulation(GetPlayer.Self)|kv]\n$TAB$$TAB$[concept_political_strength]: [Religion.GetPolStr(GetPlayer.Self)|kv]"
  POP_TYPE_IN_RELIGION_HEADER: "[PopListItem.GetTotalPopSize|vD] [Religion.GetName] [PopType.GetNameNoIcon]"
  POP_TYPE_IN_IG: "#b [PopType.GetName] in [InterestGroup.GetCountry.GetName]#!:\n$TAB$$TAB$Population: [PopType.GetPopulation(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_workforce]: [PopType.GetWorkforce(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$$TAB$$TAB$[concept_dependents]: [PopType.GetDependents(InterestGroup.GetCountry)|kv]\n$TAB$$TAB$[concept_political_strength]: [PopType.GetPolStr(InterestGroup.GetCountry)|kv][SelectLocalization(InterestGroup.GetCountry.IsPlayer, 'POP_TYPE_IN_IG_SUPPORT', '')]"
  POP_TYPE_IN_IG_SUPPORT: "\n\n[PopType.GetInterestGroupSupportDesc( InterestGroup.GetCountry )]"
  POP_TYPE_IN_IG_HEADER: "[PopListItem.GetTotalPopSize|vD] [PopType.GetNameNoIcon] support the [InterestGroup.GetNameNoIcon]"
  POP_TYPE_STRATA: "[PopType.GetName] are part of the #tooltippable #tooltip:[PopType.GetTooltipTag],POP_TYPE_BREAKDOWN [PopType.GetStrata]#!#!"
  STRATA_MEMBERSHIP_ITEM: "\n[POP_TYPE.GetPopulation(GetPlayer.Self)|vD] [POP_TYPE.GetName] ([POP_TYPE.GetPolStr(GetPlayer.Self)|vD] [concept_political_strength])"
  POP_TYPE_BREAKDOWN: "#header [GetPlayer.GetAdjectiveNoFormatting] Pops in this Strata#![PopType.GetStrataBreakdown]"
  POP_TYPE_TOOLTIP_SLAVES_AS_LABOR: "\n\n#italic Certain [Concept('concept_building', '$concept_buildings$')] employ [PopType.GetNameNoIcon] in order to replace another [concept_profession].#!"
  YOU_HAVE_RESEARCHED_THIS: "#italic You have researched this technology#!"
  CURRENTLY_BEING_RESEARCHED: "Currently being researched: $TECHNOLOGY_PROGRESS_WITH_GAIN$"
  LENS_ACTION_NUMBER: "[LensOption.GetText|v]\n[GetDescriptiveText(LensOption.GetMapInteraction)]\nThis action has #v [LensOption.GetNumberOfSelections|+]#! valid targets"
  BUILDING_ACTION_NUMBER: "[BuildingType.GetName|v]\nSelect in which [concept_state] to build [BuildingType.GetName|v]\nCan currently be built in #v [BuildingType.GetNumAvailableStatesForBuilding|+]#! different [Concept('concept_state', '$concept_states$')]"
  IS_ACTIVE: "$TEXT$ (#P Active#!)"
  IS_INACTIVE: "$TEXT$ (Inactive)"
  PRODUCTION_METHOD_OPTIONS: "You have #bold #P [ProductionMethodGroup.GetNumAvailableOptions(Building.AccessSelf)]#!#! options for [ProductionMethodGroup.GetName]"
  PRODUCTION_METHOD_OPTIONS_BULK: "You have #bold #P [ProductionMethodGroup.GetNumAvailableOptionsForBuildingType(ProductionMethodsPanelEntry.AccessBuildingType)]#!#! options for [ProductionMethodGroup.GetName]"
  FRONT_DESC_LAND_FORMAT: "[FRONT.GetName]"
  PEACE_ACCEPTANCE_YES: "#bold #P +1000#!#!"
  PEACE_ACCEPTANCE_SCORE: "$VAL|=+$"
  WAR_SUPPORT: "[concept_war_support]"
  ACCEPTANCE: "Acceptance"
  INSTITUTION_NAME_AND_LEVEL: "[Institution.GetName] (Level [Institution.GetInvestmentLevel])"
  EXPAND_BUILDING_TYPE: "Expand #bold [BuildingType.GetNameNoFormatting]#!"
  YEARLY_AVERAGE_EARNINGS_PER_EMPLOYEE: "Yearly Avg. Earnings / Employee"
  SOCIETY: "Society"
  OTHER: "Other"
  OTHER_TITLE_COLON: "#title Other:#!"
  TAB_1: "#header Tab 1#!"
  TAB_2: "#header Tab 2#!"
  TAB_3: "#header Tab 3#!"
  TAB_4: "#header Tab 4#!"
  TAB_5: "#header Tab 5#!"
  GO_TO_DETAILS: "#header Go to details#!"
  CONSTRUCTION_POINTS: "Requires $POINTS|0v$ @construction![concept_construction]"
  CONSTRUCTION_DURATION: "$WEEKS$ weeks"
  CONSTRUCTION_DURATION_UNKNOWN: "Unknown"
  CONSTRUCTION_DURATION_PAUSED: "Paused"
  CONSTRUCTION_CAMP: "Construction Camp"
  MOVE_UP: "#header Move Up in [concept_construction_queue]#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( ConstructionQueueElement.MoveUp ), '\n\n' )]#I Click to move up in queue#!\n#I Alt-click to move to top#!"
  MOVE_DOWN: "#header Move Down in [concept_construction_queue]#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( ConstructionQueueElement.MoveDown ), '\n\n' )]#I Click to move down in queue#!\n#I Alt-click to move to bottom#!"
  CANCEL_CONSTRUCTION: "Cancel Construction"
  PLAYED_BY_PLAYER_DESC: "Played by #v $PLAYER$#!"
  PLAYED_BY_AI_DESC: "Played by AI"
  OBSERVED_BY_PLAYER_DESC: "Observed by #v $PLAYER$#!"
  PLAYERS: "Players"
  NO_COLONY_GROWTH: "Country generates no colonial growth"
  COLONY_GROWTH_DESC: "Colonial growth generated by [COUNTRY.GetName]: #tooltippable #tooltip:[COUNTRY.GetTooltipTag],COLONY_GROWTH_DETAIL_TIT $VALUE$#!#!\n"
  MAX_COLONY_GROWTH_CLAMPED: "Max growth per day: #variable $MAX|%$#!"
  COLONY_GROWTH_DETAIL_TIT: "[Country.GetColonialGrowthDetails]"
  COLONY_GROWTH_DETAIL_DESC: "[COUNTRY.GetName] is generating #variable $VALUE|%$#! Colonial Growth from #variable $TOTAL_POPS_MIL$M#! incorporated population ( #variable $MULT_PER_MIL$#! per 1M people ) this is then split between #variable $NUM_COLONIES$#! colonies"
  COLONY_GROWTH_COLONIZATION_RIGHTS: "Colonial growth multiplied by x$MULT|1v$ due to [concept_colonization_rights]"

  MOBILIZED_BATTALIONS_WITH_GENERAL_FULL_COUNT: "With [Concept('concept_general', '$concept_generals$')]: @battalions!$TOTAL|v$"
  MOBILIZED_BATTALIONS_WITH_GENERAL_NOT_FULL_COUNT: "With [Concept('concept_general', '$concept_generals$')]: @battalions!$FULLY_MOBILIZED|v$/$TOTAL|v$"
  MOBILIZED_BATTALIONS_IN_GARRISON_COUNT: "In Garrison: @battalions!$VALUE|v$"
  MOBILIZED_REGULARS_WITH_GENERAL_TOOLTIP_LEFT: "@battalions![WarPanel.GetLeftLeader.GetRegularBattalionsWithGeneralsRaw|v] Regular [Concept('concept_battalion','$concept_battalions$')] are assigned to [Concept('concept_general', '$concept_generals$')] and [WarPanel.GetLeftLeader.GetFullyMobilizedRegularPercentageRaw|%0v] of them are [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]\n\n[WarPanel.GetLeftLeader.GetRegularBattalionsWithGeneralBreakdown]"
  MOBILIZED_REGULARS_WITH_GENERAL_TOOLTIP_RIGHT: "@battalions![WarPanel.GetRightLeader.GetRegularBattalionsWithGeneralsRaw|v] Regular [Concept('concept_battalion','$concept_battalions$')] are assigned to [Concept('concept_general', '$concept_generals$')] and [WarPanel.GetRightLeader.GetFullyMobilizedRegularPercentageRaw|%0v] of them are [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]\n\n[WarPanel.GetRightLeader.GetRegularBattalionsWithGeneralBreakdown]"
  MOBILIZED_REGULARS_WITH_GENERAL_TOOLTIP: "@battalions![Country.GetRegularBattalionsWithGeneralsRaw|v] Regular [Concept('concept_battalion','$concept_battalions$')] are assigned to [Concept('concept_general', '$concept_generals$')] and [Country.GetFullyMobilizedRegularPercentageRaw|%0v] of them are [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]\n\n[Country.GetRegularBattalionsWithGeneralBreakdown]"
  MOBILIZED_REGULARS_IN_GARRISON_TOOLTIP: "@battalions![Country.GetRegularBattalionsInGarrisonRaw|v] Regular [Concept('concept_battalion','$concept_battalions$')] are not assigned to a [concept_general]\n\n[Country.GetRegularBattalionsInGarrisonBreakdown]"
  MOBILIZED_CONSCRIPTS_WITH_GENERAL_TOOLTIP: "@battalions![Country.GetConscriptedBattalionsWithGeneralsRaw|v] [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] are assigned to [Concept('concept_general', '$concept_generals$')] and [Country.GetFullyMobilizedConscriptsPercentageRaw|%0v] of them are [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]\n\n[Country.GetConscriptedBattalionsWithGeneralBreakdown]"
  MOBILIZED_CONSCRIPTS_IN_GARRISON_TOOLTIP: "@battalions![Country.GetConscriptedBattalionsInGarrisonRaw|v] [Concept('concept_conscript_battalion','$concept_conscript_battalions$')] are not assigned to a [concept_general]\n\n[Country.GetConscriptedBattalionsInGarrisonBreakdown]"
  GENERALS_HEADER_COUNT: "[Concept('concept_general', '$concept_generals$')] ([GetDataModelSize( Country.AccessGenerals )|v0])"
  MOBILIZED_BATTALIONS_HEADER_COUNT: "Mobilized @battalions![Country.GetBattalionsFullyMobilized|v0]/[Country.GetBattalionsWithGeneralRaw]"
  MOBILIZED_BATTALIONS_HEADER_TOOLTIP: "[Country.GetFullyMobilizedBattalionsPercentageRaw|%0v] of all [Concept('concept_battalion','$concept_battalions$')] in [Country.GetName] are [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]"
  MOBILIZED_BATTALIONS_WITH_GENERAL_COUNT: "With [Concept('concept_general', '$concept_generals$')]: [Country.GetBattalionsFullyMobilized|v0]/[Country.GetBattalionsMobilizable]"
  ADMIRALS_HEADER_COUNT: "[Concept('concept_admiral', '$concept_admirals$')] ([GetDataModelSize( Country.AccessAdmirals )|v0])"
  ACTIVE_FLOTILLAS_HEADER_COUNT: "Active [Country.GetWarshipsFielded|v0]/[Country.GetWarshipsCapacity] @flotillas!"
  TOTAL_FLOTILLAS: "Total flotillas"
  CANAL_WRONG_STATE_REGION: "#N Can only be built in [STATE_REGION.GetName]#!"
  MOBILIZE_GENERAL: "Mobilize"
  MOBILIZE_GENERAL_TOOLTIP: "#header $concept_mobilize_general$#!\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty( GetDesc( Character.Mobilize ), '\n\n' )]$concept_mobilize_general_desc$\n\nEstimated Cost / Week: [Character.GetMobilizationCostDesc]"
  MOBILIZE_GENERAL_COST_WITH_BREAKDOWN: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K-=$#!#!"
  MOBILIZE_GENERAL_COST_NO_BREAKDOWN: "@money!$COST|K-=$"
  MOBILIZE_GENERAL_COST_ITEM: "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K-=$#!#!"
  MOBILIZE_GENERAL_COST_ITEM_NO_BREAKDOWN: "[Building.GetName] in [Building.GetState.GetName]: @money!$COST|K-=$"
  MOBILIZE_ALL_GENERALS_BUTTON: "Mobilize All"
  MOBILIZE_ALL_GENERALS: "Mobilize all [Concept('concept_general', '$concept_generals$')]"
  MOBILIZE_ALL_GENERALS_HEADER: "Mobilize all [Concept('concept_general', '$concept_generals$')]?"
  MOBILIZE_ALL_GENERALS_QUESTION: "#bold This will [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilize$')] #v [Country.GetNumberOfUnmobilizedGenerals]#! [Concept('concept_general', '$concept_general_plural_singular$')]:"
  MOBILIZE_ALL_GENERALS_MOBILIZED_GENERALS: "Currently, there are #v [Country.GetNumberOfMobilizedGenerals]#! [Concept('concept_general', '$concept_general_plural_singular$')] already [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]."
  MOBILIZE_ALL_GENERALS_BATTALIONS: "Resulting in a total of @battalions!#v [Country.GetBattalionsMobilizable|0]#! [Concept('concept_battalion', '$concept_battalions$')] that will begin their [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilization$')]."
  MOBILIZE_ALL_GENERALS_ESTIMATED_COST: "Estimated increased Cost / Week: [Country.GetPotentialMobilizationCostDesc]"
  MOBILIZE_ALL_GENERALS_COST_WITH_BREAKDOWN: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K-=$#!#!"
  MOBILIZE_ALL_GENERALS_COST_NO_BREAKDOWN: "@money!$COST|K-=$"
  MOBILIZE_ALL_GENERALS_COST_ITEM: "[Character.GetFullName]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K-=$#!#!"
  MOBILIZE_ALL_GENERALS_CANNOT_UNDONE: "#warning @warning! This action can not be undone until all your current wars have ended"
  GENERAL_IS_MOBILIZED_TOOLTIP: "This [concept_general] is [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')].\n\nCost / Week: [Character.GetMobilizationCostDesc]"
  CANNOT_MOBILIZE_GENERALS_NO_DIPLO_PLAY: "[concept_country] must be part of a [concept_diplomatic_play]"
  CANNOT_MOBILIZE_GENERAL_NOT_A_GENERAL: "Only [Concept('concept_general', '$concept_generals$')] can be [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]"
  CANNOT_MOBILIZE_GENERAL_ALREADY_MOBILIZED: "[Character.GetFullName] is already [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]"
  CANNOT_MOBILIZE_GENERAL_BUSY: "[Character.GetFullName] is busy"
  CANNOT_MOBILIZE_GENERAL_OCCUPIED: "[Character.GetLocationHQ().GetName] is not under our control"
  CANNOT_MOBILIZE_GENERALS_NO_GENERAL: "No [concept_general] in [concept_country] to [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilize$')]"
  CANNOT_MOBILIZE_GENERALS_ALREADY_MOBILIZED: "All [Concept('concept_general', '$concept_generals$')] already [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilized$')]"
  GENERAL_MOBILIZING_TOOLTIP: "[Character.GetFullName] [Character.GetMobilizationPercentageFormatted]"
  BUILDING_MOBILIZED_BATTALIONS_TOOLTIP: "#header #v [Building.GetNumberOfFullyMobilizedBattalions]#! / [Building.GetNumberOfCombatUnits] [concept_fully_mobilized_battalions] from [Building.GetState.GetName]#!\n$TOOLTIP_DELIMITER$\n#v [Building.GetNumberOfFullyMobilizedBattalions]#! [Concept('concept_battalion','$concept_battalions$')] are [Concept('concept_mobilize_battalion','$concept_mobilize_battalion_mobilized$')] out of a total of #v [Building.GetNumberOfCombatUnits]#! from the [Building.GetName] in [Building.GetState.GetName]"
  GENERAL_TRAVELING: "Traveling"
  GENERAL_TRAVELING_FRONT_PANEL: "$GENERAL_TRAVELING$ ([Character.GetDaysToCompleteTravelFormatted])"
  GENERAL_TRAVELING_TOOLTIP: "[Character.GetFirstName|v] will arrive in [Front.GetName] in [Character.GetDaysToCompleteTravelFormatted]."
  GENERAL_TRAVELING_TOOLTIP_LESS_THAN_ONE_DAY: "[Character.GetFirstName|v] will arrive in [Front.GetName] in less than #variable 1#! day."
  GENERAL_TRAVEL_DAY: "day"
  GENERAL_TRAVEL_DAYS: "days"
  ACTIVATE_CONSCRIPTION_CENTER: "Activate Conscription Center"
  ACTIVATE_CONSCRIPTION_CENTER_TOOLTIP: "#header Activate [concept_conscription_center]#!\n$TOOLTIP_DELIMITER$\nSize: [Building.GetExpansionLevel|v]\nUnit Capacity: [Building.GetCombatUnitCapacityDesc]$TROOP_ALLOCATION_CHANGES_ACTIVATE_CONSCRIPTION_CENTER$"
  CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_LAW: "[concept_country] must have a conscription law"
  CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_DIPLO_PLAY: "[concept_country] must be part of a [concept_diplomatic_play]"
  CANNOT_ACTIVATE_CONSCRIPTION_CENTER_NO_CONSCRIPTION_CENTER: "Insufficient civilian population in [State.GetName] to raise any [Concept('concept_conscript_battalion','$concept_conscript_battalions$')]"
  CANNOT_ACTIVATE_CONSCRIPTION_CENTER_OCCUPIED: "[State.GetName] is occupied by the enemy"
  CANNOT_ACTIVATE_CONSCRIPTION_CENTER_ALREADY_ACTIVE: "[State.GetName] is already [Concept('concept_conscription_center','$concept_conscripted$')]"
  CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_NO_CONSCRIPTION_CENTER: "You do not have any available [Concept('concept_conscription_center','$concept_conscription_center$')]"
  CANNOT_ACTIVATE_CONSCRIPTION_CENTERS_ALREADY_ACTIVE: "All [Concept('concept_conscription_center', '$concept_conscription_centers$')] already active"
  CONSCRIPTION_COST_WITH_BREAKDOWN: "#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K+=$#!#!"
  CONSCRIPTION_COST_NO_BREAKDOWN: "@money!$COST|K+=$"
  CONSCRIPTION_COST_ITEM: "[Building.GetName] in [Building.GetState.GetName]: #tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] @money!$COST|K+=$#!#!"
  DESIGNATE_STRATEGIC_OBJECTIVE_RIGHT_CLICK_ADD: "Designate as a [concept_strategic_objective]"
  DESIGNATE_STRATEGIC_OBJECTIVE_RIGHT_CLICK_REMOVE: "Remove from [Concept('concept_strategic_objective', '$concept_strategic_objectives$')]"
  DESIGNATE_STRATEGIC_OBJECTIVE_RIGHT_CLICK_ADD_TOOLTIP: "Designate [State.GetName] as a [concept_strategic_objective]"
  DESIGNATE_STRATEGIC_OBJECTIVE_RIGHT_CLICK_REMOVE_TOOLTIP: "Remove [State.GetName] from [Concept('concept_strategic_objective', '$concept_strategic_objectives$')]"
  DESIGNATE_STRATEGIC_OBJECTIVE_TOOLTIP_ADD: "Designate $STATE$ as a [concept_strategic_objective]"
  DESIGNATE_STRATEGIC_OBJECTIVE_TOOLTIP_REMOVE: "Remove $STATE$ from [Concept('concept_strategic_objective', '$concept_strategic_objectives$')]"
  activate_conscription_centers_lens_option: "Activate Conscription Centers"
  activate_conscription_centers_lens_option_tooltip: "#header Activate Conscription Centers#!\n$TOOLTIP_DELIMITER$\nSelect [Concept('concept_state', '$concept_states$')] where you would like to activate [Concept('concept_conscription_center', '$concept_conscription_centers$')]"

  designate_strategic_objective_lens_option: "Designate Strategic Objective"
  designate_strategic_objective_lens_option_tooltip: "#header Designate [concept_strategic_objective]#!\n$TOOLTIP_DELIMITER$\nSelect [Concept('concept_state', '$concept_states$')] that you would like to designate as a [concept_strategic_objective]"
  recruit_generals_lens_option: "Recruit Generals"
  recruit_generals_lens_option_tooltip: "Recruit Generals for a [concept_hq]."
  recruit_admirals_lens_option: "Recruit Admirals"
  recruit_admirals_lens_option_tooltip: "Recruit Admirals for a [concept_hq]."
  EVENT_HIGHLIGHTED_OPTION: "This option is available because:"
  EVENT_HIGHLIGHTED_OPTION_NOT: "This option is unavailable because:"
  notification_country_mobilization_name: "[SCOPE.sCountry('actor').GetName] begins [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilization$')]"
  notification_country_mobilization_desc: "Our [SelectLocalization( SCOPE.sDiplomaticPlay('diplomatic_play').AreOnSameSide( GetPlayer, SCOPE.sCountry('actor') ), 'ally', 'enemy' )] [SCOPE.sCountry('actor').GetName] begins [Concept('concept_mobilize_general', '$concept_mobilize_general_mobilizing$')] their [Concept('concept_general', '$concept_generals$')]."
  notification_country_mobilization_tooltip: "#header $notification_country_mobilization_name$#!\n$notification_country_mobilization_desc$"
  notification_country_conscription_name: "[SCOPE.sCountry('actor').GetName] begins [Concept('concept_conscription_center', '$concept_conscription_center_conscription$')]"
  notification_country_conscription_desc: "Our [SelectLocalization( SCOPE.sDiplomaticPlay('diplomatic_play').AreOnSameSide( GetPlayer , SCOPE.sCountry('actor') ), 'ally', 'enemy' )] [SCOPE.sCountry('actor').GetName] begins activating their [Concept('concept_conscription_center', '$concept_conscription_centers$')]."
  notification_country_conscription_tooltip: "#header $notification_country_conscription_name$#!\n$notification_country_conscription_desc$"
  notification_country_revolution_name: "[concept_revolution]!"
  notification_country_revolution_desc: "[concept_revolution] is upon us!"
  notification_country_revolution_tooltip: "#header $notification_country_revolution_name$#!\n$notification_country_revolution_desc$"
  notification_country_secession_name: "[concept_secession]!"
  notification_country_secession_desc: "The [SCOPE.GetRootScope.GetCivilWar.GetCulture.GetName] has seceded!"
  notification_country_secession_tooltip: "#header $notification_country_secession_name$#!\n$notification_country_secession_desc$"
  notification_wargoal_added_name: "[concept_war_goal] Added!"
  notification_wargoal_added_desc: "A [concept_war_goal] has been added for [SCOPE.sCountry('actor').GetName]."
  notification_wargoal_added_tooltip: "#header $notification_wargoal_added_name$#!\n$notification_wargoal_added_desc$"
  notification_wargoal_removed_name: "[concept_war_goal] Removed!"
  notification_wargoal_removed_desc: "A [concept_war_goal] for [SCOPE.sCountry('actor').GetName] has been removed."
  notification_wargoal_removed_tooltip: "#header $notification_wargoal_removed_name$#!\n$notification_wargoal_removed_desc$"
  notification_election_results_name: "[concept_election]!"
  notification_election_results_desc: "[concept_election] results in [SCOPE.GetRootScope.GetCountry.GetName] are in!\n[SCOPE.GetRootScope.GetCountry.GetLastElectionResultsTooltip]"
  notification_election_results_tooltip: "#header $notification_election_results_name$#!\n$notification_election_results_desc$"
  notification_new_trade_route_name: "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetFlagTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetDirectionName] Route for [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName]"
  notification_new_trade_route_desc: "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetName] started an [SCOPE.GetRootScope.GetTradeRoute.GetDirectionName] Route for [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName] from the [SCOPE.GetRootScope.GetTradeRoute.GetExportingMarket.GetName] to the [SCOPE.GetRootScope.GetTradeRoute.GetImportingMarket.GetName]. [SCOPE.GetRootScope.GetTradeRoute.GetPredictedFinalLevelShortDesc]"
  notification_new_trade_route_tooltip: "#header $notification_new_trade_route_name$#!\n$notification_new_trade_route_desc$"
  notification_canceled_trade_route_name: "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetFlagTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetDirectionName] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName] Route Canceled"
  notification_canceled_trade_route_desc: "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetName] cancelled their [SCOPE.GetRootScope.GetTradeRoute.GetDirectionName] Route for [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName] from the [SCOPE.GetRootScope.GetTradeRoute.GetExportingMarket.GetName] to the [SCOPE.GetRootScope.GetTradeRoute.GetImportingMarket.GetName]"
  notification_canceled_trade_route_tooltip: "#header $notification_canceled_trade_route_name$#!\n$notification_canceled_trade_route_desc$"
  notification_new_significant_trade_route_name: "Significant $notification_new_trade_route_name$"
  notification_new_significant_trade_route_desc: "$notification_new_trade_route_desc$"
  notification_new_significant_trade_route_tooltip: "$notification_new_trade_route_tooltip$"
  notification_canceled_significant_trade_route_name: "Significant $notification_canceled_trade_route_name$"
  notification_canceled_significant_trade_route_desc: "$notification_canceled_trade_route_desc$"
  notification_canceled_significant_trade_route_tooltip: "$notification_canceled_trade_route_tooltip$"
  notification_commander_move_name: "[SCOPE.GetRootScope.GetCharacter.GetFullName] moved"
  notification_commander_move_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName] and [SCOPE.GetRootScope.GetCharacter.GetHerHis] #variable [SCOPE.GetRootScope.GetCharacter.GetCombatUnitsTypeIcon][SCOPE.GetRootScope.GetCharacter.GetNumCombatUnits]#! has moved to the [SCOPE.GetRootScope.GetCharacter.GetLocationHQ.GetName]"
  notification_commander_move_tooltip: "#header $notification_commander_move_name$#!\n$notification_commander_move_desc$"
  notification_naval_invasion_failed_name: "Failed Naval Invasion"
  notification_naval_invasion_failed_desc: "Naval Invasion of [SCOPE.sState( 'state' ).GetName] aborted. Commanders involved has reverted to default orders."
  notification_naval_invasion_failed_tooltip: "#header $notification_naval_invasion_failed_name$#!\n$notification_naval_invasion_failed_desc$"

  notification_naval_invasion_succeeded_name: "Successful Naval Invasion"
  notification_naval_invasion_succeeded_desc: "Naval Invasion of [SCOPE.sState( 'state' ).GetName] was successful and we have seized a beachhead."
  notification_naval_invasion_succeeded_tooltip: "#header $notification_naval_invasion_succeeded_name$#!\n$notification_naval_invasion_succeeded_desc$"
  notification_naval_invasion_against_us_name: "[SCOPE.sCountry( 'actor' ).GetAdjective] Naval Invasion"
  notification_naval_invasion_against_us_desc: "[SCOPE.sCountry( 'actor' ).GetName] has launched a Naval Invasion against [SCOPE.sState( 'state' ).GetName]."
  notification_naval_invasion_against_us_tooltip: "#header $notification_naval_invasion_against_us_name$#!\n$notification_naval_invasion_against_us_desc$"

  notification_our_convoy_raiders_intercepted_name: "Our Convoy Raiders Intercepted"
  notification_our_convoy_raiders_intercepted_desc: "[SCOPE.sCharacter( 'defender_commander' ).GetFullName] was intercepted by hostile [concept_admiral] [SCOPE.sCharacter( 'attacker_commander' ).GetFullName] while [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] in [SCOPE.sStrategicRegion( 'region' ).GetName]."
  notification_our_convoy_raiders_intercepted_tooltip: "#header $notification_our_convoy_raiders_intercepted_name$#!\n$notification_our_convoy_raiders_intercepted_desc$"

  notification_enemy_convoy_raiders_intercepted_name: "Enemy Convoy Raiders Intercepted"
  notification_enemy_convoy_raiders_intercepted_desc: "[SCOPE.sCharacter( 'attacker_commander' ).GetFullName] intercepted hostile [concept_admiral] [SCOPE.sCharacter( 'defender_commander' ).GetFullName] that is [Concept('concept_raid_convoys', '$concept_convoy_raiding$')] in [SCOPE.sStrategicRegion( 'region' ).GetName]."
  notification_enemy_convoy_raiders_intercepted_tooltip: "#header $notification_enemy_convoy_raiders_intercepted_name$#!\n$notification_enemy_convoy_raiders_intercepted_desc$"
  notification_journal_entry_activated_name: "New [concept_journal_entry]: [SCOPE.GetRootScope.GetJournalEntry.GetName]"
  notification_journal_entry_activated_desc: "[SCOPE.GetRootScope.GetJournalEntry.GetName] added to the Journal"
  notification_journal_entry_activated_tooltip: "#header $notification_journal_entry_activated_name$#!\n$notification_journal_entry_activated_desc$"
  notification_journal_entry_deactivated_name: "[SCOPE.GetRootScope.GetJournalEntry.GetName] Closed"
  notification_journal_entry_deactivated_desc: "[SCOPE.GetRootScope.GetJournalEntry.GetName] removed from the Journal"
  notification_journal_entry_deactivated_tooltip: "#header $notification_journal_entry_added_name$#!\n$notification_journal_entry_added_desc$"
  notification_journal_entry_completed_name: "[SCOPE.GetRootScope.GetJournalEntry.GetName] Completed"
  notification_journal_entry_completed_desc: "[SCOPE.GetRootScope.GetJournalEntry.GetName] was successfully completed"
  notification_journal_entry_completed_tooltip: "#header $notification_journal_entry_completed_name$#!\n$notification_journal_entry_completed_desc$"
  notification_native_uprising_notification_name: "[SCOPE.sCountry('actor').GetName] Uprising"
  notification_native_uprising_notification_desc: "[SCOPE.sCountry('actor').GetName] have launched a [concept_native_uprising] against us!"
  notification_native_uprising_notification_tooltip: "#header $notification_native_uprising_notification_name$#!\n$notification_native_uprising_notification_desc$"
  notification_political_movement_formed_name: "[SCOPE.GetRootScope.GetPoliticalMovement.GetName] [concept_political_movement]"
  notification_political_movement_formed_desc: "A new [concept_political_movement] to [SCOPE.GetRootScope.GetPoliticalMovement.GetName] has formed. Their [Concept('concept_political_movement_support', '$concept_political_movement_support_short$')] is [SCOPE.GetRootScope.GetPoliticalMovement.GetSupport|v0] and their [Concept('concept_political_movement_radicalism', '$concept_political_movement_radicalism_short$')] is [SCOPE.GetRootScope.GetPoliticalMovement.GetRadicalism|v0]."
  notification_political_movement_formed_tooltip: "#header $notification_political_movement_formed_name$#!\n$notification_political_movement_formed_desc$"
  notification_political_movement_disbanded_name: "[concept_political_movement] Disbanded"
  notification_political_movement_disbanded_desc: "The [concept_political_movement] to [SCOPE.GetRootScope.GetPoliticalMovement.GetName] has disbanded"
  notification_political_movement_disbanded_tooltip: "#header $notification_political_movement_disbanded_name$#!\n$notification_political_movement_disbanded_desc$"
  notification_obligation_owed_to_us_expired_name: "[SCOPE.sCountry('target_country').GetAdjectiveNoFormatting] [concept_obligation] Expired"
  notification_obligation_owed_to_us_expired_desc: "The [concept_obligation] owed to us by [SCOPE.sCountry('target_country').GetName] has expired"
  notification_obligation_owed_to_us_expired_tooltip: "#header $notification_obligation_owed_to_us_expired_name$#!\n$notification_obligation_owed_to_us_expired_desc$"
  notification_obligation_owed_by_us_expired_name: "Our [concept_obligation] Expired"
  notification_obligation_owed_by_us_expired_desc: "The [concept_obligation] we owed to [SCOPE.sCountry('target_country').GetName] has expired"
  notification_obligation_owed_by_us_expired_tooltip: "#header $notification_obligation_owed_by_us_expired_name$#!\n$notification_obligation_owed_by_us_expired_desc$"
  notification_country_owes_obligation_tooltip: "#header $notification_country_owes_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owes_obligation_desc$"
  notification_country_owes_obligation_name: "[concept_obligation] to [SCOPE.sCountry('actor').GetName]"
  notification_country_owes_obligation_desc: "We now owe an [concept_obligation] to [SCOPE.sCountry('actor').GetName]"

  notification_country_owed_obligation_tooltip: "#header $notification_country_owed_obligation_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owed_obligation_desc$"
  notification_country_owed_obligation_name: "[concept_obligation] from [SCOPE.sCountry('recipient').GetName]"
  notification_country_owed_obligation_desc: "[SCOPE.sCountry('recipient').GetName] now owes us an [concept_obligation]"
  notification_country_owes_obligation_removed_tooltip: "#header $notification_country_owes_obligation_removed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owes_obligation_removed_desc$"
  notification_country_owes_obligation_removed_name: "[concept_obligation] to [SCOPE.sCountry('actor').GetName] Removed"
  notification_country_owes_obligation_removed_desc: "We no longer owe an [concept_obligation] to [SCOPE.sCountry('actor').GetName]"

  notification_country_owed_obligation_removed_tooltip: "#header $notification_country_owed_obligation_removed_name$#!\n$TOOLTIP_DELIMITER$\n$notification_country_owed_obligation_removed_desc$"
  notification_country_owed_obligation_removed_name: "[concept_obligation] from [SCOPE.sCountry('recipient').GetName] Removed"
  notification_country_owed_obligation_removed_desc: "[SCOPE.sCountry('recipient').GetName] no longer owes us an [concept_obligation]"
  notification_unification_candidate_added_name: "[SCOPE.sCountry('actor').GetName] becomes a [concept_unification_candidate]"
  notification_unification_candidate_added_desc: "[SCOPE.sCountry('actor').GetName] is now a [concept_unification_candidate] for [SCOPE.sCountryFormation('country_formation').GetName] and may receive support from lesser [SCOPE.sCountryFormation('country_formation').GetAdjective] [Concept('concept_country', '$concept_countries$')]"
  notification_unification_candidate_added_tooltip: "#header $notification_unification_candidate_added_name$#!\n$notification_unification_candidate_added_desc$"
  notification_unification_candidate_removed_name: "[SCOPE.sCountry('actor').GetName] no longer a [concept_unification_candidate]"
  notification_unification_candidate_removed_desc: "[SCOPE.sCountry('actor').GetName] is no longer [concept_unification_candidate] for [SCOPE.sCountryFormation('country_formation').GetName]"
  notification_unification_candidate_removed_tooltip: "#header $notification_unification_candidate_removed_name$#!\n$notification_unification_candidate_removed_desc$"
  notification_start_supporting_unification_name: "[SCOPE.sCountry('actor').GetName] supports [SCOPE.sCountry('recipient').GetName]"
  notification_start_supporting_unification_desc: "[SCOPE.sCountry('actor').GetName] is now supporting [SCOPE.sCountry('recipient').GetName] as [concept_unification_candidate] for [SCOPE.sCountryFormation('country_formation').GetName]"
  notification_start_supporting_unification_tooltip: "#header $notification_start_supporting_unification_name$#!\n$notification_start_supporting_unification_desc$"
  notification_stop_supporting_unification_name: "[SCOPE.sCountry('actor').GetName] ends support for [SCOPE.sCountry('recipient').GetName]"
  notification_stop_supporting_unification_desc: "[SCOPE.sCountry('actor').GetName] is no longer supporting [SCOPE.sCountry('recipient').GetName] as [concept_unification_candidate] for [SCOPE.sCountryFormation('country_formation').GetName]"
  notification_stop_supporting_unification_tooltip: "#header $notification_stop_supporting_unification_name$#!\n$notification_stop_supporting_unification_desc$"
  notification_shipping_lane_trade_route_invalidated_name: "Trade Route Removed"
  notification_shipping_lane_trade_route_invalidated_desc: "[SCOPE.GetRootScope.GetTradeRoute.GetOwner.GetFlagTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetTextIcon] [SCOPE.GetRootScope.GetTradeRoute.GetGoods.GetName] [concept_trade_route] to [SCOPE.GetRootScope.GetTradeRoute.GetRemoteMarket.GetName] removed due to no reachable Ports in [SCOPE.GetRootScope.GetTradeRoute.GetRemoteMarket.GetOwner.GetName]"
  notification_shipping_lane_trade_route_invalidated_tooltip: "#header $notification_shipping_lane_trade_route_invalidated_name$#!\n$notification_shipping_lane_trade_route_invalidated_desc$"
  notification_shipping_lane_commander_order_invalidated_name: "New Commander Order"
  notification_shipping_lane_commander_order_invalidated_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName] now has [SCOPE.GetRootScope.GetCharacter.GetCommanderOrder.GetType.GetName] Order due to previous assignment being unreachable"
  notification_shipping_lane_commander_order_invalidated_tooltip: "#header $notification_shipping_lane_commander_order_invalidated_name$#!\n$notification_shipping_lane_commander_order_invalidated_desc$"
  notification_enemy_convoys_raided_name: "[SCOPE.sCountry('target').GetAdjective] [concept_convoys] sunk"
  notification_enemy_convoys_raided_desc: "[SCOPE.GetRootScope.GetCharacter.GetFullName] sunk #v [SCOPE.GetRootScope.GetCharacter.GetLastConvoyRaidingDamageTo(SCOPE.sCountry('target').Self)]#! [SCOPE.sCountry('target').GetAdjective] [concept_convoys] in [SCOPE.GetRootScope.GetCharacter.GetCommanderOrder.GetStrategicRegion.GetName]"
  notification_enemy_convoys_raided_tooltip: "#header $notification_enemy_convoys_raided_name$#!\n$notification_enemy_convoys_raided_desc$"

  notification_our_convoys_raided_name: "Our [concept_convoys] sunk"
  notification_our_convoys_raided_desc: "A hostile [concept_admiral] sunk #v [SCOPE.GetRootScope.GetCharacter.GetLastConvoyRaidingDamageTo(SCOPE.sCountry('target').Self)]#! of our [concept_convoys]. We think the attack happened in one of these Sea Zones: [SCOPE.GetRootScope.GetCharacter.GetSeaNodesMightBeConvoyRaidingInDesc(SCOPE.sCountry('target').Self)]"
  notification_our_convoys_raided_tooltip: "#header $notification_our_convoys_raided_name$#!\n$notification_our_convoys_raided_desc$"
  HOUR_NIGHT: "Night"
  HOUR_MORNING: "Morning"
  HOUR_AFTERNOON: "Afternoon"
  HOUR_EVENING: "Evening"
  DAY_MONDAY: "Monday"
  DAY_TUESDAY: "Tuesday"
  DAY_WEDNESDAY: "Wednesday"
  DAY_THURSDAY: "Thursday"
  DAY_FRIDAY: "Friday"
  DAY_SATURDAY: "Saturday"
  DAY_SUNDAY: "Sunday"
  TOOLTIP_TYPE_CONSTITUTION_LAW: "[concept_law]"
  TOOLTIP_TYPE_LAW_GROUP: "Law Group"
  TOOLTIP_TYPE_LAW_TYPE: "Law Type"
  TOOLTIP_TYPE_MARKET: "[concept_market]"
  TOOLTIP_TYPE_DECREE_TYPE: "[concept_decree]"
  TOOLTIP_TYPE_INSTITUTION: "[concept_institution]"
  TOOLTIP_TYPE_INSTITUTION_TYPE: "Institution Type"
  TOOLTIP_TYPE_INTEREST_GROUP: "[concept_interest_group]"
  TOOLTIP_TYPE_PARTY: "[concept_party]"
  TOOLTIP_TYPE_IDEOLOGY: "[concept_ideology]"
  TOOLTIP_TYPE_GAME_CONCEPT_TYPE: "Game Concept"
  TOOLTIP_TYPE_GOODS: "[SelectLocalization(Goods.IsTradeable, 'GOODS', 'NON_TRADEABLE_GOODS')]"
  TOOLTIP_TYPE_PROFESSION: "[concept_profession]"
  TOOLTIP_TYPE_POP: "[concept_pop]"
  TOOLTIP_TYPE_COUNTRY: "[concept_country]"
  TOOLTIP_TYPE_CULTURE: "[concept_culture]"
  TOOLTIP_TYPE_RELIGION: "[concept_religion]"
  TOOLTIP_TYPE_CULTURAL_TRAIT: "[concept_cultural_trait]"
  TOOLTIP_TYPE_STATE: "[concept_state]"
  TOOLTIP_TYPE_STATE_REGION: "[concept_state_region]"
  TOOLTIP_TYPE_BUILDING: "[Building.GetBuildingType.GetBuildingKindDesc(Building.GetOwner.Self)]"
  TOOLTIP_TYPE_BUILDING_TYPE: "[BuildingType.GetBuildingKindDesc(GetPlayer.Self)]"
  TOOLTIP_TYPE_CHARACTER: "[concept_character]"
  TOOLTIP_TYPE_CHARACTER_TRAIT: "Trait"
  TOOLTIP_TYPE_COMMANDER_RANK: "Commander Rank"
  TOOLTIP_TYPE_PRODUCTION_METHOD: "[concept_production_method]"
  TOOLTIP_TYPE_TECHNOLOGY: "Technology"
  TOOLTIP_TYPE_INTEREST_GROUP_TRAIT: "IG Trait"
  TOOLTIP_TYPE_STRATEGIC_REGION: "[concept_strategic_region]"
  TOOLTIP_TYPE_WAR: "[concept_war]"
  TOOLTIP_TYPE_CANAL_TYPE: "Canal Type"
  TOOLTIP_TYPE_OBJECTIVE_TYPE: "Objective Type"
  TOOLTIP_TYPE_OBJECTIVE: "Objective"
  TOOLTIP_TYPE_LEGITIMACY_LEVEL: "Legitimacy Level"
  TOOLTIP_TYPE_FRONT: "[concept_front]"
  NON_TRADEABLE_GOODS: "[Concept('concept_good','$NON_TRADEABLE_GOODS_FULL$')]"
  GOODS: "[concept_good]"
  NON_TRADEABLE_GOODS_FULL: "Non-Tradeable Goods"
  GOOD_CAN_BE_PRODUCED_BY: "#title Can be produced by#!"
  GOOD_CAN_BE_USED_BY: "#title Can be used by#!"
  DECISIONS: "Decisions"
  JOURNAL: "Journal"
  TOOLTIP_SLAVE_STATE: "#header Slave State#!\nBuildings in [State.GetName] either utilize $slaves$ or have the potential to utilize them."
  SLAVE_STATE: "Slave State"
  SLAVE_IMPORT: "Importing Slaves"
  SLAVE_EXPORT: "Exporting Slaves"
  SLAVE_IMPORT_MARKER_DESC: "This state is currently importing slaves from [STATE.GetName]."
  SLAVE_EXPORT_MARKER_DESC: "This state is currently exporting slaves to the following states: "
  SLAVE_EXPORT_MARKER_DESC_ITEM: "[STATE.GetName]"
  TOOLTIP_STATE_SLAVE_IMPORT_STATES: "[STATE.GetName] imported a total of #variable $AMOUNT|K+$#! slaves from $STATES_LIST$ last week"
  TOOLTIP_STATE_SLAVE_EXPORT_STATES: "[STATE.GetName] exported a total of #variable $AMOUNT|K+$#! slaves to $STATES_LIST$ last week"
  NICOLAS_TEST: "TESTING"
  NO_UNPRESSED_WAR_GOALS: "No Unpressed War Goals"
  GAME_CHECKSUM_CHANGED_FROM_SAVE_FILE: "@warning_icon!#X Invalid Checksum for Achievements#!\nThis save was valid for Achievements on a different checksum, loading it will disable Achievements in the save."
  MODIFIER_CONSCRIPTION_RATE_ADD_ADDITIONAL_INFO: "Can mobilize @battalions!$NUM_BATTALIONS|v$ [Concept('concept_battalion', '$concept_battalions$')]"
  DEFAULT_HQ_NAME: "[HQ.GetCountry.GetFlagTextIcon] [HQ.GetStrategicRegion.GetNameNoFormatting] [Concept('concept_hq', 'HQ')]"
  DEFAULT_HQ_NAME_NO_FLAG: "[HQ.GetStrategicRegion.GetNameNoFormatting] [Concept('concept_hq', 'HQ')]"
  NO_GENERALS: "No [Concept('concept_general', '$concept_generals$')]"
  NO_ADMIRALS: "No [Concept('concept_admiral', '$concept_admirals$')]"
  RESET_TECH_TREE_VIEW: "Reset"
  BUILDING_KIND_GOVERNMENT: "[concept_government_building]"
  BUILDING_KIND_MILITARY: "[concept_military_building]"
  BUILDING_KIND_SUBSISTENCE: "[concept_subsistence_building]"
  BUILDING_KIND_URBAN_CENTER: "[GetBuildingType('building_urban_center').GetName]"
  BUILDING_KIND_USES_GOVERNMENT_SLAVES: "Uses [concept_budget_government_slaves][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
  BUILDING_KIND_USES_MILITARY_SLAVES: "Uses [concept_budget_military_slaves][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
  BUILDING_KIND_USES_SLAVES: "Uses [POP_TYPE.GetName] as [TARGET_POP_TYPE.GetName][SelectLocalization( ObjectsEqual(Country.Self, GetPlayer.Self), '', 'IN_COUNTRY' )]"
  BUILDING_KIND_NON_GOVERNMENT: "[concept_building]"
  IN_COUNTRY: " in [Country.GetName]"
  BUILDING_STATUS_ESTABLISHED: "This building was established on [BUILDING.GetEstablishmentDate]"
  BUILDING_STATUS_UNDER_CONSTRUCTION: "This building is currently under construction"
  BUILDING_STATUS_EXPANDING: "This building is being expanded"
  BUILDING_STATUS_QUEUED_UNDER_CONSTRUCTION: "This building is queued for construction"
  BUILDING_STATUS_QUEUED_EXPANDING: "This building is queued for expansion"
  BUILDING_STATUS_NOT_ACTIVE: "This building is currently inactive"
  BUILDING_IS_MOBILIZED_IMPL: "[Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilizing$')] ([Building.GetMobilizationRatio|%0v])"
  BUILDING_IS_DRAFTING_IMPL: "[Concept('concept_conscript_battalion', '$concept_conscript_battalion_drafting$')] ([Building.GetEmploymentPercentage|%0v])"
  BUILDING_IS_MOBILIZED: "This building is $BUILDING_IS_MOBILIZED_IMPL$."
  CONSCRIPTION_CENTER_IS_DRAFTING: "This [concept_conscription_center] is $BUILDING_IS_DRAFTING_IMPL$."
  CONSCRIPTION_CENTER_IS_MOBILIZED_AND_DRAFTING: "This [concept_conscription_center] is $BUILDING_IS_MOBILIZED_IMPL$ and $BUILDING_IS_DRAFTING_IMPL$."
  MORE_ITEMS: " ... and $COUNT$ more items"
  MORE_ITEMS_TOOLTIPPABLE: "#tooltippable #tooltip:$TAG$ ... and $COUNT$ more items#!#!"
  ### DIPLOMATIC PLAY / WAR POPUP
  DEMANDS: "Demands"
  WARGOALS: "Wargoals"
  NO_WARGOAL: "No [concept_war_goal]"
  CAN_SWAY_COUNTRY_TOOLTIP: "Has at least one [concept_sway] that [Country.GetName] would accept"
  CANNOT_SWAY_COUNTRY_TOOLTIP: "Has no [concept_sway] that [Country.GetName] would accept"
  HAS_NO_COUNTRIES_YOU_CAN_SWAY_TOOLTIP: "You can sway no countries"
  HAS_COUNTRIES_YOU_CAN_SWAY_TOOLTIP: "You can [concept_sway] [DiplomaticPlay.GetNumberOfPossibleSwayCountriesFormatted( GetPlayer.Self )] countries."
  HAS_COUNTRIES_YOU_CAN_SWAY_TOOLTIP_NUMBER_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE|v$#!#!"
  DIPLO_PLAY_NO_SUPPORTS: "No supporting countries"
  DIPLO_PLAY_OVERVIEW: "Overview"
  DIPLO_PLAY_INVOLVED_COUNTRIES: "[SelectLocalization(DiplomaticPlay.IsTargetOrInitiator(GetMetaPlayer.GetPlayedOrObservedCountry), 'DIPLO_PLAY_SWAY_COUNTRIES', 'DIPLO_PLAY_ALLEGIANCES')]"
  DIPLO_PLAY_SWAY_COUNTRIES: "$concept_sway$ Countries"
  DIPLO_PLAY_ALLEGIANCES: "Allegiances"
  DIPLO_PLAY_POTENTIAL_FRONTS: "Potential Fronts"
  POTENTIAL_FRONTS: "Potential [Concept('concept_front', '$concept_fronts$')]"
  NO_POTENTIAL_FRONTS: "Currently no potential [Concept('concept_front', '$concept_fronts$')]"
  DIPLO_PLAY_ON_THE_FENCE: "On the Fence"
  DIPLO_PLAY_ON_THE_FENCE_TOOLTIP: "#header On the Fence#!"
  DIPLO_PLAY_SUPPORTS: "Supporting"
  DIPLO_PLAY_SUPPORTS_TARGET_TOOLTIP: "#header Supporting#! [DiplomaticPlay.GetTarget.GetName]"
  DIPLO_PLAY_SUPPORTS_INITIATOR_TOOLTIP: "#header Supporting#! [DiplomaticPlay.GetInitiator.GetName]"
  DIPLO_PLAY_LEANING_TARGET_TOOLTIP: "#header Leaning towards#! [DiplomaticPlay.GetTarget.GetName]"
  DIPLO_PLAY_LEANING_INITIATOR_TOOLTIP: "#header Leaning towards#! [DiplomaticPlay.GetInitiator.GetName]"
  DIPLO_PLAY_LEANING_TARGET: "Leaning [DiplomaticPlay.GetTarget.GetName]"
  DIPLO_PLAY_LEANING_INITIATOR: "Leaning [DiplomaticPlay.GetInitiator.GetName]"
  DIPLO_PLAY_INITIATOR: "[concept_initiator]"
  DIPLO_PLAY_TARGET: "[concept_target]"
  DIPLO_PLAY_YOU: "(You)"
  DIPLO_PLAY_TOTAL_MOBILIZED: "Total Mobilized"
  DIPLO_PLAY_CLICK_TO_SWAY: "#instruction Click to see [concept_sway] options#!"
  DIPLO_PLAY_CANNOT_SWAY: "You can only [concept_sway] during the Diplomatic Maneuvers phase"
  DIPLO_PLAY_CLICK_TO_SET_STANCE: "[SelectLocalization(DiplomaticPlay.IsInvolved(GetMetaPlayer.GetPlayedOrObservedCountry), 'DIPLO_PLAY_CLICK_STANCES', 'DIPLO_PLAY_STANCES')]"
  DIPLO_PLAY_CLICK_STANCES: "#instruction Click to set your stance#!"
  DIPLO_PLAY_STANCES: "#bold Current Stances#!"
  BELLIGERENTS: "Belligerents"
  TO_ARMS: "To Arms!"
  DIPLO_PLAY_MANEUVERS_TARGET: "[DiplomaticPlay.GetNumTargetManeuversRemaining|v]"
  DIPLO_PLAY_MANEUVERS_INITIATOR: "[DiplomaticPlay.GetNumInitiatorManeuversRemaining|v]"
  DIPLO_PLAY_TOTAL_FLOTILLAS_BREAKDOWN: "Total amount of [Concept('concept_flotilla', '$concept_flotillas$')]: [DiplomaticPlay.GetTotalNumWarshipsForSide( Country.Self )|v]\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetTotalNumWarshipsForSideBreakdown( Country.Self )]"
  DIPLO_PLAY_TOTAL_MOBILIZED_BATTALIONS_BREAKDOWN: "Total amount of [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')] [Concept('concept_battalion', '$concept_battalions$')]: [DiplomaticPlay.GetTotalNumMobilizedBattalionsForSide( Country.Self )|v]\n$TOOLTIP_DELIMITER$\n[DiplomaticPlay.GetTotalNumMobilizedBattalionsForSideBreakdown( Country.Self )]"
  DIPLO_PLAY_COUNTRY_BATTALIONS_BREAKDOWN: "[Country.GetName] has @battalions![Country.GetBattalionsFullyMobilized|v]/[Country.GetBattalions|v] [Concept('concept_mobilize_battalion', '$concept_mobilize_battalion_mobilized$')] [Concept('concept_battalion', '$concept_battalions$')]"
  DIPLO_PLAY_COUNTRY_FLOTILLAS_BREAKDOWN: "[Country.GetName] has @flotillas![Country.GetWarships|v] [Concept('concept_flotilla', '$concept_flotillas$')]"
  GOODS_INPUT_REQUIRED_FOR_NO_PENALTY: "At least [GetDefine('NEconomy', 'GOODS_SHORTAGE_PENALTY_THRESHOLD')|v%0] of [concept_buy_orders] for [Goods.GetTextIcon][Nbsp][Goods.GetName] must be satisfied to avoid an output penalty."
  GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY: "Current penalty is [Building.GetInputShortagePenalty|%v0], and will change over time towards the target penalty of [Building.CalcInputGoodsShortageTargetPenalty|%v0]."
  GOODS_INPUT_SHORTAGE_MAX_TOOLTIP: "#header [concept_input_goods_shortage] in [Building.GetName]#!\nThere are no [concept_sell_orders] available for [Goods.GetTextIcon][Nbsp][Goods.GetName] in [Building.GetState.GetStateRegion.GetName], resulting in an penalty on all outputs for this [concept_building].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$\n\n$GOODS_INPUT_REQUIRED_FOR_NO_PENALTY$"
  GOODS_INPUT_SHORTAGE_TOOLTIP: "#header [concept_input_goods_shortage] in [Building.GetName]#!\nThere is only enough [concept_sell_orders] for [Goods.GetTextIcon][Nbsp][Goods.GetName] available in [Building.GetState.GetName] to satisfy [Building.GetState.CalcSupplyToDemandRatio(Goods.Self)|%v] of the [concept_buy_orders], resulting in an penalty on all outputs for this [concept_building].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$\n\n$GOODS_INPUT_REQUIRED_FOR_NO_PENALTY$\n\n$alert_market_goods_shortage_alert_hint_data_version$"
  GOODS_OUTPUT_PENALTY_TOOLTIP: "#header [concept_input_goods_shortage] in [Building.GetName]#!\nShortages of [Building.GetGoodsShortageListDesc] results in a penalty on all outputs for this [concept_building].\n\n$GOODS_INPUT_SHORTAGE_OUTPUT_PENALTY$"
  GOODS_OUTPUT_PENALTY_LINGERING_TOOLTIP: "#header [concept_input_goods_shortage] in [Building.GetName]#!\nPrevious shortages of input [Concept('concept_good', '$concept_goods$')] has resulted in a lingering penalty on all outputs for this [concept_building].\n\nCurrent penalty is [Building.GetInputShortagePenalty|%v0], but this penalty will disappear over time."
  GOODS_SHORTAGE_STATE_DESC_INTERNAL: "@warning! [Goods.GetState.GetName] has an [concept_input_goods_shortage] of [Goods.GetName]"
  GOODS_SHORTAGE_STATE_DESC: "[SelectLocalization( Goods.GetState.IsValid, 'GOODS_SHORTAGE_STATE_DESC_INTERNAL', '' )]"
  GOODS_SHORTAGE_MARKET_DESC: "@warning! [Goods.GetMarket.GetName] has an [concept_input_goods_shortage] of [Goods.GetName]"
  GOODS_SHORTAGE_TOOLTIP: "[Goods.GetGoodsShortageDesc]\n\n$alert_market_goods_shortage_alert_hint_data_version$"
  SINGLE_GOODS_OR_EMPLOYMENT_MORE: "more"
  SINGLE_GOODS_OR_EMPLOYMENT_LESS: "less"
  UNSCALED_MODIFIERS_COLON: "#title Unscaled Modifiers:#!"
  PER_LEVEL_MODIFIERS_COLON: "#title Per Level Modifiers:#!"
  TOTAL_MODIFIERS_COLON: "#title Total Modifiers:#!"
  INCREASED_EMPLOYMENT_COLON: "#title Increased Employment:#!"
  DECREASED_EMPLOYMENT_COLON: "#title Decreased Employment:#!"
  PM_TIMED_MODIFIERS: "#title Timed Modifiers:#!\n$BREAKDOWN$"
  PM_TIMED_MODIFIER_FORMAT: "$TAB$#tooltippable #tooltip:[GetRawTextTooltipTag('$BREAKDOWN$')] [TimedModifier.GetName]#!#!"
  SINGLE_GOODS_AMOUNT_PRODUCTION_TOTAL: "#v $TOTAL_AMOUNT|D=+$#! Total"
  SINGLE_GOODS_AMOUNT_PRODUCTION_PER_LEVEL: "#v $PER_LEVEL_AMOUNT|=+D$#! per Level"
  SINGLE_GOODS_AMOUNT_CONSUMPTION_TOTAL: "#v $TOTAL_AMOUNT|D=-$#! Total"
  SINGLE_GOODS_AMOUNT_CONSUMPTION_PER_LEVEL: "#v $PER_LEVEL_AMOUNT|=-D$#! per Level"
  SINGLE_GOODS_DELTA_PRODUCTION_TOTAL: "#v $TOTAL_DELTA|=+D$#! $MORE_OR_LESS$ in Total"
  SINGLE_GOODS_DELTA_PRODUCTION_PER_LEVEL: "#v $PER_LEVEL_DELTA|=+D$#! $MORE_OR_LESS$ per Level"
  SINGLE_GOODS_DELTA_CONSUMPTION_TOTAL: "#v $TOTAL_DELTA|=-D$#! $MORE_OR_LESS$ in Total"
  SINGLE_GOODS_DELTA_CONSUMPTION_PER_LEVEL: "#v $PER_LEVEL_DELTA|=-D$#! $MORE_OR_LESS$ per Level"
  SINGLE_GOODS_MARKET_PRICE: "@money!$PRICE|1v$ $PRICE_ICON$ in [Market.GetName]"
  SINGLE_GOODS_STATE_PRICE: "@money!$PRICE|1v$ $PRICE_ICON$ in [State.GetName]"
  SINGLE_GOODS_STATE_PRICE_TOOLTIPPABLE: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$PRICE|1v$#!#! $PRICE_ICON$)"
  SINGLE_GOODS_MARKET_PRICE_RANGE: "@money!$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - @money!$MAX_PRICE|1v$ $MAX_PRICE_ICON$ in $NUM_MARKETS$ [Concept('concept_market', '$concept_markets$')]"
  SINGLE_GOODS_STATE_PRICE_RANGE: "@money!$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - @money!$MAX_PRICE|1v$ $MAX_PRICE_ICON$ in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
  SINGLE_GOODS_STATE_PRICE_RANGE_TOOLTIPPABLE: "#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MIN_PRICE|1v$#!#! $MIN_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MAX_PRICE|1v$#!#! $MAX_PRICE_ICON$ in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
  GOODS_PRICE_DELTA_SUBSTITUTION_DISCLAIMER: "@information! Some predicted price changes may not fully take effect until after [concept_goods_substitution] has occurred"
  SINGLE_GOODS_MARKET_PRICE_WITH_DELTA: "@money!$PRICE|1v$ $PRICE_ICON$ @arrow_right! @money!$AFTER_PRICE|1v$ $AFTER_PRICE_ICON$ in [Market.GetName]"
  SINGLE_GOODS_STATE_PRICE_WITH_DELTA: "@money!$PRICE|1v$ $PRICE_ICON$ @arrow_right! @money!$AFTER_PRICE|1v$ $AFTER_PRICE_ICON$ in [State.GetName]"
  SINGLE_GOODS_STATE_PRICE_TOOLTIPPABLE_WITH_DELTA: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$PRICE|1v$#!#! $PRICE_ICON$) @arrow_right! (#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$AFTER_PRICE|1v$#!#! $AFTER_PRICE_ICON$)"
  SINGLE_GOODS_MARKET_PRICE_RANGE_WITH_DELTA: "(@money!$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - @money!$MAX_PRICE|1v$ $MAX_PRICE_ICON$) @arrow_right! (@money!$MIN_AFTER_PRICE|1v$ $MIN_AFTER_PRICE_ICON$ - @money!$MAX_AFTER_PRICE|1v$ $MAX_AFTER_PRICE_ICON$) in $NUM_MARKETS$ [Concept('concept_market', '$concept_markets$')]"
  SINGLE_GOODS_STATE_PRICE_RANGE_WITH_DELTA: "(@money!$MIN_PRICE|1v$ $MIN_PRICE_ICON$ - @money!$MAX_PRICE|1v$ $MAX_PRICE_ICON$) @arrow_right! (@money!$MIN_AFTER_PRICE|1v$ $MIN_AFTER_PRICE_ICON$ - @money!$MAX_AFTER_PRICE|1v$ $MAX_AFTER_PRICE_ICON$) in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
  SINGLE_GOODS_STATE_PRICE_RANGE_TOOLTIPPABLE_WITH_DELTA: "(#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MIN_PRICE|1v$#!#! $MIN_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MAX_PRICE|1v$#!#! $MAX_PRICE_ICON$) @arrow_right! (#tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MIN_AFTER_PRICE|1v$#!#! $MIN_AFTER_PRICE_ICON$ - #tooltippable #tooltip:$SINGLE_GOODS_STATE_PRICE_TOOLTIP_BREAKDOWN$ @money!$MAX_AFTER_PRICE|1v$#!#! $MAX_AFTER_PRICE_ICON$) in $NUM_STATES$ [Concept('concept_state', '$concept_states$')]"
  SINGLE_POP_EMPLOYMENT_CHANGE_FORMAT: "[PopType.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')]"
  SINGLE_POP_EMPLOYMENT_CHANGE_SLAVES_ROLE: "[POP_TYPE.GetName] or [TARGET_POP_TYPE.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')]"
  SINGLE_POP_EMPLOYMENT_CHANGE_FROM_BASE_TOTAL: "$TOTAL_CHANGE|=+D$ Total"
  SINGLE_POP_EMPLOYMENT_CHANGE_FROM_BASE_PER_LEVEL: "$PER_LEVEL_CHANGE|=+D$ per Level"
  SINGLE_POP_EMPLOYMENT_DELTA_TOTAL: "$TOTAL_DELTA|=+D$ $MORE_OR_LESS$ in Total"
  SINGLE_POP_EMPLOYMENT_DELTA_PER_LEVEL: "$PER_LEVEL_DELTA|=+D$ $MORE_OR_LESS$ per Level"
  SINGLE_GOODS_FORMAT: "[Goods.GetTextIcon][Nbsp][Goods.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')] $SINGLE_GOODS_PRICE_BREAKDOWN$"
  SINGLE_GOODS_FORMAT_WITH_SHORTAGE: "[Goods.GetTextIcon][Nbsp][Goods.GetName]: [SelectLocalization(StringIsEmpty('$DELTA$'), '$AMOUNT$', '$DELTA$')] $SINGLE_GOODS_PRICE_BREAKDOWN$ - @goods_shortage! [concept_input_goods_shortage]"
  SINGLE_GOODS_STATE_PRICE_TOOLTIP: "#header Price of [Goods.GetName]#!\n$GOODS_STATE_PRICE$\n$TOOLTIP_DELIMITER$\n[ConcatIfNeitherEmpty('\n', '$GOODS_MARKET_PRICE$')]"
  SELECT_OBJECTIVE_MAIN_TITLE: "Select a Game Objective"
  SELECT_OBJECTIVE_TITLE: "Objectives"
  SELECT_OBJECTIVE_TAG_TITLE: "Recommended Countries"
  START_GAME_NO_OBJECTIVE_NO_TAG: "Play without an Objective and go to Country Selection"
  START_GAME_CHOSEN_OBJECTIVE_NO_TAG: "Start Game\n#instruction Select any Country#!"
  START_GAME_CHOSEN_OBJECTIVE_CHOSEN_TAG: "Start Game"
  NO_OBJECTIVE: "You do not have an objective"

  SANDBOX: "Sandbox"
  SELECT_ANY_COUNTRY: "Select any Country"
  START_GAME: "Start Game"
  HAS_SELECTED_COUNTRY_TOOLTIP: "A [concept_country] has already been selected"
  NO_SELECTED_COUNTRY_TOOLTIP: "No [concept_country] has been selected yet"
  START_ANY_COUNTRY_TOOLTIP: "Start a new game and pick any [concept_country] on the map"
  START_GAME_TOOLTIP: "Start a new game as #variable [CountryDefinition.GetName]#!"
  SELECTABLE_COUNTRY_TOOLTIP: "#header [Country.GetName]#!\n$DATA_COUNTRY_NAME_TOOLTIP$\n\n#instruction Click to select [Country.GetName] as your Country#!"
  RIGHT_CLICK_TO_OPEN_CONTEXT_MENU: "@rightclick! #instruction #bold Right-click#! to open Context Menu#!"
  NULL_OBJ: "#NULL_OBJ#!"
  NULL_OBJ_ADJ: "#NULL_OBJ_ADJ#!"
  NULL_OBJ_DESC: "#NULL_OBJ_DESC#!"
  NULL_OBJ_TOOLTIP: "#NULL_OBJ_TOOLTIP#!"
  color_blind_mode_deuteranopia: "Deuteranopia"
  color_blind_mode_protanopia: "Protanopia"
  color_blind_mode_tritanopia: "Tritanopia"
  CANNOT_START_MULTIPLE_TUTORIALS: "You must close your current lesson before starting a new one"
  EMPTY_STATE: "Nothing to do here!"
  AUTO_EXPAND: "Auto-Expand"
  CANCEL_AUTO_EXPAND: "Cancel Auto-Expand"
  AUTOEXPANDING_YES_HEADER: "#header Cancel Automatic Expansion#!\n$TOOLTIP_DELIMITER$\nThis building currently auto-expands whenever these conditions are true:"
  AUTOEXPANDING_YES_INSTRUCTION: "#instruction Click to cancel auto-expansion#!"
  AUTOEXPANDING_NO_HEADER: "#header Automatically Expand#!\n$TOOLTIP_DELIMITER$\nThis building would auto-expand whenever these conditions are true:"
  AUTOEXPANDING_NO_INSTRUCTION: "#instruction Click to automatically schedule expansion#!"
  AUTOEXPAND_BUILDING_TOOLTIP: "[SelectLocalization(Building.IsAutoExpanding,'AUTOEXPANDING_YES_HEADER','AUTOEXPANDING_NO_HEADER')]\n$TRIGGER$\n\n[SelectLocalization(Building.IsAutoExpanding,'AUTOEXPANDING_YES_INSTRUCTION','AUTOEXPANDING_NO_INSTRUCTION')]"
  TOGGLE_AUTOEXPAND_INVALID_BUILDING_TYPE: "[BuildingType.GetName] is not auto-expandable"
  NO_URBAN_BUILDINGS: "There Are No Urban Buildings"
  NO_RURAL_BUILDINGS: "There Are No Rural Buildings"
  NO_DEVELOPMENT_BUILDINGS: "There Are No Development Buildings"
  NO_URBAN_BUILDINGS_HINT: "@information! Urban buildings can be built through the building lens or the state panel"
  NO_RURAL_BUILDINGS_HINT: "@information! Rural buildings can be built through the building lens or the state panel"
  NO_DEVELOPMENT_BUILDINGS_HINT: "@information! Development buildings can be built through the building lens or the state panel"
  AVAILABLE_BUILDINGS: "Available Buildings To Build"
  EXPANDABLE_BUILDINGS: "Available Buildings To Expand"
  AVAILABLE_URBAN_BUILDINGS: "Potential Urban Buildings"
  AVAILABLE_INDUSTRIAL_BUILDINGS: "Potential Industrial Buildings"
  AVAILABLE_RURAL_BUILDINGS: "Potential Rural Buildings"
  AVAILABLE_DEVELOPMENT_BUILDINGS: "Potential Development Buildings"
  URBAN_BUILDINGS_IN_COUNTRY: "Urban Buildings in [GetPlayer.GetName]"
  RURAL_BUILDINGS_IN_COUNTRY: "Rural Buildings in [GetPlayer.GetName]"
  DEVELOPMENT_BUILDINGS_IN_COUNTRY: "Development Buildings in [GetPlayer.GetName]"
  GRAPH_NOT_INITIALIZED: "No historical data"
  # GetPlayer can be used to access the dead player country as long as the game over screen is still available
  GAME_OVER_TITLE: "Game Over"
  GAME_OVER_TITLE_COUNTRY: "On [GameOverScreen.GetGameOverDateString] the days of [GetPlayer.GetName] has come to an end."
  GAME_OVER_TITLE_COUNTRY_END_OF_CAMPAIGN: "Congratulations! On [GameOverScreen.GetGameOverDateString] [GetPlayer.GetName] has successfully reached the end of the Campaign."
  GAME_OVER_ANNEXED: "You have been annexed!"
  GAME_OVER_SUMMARY: "You were playing as [GetPlayer.GetName].."
  GAME_OVER_CONTINUE_AS_OBSERVER: "Continue As [Concept('concept_observer_mode','$concept_observer$')]"
  GAME_OVER_GO_TO_LOBBY: "[SelectLocalization( GameHasMultiplePlayers, 'FRONTEND_GOTO_LOBBY', 'CONTINUE_PLAYING' )]"
  CONTINUE_PLAYING: "Continue Playing"
  VALUE_CALCULATOR_BASE_ENTRY: "$VALUE$ from Base Value"
  VALUE_CALCULATOR_BASE_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE$#!#! from Base Value"
  VALUE_CALCULATOR_ADD_ENTRY: "$VALUE$ from $TITLE$"
  VALUE_CALCULATOR_ADD_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE$#!#! from $TITLE$"
  VALUE_CALCULATOR_MULT_ENTRY: "$VALUE$ from $TITLE$"
  VALUE_CALCULATOR_MULT_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE$#!#! from $TITLE$"
  VALUE_CALCULATOR_FACTOR_ENTRY: "$VALUE$ from $TITLE$"
  VALUE_CALCULATOR_FACTOR_ENTRY_WITH_DESCRIPTION: "#tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE$#!#! from $TITLE$"
  VALUE_CALCULATOR_LOWER_BOUND_ENTRY: "Limited to a minimum of $VALUE$ from $TITLE$"
  VALUE_CALCULATOR_LOWER_BOUND_ENTRY_WITH_DESCRIPTION: "Limited to a minimum of #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE$#!#! from $TITLE$"
  VALUE_CALCULATOR_UPPER_BOUND_ENTRY: "Limited to a maximum of $VALUE$ from $TITLE$"
  VALUE_CALCULATOR_UPPER_BOUND_ENTRY_WITH_DESCRIPTION: "Limited to a maximum of #tooltippable #tooltip:$DESCRIPTION_TAG$ $VALUE$#!#! from $TITLE$"
  VALUE_CALCULATOR_VALUE_WITH_BREAKDOWN: "#tooltippable #tooltip:$BREAKDOWN_TAG$ $VALUE$#!#!"
  JUNIOR_PARTNER_IN_MULTIPLE_CUSTOMS_UNIONS: "A country cannot be a junior partner in multiple customs unions"
  JUNIOR_PARTNER_IN_MULTIPLE_SUBJECT_BASED_CUSTOMS_UNIONS: "A country cannot be a subject in multiple pacts"
  CIRCULAR_CUSTOMS_UNION: "This union creates a circular chain of customs unions"
  CIRCULAR_SUBJECT_BASED_CUSTOMS_UNION: "This pact creates a circular chain of subject relationships"
  RECRUIT_GENERAL_BUTTON: "Recruit General"
  RECRUIT_ADMIRAL_BUTTON: "Recruit Admiral"
  LOAD_GAME_VERSION: "Version: [SaveGameItem.GetVersionName]"
  LOAD_GAME_DIFFERENT_VERSION: "@warning! #X Different version#!"
  LOAD_GAME_DIFFERENT_VERSION_TT: "This save was created with a different version of #y Victoria 3#! ($LOAD_GAME_VERSION$)."
  LOAD_MISSING_ITEMS_TT: "[SaveGameItem.GetIncompatibilityTooltip]"
  LOAD_GAME_DIFFERENT_VERSION_CONFIRM: "$LOAD_GAME_DIFFERENT_VERSION_TT$\n\nAre you sure you want to load this game?"
  LOAD_GAME_MISSING_MODS_CONFIRM: "$LOAD_MISSING_ITEMS_TT$\n\nLoading this save may lead to bugs or crashes.\n\nAre you sure you want to proceed?"
  LOAD_INGAME_BUTTON_DISABLED_NOSAVES: "You have no saved games"
  LOAD_INGAME_BUTTON_DISABLED: "Loading saved games disabled"
  BUILDING_GENERAL_INFO_HEADER: "#title General Info#!:"
  BUILDING_TYPE_PORT_GENERAL_INFO: "Building a [GetBuildingType('building_port').GetName] may connect the [concept_state] it's built in to a [concept_market]"
  BUILDING_PORT_GENERAL_INFO_BUILT_AND_CONNECTS: "This or other [GetBuildingType('building_port').GetName] $concept_buildings$ in [STATE.GetName] connect it to the [MARKET.GetName]"
  BUILDING_PORT_GENERAL_INFO_NOT_BUILT_WILL_CONNECT: "Building a [GetBuildingType('building_port').GetName] in [STATE.GetName] will connect it to the [MARKET.GetName]"
  MONTHLY_PRICE_REPORT: "Monthly Price Report"
  STATE_GDP_STATUS_CONDENSED: "#variable @money![State.GetGDPContribution|K]#! (#variable [State.GetGDPContributionPercentage|%0]#!)"
  STATE_POPULATION_STATUS_CONDENSED: "[State.GetPopulationSize|Kv] [GetArrowIcon_int32( State.GetPopTotalChange )]"
  SOL_CONDENSED: "[LabelingHelper.GetLabelForStandardOfLivingNoIconCFixedPointFormatFromExpected(State.GetAverageStandardOfLivingAll,State.GetExpectedStandardOfLivingAll)|v] ([State.GetFormattedStandardOfLivingAll|v])"
  STATE_TURMOIL_CONDENSED: "#b [State.CalcTurmoil|%1-]#!"
  STATE_DEVASTATION_CONDENSED: "#b [State.GetStateRegion.GetDevastationLevel|%R1]#!"
  STATE_INFRASTRUCTURE_CONDENSED: "[SelectLocalization(GreaterThan_CFixedPoint(State.GetInfrastructureUsage,State.GetInfrastructure), 'WARNING', '')]Using #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_USAGE_TOOLTIP [State.GetInfrastructureUsage|0v]#!#! of #tooltippable #tooltip:[State.GetTooltipTag],STATE_INFRASTRUCTURE_TOOLTIP [State.GetInfrastructure|0v]#!#!"
  STATE_TAX_CAPACITY_CONDENSED: "[AddLocalizationIf(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage,State.CalcTaxCapacity), 'WARNING')]Using #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_USAGE_TOOLTIP [State.CalcTaxCapacityUsage|0v]#!#! of #tooltippable #tooltip:[State.GetTooltipTag],STATE_TAX_CAPACITY_TOOLTIP [State.CalcTaxCapacity|0v]#!#! [AddLocalizationIf(GreaterThan_CFixedPoint(State.CalcTaxCapacityUsage, State.CalcTaxCapacity), 'STATE_TAX_CAPACITY_INSUFFICIENT')]"
  STATE_MARKET_CAPITAL_STATUS_CONDENSED: "[State.GetMarket.GetName]\n[State.GetMarketAccess|%v0]"
  CASUALTY_DEBUG_CASUALTIES_HEADER: "Casualties taken:"
  CASUALTY_DEBUG_CASUALTIES_NONE: "No casualties were taken"
  CASUALTY_DEBUG_ATTRITION_CASUALTY_UNIT: "#variable $DATE$#!: dead: $DEAD|v$, wounded: $WOUNDED|v$, total: $TOTAL|v$ (attrition)"
  CASUALTY_DEBUG_BATTLE_CASUALTY_UNIT: "#variable $DATE$#!: dead: $DEAD|v$, wounded: $WOUNDED|v$, total: $TOTAL|v$ (battle $BATTLE_NAME$)"
  CASUALTY_DEBUG_ATTRITION_CASUALTY_BUILDING: "#variable $DATE$#!: $UNIT_NAME$ dead: $DEAD|v$, wounded: $WOUNDED|v$, total: $TOTAL|v$ (attrition)"
  CASUALTY_DEBUG_BATTLE_CASUALTY_BUILDING: "#variable $DATE$#!: $UNIT_NAME$ dead: $DEAD|v$, wounded: $WOUNDED|v$, total: $TOTAL|v$ (battle $BATTLE_NAME$)"
  COMBAT_UNIT_DEFENSE_BREAKDOWN: "#header [concept_defense]#!\nThe [concept_defense] of #v [CombatUnit.GetDefenseRaw]#! is due to:\n[CombatUnit.GetDefenseBreakdown]"
  COMBAT_UNIT_OFFENSE_BREAKDOWN: "#header [concept_offense]#!\nThe [concept_offense] of #v [CombatUnit.GetOffenseRaw]#! is due to:\n[CombatUnit.GetOffenseBreakdown]"
  COMBAT_UNIT_MANPOWER_BREAKDOWN: "#header [concept_manpower]#!\n[CombatUnit.GetManpowerTooltip]"
  COMBAT_UNIT_MANPOWER: "@manpower! #v [CombatUnit.GetManpowerRaw]#!"
  POP_SIZE_TITLE: "[Concept('concept_pop','$concept_population$')]"
  PIN_CHARACTER: "Pin [Character.GetFullName] to the Outliner"
  UNPIN_CHARACTER: "Unpin [Character.GetFullName] from the Outliner"
  PIN_IG: "Pin [InterestGroup.GetName] to the Outliner"
  UNPIN_IG: "Unpin [InterestGroup.GetName] from the Outliner"
  PIN_JOURNAL_ENTRY: "Pin [JournalEntry.GetName] to the Outliner"
  UNPIN_JOURNAL_ENTRY: "Unpin [JournalEntry.GetName] from the Outliner"
  PIN_MARKET: "Pin [Market.GetName] to the Outliner"
  UNPIN_MARKET: "Unpin [Market.GetName] from the Outliner"
  PIN_STATE: "Pin [State.GetName] to the Outliner"
  UNPIN_STATE: "Unpin [State.GetName] from the Outliner"
  RADICALISM_LOW: "Low"
  RADICALISM_MEDIUM: "Medium"
  RADICALISM_HIGH: "High"
  RADICALISM_VERY_HIGH: "Very High"
  RADICALISM_EXTREME: "#N Extreme#!"
  RADICALISM_CRITICAL: "#N Critical#!"
  SUPPORT_LOW: "Low"
  SUPPORT_MEDIUM: "Medium"
  SUPPORT_HIGH: "High"
  SUPPORT_VERY_HIGH: "Very High"
  SUPPORT_EXTREME: "#N Extreme#!"
  SUPPORT_CRITICAL: "#N Critical#!"

  FEED: "Feed"
  TOAST: "Toast"
  POPUP: "Popup"
  RANKING_FORMAT: "(#tooltippable #tooltip:$LEADERBOARD$ #v ##$RANKING$#!#!#! worldwide)"
  GDP_LEADERBOARD_HEADER: "#header GDP#!"
  GDP_PER_CAPITA_LEADERBOARD_HEADER: "#header GDP per Capita#!"
  SOL_LEADERBOARD_HEADER: "#header Standard of Living#!"
  POPULATION_LEADERBOARD_HEADER: "#header Population#!"
  INCORPORATED_LITERACY_LEADERBOARD_HEADER: "#header Literacy in Incorporated States#!"
  TOTAL_LITERACY_LEADERBOARD_HEADER: "#header Literacy in all States#!"
  BATTALIONS_LEADERBOARD_HEADER: "#header Battalions#!"
  FLOTTILAS_LEADERBOARD_HEADER: "#header Flotillas#!"
  GDP_LEADERBOARD_ITEM: "\n$RANK$. @money!$VAL|vD$ - $COUNTRY$"
  SOL_LEADERBOARD_ITEM: "\n$RANK$. $VAL|vD$ - $COUNTRY$"
  POPULATION_LEADERBOARD_ITEM: "\n$RANK$. $VAL|vD$ - $COUNTRY$"
  INCORPORATED_LITERACY_LEADERBOARD_ITEM: "\n$RANK$. $VAL|v1%$ - $COUNTRY$"
  TOTAL_LITERACY_LEADERBOARD_ITEM: "\n$RANK$. $VAL|v1%$ - $COUNTRY$"
  BATTALIONS_LEADERBOARD_ITEM: "\n$RANK$. @battalions! $VAL|vD$ - $COUNTRY$"
  FLOTILLAS_LEADERBOARD_ITEM: "\n$RANK$. @flotillas! $VAL|vD$ - $COUNTRY$"
  COMMANDER_RANK_LOC_KEY: "[Concept('concept_commander_rank','$concept_commander_rank_short$')] "
  SCRIPTED_ACTION_TOOLTIP: "[JoinText( '\n\n', ScriptedButton.GetDesc, JoinText( '\n\n', ScriptedButton.GetEffectDesc, GetDesc( ScriptedButton.ExecuteEffect ) ) )]"

  INDUSTRIAL_BUILDINGS: "Industrial"
  RESOURCE_BUILDINGS: "Resource"
  debug_loc_string_pollution: "Global Pollution Value: #v [GetGlobalVariable('global_var_pollution').GetValue]#!"
  POLLUTION_COUNTER_TOOLTIP: "Pollution: #v [GetGlobalVariable('global_var_pollution').GetValue]#!"
