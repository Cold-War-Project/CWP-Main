namespace = nato_ai_voting

nato_ai_voting.1 = {# AI Application voting mechanism
	type = country_event	
	placement = ROOT

	trigger = {
		is_ai = yes
		is_in_nato = yes
		not = {
			has_variable = has_voted_on_application_nato
		}
		any_country = {
			has_variable = application_progress_nato
		}
	}

	immediate = {
		random_country = {
			limit = {
				has_variable = application_progress_nato
			}
			save_scope_as = nato_applicant_country_scope
		}
		every_country = {
			limit = {
				is_in_nato = no
				scope:nato_applicant_country_scope = {
					or = {
						is_target_in_variable_list = {
							name = nato_supporting
							target = ROOT
						}
						is_target_in_variable_list = {
							name = nato_rejecting
							target = ROOT
						}
					}	
				}
			}
			scope:nato_applicant_country_scope = {
				clear_variable_list = nato_supporting
				clear_variable_list = nato_rejecting
				set_variable = {
					name = nato_supporting_list_size
					value = 0
				}
			}
		}
	}

	# TODO - AI SCRIPTING
	option = {
		name = nato_ai_voting.2.a
		set_variable = {
			name = has_voted_on_application_nato
			days = 50
		}
		if = {
			limit = {
				or = {
					nato_supporting_countries <= nato_membersize
					not = {
						exists = var:nato_supporting_list_size
					}
				}
			}
			scope:nato_applicant_country_scope = {
				if = {
					limit = {
						not = {
							is_target_in_variable_list = {
								name = nato_supporting
								target = ROOT
							}
						}
					}
					change_variable = {
						name = nato_supporting_list_size
						add = 1
					}
					add_to_variable_list = {
						name = nato_supporting
						target = ROOT
					}
				}
				if = {
					limit = {
						is_target_in_variable_list = {
							name = nato_rejecting
							target = ROOT
						}
					}
					change_variable = {
						name = nato_supporting_list_size
						add = 1
					}
				}
				remove_list_variable = {
					name = nato_rejecting
					target = ROOT
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = { 
				trigger = {
					scope:nato_applicant_country_scope = {
						relations:root >= relations_threshold:cordial
					}
				}
				add = 100
			}
			modifier = { 
				trigger = {
					scope:nato_applicant_country_scope = {
						is_meeting_nato_standards = yes
					}
				}
				add = 300
			}

		}
	}
	option = {
		name = nato_ai_voting.2.b
		set_variable = {
			name = has_voted_on_application_nato
			days = 50
		}
		if = {
			limit = {
				or = {
					nato_supporting_countries <= nato_membersize
					not = {
						exists = var:nato_supporting_list_size
					}
				}
			}
			scope:nato_applicant_country_scope = {
				if = {
					limit = {
						not = {
							is_target_in_variable_list = {
								name = nato_rejecting
								target = ROOT
							}
						}
					}
					change_variable = {
						name = nato_supporting_list_size
						subtract = 1
					}
					add_to_variable_list = {
						name = nato_rejecting
						target = ROOT
					}
				}
				if = {
					limit = {
						is_target_in_variable_list = {
							name = nato_supporting	
							target = ROOT
						}
					}
					change_variable = {
						name = nato_supporting_list_size
						subtract = 1
					}
				}
				remove_list_variable = {
					name = nato_supporting
					target = ROOT
				}
			}
		}
		ai_chance = {
			base = 5
			modifier = { 
				trigger = {
					scope:nato_applicant_country_scope = {
						relations:root < relations_threshold:neutral
					}
				}
				add = 30
			}
			modifier = { 
				trigger = {
					scope:nato_applicant_country_scope = {
						relations:root <= relations_threshold:hostile
					}
				}
				add = 30
			}
			modifier = { 
				trigger = {
					scope:nato_applicant_country_scope = {
						is_meeting_nato_standards = no
					}
				}
				add = 30
			}
			
		}
	}

}