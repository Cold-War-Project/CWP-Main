namespace = diplomatic_events

# Fired when scoped country refuses to have their sovereignty violated
# Any interested parties is given choice to aid them or not
diplomatic_events.1 = {
	type = country_event
	event_image = {
		video = "middleeast_courtroom_upheaval"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	title = diplomatic_events.1.t
	desc = diplomatic_events.1.d
	flavor = diplomatic_events.1.f

	duration = 3

	option = {
		name = diplomatic_events.1.a
		default_option = yes

		custom_tooltip = {
			text = violate_sovereignty_tt
			violate_sovereignty_join = {
				violator = scope:initiator
				target = scope:target_country
				join_violator = no
			}
		}

		save_scope_as = third_party_country

		scope:initiator = {
			post_notification = violate_sovereignty_third_party_joins
		}

		scope:target_country = {
			post_notification = violate_sovereignty_third_party_joins
		}
		
		ai_chance = {
			base = 0		
			
			modifier = {
				trigger = {
					"relations(scope:target_country)" >= relations_threshold:cordial
				}
				add = 10
			}
			
			modifier = {
				trigger = {
					"relations(scope:target_country)" >= relations_threshold:amicable
				}
				add = 10
			}				

			modifier = {
				trigger = {
					"relations(scope:target_country)" >= relations_threshold:friendly
				}
				add = 10
			}	

			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = rivalry
						who = scope:initiator
					}
				}
				add = 50
			}	

			modifier = {
				trigger = {
					scope:target_country = { is_subject_of = root }
				}
				add = 100
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = alliance
						who = scope:target_country
					}
				}
				add = 200
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = defensive_pact
						who = scope:target_country
					}
				}
				add = 200
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = customs_union
						who = scope:target_country
					}
				}
				add = 100
			}									
		}		
	}

    option = {
		name = diplomatic_events.1.b
		change_relations = {
			country = scope:target_country
			value = -30
		}
		
		ai_chance = {
			base = 100
			
			modifier = {
				trigger = {
					"relations(scope:initiator)" >= relations_threshold:cordial
				}
				add = 10
			}
			
			modifier = {
				trigger = {
					"relations(scope:initiator)" >= relations_threshold:amicable
				}
				add = 10
			}				

			modifier = {
				trigger = {
					"relations(scope:initiator)" >= relations_threshold:friendly
				}
				add = 10
			}				

			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = rivalry
						who = scope:target_country
					}
				}
				add = 100
			}

			modifier = {
				trigger = {
					scope:initiator = { is_subject_of = root }
				}
				add = 100
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = alliance
						who = scope:initiator
					}
				}
				add = 200
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = defensive_pact
						who = scope:initiator
					}
				}
				add = 200
			}
			
			modifier = {
				trigger = {
					has_diplomatic_pact = {
						type = customs_union
						who = scope:initiator
					}
				}
				add = 100
			}				
		}		
	}
}