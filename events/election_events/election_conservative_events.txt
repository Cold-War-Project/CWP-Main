namespace = election_conservative_events
# Faithless Leaders
# If the Liberal Party has an Atheist leader, the conservatives (or Religious Party) can call into question whether such a politician can be trusted.
election_conservative_events.1 = {
	type = country_event
	placement = root
	title = election_conservative_events.1.t
	desc = election_conservative_events.1.d
	flavor = election_conservative_events.1.f
	duration = 3
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		NOT = {
			has_variable = election_event_cooldown
		}
		any_active_party = {
			is_party_type = conservative_party
		}
		any_interest_group = {
			leader = {
				has_ideology = ideology:ideology_atheist
			}
			has_party = yes
			party = {
				is_party_type = liberal_party
			}
		}
		any_scope_pop = {
			culture_accepted = no
		}
	}
	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = {
				is_party_type = conservative_party
			}
			save_scope_as = conservative_party
		}
		random_interest_group = {
			limit = {
				leader = {
					has_ideology = ideology:ideology_atheist
				}
				has_party = yes
				party = {
					is_party_type = liberal_party
				}
			}
			leader = {
				save_scope_as = atheist_leader
			}
			party = {
				save_scope_as = liberal_party
			}
		}
	}
	cancellation_trigger = {
		in_election_campaign = no
	}
	# Accept the argument, giving momentum to the conservative party and a negative popularity modifier to the atheist leader.
	option = {
		name = election_conservative_events.1.a
		py:liberal_party = {
			add_momentum = momentum_large_decrease
		}
	}
	# Argue that the atheist might in fact be more impartial not being bound to religious doctrine, giving a small popularity boost to the leader but angering the Devout.
	option = {
		name = election_conservative_events.1.b
		default_option = yes
		scope:atheist_leader = {
			add_modifier = {
				name = voice_of_reason				# character_popularity_add
				months = normal_modifier_time
			}
		}
		ig:ig_moralists = {
			add_modifier = {
				name = godless_politician_praised				# interest_group_approval_add
				months = normal_modifier_time
			}
		}
	}
}

# Unity in Tradition
# If the country is suffering from devastation, the conservatives can make a call for uniting behind traditional values during this time to crisis.
election_conservative_events.2 = {
	type = country_event
	placement = root
	title = election_conservative_events.2.t
	desc = election_conservative_events.2.d
	flavor = election_conservative_events.2.f
	duration = 3
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		NOT = {
			has_variable = election_event_cooldown
		}
		any_active_party = {
			is_party_type = conservative_party
		}
		any_scope_state = {
			devastation > 0.05
		}
	}
	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = {
				is_party_type = conservative_party
			}
			save_scope_as = conservative_party
		}
		random_scope_state = {
			limit = {
				devastation > 0.05
			}
			save_scope_as = devastation_state
		}
	}
	cancellation_trigger = {
		in_election_campaign = no
	}
	# Accept the argument, giving momentum to the conservative party.
	option = {
		name = election_conservative_events.2.a
		py:conservative_party = {
			add_momentum = momentum_large
		}
	}
	# Criticize the argument as opportunistic, creating radicals in high-devastation states.
	option = {
		name = election_conservative_events.2.b
		default_option = yes
		every_scope_state = {
			limit = {
				devastation > 0.05
			}
			add_radicals_in_state = {
				value = medium_radicals
			}
		}
	}
}

# Law and Order
# If a state has high turmoil but the country has a low level of the Police institution, conservatives can campaign on a law & order platform.
election_conservative_events.3 = {
	type = country_event
	placement = root
	title = election_conservative_events.3.t
	desc = election_conservative_events.3.d
	flavor = election_conservative_events.3.f
	duration = 3
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		NOT = {
			has_variable = election_event_cooldown
		}
		any_active_party = {
			is_party_type = conservative_party
		}
		any_scope_state = {
			turmoil > 0.2
		}
		institution_investment_level = {
			institution = institution_criminal_justice_system
			value < 5
		}
		any_interest_group = {
			has_party = yes
			NOT = {
				party = {
					is_party_type = conservative_party
				}
			}
			law_stance = {
				law = law_type:law_income_security
				value > neutral
			}
		}
	}
	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		random_active_party = {
			limit = {
				is_party_type = conservative_party
			}
			save_scope_as = conservative_party
		}
		random_scope_state = {
			limit = {
				turmoil > 0.2
			}
			save_scope_as = turmoil_state
		}
	}
	cancellation_trigger = {
		in_election_campaign = no
	}
	# Accept the argument, giving momentum to the conservative party.
	option = {
		name = election_conservative_events.3.a
		py:conservative_party = {
			add_momentum = momentum_large
		}
	}
	# Suggest that the unrest can be resolved by improving other public services, giving a smaller momentum a party in favor of generous welfare policies.
	option = {
		name = election_conservative_events.3.b
		default_option = yes
		random_interest_group = {
			limit = {
				has_party = yes
				NOT = {
					party = {
						is_party_type = conservative_party
					}
				}
				law_stance = {
					law = law_type:law_income_security
					value > neutral
				}
			}
			party = {
				add_momentum = momentum_small
			}
		}
	}
}

# The Best Defense
# If a neighboring country has bad relations and high infamy, the conservatives (or Military Party) can campaign on a more hawkish foreign policy to deter attacks.
election_conservative_events.4 = {
	type = country_event
	placement = root
	title = election_conservative_events.4.t
	desc = election_conservative_events.4.d
	flavor = election_conservative_events.4.f
	duration = 3
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		NOT = {
			has_variable = election_event_cooldown
		}
		any_active_party = {
			is_party_type = conservative_party
		}
		any_neighbouring_state = {
			owner = {
				infamy >= infamy_threshold:infamous
				relations:root <= relations_threshold:poor
			}
		}
	}
	immediate = {
		set_variable = {
			name = election_event_cooldown
			months = election_event_cooldown_months
		}
		py:conservative_party = {
			save_scope_as = hawk_campaign_party
		}
		random_neighbouring_state = {
			limit = {
				owner = {
					infamy >= infamy_threshold:infamous
					relations:root <= relations_threshold:poor
				}
			}
			owner = {
				save_scope_as = election_threatening_neighbor
			}
		}
	}
	cancellation_trigger = {
		in_election_campaign = no
	}
	# Accept the argument, giving momentum to the conservative party and worsening relations with the neighboring country.
	option = {
		name = election_conservative_events.4.a
		scope:hawk_campaign_party = {
			add_momentum = momentum_large
		}
		change_relations = {
			country = scope:election_threatening_neighbor
			value = -15
		}
	}
	# Downplay the threat, angering the Armed Forces.
	option = {
		name = election_conservative_events.4.b
		default_option = yes
		ig:ig_securocrats = {
			add_modifier = {
				name = weak_and_trusting				# interest_group_approval_add
				months = normal_modifier_time
			}
		}
	}
}
