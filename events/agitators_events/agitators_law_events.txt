namespace = agitators_law_events

#Debate Event
agitators_law_events.1 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.1.t
	desc = agitators_law_events.1.d
	flavor = agitators_law_events.1.f
	
	category = enactment

	event_image = {
		video = "votp_agitator_speaking"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		movement_supports_enaction = yes
		agitator_supports_enaction = yes
		government_ig_opposes_enaction = yes
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = scope:supporting_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				is_marginal = no
				is_in_government = yes
				law_stance = {
					law = owner.currently_enacting_law.type
					value < neutral
				}
			}
			save_scope_as = opposing_ig
		}
	}
	
	option = {
		name = agitators_law_events.1.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_appearance_of_cooperation
		}
		scope:opposing_ig = {
			add_modifier = {
				name = modifier_strongarmed_us
				months = short_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.1.b
		scope:supporting_movement = {
			add_modifier = {
				name = modifier_untrustworthy_coalition
				months = short_modifier_time
			}
		}
		scope:opposing_ig = {
			add_modifier = {
				name = modifier_coalition_loyalty
				months = short_modifier_time
			}
		}
	}
}

#Debate Event
agitators_law_events.2 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.2.t
	desc = agitators_law_events.2.d
	flavor = agitators_law_events.2.f
	
	category = enactment

	event_image = {
		video = "votp_prison"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		movement_supports_enaction = yes
		agitator_supports_enaction = yes
		any_scope_state = {
			is_incorporated = yes
			turmoil >= 0.2
		}
		any_interest_group = {
			law_stance = {
				law = owner.currently_enacting_law.type
				value < neutral
			}
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = scope:supporting_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				law_stance = {
					law = owner.currently_enacting_law.type
					value < neutral
				}
			}
			save_scope_as = opposing_ig
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
				turmoil >= 0.2	
			}
			save_scope_as = imprisoned_state
		}
	}
	
	option = {
		name = agitators_law_events.2.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_movement_overrode_jail
		}
		scope:supporting_movement = {
			add_modifier = {
				name = modifier_strongarmed_justice
				months = short_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.2.b
		scope:imprisoned_state = {
			add_radicals_in_state = {
				value = small_radicals 
				interest_group = scope:supporting_agitator.interest_group
			}
		}
		add_loyalists = {
			value = small_radicals
			interest_group = scope:opposing_ig
		}
		scope:supporting_agitator = {
			add_modifier = {
				name = modifier_failed_agenda
				months = normal_modifier_time
			}
		}
	}
}

#Advance Event
agitators_law_events.3 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.3.t
	desc = agitators_law_events.3.d
	flavor = agitators_law_events.3.f
	
	category = enactment

	event_image = {
		video = "southamerica_election"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/waving_flag.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		any_neighbouring_state = {
			owner = {
				has_law = root.currently_enacting_law.type
			}
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes	
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_neighbouring_state = {
			limit = {
				owner = {
					has_law = root.currently_enacting_law.type
				}	
			}
			owner = {
				save_scope_as = emulated_country
			}
		}
	}
	
	option = {
		name = agitators_law_events.3.a 
		default_option = yes
		random_interest_group = {
			limit = {
				OR = {
					has_reactionary_ideology = yes
				}
			}
			add_modifier = {
				name = modifier_foreign_emulation
				months = normal_modifier_time
			}
		}
		add_enactment_modifier = {
			name = modifier_foreign_precedent
		}
	}

	option = {
		name = agitators_law_events.3.b
		change_relations = {
			country = scope:emulated_country
			value = -20
		}
		add_enactment_modifier = {
			name = modifier_rejected_foreign_precedent
		}
	}
	
	option = {
		name = agitators_law_events.3.c
		trigger = {
			enactment_phase < 2
		}
		highlighted_option = yes
		add_enactment_phase = 1
		random_interest_group = {
			limit = {
				OR = {
					has_reactionary_ideology = yes
				}
			}
			add_modifier = {
				name = modifier_foreign_emulation
				months = normal_modifier_time
				multiplier = 2
			}
		}
	}
}

#Stall Event
agitators_law_events.4 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.4.t
	desc = agitators_law_events.4.d
	flavor = agitators_law_events.4.f
	
	category = enactment

	event_image = {
		video = "africa_leader_arguing"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		movement_supports_enaction = yes
		OR = {	
			government_ig_opposes_enaction = yes
			government_ig_ambivalent_enaction = yes
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = scope:supporting_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				is_marginal = no
				is_in_government = yes
				law_stance = {
					law = owner.currently_enacting_law.type
					value <= neutral
				}
			}
			save_scope_as = opposing_ig
		}
	}
	
	option = {
		name = agitators_law_events.4.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_bill_stalled
		}
		scope:supporting_agitator = {
			add_modifier = {
				name = modifier_considered_very_important
				months = normal_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.4.b
		trigger = {
			enactment_setback_count < 2
		}
		highlighted_option = yes
		add_enactment_setback = 1
		add_enactment_modifier = {
			name = modifier_bill_pushed_forwards
		}
		scope:supporting_movement = {
			add_modifier = {
				name = modifier_uncommitted_government
				months = normal_modifier_time
			}
		}
	}
}

#Debate Event
agitators_law_events.5 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.5.t
	desc = agitators_law_events.5.d
	flavor = agitators_law_events.5.f
	
	category = enactment

	event_image = {
		video = "southamerica_election"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		movement_supports_enaction = yes
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = scope:supporting_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		scope:supporting_agitator.interest_group = {
			save_scope_as = agitator_ig
		}
	}
	
	option = {
		name = agitators_law_events.5.a 
		default_option = yes
		scope:supporting_movement = {
			add_modifier = {
				name = modifier_documents_over_people
				months = normal_modifier_time
			}
		}
		add_modifier = {
			name = modifier_documents_over_people_country
			months = normal_modifier_time
		}
	}

	option = {
		name = agitators_law_events.5.b
		scope:supporting_movement = {
			add_modifier = {
				name = modifier_people_over_documents_movement
				months = normal_modifier_time
			}
		}
		add_enactment_modifier = {
			name = modifier_people_over_documents
		}
		add_modifier = {
			name = modifier_people_over_documents_country
			months = normal_modifier_time
		}
	}
}

#Stall Event
agitators_law_events.6 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.6.t
	desc = agitators_law_events.6.d
	flavor = agitators_law_events.6.f
	
	category = enactment

	event_image = {
		video = "votp_agitator_speaking"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_opposes_enaction = yes
		movement_opposes_enaction = yes
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				is_in_government = yes
			}
			save_scope_as = concerned_ig
			leader = {
				save_scope_as = concerned_ig_leader
			}
		}
	}
	
	option = {
		name = agitators_law_events.6.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_popular_opposition_assuaged
		}
		scope:opposing_movement = {
			add_modifier = {
				name = modifier_popular_opposition_assuaged_movement
				months = short_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.6.b
		scope:concerned_ig = {
			add_modifier = {
				name = modifier_popular_opposition_left_hanging
				months = short_modifier_time
			}
		}
	}
}

#Stall Event
agitators_law_events.7 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.7.t
	desc = agitators_law_events.7.d
	flavor = agitators_law_events.7.f
	
	category = enactment

	event_image = {
		video = "unspecific_politicians_arguing"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_opposes_enaction = yes
		movement_opposes_enaction = yes
		government_ig_ambivalent_enaction = yes
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				is_marginal = no
				is_in_government = yes
				law_stance = {
					law = owner.currently_enacting_law.type
					value = neutral
				}
			}
			save_scope_as = neutral_ig
		}
	}
	
	option = {
		name = agitators_law_events.7.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_neutral_group_appeased
		}
		scope:neutral_ig = {
			add_modifier = {
				name = modifier_accounted_for_concerns
				months = short_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.7.b
		scope:neutral_ig = {
			add_modifier = {
				name = modifier_regarded_as_unimportant
				months = short_modifier_time
			}
		}
	}
}

#Debate Event
agitators_law_events.8 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.8.t
	desc = agitators_law_events.8.d
	flavor = agitators_law_events.8.f
	
	category = enactment

	event_image = {
		video = "middleeast_courtroom_upheaval"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_opposes_enaction = yes
		movement_opposes_enaction = yes
		government_ig_supports_enaction = yes
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				is_marginal = no
				is_in_government = yes
				law_stance = {
					law = owner.currently_enacting_law.type
					value >= neutral
				}
			}
			save_scope_as = supporting_ig
			leader = {
				save_scope_as = supporting_ig_leader
			}
		}
	}
	
	option = {
		name = agitators_law_events.8.a 
		default_option = yes
		random_list = {
			10 = {
				scope:supporting_ig_leader = {
					add_trait = alcoholic
				}
				scope:opposing_agitator = {
					add_modifier = {
						name = modifier_posted_too_many_bangers
						months = normal_modifier_time
					}
				}
			}
			90 = {
				scope:opposing_agitator = {
					add_modifier = {
						name = modifier_really_sick_burn
						months = normal_modifier_time
					}
				}
			}
		}
		scope:supporting_ig = {
			add_modifier = {
				name = modifier_undefended_honor
				months = normal_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.8.b
		random_list = {
			50 = {
				scope:opposing_agitator = {
					add_trait = shellshocked
				}
				scope:opposing_movement = {
					add_modifier = {
						name = modifier_repressed_leader
						months = normal_modifier_time
					}
				}
			}
			50 = {
				scope:opposing_movement = {
					add_modifier = {
						name = modifier_failed_repressed_leader
						months = normal_modifier_time
					}
				}
			}
		}
		scope:supporting_ig = {
			add_modifier = {
				name = modifier_defended_honor
				months = normal_modifier_time
			}
		}
	}
}

#Debate Event
agitators_law_events.9 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.9.t
	desc = agitators_law_events.9.d
	flavor = agitators_law_events.9.f
	
	category = enactment

	event_image = {
		video = "unspecific_politicians_arguing"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_opposes_enaction = yes
		movement_opposes_enaction = yes
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				is_marginal = no
				is_in_government = yes
				law_stance = {
					law = owner.currently_enacting_law.type
					value > neutral
				}
			}
			save_scope_as = supporting_ig
		}
	}
	
	option = {
		name = agitators_law_events.9.a 
		default_option = yes
		scope:supporting_ig = {
			add_modifier = {
				name = modifier_slandered_as_hypocrites
				months = normal_modifier_time
			}
		}
		scope:opposing_movement = {
			add_modifier = {
				name = modifier_hypocritical_government
				months = normal_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.9.b
		scope:supporting_ig = {
			add_modifier = {
				name = modifier_supportive_government
				months = normal_modifier_time
			}
		}
		scope:opposing_movement = {
			add_modifier = {
				name = modifier_really_bad_arguments
				months = normal_modifier_time
			}
		}
	}
}

#Debate Event
agitators_law_events.10 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.10.t
	desc = agitators_law_events.10.d
	flavor = agitators_law_events.10.f
	
	category = enactment

	event_image = {
		video = "votp_prison"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_opposes_enaction = yes
		movement_opposes_enaction = yes
		any_interest_group = {
			law_stance = {
				law = owner.currently_enacting_law.type
				value > neutral
			}		
		}
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	} 
	
	option = {
		name = agitators_law_events.10.a 
		default_option = yes
		scope:opposing_movement = {
			add_modifier = {
				name = modifier_accepted_letters
				months = short_modifier_time
			}
		}
		random_interest_group = {
			limit = {
				law_stance = {
					law = owner.currently_enacting_law.type
					value > neutral
				}	
			}
			add_modifier = {
				name = modifier_allowed_letter_flow
				months = short_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.10.b
		trigger = {
			OR = {
				has_law = law_type:law_outlawed_dissent
				has_law = law_type:law_censorship
			}
		}
		scope:opposing_movement = {
			add_modifier = {
				name = modifier_censored_letters
				months = short_modifier_time
			}
		}
		add_enactment_modifier = {
			name = modifier_out_of_mind
		}
	}
}

#Advance Event
agitators_law_events.11 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.11.t
	desc = agitators_law_events.11.d
	flavor = agitators_law_events.11.f
	
	category = enactment

	event_image = {
		video = "middleeast_middleclass_cafe"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		capital = {
			save_scope_as = capital_scope
		}
	}
	
	option = {
		name = agitators_law_events.11.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_salon_endorsed_proposal
			multiplier = 2
		}
	}

	option = {
		name = agitators_law_events.11.b
		add_enactment_modifier = {
			name = modifier_salon_endorsed_proposal
			multiplier = 1
		}
		scope:capital_scope = {
			add_modifier = {
				name = modifier_active_salon_scene
				months = short_modifier_time
			}
		}
	}
}

#Advance Event
agitators_law_events.12 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.12.t
	desc = agitators_law_events.12.d
	flavor = agitators_law_events.12.f
	
	category = enactment

	event_image = {
		video = "middleeast_middleclass_cafe"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		any_interest_group = {
			law_stance = {
				law = owner.currently_enacting_law.type
				value >= neutral
			}	
			is_marginal = no
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				law_stance = {
					law = owner.currently_enacting_law.type
					value >= neutral
				}
				is_marginal = no
			}
			save_scope_as = poet_ig
		}
		random_scope_culture = {
			limit = {
				is_primary_culture_of = root
			}
			save_scope_as = poet_culture
		}
	}
	
	option = {
		name = agitators_law_events.12.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_poets_endorsed_proposal
			multiplier = 1.5
		}		
	}

	option = {
		name = agitators_law_events.12.b
		add_enactment_modifier = {
			name = modifier_poets_endorsed_proposal
			multiplier = 1
		}
		scope:poet_ig = {
			add_modifier = {
				name = modifier_grateful_poets
				months = short_modifier_time
			}
		}
	}
}

#Debate Event
agitators_law_events.13 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.13.t
	desc = agitators_law_events.13.d
	flavor = agitators_law_events.13.f
	
	category = enactment

	event_image = {
		video = "africa_prosperous_farm"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		ig:ig_ruralists = {
			is_marginal = no
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		ig:ig_ruralists = {
			save_scope_as = informal_workers_ig
		}
	}
	
	option = {
		name = agitators_law_events.13.a 
		trigger = {
			ig:ig_ruralists = {
				is_insurrectionary = no
			}
		}
		add_enactment_modifier = {
			name = modifier_rurals_endorsed_proposal
		}	
		ig:ig_ruralists = {
			add_modifier = {
				name = modifier_rurals_approached
				months = normal_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.13.b
		trigger = {
			ig:ig_ruralists = {
				law_stance = {
					law = owner.currently_enacting_law.type
					value > neutral
				}
			}
		}
		add_enactment_modifier = {
			name = modifier_rurals_endorsed_proposal
			multiplier = 1.5
		}
		scope:supporting_agitator = {
			add_modifier = {
				name = modifier_agitator_rural_folk_approached
				months = normal_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.13.c
		default_option = yes
		add_enactment_modifier = {
			name = modifier_rurals_rejected_proposal
		}	
		scope:supporting_agitator = {
			add_modifier = {
				name = modifier_agitator_rural_folk_rejected
				months = normal_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.13.e
		trigger = {
			ig:ig_ruralists = {
				is_insurrectionary = yes
			}
		}
		add_enactment_modifier = {
			name = modifier_rurals_rejected_proposal
			multiplier = 2
		}
		scope:supporting_agitator = {
			add_modifier = {
				name = modifier_agitator_rural_folk_rejected
				months = normal_modifier_time
			}
			random_list = {
				33 = {
					add_trait = shellshocked
				}
				33 = {
					add_trait = wounded
				}
				33 = {

				}
			}
		}
	}
}

#Advance Event
agitators_law_events.14 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.14.t
	desc = agitators_law_events.14.d
	flavor = agitators_law_events.14.f
	
	category = enactment

	event_image = {
		video = "europenorthamerica_art_gallery"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes	
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		capital = {
			save_scope_as = capital_scope
		}
	}
	
	option = {
		name = agitators_law_events.14.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_banquets_endorsed_proposal
			multiplier = 1
		}	
		scope:capital_scope = {
			add_modifier = {
				name = modifier_political_banquets
				months = short_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.14.b
		add_enactment_modifier = {
			name = modifier_banquets_endorsed_proposal
			multiplier = 2
		}
		scope:capital_scope = {
			add_modifier = {
				name = modifier_political_banquets
				months = normal_modifier_time
			}
		}
		scope:supporting_agitator = {
			if = {
				limit = {
					NOT = {
						has_trait = grifter
					}
				}
			}
			add_trait = grifter
		}
	}
}

#Advance Event
agitators_law_events.15 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.15.t
	desc = agitators_law_events.15.d
	flavor = agitators_law_events.15.f
	
	category = enactment

	event_image = {
		video = "southamerica_aristocrats"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		any_interest_group = {
			law_stance = {
				law = owner.currently_enacting_law.type
				value >= neutral
			}	
			is_marginal = no
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
			}
			save_scope_as = newspaper_scope
		}		
		random_interest_group = {
			limit = {
				law_stance = {
					law = owner.currently_enacting_law.type
					value >= neutral
				}	
				is_marginal = no
			}
			save_scope_as = newspaper_ig
		}
	}
	
	option = {
		name = agitators_law_events.15.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_newspaper_endorsed_proposal
			multiplier = 3
		}		
	}

	option = {
		name = agitators_law_events.15.b
		add_enactment_modifier = {
			name = modifier_newspaper_endorsed_proposal
			multiplier = 2
		}		
		scope:newspaper_ig = {
			add_modifier = {
				name = modifier_grateful_publisher
				months = normal_modifier_time
			}
		}
	}
}

#Stall Event
agitators_law_events.16 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.16.t
	desc = agitators_law_events.16.d
	flavor = agitators_law_events.16.f
	
	category = enactment

	event_image = {
		video = "middleeast_middleclass_cafe"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		movement_opposes_enaction = yes
		agitator_opposes_enaction = yes
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	}
	
	option = {
		name = agitators_law_events.16.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_paper_opposition
		}	
	}

	option = {
		name = agitators_law_events.16.b
		add_enactment_modifier = {
			name = modifier_clashes_of_papers
		}	
	}
}

#Advance Event
agitators_law_events.17 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.17.t
	desc = agitators_law_events.17.d
	flavor = agitators_law_events.17.f
	
	category = enactment

	event_image = {
		video = "europenorthamerica_capitalists_meeting"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		movement_opposes_enaction = yes
		agitator_opposes_enaction = yes
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	}
	
	option = {
		name = agitators_law_events.17.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_sockpuppeting_law_forward
			multiplier = 2
		}	
	}

	option = {
		name = agitators_law_events.17.b
		add_enactment_modifier = {
			name = modifier_sockpuppeting_law_forward
			multiplier = 1
		}	
		scope:opposing_agitator = {
			add_modifier = {
				name = modifier_sockpuppets
				months = normal_modifier_time
			}
		}
	}
}

#Debate Event
agitators_law_events.18 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.18.t
	desc = agitators_law_events.18.d
	flavor = agitators_law_events.18.f
	
	category = enactment

	event_image = {
		video = "votp_conspiring"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		movement_opposes_enaction = yes
		agitator_opposes_enaction = yes
		NOT = {
			has_law = law_type:law_decentralized_police
		}
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	}
	
	option = {
		name = agitators_law_events.18.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_opposition_article_used
		}
		scope:opposing_movement = {
			add_modifier = {
				name = modifier_intended_crackdowns
				months = normal_modifier_time
			}
		}
		scope:opposing_agitator = {
			add_modifier = {
				name = modifier_thinned_opposition
				months = normal_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.18.b
		add_enactment_modifier = {
			name = modifier_opposition_article_left_untouched
		}	
		random_scope_state = {
			limit = {
				is_incorporated = yes
			}
			add_radicals_in_state = {
				value = small_radicals
			}
		}
	}
}

#Stall Event
agitators_law_events.19 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.19.t
	desc = agitators_law_events.19.d
	flavor = agitators_law_events.19.f
	
	category = enactment

	event_image = {
		video = "europenorthamerica_political_extremism"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_military.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		movement_opposes_enaction = yes
		agitator_opposes_enaction = yes
		any_scope_state = {
			has_building = building_university
		}
		government_ig_supports_enaction = yes
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_scope_state = {
			limit = {
				has_building = building_university
			}
			save_scope_as = uni_state
			random_scope_building = {
				limit = {
					is_building_type = building_university
				}
				save_scope_as = uni_scope
			}
		}
		random_interest_group = {
			limit = {
				law_stance = {
					law = owner.currently_enacting_law.type
					value > neutral
				}
				is_in_government = yes
			}
			save_scope_as = supporting_ig
			leader = {
				save_scope_as = supporting_ig_leader
			}
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
				has_building = building_barracks
			}
			save_scope_as = problem_child_barracks
		}
	}
	
	option = {
		name = agitators_law_events.19.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_problem_child_enactment
		}	
		scope:supporting_ig_leader = {
			add_modifier = {
				name = modifier_problem_child
				multiplier = 1
			}
		}
	}

	option = {
		name = agitators_law_events.19.b
		scope:supporting_ig_leader = {
			if = {
				limit = {
					NOT = {
						has_trait = cruel
					}
				}
				add_trait = cruel
			}
			add_modifier = {
				name = modifier_problem_child
				multiplier = 3
			}
		}
	}

	option = { #IG leader's son rolls "worst political opinion ever", asked to attend military school.
		name = agitators_law_events.19.c
		trigger = {
			ig:ig_securocrats = {
				is_in_government = yes
			}
		}
		custom_tooltip = {
			text = problem_child_barracks_tt
		}
		scope:problem_child_barracks = {
			add_radicals_in_state = {
				value = 0.01
				pop_type = officers
			}
		}
		scope:supporting_ig_leader = {
			add_modifier = {
				name = modifier_problem_child
				multiplier = 2
			}
		}
	}
}

#Debate Event
agitators_law_events.20 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.20.t
	desc = agitators_law_events.20.d
	flavor = agitators_law_events.20.f
	
	category = enactment

	event_image = {
		video = "middleeast_middleclass_cafe"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		movement_opposes_enaction = yes
		agitator_opposes_enaction = yes
	}

	cancellation_trigger = {
		OR = {
			scope:opposing_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:opposing_agitator
			}
			NOT = {
				exists = scope:opposing_movement
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		capital = {
			save_scope_as = capital_scope
		}
	}
	
	option = {
		name = agitators_law_events.20.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_poetic_refusal
		}
	}

	option = {
		name = agitators_law_events.20.b
		scope:opposing_movement = {
			add_modifier = {
				name = modifier_poetic_endorsement
				months = short_modifier_time
			}
		}
	}
}

agitators_law_events.21 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.21.t
	desc = agitators_law_events.21.d
	flavor = agitators_law_events.21.f
	
	category = enactment

	event_image = {
		video = "votp_agitator_speaking"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		has_law = law_type:law_hereditary
		OR = {
			is_enacting_law = law_type:law_executive
			is_enacting_law = law_type:law_parliamentary
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				is_marginal = no
				is_in_government = yes
				law_stance = {
					law = law_type:law_hereditary
					value > neutral
				}
			}
			save_scope_as = monarchist_ig
		}
	}
	
	option = {
		name = agitators_law_events.21.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_legacy_of_enlightenment
		}
		scope:monarchist_ig = {
			add_modifier = {
				name = modifier_facing_the_enlightenment
				months = short_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.21.b
		add_loyalists = {
			value = small_radicals
			interest_group = scope:monarchist_ig
		}
		add_radicals = {
			value = small_radicals
			interest_group = scope:supporting_agitator.interest_group
		}
	}
}

agitators_law_events.22 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.22.t
	desc = agitators_law_events.22.d
	flavor = agitators_law_events.22.f
	
	category = enactment

	event_image = {
		video = "votp_monarch_holding_court"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		has_law = law_type:law_hereditary
		OR = {
			is_enacting_law = law_type:law_executive
			is_enacting_law = law_type:law_parliamentary
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				is_marginal = no
				is_in_government = yes
				law_stance = {
					law = law_type:law_hereditary
					value > neutral
				}
			}
			save_scope_as = monarchist_ig
		}
	}
	
	option = {
		name = agitators_law_events.22.a 
		trigger = {
			enactment_setback_count < 2
		}
		highlighted_option = yes
		add_enactment_setback = 1
		scope:supporting_agitator = {
			random_list = {
				50 = {
					add_modifier = {
						name = modifier_arrested_for_les_majeste
						months = normal_modifier_time
					}
				}
				50 = {
					custom_tooltip = {
						text = agitators_law_events.21.a.tt
						kill_character = {
							hidden = yes
						}
					}
				}
			}
		}
		add_radicals = {
			value = medium_radicals
			interest_group = scope:supporting_agitator.interest_group
		}
	}

	option = {
		name = agitators_law_events.22.b
		default_option = yes
		add_enactment_modifier = {
			name = modifier_weakening_monarchist_hold
		}
		scope:monarchist_ig = {
			add_modifier = {
				name = modifier_allowed_for_lese_majeste
				months = short_modifier_time
			}
		}
		add_radicals = {
			value = small_radicals
			interest_group = scope:monarchist_ig
		}
	}
}

agitators_law_events.23 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.23.t
	desc = agitators_law_events.23.d
	flavor = agitators_law_events.23.f
	
	category = enactment

	event_image = {
		video = "votp_agitator_speaking"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_scales.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		has_law = law_type:law_hereditary
		OR = {
			is_enacting_law = law_type:law_executive
			is_enacting_law = law_type:law_parliamentary
		}
		any_interest_group = {
			OR = {
				law_stance = {
					law = law_type:law_consensus_democracy
					value >= neutral
				}
				law_stance = {
					law = law_type:law_representative_democracy
					value >= neutral
				}
			}
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				OR = {
					law_stance = {
						law = law_type:law_consensus_democracy
						value >= neutral
					}
					law_stance = {
						law = law_type:law_representative_democracy
						value >= neutral
					}
				}
			}
			save_scope_as = pro_democracy_ig
		}
	}
	
	option = {
		name = agitators_law_events.23.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_democratic_republicanism
		}
	}

	option = {
		name = agitators_law_events.23.b
		scope:pro_democracy_ig = {
			add_modifier = {
				name = modifier_supported_by_monarchy
				months = normal_modifier_time
			}
		}
		add_enactment_modifier = {
			name = modifier_democratic_republicanism_rejected
		}
	}

	option = {
		name = agitators_law_events.23.c
		trigger = {
			has_law = law_type:law_autocracy
		}
		add_radicals = {
			value = small_radicals
			interest_group = scope:pro_democracy_ig
		}
		scope:pro_democracy_ig = {
			leader = {
				set_ideology = ideology:ideology_election_reformist
			}
		}
	}
}

agitators_law_events.24 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.24.t
	desc = agitators_law_events.24.d
	flavor = agitators_law_events.24.f
	
	category = enactment

	event_image = {
		video = "europenorthamerica_before_the_battle"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_military.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		agitator_supports_enaction = yes
		has_law = law_type:law_hereditary
		OR = {
			is_enacting_law = law_type:law_executive
			is_enacting_law = law_type:law_parliamentary
		}
		any_scope_general = {
			OR = {
				law_stance = {
					law = law_type:law_hereditary
					value < neutral
				}
				AND = {	
					law_stance = {
						law = law_type:law_hereditary
						value > strongly_approve # Equals 'count'
					}
					interest_group = {
						law_stance = {
							law = law_type:law_hereditary
							value < neutral
						}
						NOT = {
							law_stance = {
								law = law_type:law_hereditary
								value > strongly_approve # Equals 'count'
							}
						}
					}
				}
			}
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_scope_general = {
			limit = {
				OR = {
					law_stance = {
						law = law_type:law_hereditary
						value < neutral
					}
					AND = {	
						law_stance = {
							law = law_type:law_hereditary
							value > strongly_approve # Equals 'count'
						}
						interest_group = {
							law_stance = {
								law = law_type:law_hereditary
								value < neutral
							}
							NOT = {
								law_stance = {
									law = law_type:law_hereditary
									value > strongly_approve # Equals 'count'
								}
							}
						}
					}
				}
			}
			save_scope_as = suspected_general_scope
		}
	}
	
	option = {
		name = agitators_law_events.24.a 
		default_option = yes
		add_radicals = {
			value = small_radicals
			interest_group = scope:suspected_general_scope.interest_group
		}
		scope:suspected_general_scope = {
			remove_character_role = general
		}
		add_enactment_modifier = {
			name = modifier_removing_republican_generals
		}
	}

	option = {
		name = agitators_law_events.24.b
		add_enactment_modifier = {
			name = modifier_prominent_general_support
		}
	}
}

agitators_law_events.25 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.25.t
	desc = agitators_law_events.25.d
	flavor = agitators_law_events.25.f
	
	category = enactment

	event_image = {
		video = "europenorthamerica_sufferage"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		OR = {
			has_law = law_type:law_autocracy
			has_law = law_type:law_oligarchy
			has_law = law_type:law_anocracy
		}
		OR = {
			is_enacting_law = law_type:law_consensus_democracy
			is_enacting_law = law_type:law_direct_democracy
			is_enacting_law = law_type:law_representative_democracy
		}
		agitator_supports_enaction = yes
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		capital = {
			save_scope_as = capital_scope
		}
	}
	
	option = {
		name = agitators_law_events.25.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_mass_rally_for_democracy
		}
	}

	option = {
		name = agitators_law_events.25.b
		add_enactment_modifier = {
			name = modifier_mass_rally_averted
		}
		capital = {
			add_radicals_in_state = {
				value = small_radicals
			}
		}
	}
}

agitators_law_events.26 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.26.t
	desc = agitators_law_events.26.d
	flavor = agitators_law_events.26.f
	
	category = enactment

	event_image = {
		video = "middleeast_middleclass_cafe"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_protest.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		OR = {
			has_law = law_type:law_autocracy
			has_law = law_type:law_oligarchy
			has_law = law_type:law_anocracy
		}
		OR = {
			is_enacting_law = law_type:law_consensus_democracy
			is_enacting_law = law_type:law_direct_democracy
			is_enacting_law = law_type:law_representative_democracy
		}
		agitator_supports_enaction = yes
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		capital = {
			save_scope_as = capital_scope
		}
		ig:ig_elites = {
			save_scope_as = landowners_ig
		}
	}
	
	option = {
		name = agitators_law_events.26.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_condemnation_of_landlordism
			multiplier = 1
		}
		scope:landowners_ig = {
			add_modifier = {
				name = modifier_democrats_condemned_us
				months = normal_modifier_time
			}
		}
		scope:capital_scope = {
			add_radicals_in_state = {
				value = medium_radicals
				interest_group = scope:landowners_ig
			}
		}
	}

	option = {
		name = agitators_law_events.26.b
		add_enactment_modifier = {
			name = modifier_condemnation_of_landlordism_negative
			multiplier = 0.5
		}
		scope:capital_scope = {
			add_loyalists_in_state = {
				value = medium_radicals
				interest_group = scope:landowners_ig
			}
		}
	}

	option = {
		name = agitators_law_events.26.c
		trigger = {
			scope:supporting_agitator = {
				this.interest_group = scope:landowners_ig
			}
		}
		add_modifier = {
			name = modifier_not_the_good_landlords
			months = normal_modifier_time
		}
		add_enactment_modifier = {
			name = modifier_condemnation_of_landlordism
			multiplier = 0.5
		}
	}
}

agitators_law_events.27 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.27.t
	desc = agitators_law_events.27.d
	flavor = agitators_law_events.27.f
	
	category = enactment

	event_image = {
		video = "unspecific_trains"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_portrait.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		OR = {
			has_law = law_type:law_autocracy
			has_law = law_type:law_oligarchy
			has_law = law_type:law_anocracy
		}
		OR = {
			is_enacting_law = law_type:law_direct_democracy
			is_enacting_law = law_type:law_consensus_democracy
			is_enacting_law = law_type:law_representative_democracy
		}
		agitator_supports_enaction = yes
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		capital = {
			save_scope_as = capital_scope
		}
	}
	
	option = {
		name = agitators_law_events.27.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_opening_up_discussion
		}
	}

	option = {
		name = agitators_law_events.27.b
		scope:capital_scope = {
			add_radicals_in_state = {
				value = medium_radicals
				strata = middle
			}	
		}
	}
}

agitators_law_events.28 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.28.t
	desc = agitators_law_events.28.d
	flavor = agitators_law_events.28.f
	
	category = enactment

	event_image = {
		video = "middleeast_middleclass_cafe"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		OR = {
			has_law = law_type:law_censorship
			has_law = law_type:law_outlawed_dissent
		}
		OR = {
			is_enacting_law = law_type:law_right_of_assembly
			is_enacting_law = law_type:law_protected_speech
		}
		agitator_supports_enaction = yes
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	}
	
	option = {
		name = agitators_law_events.28.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_fading_censorship
		}
		scope:supporting_agitator = {
			add_modifier = {
				name = modifier_prolific_author
				months = normal_modifier_time
			}
		}
	}

	option = {
		name = agitators_law_events.28.b
		add_modifier = {
			name = modifier_recalling_witbd
			months = short_modifier_time
		}
		if = {
			limit = {
				scope:supporting_agitator.popularity >= 25
			}
			scope:supporting_agitator = {
				add_modifier = {
					name = modifier_censored_author
					months = normal_modifier_time
				}
			}
		}
	}
}

agitators_law_events.29 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.29.t
	desc = agitators_law_events.29.d
	flavor = agitators_law_events.29.f
	
	category = enactment

	event_image = {
		video = "votp_agitator_speaking"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_default.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		OR = {
			has_law = law_type:law_censorship
			has_law = law_type:law_outlawed_dissent
		}
		OR = {
			is_enacting_law = law_type:law_right_of_assembly
			is_enacting_law = law_type:law_protected_speech
		}
		agitator_supports_enaction = yes
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}
	
	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
	}
	
	option = {
		name = agitators_law_events.29.a 
		trigger = {
			enactment_phase < 2
		}
		highlighted_option = yes
		add_enactment_phase = 1
		add_enactment_modifier = {
			name = modifier_apathetic_police
		}
	}

	option = {
		name = agitators_law_events.29.b
		default_option = yes
		add_enactment_modifier = {
			name = modifier_bureaucratic_absolutism
		}
	}
}

agitators_law_events.30 = {
	type = country_event
	placement = root

	duration = 3

	title = agitators_law_events.30.t
	desc = agitators_law_events.30.d
	flavor = agitators_law_events.30.f
	
	category = enactment

	event_image = {
		video = "middleeast_middleclass_cafe"
	}

	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"

	icon = "gfx/interface/icons/event_icons/event_newspaper.dds"

	cooldown = { months = normal_modifier_time }

	trigger = {
		OR = {
			has_law = law_type:law_censorship
			has_law = law_type:law_outlawed_dissent
		}
		OR = {
			is_enacting_law = law_type:law_right_of_assembly
			is_enacting_law = law_type:law_protected_speech
		}
		agitator_supports_enaction = yes
		any_interest_group = {
			law_stance = {
				law = owner.currently_enacting_law.type
				value > neutral
			}
			is_marginal = no
		}
	}
	
	cancellation_trigger = {
		OR = {
			scope:supporting_agitator = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:supporting_agitator
			}
			NOT = {
				exists = root.currently_enacting_law
			}
		}
	}

	immediate = {
		save_agitator_law_scopes = yes
		currently_enacting_law = {
			save_scope_as = current_law_scope
		}
		random_interest_group = {
			limit = {
				law_stance = {
					law = owner.currently_enacting_law.type
					value > neutral
				}
				is_marginal = no
			}
			save_scope_as = newspaper_ig
		}
	}
	
	option = {
		name = agitators_law_events.30.a 
		default_option = yes
		add_enactment_modifier = {
			name = modifier_seditious_article_allowed
		}
	}

	option = {
		name = agitators_law_events.30.b
		add_radicals = {
			value = medium_radicals
			strata = middle
			interest_group = scope:newspaper_ig
		}
	}
}