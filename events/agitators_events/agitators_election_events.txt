namespace = agitators_election_events
#Standardized scopes - agitator_scope, agitator_ig_scope, agitator_movement_scope, agitator_party_scope
agitators_election_events.1 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.1.t
	desc = agitators_election_events.1.d
	flavor = agitators_election_events.1.f
	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		save_agitator_election_scopes = yes
	}
	option = {
		name = agitators_election_events.1.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
	}
	option = {
		name = agitators_election_events.1.b
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		scope:agitator_party_scope = {
			random_member = {
				add_modifier = {
					name = modifier_prestigious_endorsement
					months = normal_modifier_time
				}
			}
		}
	}
}

agitators_election_events.2 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.2.t
	desc = agitators_election_events.2.d
	flavor = agitators_election_events.2.f
	event_image = {
		video = "unspecific_politicians_arguing"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			save_temporary_scope_as = first_agitator
		}
		OR = {
			AND = {
				scope:first_agitator = {
					has_socialist_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_socialist_ideology = yes
						}
					}
					save_temporary_scope_as = first_agitator_party_scope
				}
			}
			AND = {
				scope:first_agitator = {
					has_progressive_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_progressive_ideology = yes
						}
					}
					save_temporary_scope_as = first_agitator_party_scope
				}
			}
			AND = {
				scope:first_agitator = {
					has_liberal_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_liberal_ideology = yes
						}
					}
					save_temporary_scope_as = first_agitator_party_scope
				}
			}
			AND = {
				scope:first_agitator = {
					has_reactionary_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_reactionary_ideology = yes
						}
					}
					save_temporary_scope_as = first_agitator_party_scope
				}
			}
			AND = {
				scope:first_agitator = {
					has_conservative_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_conservative_ideology = yes
						}
					}
					save_temporary_scope_as = first_agitator_party_scope
				}
			}
		}
		any_scope_character = {
			has_role = agitator
			NOT = {
				this.interest_group = {
					is_same_interest_group_type = scope:first_agitator.interest_group
				}
			}
			save_temporary_scope_as = second_agitator
		}
		OR = {
			AND = {
				scope:second_agitator = {
					has_socialist_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_socialist_ideology = yes
						}
					}
					save_temporary_scope_as = second_agitator_party_scope
				}
			}
			AND = {
				scope:second_agitator = {
					has_progressive_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_progressive_ideology = yes
						}
					}
					save_temporary_scope_as = second_agitator_party_scope
				}
			}
			AND = {
				scope:second_agitator = {
					has_liberal_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_liberal_ideology = yes
						}
					}
					save_temporary_scope_as = second_agitator_party_scope
				}
			}
			AND = {
				scope:second_agitator = {
					has_reactionary_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_reactionary_ideology = yes
						}
					}
					save_temporary_scope_as = second_agitator_party_scope
				}
			}
			AND = {
				scope:second_agitator = {
					has_conservative_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_conservative_ideology = yes
						}
					}
					save_temporary_scope_as = second_agitator_party_scope
				}
			}
		}
		NOT = {
			scope:first_agitator_party_scope = {
				this = scope:second_agitator_party_scope
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			scope:agitator_scope_2 = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			NOT = {
				exists = scope:agitator_scope_2
			}
			NOT = {
				exists = scope:agitator_party_scope
			}
			NOT = {
				exists = scope:agitator_2_party_scope
			}
			scope:agitator_party_scope = {
				this = scope:agitator_2_party_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		save_agitator_election_scopes = yes
		random_scope_character = {
			limit = {
				has_role = agitator
				NOT = {
					this.interest_group = {
						is_same_interest_group_type = scope:agitator_scope.interest_group
					}
				}
				NOT = {
					OR = {
						AND = {
							has_socialist_ideology = yes
							scope:agitator_scope = {
								has_socialist_ideology = yes
							}
						}
						AND = {
							has_progressive_ideology = yes
							scope:agitator_scope = {
								has_progressive_ideology = yes
							}
						}
						AND = {
							has_liberal_ideology = yes
							scope:agitator_scope = {
								has_liberal_ideology = yes
							}
						}
						AND = {
							has_reactionary_ideology = yes
							scope:agitator_scope = {
								has_reactionary_ideology = yes
							}
						}
						AND = {
							has_conservative_ideology = yes
							scope:agitator_scope = {
								has_conservative_ideology = yes
							}
						}
					}
				}
			}
			save_scope_as = agitator_scope_2
		}
		if = {
			limit = {
				scope:agitator_scope_2 = {
					has_socialist_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_socialist_ideology = yes
						}
					}
					NOT = {
						this = scope:agitator_party_scope
					}
				}
			}
			random_active_party = {
				limit = {
					any_member = {
						leader = {
							has_socialist_ideology = yes
						}
					}
				}
				save_scope_as = agitator_2_party_scope
			}
		}
		else_if = {
			limit = {
				scope:agitator_scope_2 = {
					has_progressive_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_progressive_ideology = yes
						}
					}
					NOT = {
						this = scope:agitator_party_scope
					}
				}
			}
			random_active_party = {
				limit = {
					any_member = {
						leader = {
							has_progressive_ideology = yes
						}
					}
				}
				save_scope_as = agitator_2_party_scope
			}
		}
		else_if = {
			limit = {
				scope:agitator_scope_2 = {
					has_liberal_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_liberal_ideology = yes
						}
					}
					NOT = {
						this = scope:agitator_party_scope
					}
				}
			}
			random_active_party = {
				limit = {
					any_member = {
						leader = {
							has_liberal_ideology = yes
						}
					}
				}
				save_scope_as = agitator_2_party_scope
			}
		}
		else_if = {
			limit = {
				scope:agitator_scope_2 = {
					has_reactionary_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_reactionary_ideology = yes
						}
					}
					NOT = {
						this = scope:agitator_party_scope
					}
				}
			}
			random_active_party = {
				limit = {
					any_member = {
						leader = {
							has_reactionary_ideology = yes
						}
					}
				}
				save_scope_as = agitator_2_party_scope
			}
		}
		else_if = {
			limit = {
				scope:agitator_scope_2 = {
					has_conservative_ideology = yes
				}
				any_active_party = {
					any_member = {
						leader = {
							has_conservative_ideology = yes
						}
					}
					NOT = {
						this = scope:agitator_party_scope
					}
				}
			}
			random_active_party = {
				limit = {
					any_member = {
						leader = {
							has_conservative_ideology = yes
						}
					}
				}
				save_scope_as = agitator_2_party_scope
			}
		}
		random_scope_state = {
			limit = {
				is_incorporated = yes
			}
			save_scope_as = debate_state
		}
	}
	option = {
		name = agitators_election_events.2.a
		default_option = yes
		scope:agitator_2_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.2.b
		scope:agitator_2_party_scope = {
			add_momentum = momentum_medium
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
}

agitators_election_events.3 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.3.t
	desc = agitators_election_events.3.d
	flavor = agitators_election_events.3.f
	event_image = {
		video = "unspecific_politicians_arguing"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		set_variable = preset_ideology
		random_scope_character = {
			limit = {
				has_role = agitator
				OR = {
					has_socialist_ideology = yes
				}
			}
			save_scope_as = agitator_scope
		}
		save_agitator_election_scopes = yes
	}
	option = {
		name = agitators_election_events.3.a
		default_option = yes
		add_modifier = {
			name = modifier_anti_electorialism_peaceful
			months = normal_modifier_time
		}
		add_radicals = {
			value = small_radicals
			interest_group = scope:agitator_ig_scope
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		random_active_party = {
			limit = {
				NOT = {
					this = scope:agitator_party_scope
				}
			}
			add_momentum = momentum_small
		}
	}
	option = {
		name = agitators_election_events.3.b
		add_modifier = {
			name = modifier_anti_electorialism
			months = normal_modifier_time
		}
		add_radicals = {
			value = large_radicals
			interest_group = scope:agitator_ig_scope
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		random_active_party = {
			limit = {
				NOT = {
					this = scope:agitator_party_scope
				}
			}
			add_momentum = momentum_small
		}
	}
	option = {
		name = agitators_election_events.3.c
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		random_active_party = {
			limit = {
				NOT = {
					this = scope:agitator_party_scope
				}
			}
			add_momentum = momentum_medium
		}
	}
}

agitators_election_events.4 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.4.t
	desc = agitators_election_events.4.d
	flavor = agitators_election_events.4.f
	event_image = {
		video = "unspecific_politicians_arguing"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_active_party = {
			count >= 2
		}
		any_active_party = {
			NOT = {
				any_member = {
					interest_group_supports_political_movement = yes
				}
			}
		}
		any_scope_character = {
			has_role = agitator
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		save_agitator_election_scopes = yes
		random_active_party = {
			limit = {
				NOT = {
					any_member = {
						interest_group_supports_political_movement = yes
					}
				}
				NOT = {
					this = scope:agitator_party_scope
				}
			}
			save_scope_as = opposition_party_scope
		}
	}
	option = {
		name = agitators_election_events.4.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
		scope:opposition_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
	option = {
		name = agitators_election_events.4.b
		scope:opposition_party_scope = {
			add_momentum = momentum_large_decrease
		}
	}
}

agitators_election_events.5 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.5.t
	desc = agitators_election_events.5.d
	flavor = agitators_election_events.5.f
	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_interest_group = {
			has_party = yes
			any_scope_character = {
				has_role = agitator
			}
			leader = {
				OR = {
					has_trait = cautious
					has_trait = reserved
					has_ideology = ideology:ideology_moderate
				}
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		save_agitator_election_scopes = yes
		scope:agitator_ig_scope = {
			leader = {
				save_scope_as = agitator_ig_leader_scope
			}
		}
	}
	option = {
		name = agitators_election_events.5.a
		default_option = yes
		scope:agitator_ig_leader_scope = {
			add_modifier = {
				name = modifier_embarassed_by_comrade
				months = normal_modifier_time
				multiplier = 2
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.5.b
		trigger = {
			scope:agitator_ig_leader_scope = {
				NOR = {
					has_trait = arrogant
					has_trait = imperious
				}
			}
		}
		scope:agitator_ig_leader_scope = {
			add_modifier = {
				name = modifier_embarassed_by_comrade
				months = normal_modifier_time
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
	}
	option = {
		name = agitators_election_events.5.c
		trigger = {
			scope:agitator_ig_leader_scope = {
				OR = {
					has_trait = arrogant
					has_trait = imperious
				}
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
	}
}

agitators_election_events.6 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.6.t
	desc = agitators_election_events.6.d
	flavor = agitators_election_events.6.f
	event_image = {
		video = "europenorthamerica_sufferage"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		has_law = law_type:law_gender_equality
		any_scope_character = {
			has_role = agitator
			OR = {
				law_stance = {
					law = law_type:law_gender_equality
					value > neutral
				}
				AND = {
					law_stance = {
						law = law_type:law_gender_equality
						value > strongly_approve						# Equals 'count'
					}
					interest_group = {
						law_stance = {
							law = law_type:law_gender_equality
							value > neutral
						}
						NOT = {
							law_stance = {
								law = law_type:law_gender_equality
								value > strongly_approve								# Equals 'count'
							}
						}
					}
				}
			}
			this.interest_group = {
				has_party = yes
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		set_variable = preset_ideology
		random_scope_character = {
			limit = {
				has_role = agitator
				OR = {
					law_stance = {
						law = law_type:law_gender_equality
						value > neutral
					}
					AND = {
						law_stance = {
							law = law_type:law_gender_equality
							value > strongly_approve							# Equals 'count'
						}
						interest_group = {
							law_stance = {
								law = law_type:law_gender_equality
								value > neutral
							}
							NOT = {
								law_stance = {
									law = law_type:law_gender_equality
									value > strongly_approve									# Equals 'count'
								}
							}
						}
					}
				}
			}
			save_scope_as = agitator_scope
		}
		save_agitator_election_scopes = yes
	}
	option = {
		name = agitators_election_events.6.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		add_modifier = {
			name = modifier_rising_of_women
			months = long_modifier_time
		}
	}
	option = {
		name = agitators_election_events.6.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_modifier = {
			name = modifier_rising_of_women
			months = long_modifier_time
			multiplier = 2
		}
	}
}

agitators_election_events.7 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.7.t
	desc = agitators_election_events.7.d
	flavor = agitators_election_events.7.f
	event_image = {
		video = "unspecific_gears_pistons"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		save_agitator_election_scopes = yes
	}
	option = {
		name = agitators_election_events.7.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.7.b
		trigger = {
			scope:agitator_scope = {
				NOT = {
					has_trait = ambitious
				}
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:agitator_scope = {
			add_trait = ambitious
		}
	}
}

agitators_election_events.8 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.8.t
	desc = agitators_election_events.8.d
	flavor = agitators_election_events.8.f
	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			this.interest_group = {
				has_party = yes
				this.party = {
					any_member = {
						count >= 2
					}
				}
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		save_agitator_election_scopes = yes
		scope:agitator_party_scope = {
			random_member = {
				limit = {
					NOT = {
						is_same_interest_group_type = scope:agitator_ig_scope
					}
				}
				save_scope_as = snubbed_ig_scope
			}
		}
	}
	option = {
		name = agitators_election_events.8.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_fair_dealer
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.8.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:snubbed_ig_scope = {
			add_modifier = {
				name = modifier_preferred_in_party
				months = normal_modifier_time
				multiplier = -2
			}
		}
		scope:agitator_ig_scope = {
			add_modifier = {
				name = modifier_preferred_in_party
				months = normal_modifier_time
				multiplier = 1
			}
		}
	}
}

agitators_election_events.9 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.9.t
	desc = agitators_election_events.9.d
	flavor = agitators_election_events.9.f
	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				law_stance = {
					law = law_type:law_consensus_democracy
					value > neutral
				}
				AND = {
					law_stance = {
						law = law_type:law_consensus_democracy
						value > strongly_approve						# Equals 'count'
					}
					interest_group = {
						law_stance = {
							law = law_type:law_consensus_democracy
							value > neutral
						}
						NOT = {
							law_stance = {
								law = law_type:law_consensus_democracy
								value > strongly_approve								# Equals 'count'
							}
						}
					}
				}
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		set_variable = preset_ideology
		random_scope_character = {
			limit = {
				has_role = agitator
				OR = {
					law_stance = {
						law = law_type:law_consensus_democracy
						value > neutral
					}
					AND = {
						law_stance = {
							law = law_type:law_consensus_democracy
							value > strongly_approve							# Equals 'count'
						}
						interest_group = {
							law_stance = {
								law = law_type:law_consensus_democracy
								value > neutral
							}
							NOT = {
								law_stance = {
									law = law_type:law_consensus_democracy
									value > strongly_approve									# Equals 'count'
								}
							}
						}
					}
				}
			}
			save_scope_as = agitator_scope
		}
		save_agitator_election_scopes = yes
	}
	option = {
		name = agitators_election_events.9.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
	}
	option = {
		name = agitators_election_events.9.b
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
			random_member = {
				add_modifier = {
					name = modifier_pro_democracy_ig
					months = normal_modifier_time
				}
			}
		}
	}
}

agitators_election_events.10 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.10.t
	desc = agitators_election_events.10.d
	flavor = agitators_election_events.10.f
	event_image = {
		video = "southamerica_public_figure_assassination"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
		}
		any_scope_state = {
			is_incorporated = yes
			turmoil >= 0.3
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		save_agitator_election_scopes = yes
		random_scope_state = {
			limit = {
				turmoil >= 0.3
			}
			save_scope_as = tumultuous_state_scope
		}
	}
	option = {
		name = agitators_election_events.10.a
		default_option = yes
		scope:agitator_scope = {
			add_trait = scarred
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
	option = {
		name = agitators_election_events.10.b
		scope:agitator_scope = {
			add_trait = wounded
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.10.c
		trigger = {
			OR = {
				has_law = law_type:law_secret_police
			}
		}
		scope:agitator_scope = {
			add_trait = wounded
			add_trait = shellshocked
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
}

### Communist Party - for these, since it's for a specific ideology, use a modified script to save scopes.
agitators_election_events.11 = {
	type = country_event
	placement = scope:communist_agitation_state
	duration = 3
	title = agitators_election_events.11.t
	desc = agitators_election_events.11.d
	flavor = agitators_election_events.11.f
	event_image = {
		video = "unspecific_politicians_arguing"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = communist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_council_elective
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_council_elective
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_council_elective
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_council_elective
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = communist_party
		}
		any_scope_state = {
			is_incorporated = yes
			any_scope_building = {
				is_building_type = building_urban_center
				level >= 5
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		communist_agitator_election_scope_effect = yes
		random_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_building = {
					is_building_type = building_urban_center
					level >= 5
				}
			}
			save_scope_as = communist_agitation_state
		}
	}
	option = {
		name = agitators_election_events.11.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_radicals = {
			value = medium_radicals
			interest_group = scope:agitator_ig_scope
		}
		scope:communist_agitation_state = {
			add_radicals_in_state = {
				value = medium_radicals
				pop_type = laborers
			}
		}
	}
	option = {
		name = agitators_election_events.11.b
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
		scope:communist_agitation_state = {
			add_radicals_in_state = {
				value = small_radicals
				interest_group = scope:agitator_ig_scope
			}
		}
	}
	option = {
		name = agitators_election_events.11.c
		trigger = {
			any_active_party = {
				is_party_type = social_democrat_party
			}
		}
		highlighted_option = yes
		random_active_party = {
			limit = {
				is_party_type = social_democrat_party
			}
			add_momentum = momentum_medium
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		scope:communist_agitation_state = {
			add_radicals_in_state = {
				value = small_radicals
				interest_group = scope:agitator_ig_scope
			}
		}
	}
}

agitators_election_events.12 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.12.t
	desc = agitators_election_events.12.d
	flavor = agitators_election_events.12.f
	event_image = {
		video = "votp_conspiring"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = communist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_council_elective
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_council_elective
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_council_elective
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_council_elective
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = communist_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		communist_agitator_election_scope_effect = yes
	}
	option = {
		name = agitators_election_events.12.a
		default_option = yes
		add_radicals = {
			value = medium_radicals
			interest_group = scope:agitator_ig_scope
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
	option = {
		name = agitators_election_events.12.b
		trigger = {
			scope:agitator_scope = {
				NOT = {
					has_trait = cautious
				}
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:agitator_scope = {
			add_trait = cautious
		}
	}
	option = {
		name = agitators_election_events.12.c
		trigger = {
			any_political_movement = {
				is_revolutionary_movement = yes
				any_supporting_character = {
					this = scope:agitator_scope
				}
			}
		}
		highlighted_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large_decrease
		}
		add_radicals = {
			value = large_radicals
			interest_group = scope:agitator_ig_scope
		}
		random_civil_war = {
			add_civil_war_progress = 0.1
		}
	}
}

agitators_election_events.13 = {
	type = country_event
	placement = scope:peasant_agitation_state
	duration = 3
	title = agitators_election_events.13.t
	desc = agitators_election_events.13.d
	flavor = agitators_election_events.13.f
	event_image = {
		video = "votp_realist_household"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = communist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_council_elective
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_council_elective
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_council_elective
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_council_elective
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = communist_party
		}
		pop_type_percent_country = {
			pop_type = informal_workers
			percent >= 0.35
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		communist_agitator_election_scope_effect = yes
		random_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_pop = {
					is_pop_type = informal_workers
				}
			}
			save_scope_as = peasant_agitation_state
		}
	}
	option = {
		name = agitators_election_events.13.a
		default_option = yes
		scope:peasant_agitation_state = {
			add_radicals_in_state = {
				value = medium_radicals
				pop_type = informal_workers
			}
			add_modifier = {
				name = modifier_communist_peasant_agitation
				months = normal_modifier_time
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.13.b
		scope:peasant_agitation_state = {
			add_radicals_in_state = {
				value = small_radicals
				pop_type = informal_workers
			}
			add_modifier = {
				name = modifier_communist_anti_landlord_agitation
				months = normal_modifier_time
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
	}
}

agitators_election_events.14 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.14.t
	desc = agitators_election_events.14.d
	flavor = agitators_election_events.14.f
	event_image = {
		video = "votp_agitator_speaking"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = communist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_council_elective
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_council_elective
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_council_elective
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_council_elective
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = communist_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		communist_agitator_election_scope_effect = yes
		capital = {
			save_scope_as = capital_scope
		}
		random_interest_group = {
			limit = {
				law_stance = {
					law = law_type:law_council_elective
					value < neutral
				}
			}
			save_scope_as = anti_communist_ig
		}
		random_active_party = {
			limit = {
				is_party_type = fascist_party
			}
			save_scope_as = fascist_party_scope
		}
	}
	option = {
		name = agitators_election_events.14.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
		scope:capital_scope = {
			add_radicals_in_state = {
				value = medium_radicals
				strata = rich
			}
		}
		scope:anti_communist_ig = {
			add_modifier = {
				name = modifier_communists_out_of_control
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.14.b
		trigger = {
			NOT = {
				has_law = law_type:law_decentralized_police
			}
		}
		highlighted_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		random_list = {
			70 = {
			}
			30 = {
				scope:agitator_scope = {
					add_trait = wounded
				}
			}
		}
		scope:capital_scope = {
			add_loyalists_in_state = {
				value = medium_radicals
				interest_group = scope:anti_communist_ig
			}
		}
	}
	option = {
		name = agitators_election_events.14.c
		trigger = {
			any_active_party = {
				is_party_type = fascist_party
			}
		}
		highlighted_option = yes
		random_list = {
			50 = {
			}
			50 = {
				scope:agitator_scope = {
					add_trait = wounded
				}
			}
		}
		scope:fascist_party_scope = {
			add_momentum = momentum_medium
		}
		scope:capital_scope = {
			add_modifier = {
				name = modifier_rampant_political_violence
				months = normal_modifier_time
			}
			add_loyalists_in_state = {
				value = medium_radicals
				interest_group = scope:anti_communist_ig
			}
		}
	}
}

agitators_election_events.15 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.15.t
	desc = agitators_election_events.15.d
	flavor = agitators_election_events.15.f
	event_image = {
		video = "unspecific_signed_contract"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = communist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_council_elective
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_council_elective
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_council_elective
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_council_elective
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = communist_party
		}
		any_active_party = {
			is_party_type = fascist_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		communist_agitator_election_scope_effect = yes
		random_active_party = {
			limit = {
				is_party_type = fascist_party
			}
			save_scope_as = fascist_party_scope
		}
	}
	option = {
		name = agitators_election_events.15.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		random_list = {
			50 = {
				scope:fascist_party_scope = {
					add_momentum = momentum_very_large_decrease
				}
			}
			50 = {
				scope:fascist_party_scope = {
					add_momentum = momentum_small_decrease
				}
			}
		}
	}
	option = {
		name = agitators_election_events.15.b
		add_radicals = {
			value = small_radicals
			strata = poor
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		scope:fascist_party_scope = {
			add_momentum = momentum_small
		}
	}
}

### Fascist Party
agitators_election_events.16 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.16.t
	desc = agitators_election_events.16.d
	flavor = agitators_election_events.16.f
	event_image = {
		video = "europenorthamerica_political_extremism"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_fascist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = fascist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_ethnonationalist
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_ethnonationalist
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_ethnonationalist
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_ethnonationalist
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = fascist_party
		}
		any_active_party = {
			is_party_type = communist_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		fascist_agitator_election_scope_effect = yes
		random_active_party = {
			limit = {
				is_party_type = communist_party
			}
			save_scope_as = communist_party_scope
			random_member = {
				save_scope_as = communist_party_ig
			}
		}
	}
	option = {
		name = agitators_election_events.16.a
		default_option = yes
		add_radicals = {
			value = medium_radicals
			interest_group = scope:communist_party_ig
		}
		add_loyalists = {
			value = small_radicals
			strata = rich
		}
		add_loyalists = {
			value = small_radicals
			strata = middle
		}
		random_list = {
			50 = {
				scope:communist_party_scope = {
					add_momentum = momentum_medium_decrease
				}
			}
			25 = {
				scope:communist_party_scope = {
					add_momentum = momentum_large_decrease
				}
			}
			25 = {
				scope:communist_party_scope = {
					add_momentum = momentum_small_decrease
				}
			}
		}
	}
	option = {
		name = agitators_election_events.16.b
		add_radicals = {
			value = small_radicals
			interest_group = scope:communist_party_ig
		}
		scope:communist_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		random_scope_character = {
			limit = {
				has_socialist_ideology = yes
				is_ruler = no
			}
			random_list = {
				25 = {
				}
				25 = {
					exile_character_with_martyrdom = yes
					add_trait = shellshocked
					hidden_effect = {
						every_country = {
							limit = {
								has_interest_marker_in_region = scope:exiling_country_scope.capital.region
							}
							post_notification = exile_notification
						}
					}
				}
				25 = {
					add_trait = wounded
				}
				25 = {
					kill_character = yes
				}
			}
		}
	}
	option = {
		name = agitators_election_events.16.c
		add_radicals = {
			value = small_radicals
			strata = rich
		}
		add_radicals = {
			value = small_radicals
			strata = middle
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_condemned_for_violent_rhetoric
				months = normal_modifier_time
			}
		}
	}
}

agitators_election_events.17 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.17.t
	desc = agitators_election_events.17.d
	flavor = agitators_election_events.17.f
	event_image = {
		video = "unspecific_gears_pistons"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_fascist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = fascist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_ethnonationalist
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_ethnonationalist
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_ethnonationalist
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_ethnonationalist
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = fascist_party
		}
		ig:ig_capitalists = {
			is_marginal = no
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		fascist_agitator_election_scope_effect = yes
		ig:ig_capitalists = {
			save_scope_as = industrialists_scope
		}
	}
	option = {
		name = agitators_election_events.17.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		scope:industrialists_scope = {
			add_modifier = {
				name = modifier_courted_by_fascists
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.17.b
		trigger = {
			scope:industrialists_scope.party = {
				exists = yes
				NOT = {
					is_party_type = fascist_party
				}
			}
		}
		highlighted_option = yes
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_industrialists_rebuffed_advance
				months = normal_modifier_time
			}
		}
		scope:industrialists_scope.party = {
			add_momentum = momentum_medium
		}
	}
}

agitators_election_events.18 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.18.t
	desc = agitators_election_events.18.d
	flavor = agitators_election_events.18.f
	event_image = {
		video = "votp_agitator_speaking"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_fascist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = fascist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_ethnonationalist
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_ethnonationalist
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_ethnonationalist
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_ethnonationalist
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = fascist_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		fascist_agitator_election_scope_effect = yes
	}
	option = {
		name = agitators_election_events.18.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		if = {
			limit = {
				any_active_party = {
					is_party_type = communist_party
				}
			}
			random_active_party = {
				limit = {
					is_party_type = communist_party
				}
				add_momentum = momentum_medium_decrease
			}
		}
		add_modifier = {
			name = modifier_fascist_national_unity
			months = normal_modifier_time
		}
	}
	option = {
		name = agitators_election_events.18.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		random_active_party = {
			limit = {
				NOR = {
					is_party_type = communist_party
					is_party_type = fascist_party
				}
			}
			add_momentum = momentum_medium
		}
		add_modifier = {
			name = modifier_anticommunist_national_unity
			months = normal_modifier_time
		}
	}
}

agitators_election_events.19 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.19.t
	desc = agitators_election_events.19.d
	flavor = agitators_election_events.19.f
	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_fascist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = fascist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_ethnonationalist
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_ethnonationalist
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_ethnonationalist
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_ethnonationalist
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = fascist_party
		}
		any_country = {
			has_law = law_type:law_council_elective
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		fascist_agitator_election_scope_effect = yes
		ordered_country = {
			limit = {
				has_law = law_type:law_council_elective
			}
			order_by = country_rank
			save_scope_as = scary_communist_country
		}
	}
	option = {
		name = agitators_election_events.19.a
		default_option = yes
		change_relations = {
			country = scope:scary_communist_country
			value = -20
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_large
			random_member = {
				add_modifier = {
					name = modifier_rhetoric_bolstered
					months = short_modifier_time
					multiplier = 0.5
				}
			}
		}
	}
	option = {
		name = agitators_election_events.19.b
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
			random_member = {
				add_modifier = {
					name = modifier_rhetoric_bolstered
					months = short_modifier_time
				}
			}
		}
	}
	option = {
		name = agitators_election_events.19.c
		trigger = {
			scope:scary_communist_country = {
				relations:root >= relations_threshold:cordial
			}
		}
		highlighted_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		add_radicals = {
			value = small_radicals
			strata = rich
		}
	}
}

agitators_election_events.20 = {
	type = country_event
	placement = scope:hate_crime_state
	duration = 3
	title = agitators_election_events.20.t
	desc = agitators_election_events.20.d
	flavor = agitators_election_events.20.f
	event_image = {
		video = "europenorthamerica_political_extremism"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_fascist_ideology = yes
				AND = {
					trigger_if = {
						limit = {
							this.interest_group = {
								has_party = yes
							}
						}
						this.interest_group.party = {
							is_party_type = fascist_party
						}
					}
					OR = {
						law_stance = {
							law = law_type:law_ethnonationalist
							value > neutral
						}
						AND = {
							law_stance = {
								law = law_type:law_ethnonationalist
								value > strongly_approve								# Equals 'count'
							}
							interest_group = {
								law_stance = {
									law = law_type:law_ethnonationalist
									value > neutral
								}
								NOT = {
									law_stance = {
										law = law_type:law_ethnonationalist
										value > strongly_approve										# Equals 'count'
									}
								}
							}
						}
					}
				}
			}
		}
		any_active_party = {
			is_party_type = fascist_party
		}
		any_scope_pop = {
			this.culture = {
				NOT = {
					is_primary_culture_of = ROOT
				}
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		fascist_agitator_election_scope_effect = yes
		ordered_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_pop = {
					this.culture = {
						NOT = {
							is_primary_culture_of = ROOT
						}
					}
				}
			}
			order_by = turmoil
			random_scope_pop = {
				limit = {
					this.culture = {
						NOT = {
							is_primary_culture_of = ROOT
						}
					}
				}
				this.culture = {
					save_scope_as = hate_crime_culture
				}
			}
			save_scope_as = hate_crime_state
		}
	}
	option = {
		name = agitators_election_events.20.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		add_radicals = {
			value = small_radicals
			interest_group = scope:agitator_ig_scope
		}
		scope:hate_crime_state = {
			add_culture_standard_of_living_modifier = {
				culture = scope:hate_crime_culture
				months = short_modifier_time
				multiplier = -1
			}
		}
	}
	option = {
		name = agitators_election_events.20.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_radicals = {
			value = medium_radicals
			culture = scope:hate_crime_culture
		}
		scope:hate_crime_state = {
			add_culture_standard_of_living_modifier = {
				culture = scope:hate_crime_culture
				months = short_modifier_time
				multiplier = -3
			}
		}
	}
	option = {
		name = agitators_election_events.20.c
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
		add_loyalists = {
			value = small_radicals
			interest_group = scope:agitator_ig_scope
		}
		add_radicals = {
			value = large_radicals
			culture = scope:hate_crime_culture
		}
		scope:hate_crime_state = {
			add_culture_standard_of_living_modifier = {
				culture = scope:hate_crime_culture
				months = short_modifier_time
				multiplier = -5
			}
		}
	}
}

### Agrarian Party
agitators_election_events.21 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.21.t
	desc = agitators_election_events.21.d
	flavor = agitators_election_events.21.f
	event_image = {
		video = "europenorthamerica_russian_serfs"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_ideology = ideology:ideology_primitivist
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = agrarian_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = agrarian_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		agrarian_agitator_election_scope_effect = yes
	}
	option = {
		name = agitators_election_events.21.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.21.b
		add_modifier = {
			name = modifier_engaged_rural_population
			months = normal_modifier_time
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
	}
}

agitators_election_events.22 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.22.t
	desc = agitators_election_events.22.d
	flavor = agitators_election_events.22.f
	event_image = {
		video = "africa_prosperous_farm"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_ideology = ideology:ideology_agrarian
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = agrarian_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = agrarian_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		agrarian_agitator_election_scope_effect = yes
	}
	option = {
		name = agitators_election_events.22.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.22.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		random_active_party = {
			limit = {
				NOT = {
					is_party_type = agrarian_party
				}
				any_member = {
					law_stance = {
						law = law_type:law_anti_industrialization
						value <= neutral
					}
				}
			}
			add_momentum = momentum_medium_decrease
		}
	}
}

agitators_election_events.23 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.23.t
	desc = agitators_election_events.23.d
	flavor = agitators_election_events.23.f
	event_image = {
		video = "votp_barricade"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_ideology = ideology:ideology_primitivist
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = agrarian_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = agrarian_party
		}
		ig:ig_securocrats = {
			has_party = yes
		}
		any_active_party = {
			NOT = {
				is_party_type = agrarian_party
			}
			any_member = {
				is_interest_group_type = ig_securocrats
				is_interest_group_type = ig_patriots
			}
		}
		ig:ig_ruralists = {
			leader = {
				NOT = {
					has_ideology = ideology:ideology_jingoistic
				}
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		agrarian_agitator_election_scope_effect = yes
		ig:ig_securocrats = {
			save_scope_as = armed_forces_scope
			leader = {
				save_scope_as = armed_forces_leader
			}
			party = {
				save_scope_as = armed_forces_party_scope
			}
		}
	}
	option = {
		name = agitators_election_events.23.a
		default_option = yes
		scope:armed_forces_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		scope:armed_forces_scope = {
			add_modifier = {
				name = modifier_public_pacifism
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.23.b
		scope:armed_forces_party_scope = {
			add_momentum = momentum_small
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
	}
}

agitators_election_events.24 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.24.t
	desc = agitators_election_events.24.d
	flavor = agitators_election_events.24.f
	event_image = {
		video = "votp_gunboat_diplomacy"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_ideology = ideology:ideology_primitivist
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = agrarian_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = agrarian_party
		}
		any_scope_state = {
			is_incorporated = no
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		agrarian_agitator_election_scope_effect = yes
	}
	option = {
		name = agitators_election_events.24.a
		default_option = yes
		add_modifier = {
			name = modifier_no_colonial_affairs_support_agrarian_party
			months = normal_modifier_time
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
	}
	option = {
		name = agitators_election_events.24.b
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
}

agitators_election_events.25 = {
	type = country_event
	placement = scope:industry_enroachment_state
	duration = 3
	title = agitators_election_events.25.t
	desc = agitators_election_events.25.d
	flavor = agitators_election_events.25.f
	event_image = {
		video = "votp_agitator_speaking"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_ideology = ideology:ideology_primitivist
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = agrarian_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = agrarian_party
		}
		any_scope_state = {
			is_incorporated = yes
			any_scope_building = {
				is_building_type = building_urban_center
				level >= 5
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		agrarian_agitator_election_scope_effect = yes
		random_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_building = {
					is_building_type = building_urban_center
					level <= 5
				}
			}
			save_scope_as = industry_enroachment_state
		}
		ig:ig_ruralists = {
			save_scope_as = rural_folk_ig
		}
		ig:ig_capitalists = {
			save_scope_as = industrialists_ig
		}
	}
	option = {
		name = agitators_election_events.25.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		scope:industry_enroachment_state = {
			add_modifier = {
				name = modifier_industry_banned_support_agrarian_party
				months = normal_modifier_time
			}
			add_radicals_in_state = {
				value = small_radicals
				interest_group = scope:industrialists_ig
			}
		}
	}
	option = {
		name = agitators_election_events.25.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		scope:industry_enroachment_state = {
			add_radicals_in_state = {
				value = small_radicals
				interest_group = scope:rural_folk_ig
			}
		}
	}
}

### Social-Democrat Party
agitators_election_events.26 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.26.t
	desc = agitators_election_events.26.d
	flavor = agitators_election_events.26.f
	event_image = {
		video = "unspecific_ruler_speaking_to_people"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_progressive_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
		any_active_party = {
			is_party_type = communist_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		socdem_agitator_election_scope_effect = yes
		random_active_party = {
			limit = {
				is_party_type = communist_party
			}
			save_scope_as = communist_party_scope
		}
	}
	option = {
		name = agitators_election_events.26.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		add_loyalists = {
			value = small_radicals
			interest_group = scope:agitator_ig_scope
		}
	}
	option = {
		name = agitators_election_events.26.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:communist_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
}

agitators_election_events.27 = {
	type = country_event
	placement = scope:socdem_agitation_state
	duration = 3
	title = agitators_election_events.27.t
	desc = agitators_election_events.27.d
	flavor = agitators_election_events.27.f
	event_image = {
		video = "votp_realist_household"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_progressive_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
		any_scope_state = {
			is_incorporated = yes
			any_scope_building = {
				is_building_type = building_urban_center
				level >= 10
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		socdem_agitator_election_scope_effect = yes
		random_scope_state = {
			limit = {
				is_incorporated = yes
				any_scope_building = {
					is_building_type = building_urban_center
					level >= 10
				}
			}
			save_scope_as = socdem_agitation_state
		}
	}
	option = {
		name = agitators_election_events.27.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
		add_loyalists = {
			value = medium_radicals
			strata = poor
		}
		scope:socdem_agitation_state = {
			add_modifier = {
				name = modifier_engaged_urban_poor
				months = long_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.27.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_modifier = {
			name = modifier_engaged_urban_poor
			months = normal_modifier_time
			multiplier = 0.25
		}
	}
}

agitators_election_events.28 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.28.t
	desc = agitators_election_events.28.d
	flavor = agitators_election_events.28.f
	event_image = {
		video = "asia_union_leader"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_progressive_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
		ig:ig_laborists = {
			is_marginal = no
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		socdem_agitator_election_scope_effect = yes
		ig:ig_laborists = {
			save_scope_as = trade_union_ig
		}
	}
	option = {
		name = agitators_election_events.28.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
	}
	option = {
		name = agitators_election_events.28.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_loyalists = {
			value = medium_radicals
			interest_group = scope:trade_union_ig
		}
		scope:trade_union_ig = {
			add_modifier = {
				name = modifier_social_democratic_unionizing
				months = normal_modifier_time
			}
		}
	}
}

agitators_election_events.29 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.29.t
	desc = agitators_election_events.29.d
	flavor = agitators_election_events.29.f
	event_image = {
		video = "europenorthamerica_capitalists_meeting"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_progressive_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		socdem_agitator_election_scope_effect = yes
	}
	option = {
		name = agitators_election_events.29.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.29.b
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		add_radicals = {
			value = small_radicals
			interest_group = scope:agitator_ig_scope
		}
	}
}

agitators_election_events.30 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.30.t
	desc = agitators_election_events.30.d
	flavor = agitators_election_events.30.f
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		NOT = {
			has_law = law_type:law_anocracy
		}
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_progressive_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		socdem_agitator_election_scope_effect = yes
	}
	option = {
		name = agitators_election_events.30.a
		default_option = yes
		add_modifier = {
			name = modifier_suffrage_support_socdem_party
			months = normal_modifier_time
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_supporter_of_franchise
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.30.b
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
	}
}

agitators_election_events.31 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.31.t
	desc = agitators_election_events.31.d
	flavor = agitators_election_events.31.f
	event_image = {
		video = "middleeast_middleclass_cafe"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				has_ideology = ideology:ideology_environmentalist
				has_liberal_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = liberal_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = liberal_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		liberal_agitator_election_scope_effect = yes
		capital = {
			save_scope_as = capital_scope
		}
	}
	option = {
		name = agitators_election_events.31.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
	option = {
		name = agitators_election_events.31.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_average_ao3_writer
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.31.c
		trigger = {
		}
		highlighted_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		scope:agitator_scope = {
			random_list = {
				33 = {
					add_trait = literary
				}
				66 = {
				}
			}
		}
	}
}

agitators_election_events.33 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.33.t
	desc = agitators_election_events.33.d
	flavor = agitators_election_events.33.f
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				has_ideology = ideology:ideology_environmentalist
				has_liberal_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = liberal_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = liberal_party
		}
		any_interest_group = {
			has_party = yes
			NOT = {
				party = {
					is_party_type = liberal_party
				}
			}
			leader = {
				OR = {
					has_trait = reserved
					has_trait = honorable
					has_trait = charismatic
					has_trait = romantic
					has_trait = tactful
				}
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		liberal_agitator_election_scope_effect = yes
		random_interest_group = {
			limit = {
				has_party = yes
				trigger_if = {
					limit = {
						has_party = yes
					}
					NOT = {
						this.party = {
							is_party_type = liberal_party
						}
					}
				} 
				leader = {
					OR = {
						has_trait = reserved
						has_trait = honorable
						has_trait = charismatic
						has_trait = romantic
						has_trait = tactful
					}
				}	
			}
			save_scope_as = opposition_ig_scope
			party = {
				save_scope_as = opposition_party_scope
			}
		}
	}

	option = {
		name = agitators_election_events.33.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.33.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:agitator_scope = {
			add_trait = honorable
		}
	}
	option = {
		name = agitators_election_events.33.c
		scope:opposition_party_scope = {
			add_momentum = momentum_medium
		}
	}
}

agitators_election_events.34 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.34.t
	desc = agitators_election_events.34.d
	flavor = agitators_election_events.34.f
	event_image = {
		video = "votp_agitator_speaking"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				has_ideology = ideology:ideology_environmentalist
				has_liberal_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = liberal_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = liberal_party
		}
		OR = {
			has_law = law_type:law_right_of_assembly
			has_law = law_type:law_protected_speech
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		liberal_agitator_election_scope_effect = yes
		random_active_party = {
			limit = {
				is_party_type = social_democrat_party
			}
			save_scope_as = progressive_party_scope
		}
		capital = {
			save_scope_as = capital_scope
		}
	}
	option = {
		name = agitators_election_events.34.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.34.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_modifier = {
			name = modifier_freedom_of_speech_propaganda
			months = normal_modifier_time
		}
	}
	option = {
		name = agitators_election_events.34.c
		trigger = {
			any_active_party = {
				is_party_type = liberal_party
			}
		}
		scope:progressive_party_scope = {
			add_momentum = momentum_medium
		}
	}
}

agitators_election_events.35 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.35.t
	desc = agitators_election_events.35.d
	flavor = agitators_election_events.35.f
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				has_ideology = ideology:ideology_environmentalist
				has_liberal_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = liberal_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = liberal_party
		}
		has_law = law_type:law_censorship
		any_scope_state = {
			any_scope_building = {
				is_building_type = building_urban_center
				level >= 5
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		liberal_agitator_election_scope_effect = yes
		random_scope_state = {
			limit = {
				any_scope_building = {
					is_building_type = building_urban_center
					level >= 5
				}
			}
			save_scope_as = rally_state
		}
	}
	option = {
		name = agitators_election_events.35.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
	}
	option = {
		name = agitators_election_events.35.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:rally_state = {
			add_modifier = {
				name = modifier_rally_freedom_of_speech
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.35.c
		scope:rally_state = {
			add_radicals_in_state = {
				value = medium_radicals
				interest_group = scope:agitator_scope.interest_group
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
}

agitators_election_events.36 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.36.t
	desc = agitators_election_events.36.d
	flavor = agitators_election_events.36.f
	event_image = {
		trigger = {
			religion = rel:jewish
		}
		video = "europenorthamerica_judaism"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:oriental_orthodox
			}
		}
		video = "southamerica_christianity"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:hindu
				religion = rel:sikh
			}
		}
		video = "asia_hinduism_sikhism"
	}
	event_image = {
		trigger = {
			religion = rel:shinto
		}
		video = "asia_confucianism_shinto"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:mahayana
				religion = rel:gelugpa
				religion = rel:theravada
			}
		}
		video = "asia_buddhism"
	}
	event_image = {
		trigger = {
			OR = {
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "middleeast_islam"
	}
	event_image = {
		trigger = {
			NOR = {
				religion = rel:jewish
				religion = rel:protestant
				religion = rel:catholic
				religion = rel:orthodox
				religion = rel:oriental_orthodox
				religion = rel:mahayana
				religion = rel:gelugpa
				religion = rel:theravada
				religion = rel:shinto
				religion = rel:hindu
				religion = rel:sikh
				religion = rel:sunni
				religion = rel:shiite
			}
		}
		video = "africa_animism"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_reactionary_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = conservative_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = conservative_party
		}
		OR = {
			has_law = law_type:law_religious_institutions
			has_law = law_type:law_religious_policies
		}
		ig:ig_moralists = {
			is_marginal = no
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		conservative_agitator_election_scope_effect = yes
		ig:ig_moralists = {
			save_scope_as = devout_ig
		}
	}
	option = {
		name = agitators_election_events.36.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
	}
	option = {
		name = agitators_election_events.36.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_modifier = {
			name = modifier_political_involvement_welcomed
			months = normal_modifier_time
		}
	}
	option = {
		name = agitators_election_events.36.c
		trigger = {
			ig:ig_moralists = {
				has_party = no
			}
		}
		scope:devout_ig = {
			leader = {
				add_modifier = {
					name = modifier_apolitical_priest
					months = long_modifier_time
				}
			}
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_agitator_religious_scandal
				months = normal_modifier_time
			}
		}
	}
}

agitators_election_events.37 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.37.t
	desc = agitators_election_events.37.d
	flavor = agitators_election_events.37.f
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_reactionary_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = conservative_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = conservative_party
		}
		any_country = {
			is_revolutionary = yes
			OR = {
				any_interest_group = {
					is_in_government = yes
					leader = {
						has_socialist_ideology = yes
						has_progressive_ideology = yes
					}
				}
				ig:ig_ruralists = {
					is_powerful = yes
					is_in_government = yes
				}
				ig:ig_urbanists = {
					is_powerful = yes
					is_in_government = yes
				}
				ig:ig_laborists = {
					is_powerful = yes
					is_in_government = yes
				}
				any_interest_group = {
					is_in_government = yes
					is_powerful = yes
					leader = {
						has_socialist_ideology = yes
					}
				}
			}
			ROOT = {
				has_interest_marker_in_region = prev.capital.region
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		conservative_agitator_election_scope_effect = yes
		random_country = {
			limit = {
				is_revolutionary = yes
				OR = {
					any_interest_group = {
						is_in_government = yes
						is_powerful = yes
						leader = {
							OR = {
								has_socialist_ideology = yes
							}
						}
					}
					ig:ig_ruralists = {
						is_powerful = yes
						is_in_government = yes
					}
					ig:ig_urbanists = {
						is_powerful = yes
						is_in_government = yes
					}
					ig:ig_laborists = {
						is_powerful = yes
						is_in_government = yes
					}
					NOR = {
						ig:ig_elites = {
							is_in_government = yes
						}
						ig:ig_moralists = {
							is_in_government = yes
						}
					}
				}
				ROOT = {
					has_interest_marker_in_region = prev.capital.region
				}
			}
			save_scope_as = revolutionary_nation_cw_scope
			ruler = {
				interest_group = {
					save_scope_as = revolutionary_ig
				}
			}
			this.civil_war_origin_country = {
				save_scope_as = revolutionary_nation_scope
			}
		}
		random_interest_group = {
			limit = {
				is_same_interest_group_type = scope:revolutionary_ig
			}
			save_scope_as = patsy_ig
		}
	}
	option = {
		name = agitators_election_events.37.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
		random_interest_group = {
			limit = {
				is_same_interest_group_type = scope:revolutionary_nation_cw_scope.ruler.interest_group
			}
			add_modifier = {
				name = modifier_conservative_fearmongering
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.37.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		random_interest_group = {
			limit = {
				has_party = yes
				trigger_if = {
					limit = {
						has_party = yes
					}
					this.party = {
						is_party_type = conservative_party
					}
				}
			}
			add_modifier = {
				name = modifier_conservative_fearmongering_failed
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.37.c
		trigger = {
			any_active_party = {
				OR = {
					is_party_type = socialist_party
					is_party_type = social_democrat_party
					is_party_type = democratic_socialist_party
					is_party_type = communist_party
					is_party_type = anarchist_party
				}
			}
		}
		random_active_party = {
			limit = {
				OR = {
					is_party_type = socialist_party
					is_party_type = social_democrat_party
					is_party_type = democratic_socialist_party
					is_party_type = communist_party
					is_party_type = anarchist_party
				}
			}
			add_momentum = momentum_medium
		}
		random_interest_group = {
			limit = {
				has_party = yes
				trigger_if = {
					limit = {
						has_party = yes
					}
					this.party = {
						is_party_type = conservative_party
					}
				}
			}
			add_modifier = {
				name = modifier_conservative_fearmongering_failed
				months = normal_modifier_time
				multiplier = 1.5
			}
		}
	}
}

agitators_election_events.38 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.38.t
	desc = agitators_election_events.38.d
	flavor = agitators_election_events.38.f
	event_image = {
		video = "votp_agitator_speaking"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_reactionary_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = conservative_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = conservative_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		conservative_agitator_election_scope_effect = yes
	}
	option = {
		name = agitators_election_events.38.a
		trigger = {
			NOR = {
				has_law = law_type:law_gender_equality
				has_law = law_type:law_representative_democracy
				has_law = law_type:law_income_security
				has_law = law_type:law_income_supplementation
			}
		}
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.38.a1
		trigger = {
			OR = {
				has_law = law_type:law_gender_equality
				has_law = law_type:law_representative_democracy
				has_law = law_type:law_income_security
				has_law = law_type:law_income_supplementation
			}
		}
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
	}
	option = {
		name = agitators_election_events.38.b
		trigger = {
			NOR = {
				has_law = law_type:law_gender_equality
				has_law = law_type:law_representative_democracy
				has_law = law_type:law_income_security
				has_law = law_type:law_income_supplementation
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_agitator_out_of_touch
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.38.c
		trigger = {
			OR = {
				has_law = law_type:law_gender_equality
				has_law = law_type:law_representative_democracy
				has_law = law_type:law_income_security
				has_law = law_type:law_income_supplementation
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_large_decrease
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_agitator_out_of_touch
				months = normal_modifier_time
				multiplier = 2
			}
		}
	}
}

agitators_election_events.39 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.39.t
	desc = agitators_election_events.39.d
	flavor = agitators_election_events.39.f
	event_image = {
		video = "europenorthamerica_russian_serfs"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_reactionary_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = conservative_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = conservative_party
		}
		ig:ig_ruralists = {
			leader = {
				NOR = {
					has_socialist_ideology = yes
				}
			}
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		conservative_agitator_election_scope_effect = yes
		ig:ig_ruralists = {
			save_scope_as = rf_scope
			leader = {
				save_scope_as = rf_leader_scope
			}
		}
	}
	option = {
		name = agitators_election_events.39.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
	}
	option = {
		name = agitators_election_events.39.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_modifier = {
			name = modifier_farmers_voting_conservative
			months = normal_modifier_time
		}
	}
	option = {
		name = agitators_election_events.39.c
		trigger = {
			any_active_party = {
				is_party_type = agrarian_party
			}
		}
		highlighted_option = yes
		random_active_party = {
			limit = {
				is_party_type = agrarian_party
			}
			add_momentum = momentum_medium
		}
	}
}

agitators_election_events.41 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.41.t
	desc = agitators_election_events.41.d
	flavor = agitators_election_events.41.f
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		radical_agitator_election_scope_effect = yes
		capital = {
			save_scope_as = capital_scope
		}
		ig:ig_moralists = {
			save_scope_as = devout_ig
		}
	}
	option = {
		name = agitators_election_events.41.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_excessively_radical_prescription
				months = normal_modifier_time
				is_decaying = yes
			}
		}
		ig:ig_moralists = {
			add_modifier = {
				name = modifier_radical_prescription_devout
				months = short_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.41.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_radical_prescriptions
				months = normal_modifier_time
			}
		}
		ig:ig_moralists = {
			add_modifier = {
				name = modifier_radical_prescription_denied_devout
				months = short_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.41.c
		trigger = {
			has_law = law_type:law_no_welfare
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		scope:capital_scope = {
			add_modifier = {
				name = modifier_just_give_them_money_smh
				months = normal_modifier_time
			}
		}
	}
}

agitators_election_events.42 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.42.t
	desc = agitators_election_events.42.d
	flavor = agitators_election_events.42.f
	event_image = {
		video = "votp_agitator_speaking"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			NOT = {
				is_interest_group_type = ig_urbanists
			}
			OR = {
				has_socialist_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
		ruler.popularity <= 0
		has_law = law_type:law_hereditary
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		radical_agitator_election_scope_effect = yes
		ruler = {
			save_scope_as = monarch_scope
		}
		ig:ig_urbanists = {
			save_scope_as = intelligentsia_ig
		}
	}
	option = {
		name = agitators_election_events.42.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
	}
	option = {
		name = agitators_election_events.42.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:monarch_scope = {
			add_modifier = {
				name = modifier_agitator_hates_the_monarchy_monarch
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.42.c
		ig:ig_urbanists = {
			add_modifier = {
				name = modifier_agitator_hates_the_monarchy_ig
				months = normal_modifier_time
			}
		}
		if = {
			limit = {
				NOT = {
					scope:agitator_scope.interest_group = ig:ig_urbanists
				}
			}
			scope:agitator_scope.interest_group = {
				add_modifier = {
					name = modifier_agitator_hates_the_monarchy_ig
					months = normal_modifier_time
				}
			}
		}
		add_modifier = {
			name = modifier_agitator_hates_the_monarchy_enlightened
			months = normal_modifier_time
		}
	}
}

agitators_election_events.43 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.43.t
	desc = agitators_election_events.43.d
	flavor = agitators_election_events.43.f
	event_image = {
		video = "votp_agitator_speaking"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_scope_state = {
			any_scope_culture = {
				culture_is_discriminated_in = root
				save_temporary_scope_as = discrim_culture
			}
			culture_percent_state = {
				target = scope:discrim_culture
				value >= 0.05
			}
		}
		any_scope_culture = {
			culture_is_discriminated_in = root
			any_state = {
				owner = ROOT
				is_incorporated = yes
				culture_percent_state = {
					target = prev
					value >= 0.05
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
		NOT = {
			has_law = law_type:law_multiculturalist
		}
		NOT = {
			has_law = law_type:law_representative_democracy
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		radical_agitator_election_scope_effect = yes
		random_scope_culture = {
			limit = {
				culture_is_discriminated_in = root
				any_state = {
					owner = ROOT
					is_incorporated = yes
					culture_percent_state = {
						target = prev
						value >= 0.05
					}
				}
			}
			save_scope_as = discriminated_culture_scope
		}
		ig:ig_entrepreneurs = {
			save_scope_as = pb_scope
		}
	}
	option = {
		name = agitators_election_events.43.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		add_radicals = {
			value = small_radicals
			culture = scope:discriminated_culture_scope
		}
	}
	option = {
		name = agitators_election_events.43.b
		scope:agitator_party_scope = {
			add_momentum = momentum_medium_decrease
		}
	}
	option = {
		name = agitators_election_events.43.c
		trigger = {
			NOT = {
				has_law = law_type:law_gender_equality
			}
		}
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		add_modifier = {
			name = modifier_radical_womens_suffrage_support
			months = normal_modifier_time
		}
	}
}

agitators_election_events.44 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.44.t
	desc = agitators_election_events.44.d
	flavor = agitators_election_events.44.f
	event_image = {
		video = "europenorthamerica_sufferage"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_scope_character = {
			interest_group = {
				has_party = yes
				NOT = {
					this.party = {
						is_party_type = social_democrat_party
					}
				}
			}
			OR = {
				law_stance = {
					law = law_type:law_representative_democracy
					value > strongly_approve					# Equals 'count'
				}
				interest_group = {
					NOT = {
						law_stance = {
							law = law_type:law_representative_democracy
							value > strongly_approve							# Equals 'count'
						}
					}
				}
			}
			NOT = {
				is_ruler = yes
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
		NOT = {
			has_law = law_type:law_representative_democracy
		}
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		radical_agitator_election_scope_effect = yes
		random_scope_character = {
			limit = {
				interest_group = {
					has_party = yes
					NOT = {
						this.party = {
							is_party_type = social_democrat_party
						}
					}
				}
				OR = {
					law_stance = {
						law = law_type:law_representative_democracy
						value < neutral
					}
					AND = {
						law_stance = {
							law = law_type:law_representative_democracy
							value > strongly_approve							# Equals 'count'
						}
						interest_group = {
							law_stance = {
								law = law_type:law_representative_democracy
								value < neutral
							}
							NOT = {
								law_stance = {
									law = law_type:law_representative_democracy
									value > strongly_approve									# Equals 'count'
								}
							}
						}
					}
				}
				NOT = {
					is_ruler = yes
				}
			}
			interest_group = {
				party = {
					save_scope_as = anti_democratic_party
				}
			}
			save_scope_as = anti_democratic_character
		}
		save_scope_as = self_referential_reference
	}
	option = {
		name = agitators_election_events.44.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_large
		}
		add_modifier = {
			name = modifier_radical_universal_suffrage_support
			months = normal_modifier_time
		}
	}
	option = {
		name = agitators_election_events.44.b
		scope:agitator_party_scope = {
			add_momentum = momentum_small_decrease
		}
		add_modifier = {
			name = modifier_radical_suffrage_opposition
			months = normal_modifier_time
		}
		scope:anti_democratic_character = {
			add_modifier = {
				name = modifier_radical_suffrage_further_support
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.44.c
		trigger = {
			NOT = {
				has_law = law_type:law_gender_equality
			}
		}
		scope:anti_democratic_party = {
			add_momentum = momentum_medium
		}
		custom_tooltip = {
			text = agitators_election_events.44.c.tt
			add_modifier = {
				name = modifier_radical_womens_universal_suffrage_support
				months = normal_modifier_time
			}
		}
		add_radicals = {
			value = small_radicals
			strata = rich
		}
	}
}

agitators_election_events.45 = {
	type = country_event
	placement = root
	duration = 3
	title = agitators_election_events.45.t
	desc = agitators_election_events.45.d
	flavor = agitators_election_events.45.f
	event_image = {
		video = "southamerica_election"
	}
	on_created_soundeffect = "event:/SFX/UI/Alerts/event_appear"
	icon = "gfx/interface/icons/event_icons/event_election.dds"
	cooldown = {
		months = normal_modifier_time
	}
	trigger = {
		in_election_campaign = yes
		any_scope_character = {
			has_role = agitator
			OR = {
				has_socialist_ideology = yes
				trigger_if = {
					limit = {
						this.interest_group = {
							has_party = yes
						}
					}
					this.interest_group.party = {
						is_party_type = social_democrat_party
					}
				}
			}
		}
		any_active_party = {
			is_party_type = social_democrat_party
		}
		has_law = law_type:law_hereditary
	}
	cancellation_trigger = {
		OR = {
			scope:agitator_scope = {
				is_character_alive = no
			}
			NOT = {
				exists = scope:agitator_scope
			}
			in_election_campaign = no
		}
	}
	immediate = {
		radical_agitator_election_scope_effect = yes
		ruler = {
			save_scope_as = monarch_scope
		}
		capital = {
			save_scope_as = capital_scope
		}
	}
	option = {
		name = agitators_election_events.45.a
		default_option = yes
		scope:agitator_party_scope = {
			add_momentum = momentum_small
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_doing_great_things
				months = normal_modifier_time
			}
		}
	}
	option = {
		name = agitators_election_events.45.b
		scope:monarch_scope = {
			add_modifier = {
				name = modifier_monarch_support_from_sedition
				months = normal_modifier_time
			}
		}
		scope:agitator_scope = {
			add_modifier = {
				name = modifier_not_doing_great_things
				months = normal_modifier_time
			}
		}
		add_radicals = {
			value = small_radicals
			interest_group = scope:agitator_scope.interest_group
		}
	}
	option = {
		name = agitators_election_events.45.c
		scope:agitator_party_scope = {
			add_momentum = momentum_medium
		}
		scope:capital_scope = {
			add_modifier = {
				name = modifier_radical_republicanism_support
				months = normal_modifier_time
			}
		}
		add_radicals = {
			value = small_radicals
			strata = rich
		}
	}
}
