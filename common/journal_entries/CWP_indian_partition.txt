indian_partition = {
	# root = the owner of the Journal Entry (country scope)
	# scope:journal_entry = this Journal Entry (journalentry scope)
	# scope:target = target value, with which this Journal Entry was added using `add_journal_entry` effect
	# optional image that shows in the journal entry widget near the description, default = NDefines::GUI::JOURNAL_ENTRY_ICON_DEFAULT (set in /defines/00_interfaces.txt)
	icon = "gfx/interface/icons/event_icons/event_industry.dds"
	
	group = je_group_internal_affairs	
	# optional trigger which determines if a journal entry can be shown, default = no
	# is ignored when JE is added through `add_journal_entry` effect
	#is_shown_when_inactive = {}
	# one or more scripted buttons. See common/scripted_buttons/_scripted_buttons.info for more info
	#scripted_button = scripted_button_key
	# optional trigger - when both this and is_shown_when_inactive is true, the JE is Activated, default = yes
	# is ignored when JE is added through `add_journal_entry` effect
	#possible = {}
	# effect which happens when a journal entry is activated by having its `is_shown_when_inactive` and `possible` triggers become true or when JE is added through `add_journal_entry` effect
	immediate = {
		if = {
			limit = {
				NOT = {
					has_global_variable = indian_national_unity
				}
			}
			set_global_variable = {
				name = indian_national_unity
				value = 0
			}
		}
	}
	# completion trigger, use is_goal_complete = yes in here if you're testing a tracked goal metric; if left blank, cannot be completed
	complete = {
		custom_tooltip = {
			global_var:indian_national_unity >= 100
			text = indian_partition_complete_tooltip
		}
	}
	# effect which is executed when 'complete' trigger becomes true
	on_complete = {
		trigger_event = {
			id = indian_partition.1
			days = 0
		}
		hidden_effect = {
			if = {
				limit = {
					c:HND ?= this
				}
				set_global_variable = {
					name = indian_resolution_score
					value = {
						value = 0
						add = top_overlord.relations:root
						max = 50
						min = -50
					}
				}
			}
		}
	}
	# failure trigger, should spawn event explaining what happens when triggered, framed as a failure; if left blank, cannot fail
	fail = {
		c:HND = {
			is_subject = no
		}
	}
	# effect which is executed when 'fail' trigger becomes true
	on_fail = {
		hidden_effect = {
			set_global_variable = {
				name = indian_national_unity
				value = {
					value = global_var:indian_national_unity
					min = 75
				}
			}
			set_global_variable = {
				name = indian_resolution_score
				value = -50
			}
		}
		trigger_event = {
			id = indian_partition.1
			days = 0
		}
	}
	# optional invalidation trigger, should not notify player when it triggers, just clean up and silently disappear due to journal entry no longer being valid; if left blank, cannot be invalidated
	invalid = {
		OR = {
			NAND = {
				exists = c:GBR
				exists = c:HND
			}
			c:GBR = {
				has_war_with = c:HND
			}
		}
	}
	# effect which is executed when 'invalid' trigger becomes true
	on_invalid = {
	}
	# dynamically updated text, which describes the current status of the Journal Entry
	# To use in loc or UI: [JournalEntry.GetStatusDesc]
	# If this is not specified, GetStatusDesc will instead return loc from key <journal_entry_key>_status
	status_desc = {
		first_valid = {
			triggered_desc = {
				desc = indian_partition_progress_desc
				trigger = {
					c:HND ?= this
				}
			}
			triggered_desc = {
				desc = indian_partition_progress_desc_gbr
				trigger = {
					c:GBR ?= this
				}
			}
		}
	}
	# the number of days before this journal entry forcibly transitions, can be used to transition silently or into another event, framed either as success, failure, or neutral; if left blank or set to zero, will not time out
	timeout = 540
	# effect which is executed when journal entry is timed out
	on_timeout = {
		hidden_effect = {
			if = {
				limit = {
					c:HND ?= this
				}
				set_global_variable = {
					name = indian_resolution_score
					value = {
						value = 0
						add = top_overlord.relations:root
						max = 50
						min = -50
					}
				}
				change_global_variable = {
					name = indian_national_unity
					add = {
						value = top_overlord.relations:root
						multiply = -0.25
						max = 25
						min = 0
					}
				}
			}
		}
		trigger_event = {
			id = indian_partition.1
			days = 0
		}
	}
	# on_action which is triggered every first day of the week
	on_weekly_pulse = {
		random_events = {
			delay = {
				days = {
					0
					3
				}
			}
			1000 = 0
			# HND Events
			100 = indian_partition.102
			100 = indian_partition.103
			100 = indian_partition.104
			100 = indian_partition.105
			100 = indian_partition.106
			100 = indian_partition.107
			100 = indian_partition.108
			# GBR Events
			100 = indian_partition.201
			100 = indian_partition.202
			100 = indian_partition.203
			100 = indian_partition.204
		}
	}
	# on_action which is triggered every first day of the month
	on_monthly_pulse = {
		events = {
			indian_partition.101
		}
	}
	# on_action which is triggered every first day of the year
	on_yearly_pulse = {
		effect = {
		}
	}
	# a script value computing the goal completion metric
	current_value = {
		value = global_var:indian_national_unity
	}
	# when the journal entry is activated current_value and goal_add_value are evaluated and added together to determine the goal value
	goal_add_value = {
		value = 100
	}
	# the highest weighted active journal entry appears in the goal tracker on the main screen
	weight = 200
	# yes/no, determines if this journal entry should be transfered if the player switches country through a revolution or by releasing a subject. Note that external dependencies such as country variables etc are not automatically inherited
	transferable = yes
	# yes/no, determines if this journal entry is allowed to be inherited by a victorious revolution. Revolutions also get all variables from the defeated parent country, so most JEs *should* be inherited in this way
	# NOTE: transferable = yes will always mean that revolution inheritance is blocked as these JEs should stay with the player at all times
	can_revolution_inherit = yes
	# optional trigger, progress text is shown if this is defined and true
	is_progressing = {
	}
	# yes/no, if yes, a progress bar is shown
	progressbar = yes
	# yes/no, if yes, the Journal Entry can return to an inactive state if its possible trigger reverts to false
	# if no or unspecified, an activated Journal Entry cannot return to being inactive even if it is no longer considered possible
	can_deactivate = no
	# dynamically updated text, which is shown over the progress bar of the Journal Entry
	# value can be a localization key or first_valid + triggered_desc script
	# To use in loc or UI: [JournalEntry.GetProgressDesc]
	# If this is not specified, GetProgressDesc will instead return loc from key <journal_entry_key>_progress
	#progress_desc = 
	# tutorial lesson explaining HOW to complete the Journal Entry
	#how_tutorial = how_tutorial_lesson_key
	# tutorial lesson explaining the WHY around the Journal Entry
	#why_tutorial = why_tutorial_lesson_key
	# whether a Journal Entry should be pinned in its outliner by default. Defaults to 'no'
	should_be_pinned_by_default = yes
}
