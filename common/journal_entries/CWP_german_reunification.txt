west_german_unification = {
	# root = the owner of the Journal Entry (country scope)
	# scope:journal_entry = this Journal Entry (journalentry scope)
	# scope:target = target value, with which this Journal Entry was added using `add_journal_entry` effect

	# optional image that shows in the journal entry widget near the description, default = NDefines::GUI::JOURNAL_ENTRY_ICON_DEFAULT (set in /defines/00_interfaces.txt)
	icon = "gfx/interface/icons/event_icons/event_industry.dds"

	# optional trigger which determines if a journal entry can be shown, default = no
	# is ignored when JE is added through `add_journal_entry` effect
	is_shown_when_inactive = {
	}

	# one or more scripted buttons. See common/scripted_buttons/_scripted_buttons.info for more info
	#scripted_button = scripted_button_key

	# optional trigger - when both this and is_shown_when_inactive is true, the JE is Activated, default = yes
	# is ignored when JE is added through `add_journal_entry` effect
	possible = {
	}

	# effect which happens when a journal entry is activated by having its `is_shown_when_inactive` and `possible` triggers become true or when JE is added through `add_journal_entry` effect
	immediate = {
		trigger_event = {
			id = west_german_unification.999 # setup leader and unifier
			days = 1
		}
		if = {
			limit = {
				AND = {
					exists = c:BOZ
					exists = c:FOZ
					exists = c:AOZ
				}
				OR = {
					c:FOZ = { is_player = yes }
					c:BOZ = { is_player = yes }
					c:AOZ = { is_player = yes }
				}
			}
			set_global_variable = german_player
		}
	}

	# completion trigger, use is_goal_complete = yes in here if you're testing a tracked goal metric; if left blank, cannot be completed
	complete = {
		hidden_trigger = {
			has_global_variable = german_reunification_austrian_question
			has_global_variable = german_reunification_denazification
			has_global_variable = german_reunification_combined_zones_complete
			has_global_variable = german_reunification_neutrality_complete
			has_global_variable = german_reunification_east_and_west_complete
			has_global_variable = german_reunification_independence_complete
			has_global_variable = german_reunification_voting
		}
	}

	# effect which is executed when 'complete' trigger becomes true
	on_complete = {
		trigger_event = {
			id = west_german_unification.4 # Unified Germany
			days = 1
		}
		hidden_effect = {
			if = {
				limit = {
					this = {
						has_variable = west_german_leader
					}
				}
				if = {
					limit = {
						exists = c:BOZ
					}
					c:BOZ = {
						trigger_event = {
						id = west_german_unification.3 # Unified Germany
						days = 0
						}
					}
				}
				if = {
					limit = {
						exists = c:AOZ
					}
					c:AOZ = {
						trigger_event = {
						id = west_german_unification.3 # Unified Germany
						days = 0
						}
					}
				}
				if = {
					limit = {
						exists = c:FOZ
					}
					c:FOZ = {
						trigger_event = {
						id = west_german_unification.3 # Unified Germany
						days = 0
							}
						}
					}
				}
			}
		}

	# failure trigger, should spawn event explaining what happens when triggered, framed as a failure; if left blank, cannot fail
	fail = {
	}

	# effect which is executed when 'fail' trigger becomes true
	on_fail = {
	}

	# optional invalidation trigger, should not notify player when it triggers, just clean up and silently disappear due to journal entry no longer being valid; if left blank, cannot be invalidated
	invalid = {
		NOR = {
			exists = c:AOZ
			exists = c:BOZ
			exists = c:FOZ
			exists = c:GER
		}
	}

	# effect which is executed when 'invalid' trigger becomes true
	on_invalid = {

	}

	# dynamically updated text, which describes the current status of the Journal Entry
	# To use in loc or UI: [JournalEntry.GetStatusDesc]
	# If this is not specified, GetStatusDesc will instead return loc from key <journal_entry_key>_status
	status_desc = {
		first_valid = {
			triggered_desc = {
				desc = german_unification_desc_8
				trigger = {
					has_global_variable = german_reunification_independence_complete
				}
			}
			triggered_desc = {
				desc = german_unification_desc_7
				trigger = {
					has_global_variable = german_reunification_east_and_west_complete
				}
			}
			triggered_desc = {
				desc = german_unification_desc_6
				trigger = {
					has_global_variable = german_reunification_neutrality_complete
				}
			}
			triggered_desc = {
				desc = german_unification_desc_4
				trigger = {
					has_global_variable = german_reunification_combined_zones_complete
				}
			}
			triggered_desc = {
				desc = german_unification_desc_3
				trigger = {
					has_global_variable = german_reunification_denazification
				}
			}
			triggered_desc = {
				desc = german_unification_desc_2
				trigger = {
					has_global_variable = german_reunification_austrian_question
				}
			}
			triggered_desc = {
				desc = german_unification_desc_1
			}
		}
	}

	# the number of days before this journal entry forcibly transitions, can be used to transition silently or into another event, framed either as success, failure, or neutral; if left blank or set to zero, will not time out
	timeout = 4380

	# effect which is executed when journal entry is timed out
	on_timeout = {

	}

	# on_action which is triggered every first day of the week
	on_weekly_pulse = {
		effect = {
			if = {
				limit = {
					has_global_variable = USA_voted_german_reunification
					has_global_variable = GBR_voted_german_reunification
					has_global_variable = FRA_voted_german_reunification
					NOT = {	has_global_variable = german_reunification_voting_finished }
				}
				set_global_variable = german_reunification_voting_finished
			}
			if = {
				limit = {
					has_global_variable = german_reunification_neutrality_complete
					NOT = { has_global_variable = german_reunification_neutral_germany }
					NOT = { has_global_variable = german_reunification_east_and_west_complete }
				}
				set_global_variable = german_reunification_east_and_west_complete
			}
			if = {
				limit = {
					has_global_variable = german_reunification_east_and_west_complete
					has_global_variable = german_reunification_independence_vote_held
					has_global_variable = GBR_voted_german_reunification
					has_global_variable = USA_voted_german_reunification
					has_global_variable = FRA_voted_german_reunification
					NOT = { has_global_variable = german_reunification_independence_complete }
				}
				set_global_variable = german_reunification_independence_complete
			}
		}
		random_events = {
			50 = 0
			# Flavortown
		}

	}

	# on_action which is triggered every first day of the month
	on_monthly_pulse = {
		events = {
			delay = { days = { 0 7 } }
			west_german_unification.101
			west_german_unification.102
			west_german_unification.103
			west_german_unification.104
			saarland.1
			#saarland.2 Moved to on_actions since it takes place after the end of JE
		}
		random_events = {
			delay = { days = { 0 7 } }
			200 = 0
			100 = west_german_unification.6
			100 = west_german_unification.1
			100 = west_german_unification.5
			100 = west_german_unification.8
			100 = west_german_unification.9
		}
		effect = {
			if = {
				limit = {
					exists = c:AOZ
					c:AOZ = {
						has_variable = west_german_unifier
					}
				}
				c:AOZ = {
					trigger_event = { id = west_german_unification.2 }
				}
			}
			if = {
				limit = {
					exists = c:BOZ
					c:BOZ = {
						has_variable = west_german_unifier
					}
				}
				c:BOZ = {
					trigger_event = { id = west_german_unification.2 }
				}
			}
			if = {
				limit = {
					exists = c:FOZ
					c:FOZ = {
						has_variable = west_german_unifier
					}
				}
				c:FOZ = {
					trigger_event = { id = west_german_unification.2 }
				}
			}
			if = {
				limit = {
					OR = {
						has_global_variable = GBR_consents_germany
						has_global_variable = GBR_refuses_germany
					}
					OR = {
						has_global_variable = FRA_consents_germany
						has_global_variable = FRA_refuses_germany
					}
					OR = {
						has_global_variable = USA_consents_germany
						has_global_variable = USA_refuses_germany
					}
				}
				set_global_variable = german_reunification_combined_zones_complete
			}
		}
	}



	# on_action which is triggered every first day of the year
	on_yearly_pulse = {
		events = {
			delay = { days = { 0 365 } }
			west_german_unification.10 # Operation Paperclip
		}
		effect = {
		}
	}

	# a script value computing the goal completion metric
	current_value = {
		if = { limit = { has_global_variable = german_reunification_austrian_question} add = 1 }
		if = { limit = { has_global_variable = german_reunification_denazification } add = 1 }
		if = { limit = { has_global_variable = USA_consents_germany } add = 1 }
		if = { limit = { has_global_variable = GBR_consents_germany } add = 1 }
		if = { limit = { has_global_variable = FRA_consents_germany } add = 1 }
		if = { limit = { has_global_variable = USA_refuses_germany } add = 1 }
		if = { limit = { has_global_variable = GBR_refuses_germany } add = 1 }
		if = { limit = { has_global_variable = FRA_refuses_germany } add = 1 }
		if = { limit = { has_global_variable = german_reunification_combined_zones_complete } add = 1 }
		if = { limit = { has_global_variable = german_reunification_neutrality_complete } add = 1 }
		if = { limit = { has_global_variable = german_reunification_east_and_west_complete } add = 1}
		if = { limit = { has_global_variable = german_reunification_independence_complete } add = 1 }
	}

	# when the journal entry is activated current_value and goal_add_value are evaluated and added together to determine the goal value
	goal_add_value = {
		add = 9
	}

	# the highest weighted active journal entry appears in the goal tracker on the main screen
	weight = 200

	# yes/no, determines if a newly created country (such as a revolutionary country) should inherit this type of journal entry - note that external dependencies such as country variables etc are not automatically inherited
	inheritable = no

	# optional trigger, progress text is shown if this is defined and true
	is_progressing = {
	}

	# yes/no, if yes, a progress bar is shown
	progressbar = yes

	# yes/no, if yes, the Journal Entry can return to an inactive state if its possible trigger reverts to false
	# if no or unspecified, an activated Journal Entry cannot return to being inactive even if it is no longer considered possible
	can_deactivate = no

	# dynamically updated text, which is shown over the progress bar of the Journal Entry
	# value can be a localization key or first_valid + triggered_desc script
	# To use in loc or UI: [JournalEntry.GetProgressDesc]
	# If this is not specified, GetProgressDesc will instead return loc from key <journal_entry_key>_progress
	#progress_desc = 0

	# tutorial lesson explaining HOW to complete the Journal Entry
	#how_tutorial = how_german_unification

	# tutorial lesson explaining the WHY around the Journal Entry
	#why_tutorial = why_german_unification

	# whether a Journal Entry should be pinned in its outliner by default. Defaults to 'no'
	should_be_pinned_by_default = yes
}
