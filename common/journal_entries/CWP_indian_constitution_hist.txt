je_indian_constitution_hist = {
	# root = the owner of the Journal Entry (country scope)
	# scope:journal_entry = this Journal Entry (journalentry scope)
	# scope:target = target value, with which this Journal Entry was added using `add_journal_entry` effect


	is_shown_when_inactive = {
		c:HND = root
	}

	possible = {
	}

	# effect which happens when a journal entry is activated by having its `is_shown_when_inactive` and `possible` triggers become true or when JE is added through `add_journal_entry` effect
	immediate = {

	}

	# completion trigger, use is_goal_complete = yes in here if you're testing a tracked goal metric; if left blank, cannot be completed
	complete = {
		custom_tooltip = {
			text = je_indian_constitution_hist_complete_tooltip

			has_variable = indian_constitution_2
			has_variable = indian_constitution_3
			has_variable = indian_constitution_4
			has_variable = indian_constitution_5
		}
	}

	# effect which is executed when 'complete' trigger becomes true
	on_complete = {

	}

	# failure trigger, should spawn event explaining what happens when triggered, framed as a failure; if left blank, cannot fail
	fail = {
		
	}

	# effect which is executed when 'fail' trigger becomes true
	on_fail = {

	}

	# optional invalidation trigger, should not notify player when it triggers, just clean up and silently disappear due to journal entry no longer being valid; if left blank, cannot be invalidated
	invalid = {

	}

	# effect which is executed when 'invalid' trigger becomes true
	on_invalid = {

	}

	# the number of days before this journal entry forcibly transitions, can be used to transition silently or into another event, framed either as success, failure, or neutral; if left blank or set to zero, will not time out
	timeout = 1052

	# effect which is executed when journal entry is timed out
	on_timeout = {

	}
	
	# zero or more static modifiers that will be applied to the Journal Entry when it activates, where they will propagate to the country
	modifiers_while_active = {
	
	}


	# on_action which is triggered every first day of the week
	on_weekly_pulse = {
		random_events = {
			
		}
	}

	# on_action which is triggered every first day of the month
	on_monthly_pulse = {
		random_events = {
			60 = indian_constitution_hist.2
			60 = indian_constitution_hist.3
			60 = indian_constitution_hist.4
			60 = indian_constitution_hist.5
		}
	}

	# on_action which is triggered every first day of the year
	on_yearly_pulse = {
		effect = {

		}
	}

	# a script value computing the goal completion metric
	current_value = {
		
	}

	# when the journal entry is activated current_value and goal_add_value are evaluated and added together to determine the goal value
	goal_add_value = {
		
	}

	# the highest weighted active journal entry appears in the goal tracker on the main screen
	weight = 500

	# yes/no, determines if this journal entry should be transfered if the player switches country through a revolution or by releasing a subject. Note that external dependencies such as country variables etc are not automatically inherited
	transferable = no
	
	# yes/no, determines if this journal entry is allowed to be inherited by a victorious revolution. Revolutions also get all variables from the defeated parent country, so most JEs *should* be inherited in this way
	# NOTE: transferable = yes will always mean that revolution inheritance is blocked as these JEs should stay with the player at all times
	can_revolution_inherit = yes

	# optional trigger, progress text is shown if this is defined and true
	is_progressing = {
		
	}

	# yes/no, if yes, a progress bar is shown
	progressbar = no

	# yes/no, if yes, the Journal Entry can return to an inactive state if its possible trigger reverts to false
	# if no or unspecified, an activated Journal Entry cannot return to being inactive even if it is no longer considered possible
	can_deactivate = no

	# whether a Journal Entry should be pinned in its outliner by default. Defaults to 'no'
	should_be_pinned_by_default = yes
}
