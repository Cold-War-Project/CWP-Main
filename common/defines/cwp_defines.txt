NGame = {
	START_DATE = "1946.1.1"
	END_DATE = "2046.1.1"
}

NAI = {
	DIPLO_PROPOSAL_BREAK_THRESHOLD = -100				# At this or less acceptance, AI breaks off an existing pact

	INFLUENCE_DEFICIT_BREAK_PACT_OVER_SPENDING_LIMIT_MULT = 0.5			# AI multiplies the value of pacts that are over their action-type spending limit by this when in an Influence deficit

	RAISE_TAX_TO_DESIRED_INCOME_THRESHOLD = 0.03
	RAISE_TAX_ABOVE_DESIRED_INCOME_NO_DEBT_THRESHOLD = 0.01
	RAISE_TAX_ABOVE_DESIRED_INCOME_WITH_DEBT_THRESHOLD = 0.02
	LOWER_TAX_TO_DESIRED_INCOME_THRESHOLD = 0.04
	LOWER_TAX_BELOW_DESIRED_INCOME_THRESHOLD = 500.0
	RAISE_TAX_HIGH_DEBT_OVERRIDE_RATIO = 0.01 # At this amount of debt, any level of tax is OK to deal with it

	MONEY_SPENDING_INNOVATION_CRITICAL_THRESHOLD = 0.75 # If innovation production compared to cap is worse than this, AI considers it very important to improve
	MONEY_SPENDING_INNOVATION_DESIRED_THRESHOLD = 1.00 # If innovation production compared to cap is worse than this, AI considers it important to improve
	MONEY_SPENDING_BUREAUCRACY_CRITICAL_THRESHOLD = 0.75 # If bureaucracy income to expenses is worse than this, AI considers it critical to improve it
	MONEY_SPENDING_BUREAUCRACY_DESIRED_THRESHOLD = 1.00 # If bureaucracy income to expenses is worse than this, AI wants to improve it
	MONEY_SPENDING_BUREAUCRACY_EXCESSIVE_THRESHOLD = 1.25 # If bureaucracy income to expenses is better than this, AI will not improve it
	MONEY_SPENDING_INFRASTRUCTURE_CRITICAL_THRESHOLD = 0.90 # If infra production to usage is worse than this, AI considers it critical to improve it
	MONEY_SPENDING_INFRASTRUCTURE_DESIRED_THRESHOLD = 1.00 # If infra production to usage is worse than this, AI wants to improve it

	# Below data is used to calculate how much weight the AI places on promoting an IG
	PROMOTION_BASE_VALUE = 0

	# Below data is used to calculate how much weight the AI places on suppressing an IG
	SUPPRESSION_BASE_VALUE = 0

	# Below data is used to calculate how much weight the AI places on consumption taxes
	CONSUMPTION_TAX_MAX_NUM_TAXED_GOODS_BASE = 6 # Base max number of goods AI wants to tax

	# Below data is used to calculate how much weight the AI places on a production building
	PRODUCTION_BUILDING_OUTPUT_WANTED_INDUSTRIAL_GOODS_FACTOR = 0.5 # Add this value to a building for each unit of money worth of industrial goods that aren't overproduced in the country and are used by buildings
	PRODUCTION_BUILDING_OUTPUT_WANTED_MILITARY_GOODS_FACTOR = 0.5 # Add this value to a building for each unit of money worth of military goods that aren't overproduced in the country and are used by buildings
	PRODUCTION_BUILDING_OUTPUT_NEEDED_INDUSTRIAL_GOODS_FACTOR = 0.75 # Add this value to a building for each unit of money worth of industrial goods that are underproduced in the country and are used by buildings
	PRODUCTION_BUILDING_OUTPUT_NEEDED_MILITARY_GOODS_FACTOR = 0.75 # Add this value to a building for each unit of money worth of military goods that are underproduced in the country and are used by buildings
	PRODUCTION_BUILDING_MISSING_QUALIFICATIONS_MULT = 0.05 # Multiply score by this if there's not enough qualifications to staff the building (disabled for now)
	PRODUCTION_BUILDING_DESIRED_INFRASTRUCTURE_SURPLUS = 10 # If infrastructure 'surplus' in state is less than this, AI wants to improve it
	PRODUCTION_BUILDING_EXCESSIVE_INFRASTRUCTURE_SURPLUS = 10.01
	PRODUCTION_BUILDING_LONG_CONSTRUCTION_TIME_THRESHOLD = 80
	PRODUCTION_BUILDING_VERY_LONG_CONSTRUCTION_TIME_THRESHOLD = 120

	# Below data is used to calculate how much weight the AI places on enacting/revoking a law
	CHANGE_LAW_POTENTIAL_CIVIL_WAR_ENACT_CHANCE = 2 # Chance that the AI will proceed with a law change that could cause a civil war (1 = 1%)

	# Below data is used to calculate how much weight the AI places on a production method
    PRODUCTION_METHOD_EMPLOYMENT_CHANGE_FACTOR = 0 # Per extra employee the employment method would require (reduced employment = higher score)
    PRODUCTION_METHOD_FAVORED_MILITARY_GOODS_FACTOR = 2.0 # Per base cost * units of goods produced that the AI favors (for military goods)
    PRODUCTION_METHOD_CHANCE_TO_CHANGE = 0.5 # Chance that the AI will consider changing a production method when evaluating methods

	# For the AI to want to start a trade route, they usually want it to be at least this level
    TRADE_ROUTE_MIN_DESIRED_LEVEL_MAX = 1

    # The AI never cancels current trade routes of this level or above
    TRADE_ROUTE_MAX_LEVEL_TO_CANCEL_MIN = 5

    # Trade route modifier
    #TRADE_ROUTE_MIN_MARKET_SHARE = 0.25 # If the AI is junior in a customs union and has less than this market share in a market, don't make any trade routes
    TRADE_ROUTE_MIN_SCORE_TO_CREATE_BASE = 100 # If a potential trade route is scored less than this, don't create it
    TRADE_ROUTE_MIN_SCORE_TO_CREATE_GDP_SCALING = 0.001 # Base scale for TRADE_ROUTE_MIN_SCORE_TO_CREATE_GDP_FACTOR
    TRADE_ROUTE_MIN_SCORE_TO_CREATE_GDP_SCALING_MAX = 0.0011 # TRADE_ROUTE_MIN_SCORE_TO_CREATE_GDP_SCALING can't be higher than this
    TRADE_ROUTE_MIN_SCORE_TO_CREATE_GDP_FACTOR = 0 # For each TRADE_ROUTE_MIN_SCORE_TO_CREATE_GDP_SCALING market GDP, add this to min score required to create trade route
    #TRADE_ROUTE_ACCEPTABLE_SPENDING = 0.002 # AI will not spend more BUR than this on trade routes (scaled by weekly GDP)
    TRADE_ROUTE_ACCEPTABLE_SPENDING_MINIMUM = 1000 # If TRADE_ROUTE_ACCEPTABLE_SPENDING is less than this, this is used instead (so even small countries can do some trading)
    #TRADE_ROUTE_PLAYER_SUGGESTION_MIN_SCORE_MULT = 1.0 # If trade route has at least (min AI score to create * this) in score, suggest it as a possible route for player

    #TRADE_ROUTE_RANDOM_FACTOR = 1.0 # The higher this is, the more random the AI will be about where it makes trade routes
    TRADE_ROUTE_EXPORT_VS_IMPORT_TOLERANCE = 100 # The AI is OK with having up to this amount more import than export routes or vice versa
    #TRADE_ROUTE_TRADE_VALUE_FACTOR = 1.0 # The expected final trade volume * base price of goods is multiplied by this
    #TRADE_ROUTE_SUGGESTION_COMPETITION_FACTOR = -0.75 # The amount of sell/buy orders generated by routes that directly compete with this route is multiplied by this for suggesting routes to the player
    #TRADE_ROUTE_WANTED_NEW_GOODS_FACTOR = 5000 # Add this if the trade route is importing a good to the market that the AI wants and has no local production for
    TRADE_ROUTE_DISTANCE_DIVISOR = 0.0 # Divide the trade route value by 1 + (absolute distance between the two market capitals * this) to encourage AI to trade with nearby markets (we use this instead of more expensive convoy distance calc)
    TRADE_ROUTE_TARIFF_DIVISOR = 0.0 # Divide the trade route value by 1 + ( total tariff rate * this )
    TRADE_ROUTE_EXISTING_ROUTES_DIVISOR = 0.0 # Score for trade route is divided by (1 + this) for each trade route the market has of the same goods
    #TRADE_ROUTE_FAVORED_GOODS_MULT = 2.0 # Total weight is multiplied by this if the trade route is trading a good in a way the AI favors
    TRADE_ROUTE_DISFAVORED_GOODS_MULT = 1.0 # Total weight is multiplied by this if the trade route is trading a good in a way the AI disfavors
    #TRADE_ROUTE_REPLACE_THRESHOLD = 5.0 # If there is a sufficiently better new trade route (old route score x this), remove the old one
    #TRADE_ROUTE_SUPPLY_NETWORK_STRENGTH_THRESHOLD = 1.0 # If supply network strength less than this, don't make new trade routes
    TRADE_ROUTE_REDUCE_SHORTAGE_MULT = 100 # Multiply score by this if we're reducing the market's shortages
    TRADE_ROUTE_INCREASE_SHORTAGE_MULT = 0 # Multiply score by this if we're increasing the market's shortages
    #TRADE_ROUTE_MIN_ACCEPTABLE_PRODUCTIVITY = 5.0 # If a potential trade route would result in lower productivity than this, apply penalty below
    #TRADE_ROUTE_BELOW_ACCEPTABLE_PRODUCTIVITY_MULT = 0.25 # Multiply score by this if the trade route is below TRADE_ROUTE_MIN_ACCEPTABLE_PRODUCTIVITY
    #TRADE_ROUTE_IMPORT_SCORE_MULT = 1.0 # How much does AI multiply score of import routes
    #TRADE_ROUTE_EXPORT_SCORE_MULT = 1.5 # How much does AI multiply score of export routes
    #TRADE_ROUTE_DURATION_FACTOR = 10.0 # AI multiplies value of a route by ( 1 + this ) at COMPETITIVENESS_DURATION_BONUS_MAX_MONTHS (scales linearly up to this value at a lower duration)



	# Below data is used to determine which states are most important to defend
	DEFEND_STATE_BARRACKS_WEIGHT = 10 # Per level of barracks
	DEFEND_STATE_BARRACKS_MAX_WEIGHT = 250 # Per state
	DEFEND_STATE_CAPITAL_WEIGHT = 250
	DEFEND_STATE_CAPITAL_WAR_NEGOTIATOR_WEIGHT = 2500
	DEFEND_STATE_WARGOAL_WEIGHT = 1000
	DEFEND_STATE_INCORPORATED_WEIGHT_MULT = 2.5

	# Below data is used to determine which states are most important to invade
	INVADE_STATE_BARRACKS_WEIGHT = 10 # Per level of barracks
	INVADE_STATE_BARRACKS_MAX_WEIGHT = 250 # Per state
	INVADE_STATE_CAPITAL_WEIGHT = 250
	INVADE_STATE_CAPITAL_WAR_NEGOTIATOR_WEIGHT = 2500
	INVADE_STATE_WARGOAL_WEIGHT = 1000

	# Below data is used for naval invasions:
	NAVAL_INVASION_MIN_RELATIVE_LOCAL_ARMY_STRENGTH = 0.2 			# AI wants at least this fraction of defending army strength to risk a naval invasion
	NAVAL_INVASION_MIN_RELATIVE_LOCAL_NAVY_STRENGTH = 0.4 			# AI wants at least this fraction of defending naval strength to risk a naval invasion
	NAVAL_INVASION_MIN_RELATIVE_GLOBAL_NAVY_STRENGTH_ATTACKER = 0.05 # AI wants at least this fraction of naval strength in the overall war to risk a naval invasion as the attacking war side
	NAVAL_INVASION_MIN_RELATIVE_GLOBAL_NAVY_STRENGTH_DEFENDER = 0.1 # AI wants at least this fraction of naval strength in the overall war to risk a naval invasion as the defending war side
	NAVAL_INVASION_COOLDOWN_DAYS = 30 								# After launching a naval invasion, the AI will wait at least this long before launching another
	NAVAL_INVASION_MIN_SCORE = 10									# AI won't bother launching naval invasions against theaters with a lower total state score than this

    # Below data is used for General Orders:
	HQ_DEFENSE_MIN_WANTED_GARRISON = 0.5							# Keep at least this number of local troops to garrison important HQs against enemy invasion

	# If a front is worth less than this, the AI will not assign any generals to it
	FRONT_IMPORTANCE_MIN_SCORE = 0.001

	# diplo play
	DIPLO_PLAY_SWAY_UNWANTED_OFFER = -1000 # For being offered unwanted wargoal or obligation

	IDEOLOGICAL_OPINION_LAW_APPROVAL_THRESHOLD = 0.5		# If ruling IGs have at least this much approval/disapproval for a law on average, it affects ideological opinion
    IDEOLOGICAL_OPINION_STRONG_STANCE_THRESHOLD = 1.5		# If ruling IGs have at least this much approval/disapproval for a law on average, IDEOLOGICAL_OPINION_STRONG_STANCE_EFFECT_MULT comes into effect
    IDEOLOGICAL_OPINION_SAME_LAW_STANCE_EFFECT = 0.1		# Added to ideological opinion for each law both governments approve or disapprove of
    IDEOLOGICAL_OPINION_DIFFERENT_LAW_STANCE_EFFECT = -0.2	# Added to ideological opinion for each law where one government approves and the other disapproves
    IDEOLOGICAL_OPINION_STRONG_STANCE_EFFECT_MULT = 2		# If AI has a strong stance on a law, multiply its effects on ideological opinion by this


    # Below data is used to determine how the AI invests into institution
    #INSTITUTION_INVESTMENT_RANDOM_FACTOR = 1.0 # The higher this is, the more random AI institution selection will be
    #INSTITUTION_CURRENT_INVESTMENT_DIVISOR = 0.25 # Score for institution is divided by 1 + ( current levels after the first * this )
    #MAX_INSTITUTION_SPENDING = 0.02 # AI will not spend more BUR than this on institutions (scaled by weekly GDP)
    #INSTITUTION_SPENDING_INCREASE_SPENDING_RATIO = 1.0 # If current + additional institution spending is equal or less than max spending * this, try to improve some institutions
    #INSTITUTION_SPENDING_DECREASE_SPENDING_RATIO = 2.0 # If current institution spending is at least max spending * this, try to degrade some institutions
}

NCharacters = {
	CHARACTER_LIFE_EXPECTANCY_BASE_YEARS = 80	# The median life expectancy in years at baseline health. It's the µ parameter of the normal distribution [> 0]
	CHARACTER_LIFE_EXPECTANCY_CUTOFF = 2		# We clamp the distribution between this amount of σ in both directions. A range of [-3σ; +3σ] accounts for 99.73% of values. [> 0]

	CHARACTER_LIFE_EXPECTANCY_DELTA_YEARS_BELOW_BASELINE = 10	# Random base for years that life expectancy is decreased by, for every point of distance below baseline health [>= 0]
	CHARACTER_LIFE_EXPECTANCY_DELTA_YEARS_ABOVE_BASELINE = 5	# Random base for years that life expectancy is increased by, for every point of distance above baseline health [>= 0]
}

NPolitics = {
	MAX_INSTITUTION_INVESTMENT = 10						# Highest Investment Level for active Institutions (modifier is clamped to this)

	POWERFUL_IG_THRESHOLD = 0.20		# Interest groups with more Clout than this are considered to be influential
	POWERFUL_IG_CUTOFF = 0.18			# Powerful interest groups with less Clout than this will stop being influential
	POWERFUL_IG_TRAIT_BONUS = 1			# The effects of all trait modifiers from influential IGs are increased by this, 1 = +100%
	IG_TRAIT_STICKINESS = 2				# If an IG trait is already active, this is the amount of Approval difference required to deactivate it
	MARGINAL_IG_THRESHOLD = 0.02		# Interest Groups with Clout above this value are considered relevant while those below are marginal (if not also In Government)
	MARGINAL_IG_CUTOFF = 0.01			# Interest Groups who are already relevant will only become marginal again if they drop below this value.

	DEFAULT_LAW_ACTIVATION_DATE = "1945.1.1"

	INITIAL_MOMENTUM_VARIANCE = 0.25					# How much Momentum should vary at the start of the election period
	POPULARITY_MOMENTUM_FACTOR = 0.01					# How much Momentum does a party gain or lose from their leader's popularity
	ELECTION_INTERVAL_YEARS = 4							# How many years normally pass between elections
	CAMPAIGN_PERIOD_MONTHS = 12							# How long the Campaign Period before the election is

	INCOHERENCE_FACTOR = 3								# The amount to multiply the approval value with to get an incoherence score for legitimacy
	INCOHERENCE_FROM_SECONDARY_PARTY_MEMBERS = 0.65		# The amount to multiply the approval value with if the interest group is in a party but is not the party whip
}

NEconomy = {
	POLLUTION_TARGET_DIVISOR_ARABLE_LAND_MULT = 1		# Amount per arable land to add to pollution divisor

	EMPLOYMENT_RESOURCE_DEPLETE_CHANCE = 0.0001	# Multiplied by number of fully employed levels of the building
	BASE_RESOURCE_DISCOVER_CHANCE = 0.00001		# Per day (1.0 = 1%)
	RESOURCE_DISCOVER_MIN_FRACTION = 0.01		# Min fraction of resources that will be discovered for each successful roll
	RESOURCE_DISCOVER_MAX_FRACTION = 0.01		# Max fraction of resources that will be discovered for each successful roll
	RESOURCE_DEPLETE_MIN_AMOUNT = 1				# Min amount of resources that will be depleted for each successful roll
	RESOURCE_DEPLETE_MAX_AMOUNT = 1				# Max amount of resources that will be depleted for each successful roll

	REINVESTMENT_EFFICIENCY_MAX = 3.0					# Maximum conversion of reinvestment to investment pool
	REINVESTMENT_EFFICIENCY_MIN = 0.999					# Minimum conversion of reinvestment to investment pool

	GOVERNMENT_DIVIDENDS_EFFICIENCY_MIN = 0.4			# Minimum dividend fraction from buildings with government shares that will reach the treasury - the rest will be wasted
	GOVERNMENT_DIVIDENDS_FALLOFF_END = 20000000000		# Above GOVERNMENT_DIVIDENDS_FALLOFF_START but below this, apply minimum reinvestment multiplier on a linear scale down to GOVERNMENT_DIVIDENDS_FALLOFF_END, above this always use GOVERNMENT_DIVIDENDS_FALLOFF_END

    TRADE_ROUTE_MAX_LEVEL = 200							# Trade routes cannot be higher level than this
    TRADE_ROUTE_ECONOMY_OF_SCALE_MAX_LEVEL = 100			# After this level, trade route economy of scale no longer increases the amount per level
}

NMilitary = {
	MANPOWER_LOST_DUE_TO_ATTRITION_PER_WEEK_MIN = 0.01 	# The minimum percentage of manpower a unit can lose each week due to attrition
	MANPOWER_LOST_DUE_TO_ATTRITION_PER_WEEK_MAX = 0.05 	# The maximum percentage of manpower a unit can lose each week due to attrition
	GENERAL_TRAVEL_PIXELS_TO_DAYS_SCALE = 0.005     # Used to convert a travel distance from pixels to days. Example: a travel of 500px becomes 500 * 0.05 = 25 days
    GENERAL_AUTO_TRAVEL_MAX_DAYS = 5                # Disables auto traveling if the travel takes more than `GENERAL_AUTO_TRAVEL_MAX_DAYS`. Makes general standby the nearest HQ.
    GENERAL_TRAVEL_AUTO_REASSIGN_INSTANTLY = 5		# If General is being auto reassigned (front destruction for example) and travel time is below this number of days make them travel instantly
	BASE_MORALE_LOST_PER_DAY = 0.075				# Default morale lost when out of supply is 5%
}

NDiplomacy = {
	DIPLOMATIC_PACT_COST_MULT_FROM_INFAMOUS = 0.50		# Maintenance cost of a pact is increased by this when at Infamous level of infamy
	DIPLOMATIC_PACT_COST_MULT_FROM_NOTORIOUS = 1.00		# Maintenance cost of a pact is increased by this when at Notorious level of infamy
	DIPLOMATIC_PACT_COST_MULT_FROM_PARIAH = 2.00		# Maintenance cost of a pact is increased by this when at Pariah level of infamy

	POWER_RANK_LOSS_THRESHOLD = 0.5
	
	WAR_GOAL_INFAMY_POPULATION_SCALING_FACTOR = 75000 # The amount of population by which the factor below is multiplied
	WAR_GOAL_INFAMY_HOMELAND_FACTOR = -0.5 # Infamy is adjusted by this if the states taken/puppeted etc are Homelands of the aggressor
	WAR_GOAL_INFAMY_UNINCORPORATED_FACTOR = -0.9 # Infamy is adjusted by this if the states taken/puppeted etc are unincorporated
	WAR_GOAL_INFAMY_RELATIONS_INTEREST_IMPACT = -0.1 # Each point of infamy generated by an incident also has this impact on relations with countries that have an interest in the target 

	WAR_GOAL_INFAMY_CONQUER_STATE = 10.0
	WAR_GOAL_INFAMY_RETURN_STATE = 4.0
	WAR_GOAL_INFAMY_TAKE_TREATY_PORT = 4.0
	WAR_GOAL_INFAMY_MAKE_PUPPET = 10.0
	WAR_GOAL_INFAMY_MAKE_VASSAL = 10.0
	WAR_GOAL_INFAMY_MAKE_DOMINION = 7.5
	WAR_GOAL_INFAMY_TRANSFER_SUBJECT = 5.0	
	WAR_GOAL_INFAMY_ANNEX_COUNTRY = 10.0
	WAR_GOAL_INFAMY_REGIME_CHANGE = 5.0
}

NPops = {
	LOYALTIES_GAIN_GRACE_PERIOD = "1948.1.1"	# Until this date, only a scaling part of the Radicals and Loyalists gained from SOL changes will be applied

	ASSIMILATION_RATE = 0.01					# Percentage of pops who will Assimilate into a different Culture each month, if eligible
	MIN_ASSIMILATION = 1000						# If there is any assimilation at least this many people will assimilate
	CONVERSION_RATE = 0.01						# Percentage of pops who will Convert into a different Religion each month, if eligible
	MIN_CONVERSION = 1000						# If there is any conversion at least this many people will convert

	LITERACY_DIEOFF_BIAS = 1.0					# Percentage of literate pops who die of old age compared to the current literacy rate, the higher this value the faster the population becomes illiterate when literacy suffers

	LOW_POP_THRESHOLD = 50000					# If a state has less than this amount of pops per arable land, apply the low pop modifier
	
	QUALIFICATIONS_NUM_MONTHS_AT_START = 120				# How many months of qualifications should be seeded to pops at start of game?
}

### Pop Growth Constants
@min_birthrate = 0.0015
@max_birthrate = 0.0040
@min_mortality = 0.0010
@max_mortality = 0.0070
@pop_growth_sol_equilibrium = 5							# Equilibrium is where (with no birthrate/death-rate mods) growth is stagnant
@pop_growth_sol_delta_cap = 20							# SoL Delta Cap is where net growth stops increasing with rising SoL, i.e. both drop at the same pace
@pop_growth_sol_cap = 40								# SoL Cap is where they birthrate/death-rate stop dropping

@mortality_at_equilibrium = @[max_birthrate-(pop_growth_sol_equilibrium*(max_birthrate-min_birthrate)/pop_growth_sol_cap)]
@birthrate_at_delta_cap = @[max_birthrate-(pop_growth_sol_delta_cap*(max_birthrate-min_birthrate)/pop_growth_sol_cap)]
@improving_slope = @[(birthrate_at_delta_cap-min_birthrate+min_mortality-mortality_at_equilibrium)/(pop_growth_sol_delta_cap-pop_growth_sol_equilibrium)]
@improving_intercept = @[-1*improving_slope*pop_growth_sol_equilibrium+mortality_at_equilibrium]
@mortality_at_delta_cap = @[improving_slope*pop_growth_sol_delta_cap+improving_intercept]
@fixed_delta_slope = @[(min_mortality-mortality_at_delta_cap)/(pop_growth_sol_cap-pop_growth_sol_delta_cap)]

NPops = {
	POP_GROWTH_BIRTHRATE_REDUCTION_PER_SOL = @[(max_birthrate-min_birthrate)/pop_growth_sol_cap]
	POP_GROWTH_MORTALITY_AT_EQUILIBRIUM = @mortality_at_equilibrium
	POP_GROWTH_STARVING_SLOPE = @[(mortality_at_equilibrium-max_mortality)/pop_growth_sol_equilibrium]
	POP_GROWTH_BIRTHRATE_AT_DELTA_CAP = @birthrate_at_delta_cap
	POP_GROWTH_IMPROVING_SLOPE = @improving_slope
	POP_GROWTH_IMPROVING_INTERCEPT = @improving_intercept
	POP_GROWTH_FIXED_DELTA_SLOPE = @fixed_delta_slope
	POP_GROWTH_FIXED_DELTA_INTERCEPT = @[-1*fixed_delta_slope*pop_growth_sol_cap+min_mortality]

	POP_GROWTH_MIN_BIRTHRATE = @min_birthrate					# Minimum base birthrate per month (at SOL_POP_GROWTH_CAP)
	POP_GROWTH_MAX_BIRTHRATE = @max_birthrate					# Maximum base birthrate per month (at SOL = 0)
	POP_GROWTH_MIN_MORTALITY = @min_mortality					# Maximum base mortality per month (at SOL_POP_GROWTH_CAP)
	POP_GROWTH_MAX_MORTALITY = @max_mortality					# Maximum base mortality per month (at SOL = 0)
	POP_GROWTH_SOL_DELTA_CAP = @pop_growth_sol_delta_cap		# Birthrate and Mortality retains its delta beyond this SoL
	POP_GROWTH_SOL_CAP = @pop_growth_sol_cap					# Birthrate and Mortality reaches its minimum values and does not drop beyond this SoL
	POP_GROWTH_SOL_EQUILIBRIUM = @pop_growth_sol_equilibrium	# The Standard of Living where Birthrate and Mortality correspond, after which Mortality diminishes slower
}
### End Pop Growth Constant defines

NTechnology = {
	TECH_SPREAD_RANDOM_RANGE = 0.1 # How much can distribution of tech spread vary each week
	TECH_AHEAD_OF_TIME_PENALTY_FACTOR = 0.025	# For every tech in a previous era not already researched in this category, take this multiple of the cost as an additional penalty (multiplied by number of eras between the techs)
}

NWar = {
	DEVASTATION_FROM_BATTLES = 2.5 # For each battle
	
	DAYS_BETWEEN_WAR_EXHAUSTION = 21 # Every this many days war support will be reduced by the war exhaustion formula
	WAR_EXHAUSTION_KIA_BASE_MULTIPLIER = 0.5	# War Exhaustion from casualties is always multiplied by at least this
	WAR_EXHAUSTION_KIA_BATTLES_LOST_MULTIPLIER = 1.5 	# At 100% of battles lost by our side, War Exhaustion from casualties is further multiplied by this 

	MAX_SIMULTANEOUS_BATTLES = 3 # Allows to spawn up to MAX_SIMULTANEOUS_BATTLES as long as you have that many generals with advance orders.
}