#
# tag           : tag_aroai_requirements_for_construction_in_state
# called by     : aroai_perform_branching_of_allocation_list aroai_filter_and_sort_states_from_allocation_lists
#
aroai_requirements_for_construction_in_state = {
    owner = root
    OR = {
        # We don't care about workforce
        $workforce$ = 0

        # If the building is profitable
        #todo remove this, this is stupid
        #root.aroai_building_type_$id$_collected_data_2 <= $crucial$

        # There's enough workforce
        aroai_available_workforce >= aroai_required_workforce
    }
    OR = {
        NOT = {
            aroai_is_agriculture_building = {
                class = $class$
            }
        }
        AND = {
            free_arable_land > 0
            OR = {
                NOT = {
                    has_variable = aroai_queued_agriculture_buildings
                }
                var:aroai_queued_agriculture_buildings < free_arable_land
            }
        }
    }
    OR = {
        always = yes
        $id$ = 1
        $crucial$ = 1
    }
}

#
# tag           : tag_aroai_is_agriculture_building
# called by     : aroai_start_building_construction aroai_requirements_for_construction_in_state
#
#
aroai_is_agriculture_building = {
    $class$ = 5
}

#
# tag           : tag_aroai_check_if_counter_is_within_limit
# called by     : aroai_choose_states_to_start_construction aroai_start_building_construction aroai_filter_and_sort_states_from_allocation_lists
# True if number of ongoing construction for the building $id$ is under a limit that scale with gdp
#
aroai_check_if_counter_is_within_limit = {
    OR = {
        NOT = {
            has_variable = aroai_building_type_$counter$_collected_data
        }
        switch = {
            trigger = aroai_building_type_$id$_collected_data_average_of_1_and_2
            1 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_1 }
            2 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_2 }
            3 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_3 }
            4 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_4 }
            5 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_5 }
            6 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_6 }
            7 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_7 }
            8 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_8 }
            9 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_9 }
            10 = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_10 }
            fallback = { aroai_building_type_$counter$_collected_data_5 < aroai_construction_limit_$limit$_11 }
        }
    }
}