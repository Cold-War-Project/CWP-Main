#	gbr_good_progress					: Master Progress Variable to track number of months good has spent outside the acceptable price range
#	gbr_good_progress_from_characters	: Variable tracking characters
#	gbr_good_progress_from_igs			: Variable tracking interest groups
#	gbr_good_progress_from_buildings	: Variable tracking buildings
#	gbr_good_progress_from_legitimacy	: Variable tracking current government legitimacy. Strong government = progress variable reduction. Weak government legitimacy = progress variable increase
#	gbr_good_progress_from_price		: Variable tracking market price of good
#	gbr_good_progress_next				: Variable is an incrementor - it is calculated from previous 5 variables (characters, IGs, buildings, government legitimacy, goods market price) on a weekly basis, and is added to gbr_good_progress on the monthly. Used in localization to tell the player the current rate of change for gbr_good_progress is.

gbr_set_core_variables = {
	# Interest Groups weight variable - used as a temporary storage variable for maths purposes
	set_variable = { name = gbr_ig_weight value = 0 }
	
	# Button Visibility - 4 Buttons (Staple Goods, Industrial Goods, Luxury Goods, All Goods)
	set_variable = gbr_staple_goods_visible
	set_variable = gbr_industrial_goods_visible
	set_variable = gbr_luxury_goods_visible
	
	# Core Variables
	set_variable = { name = gbr_ending_rationing_starting_variable value = 0 }
	set_variable = { name = gbr_ending_rationing_target_variable value = 6 }
	set_variable = { name = gbr_rationing_number_of_goods value = 0 }
	set_variable = { name = gbr_added_demand_pressure value = 0 }
	set_variable = { name = gbr_months_of_rationing value = 0 }
	set_variable = { name = gbr_rationing_start_price value = 0.1 }
	set_variable = { name = gbr_rationing_start_consumption value = 10 }
	
	set_variable = { name = gbr_aluminum_progress value = 0 }
	set_variable = { name = gbr_bauxite_progress value = 0 }
	set_variable = { name = gbr_fertilizer_progress value = 0 }
	set_variable = { name = gbr_clothes_progress value = 0 }
	set_variable = { name = gbr_coal_progress value = 0 }
	set_variable = { name = gbr_coffee_progress value = 0 }
	set_variable = { name = gbr_copper_progress value = 0 }
	set_variable = { name = gbr_engines_progress value = 0 }
	set_variable = { name = gbr_explosives_progress value = 0 }
	set_variable = { name = gbr_fabric_progress value = 0 }
	set_variable = { name = gbr_fish_progress value = 0 }
	set_variable = { name = gbr_fruit_progress value = 0 }
	set_variable = { name = gbr_glass_progress value = 0 }
	set_variable = { name = gbr_grain_progress value = 0 }
	set_variable = { name = gbr_groceries_progress value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress value = 0 }
	set_variable = { name = gbr_iron_progress value = 0 }
	set_variable = { name = gbr_lead_progress value = 0 }
	set_variable = { name = gbr_liquor_progress value = 0 }
	set_variable = { name = gbr_meat_progress value = 0 }
	set_variable = { name = gbr_oil_progress value = 0 }
	set_variable = { name = gbr_opium_progress value = 0 }
	set_variable = { name = gbr_paper_progress value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress value = 0 }
	set_variable = { name = gbr_phosphorus_progress value = 0 }
	set_variable = { name = gbr_plastics_progress value = 0 }
	set_variable = { name = gbr_refined_fuel_progress value = 0 }
	set_variable = { name = gbr_rubber_progress value = 0 }
	set_variable = { name = gbr_steel_progress value = 0 }
	set_variable = { name = gbr_sugar_progress value = 0 }
	set_variable = { name = gbr_tea_progress value = 0 }
	set_variable = { name = gbr_tobacco_progress value = 0 }
	set_variable = { name = gbr_tools_progress value = 0 }
	set_variable = { name = gbr_wine_progress value = 0 }
	set_variable = { name = gbr_wood_progress value = 0 }
}

gbr_set_aluminum_variables = {
	# Aluminum variables
	set_variable = { name = gbr_aluminum_progress_from_characters value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_igs value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_buildings value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_price value = 0 }
	set_variable = { name = gbr_aluminum_progress_next value = 0 }
	set_variable = { name = gbr_ending_aluminum_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_bauxite_variables = {
	# Bauxite variables
	set_variable = { name = gbr_bauxite_progress_from_characters value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_igs value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_buildings value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_price value = 0 }
	set_variable = { name = gbr_bauxite_progress_next value = 0 }
	set_variable = { name = gbr_ending_bauxite_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_fertilizer_variables = {
	# Fertilizer variables (Chemicals)
	set_variable = { name = gbr_fertilizer_progress_from_characters value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_igs value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_price value = 0 }
	set_variable = { name = gbr_fertilizer_progress_next value = 0 }
	set_variable = { name = gbr_ending_fertilizer_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_clothes_variables = {	
	# Clothes variables
	set_variable = { name = gbr_clothes_progress_from_characters value = 0 }
	set_variable = { name = gbr_clothes_progress_from_igs value = 0 }
	set_variable = { name = gbr_clothes_progress_from_buildings value = 0 }
	set_variable = { name = gbr_clothes_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_clothes_progress_from_price value = 0 }
	set_variable = { name = gbr_clothes_progress_next value = 0 }
	set_variable = { name = gbr_ending_clothes_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_coal_variables = {	
	# Coal variables
	set_variable = { name = gbr_coal_progress_from_characters value = 0 }
	set_variable = { name = gbr_coal_progress_from_igs value = 0 }
	set_variable = { name = gbr_coal_progress_from_buildings value = 0 }
	set_variable = { name = gbr_coal_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_coal_progress_from_price value = 0 }
	set_variable = { name = gbr_coal_progress_next value = 0 }
	set_variable = { name = gbr_ending_coal_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_coffee_variables = {	
	# Coffee variables
	set_variable = { name = gbr_coffee_progress_from_characters value = 0 }
	set_variable = { name = gbr_coffee_progress_from_igs value = 0 }
	set_variable = { name = gbr_coffee_progress_from_buildings value = 0 }
	set_variable = { name = gbr_coffee_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_coffee_progress_from_price value = 0 }
	set_variable = { name = gbr_coffee_progress_next value = 0 }
	set_variable = { name = gbr_ending_coffee_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_copper_variables = {	
	# Copper variables
	set_variable = { name = gbr_copper_progress_from_characters value = 0 }
	set_variable = { name = gbr_copper_progress_from_igs value = 0 }
	set_variable = { name = gbr_copper_progress_from_buildings value = 0 }
	set_variable = { name = gbr_copper_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_copper_progress_from_price value = 0 }
	set_variable = { name = gbr_copper_progress_next value = 0 }
	set_variable = { name = gbr_ending_copper_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_engines_variables = {	
	# Engines variables
	set_variable = { name = gbr_engines_progress_from_characters value = 0 }
	set_variable = { name = gbr_engines_progress_from_igs value = 0 }
	set_variable = { name = gbr_engines_progress_from_buildings value = 0 }
	set_variable = { name = gbr_engines_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_engines_progress_from_price value = 0 }
	set_variable = { name = gbr_engines_progress_next value = 0 }
	set_variable = { name = gbr_ending_engines_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_explosives_variables = {	
	# Explosives variables
	set_variable = { name = gbr_explosives_progress_from_characters value = 0 }
	set_variable = { name = gbr_explosives_progress_from_igs value = 0 }
	set_variable = { name = gbr_explosives_progress_from_buildings value = 0 }
	set_variable = { name = gbr_explosives_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_explosives_progress_from_price value = 0 }
	set_variable = { name = gbr_explosives_progress_next value = 0 }
	set_variable = { name = gbr_ending_explosives_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_fabric_variables = {
	# Fabric variables
	set_variable = { name = gbr_fabric_progress_from_characters value = 0 }
	set_variable = { name = gbr_fabric_progress_from_igs value = 0 }
	set_variable = { name = gbr_fabric_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fabric_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fabric_progress_from_price value = 0 }
	set_variable = { name = gbr_fabric_progress_next value = 0 }
	set_variable = { name = gbr_ending_fabric_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_fish_variables = {
	# Fish variables
	set_variable = { name = gbr_fish_progress_from_characters value = 0 }
	set_variable = { name = gbr_fish_progress_from_igs value = 0 }
	set_variable = { name = gbr_fish_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fish_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fish_progress_from_price value = 0 }
	set_variable = { name = gbr_fish_progress_next value = 0 }
	set_variable = { name = gbr_ending_fish_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_fruit_variables = {
	# Fruit variables
	set_variable = { name = gbr_fruit_progress_from_characters value = 0 }
	set_variable = { name = gbr_fruit_progress_from_igs value = 0 }
	set_variable = { name = gbr_fruit_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fruit_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fruit_progress_from_price value = 0 }
	set_variable = { name = gbr_fruit_progress_next value = 0 }
	set_variable = { name = gbr_ending_fruit_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_glass_variables = {
	# Glass variables
	set_variable = { name = gbr_glass_progress_from_characters value = 0 }
	set_variable = { name = gbr_glass_progress_from_igs value = 0 }
	set_variable = { name = gbr_glass_progress_from_buildings value = 0 }
	set_variable = { name = gbr_glass_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_glass_progress_from_price value = 0 }
	set_variable = { name = gbr_glass_progress_next value = 0 }
	set_variable = { name = gbr_ending_glass_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_grain_variables = {
	# Grain variables
	set_variable = { name = gbr_grain_progress_from_characters value = 0 }
	set_variable = { name = gbr_grain_progress_from_igs value = 0 }
	set_variable = { name = gbr_grain_progress_from_buildings value = 0 }
	set_variable = { name = gbr_grain_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_grain_progress_from_price value = 0 }
	set_variable = { name = gbr_grain_progress_next value = 0 }
	set_variable = { name = gbr_ending_grain_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_groceries_variables = {
	# Groceries variables
	set_variable = { name = gbr_groceries_progress_from_characters value = 0 }
	set_variable = { name = gbr_groceries_progress_from_igs value = 0 }
	set_variable = { name = gbr_groceries_progress_from_buildings value = 0 }
	set_variable = { name = gbr_groceries_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_groceries_progress_from_price value = 0 }
	set_variable = { name = gbr_groceries_progress_next value = 0 }
	set_variable = { name = gbr_ending_groceries_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_high_quality_fabric_variables = {
	# High Quality Fabric variables
	set_variable = { name = gbr_high_quality_fabric_progress_from_characters value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_igs value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_buildings value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_price value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_next value = 0 }
	set_variable = { name = gbr_ending_high_quality_fabric_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_iron_variables = {
	# Iron variables
	set_variable = { name = gbr_iron_progress_from_characters value = 0 }
	set_variable = { name = gbr_iron_progress_from_igs value = 0 }
	set_variable = { name = gbr_iron_progress_from_buildings value = 0 }
	set_variable = { name = gbr_iron_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_iron_progress_from_price value = 0 }
	set_variable = { name = gbr_iron_progress_next value = 0 }
	set_variable = { name = gbr_ending_iron_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_lead_variables = {
	# Lead variables
	set_variable = { name = gbr_lead_progress_from_characters value = 0 }
	set_variable = { name = gbr_lead_progress_from_igs value = 0 }
	set_variable = { name = gbr_lead_progress_from_buildings value = 0 }
	set_variable = { name = gbr_lead_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_lead_progress_from_price value = 0 }
	set_variable = { name = gbr_lead_progress_next value = 0 }
	set_variable = { name = gbr_ending_lead_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_liquor_variables = {
	# Liquor variables
	set_variable = { name = gbr_liquor_progress_from_characters value = 0 }
	set_variable = { name = gbr_liquor_progress_from_igs value = 0 }
	set_variable = { name = gbr_liquor_progress_from_buildings value = 0 }
	set_variable = { name = gbr_liquor_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_liquor_progress_from_price value = 0 }
	set_variable = { name = gbr_liquor_progress_next value = 0 }
	set_variable = { name = gbr_ending_liquor_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_meat_variables = {
	# Meat variables
	set_variable = { name = gbr_meat_progress_from_characters value = 0 }
	set_variable = { name = gbr_meat_progress_from_igs value = 0 }
	set_variable = { name = gbr_meat_progress_from_buildings value = 0 }
	set_variable = { name = gbr_meat_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_meat_progress_from_price value = 0 }
	set_variable = { name = gbr_meat_progress_next value = 0 }
	set_variable = { name = gbr_ending_meat_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_oil_variables = {
	# Oil variables
	set_variable = { name = gbr_oil_progress_from_characters value = 0 }
	set_variable = { name = gbr_oil_progress_from_igs value = 0 }
	set_variable = { name = gbr_oil_progress_from_buildings value = 0 }
	set_variable = { name = gbr_oil_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_oil_progress_from_price value = 0 }
	set_variable = { name = gbr_oil_progress_next value = 0 }
	set_variable = { name = gbr_ending_oil_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_opium_variables = {
	# Opium variables
	set_variable = { name = gbr_opium_progress_from_characters value = 0 }
	set_variable = { name = gbr_opium_progress_from_igs value = 0 }
	set_variable = { name = gbr_opium_progress_from_buildings value = 0 }
	set_variable = { name = gbr_opium_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_opium_progress_from_price value = 0 }
	set_variable = { name = gbr_opium_progress_next value = 0 }
	set_variable = { name = gbr_ending_opium_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_paper_variables = {
	# Paper variables
	set_variable = { name = gbr_paper_progress_from_characters value = 0 }
	set_variable = { name = gbr_paper_progress_from_igs value = 0 }
	set_variable = { name = gbr_paper_progress_from_buildings value = 0 }
	set_variable = { name = gbr_paper_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_paper_progress_from_price value = 0 }
	set_variable = { name = gbr_paper_progress_next value = 0 }
	set_variable = { name = gbr_ending_paper_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_pharmaceuticals_variables = {
	# Pharmaceuticals variables
	set_variable = { name = gbr_pharmaceuticals_progress_from_characters value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_igs value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_buildings value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_price value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_next value = 0 }
	set_variable = { name = gbr_ending_pharmaceuticals_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_phosphorus_variables = {
	# Phosphorus variables
	set_variable = { name = gbr_phosphorus_progress_from_characters value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_igs value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_buildings value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_price value = 0 }
	set_variable = { name = gbr_phosphorus_progress_next value = 0 }
	set_variable = { name = gbr_ending_phosphorus_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_plastics_variables = {
	# Plastics variables
	set_variable = { name = gbr_plastics_progress_from_characters value = 0 }
	set_variable = { name = gbr_plastics_progress_from_igs value = 0 }
	set_variable = { name = gbr_plastics_progress_from_buildings value = 0 }
	set_variable = { name = gbr_plastics_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_plastics_progress_from_price value = 0 }
	set_variable = { name = gbr_plastics_progress_next value = 0 }
	set_variable = { name = gbr_ending_plastics_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_refined_fuel_variables = {
	# Refined Fuel variables
	set_variable = { name = gbr_refined_fuel_progress_from_characters value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_igs value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_buildings value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_price value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_next value = 0 }
	set_variable = { name = gbr_ending_refined_fuel_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_rubber_variables = {
	# Rubber variables
	set_variable = { name = gbr_rubber_progress_from_characters value = 0 }
	set_variable = { name = gbr_rubber_progress_from_igs value = 0 }
	set_variable = { name = gbr_rubber_progress_from_buildings value = 0 }
	set_variable = { name = gbr_rubber_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_rubber_progress_from_price value = 0 }
	set_variable = { name = gbr_rubber_progress_next value = 0 }
	set_variable = { name = gbr_ending_rubber_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_steel_variables = {
	# Steel variables
	set_variable = { name = gbr_steel_progress_from_characters value = 0 }
	set_variable = { name = gbr_steel_progress_from_igs value = 0 }
	set_variable = { name = gbr_steel_progress_from_buildings value = 0 }
	set_variable = { name = gbr_steel_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_steel_progress_from_price value = 0 }
	set_variable = { name = gbr_steel_progress_next value = 0 }
	set_variable = { name = gbr_ending_steel_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_sugar_variables = {
	# Sugar variables
	set_variable = { name = gbr_sugar_progress_from_characters value = 0 }
	set_variable = { name = gbr_sugar_progress_from_igs value = 0 }
	set_variable = { name = gbr_sugar_progress_from_buildings value = 0 }
	set_variable = { name = gbr_sugar_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_sugar_progress_from_price value = 0 }
	set_variable = { name = gbr_sugar_progress_next value = 0 }
	set_variable = { name = gbr_ending_sugar_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_tea_variables = {
	# Tea variables
	set_variable = { name = gbr_tea_progress_from_characters value = 0 }
	set_variable = { name = gbr_tea_progress_from_igs value = 0 }
	set_variable = { name = gbr_tea_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tea_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tea_progress_from_price value = 0 }
	set_variable = { name = gbr_tea_progress_next value = 0 }
	set_variable = { name = gbr_ending_tea_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_tobacco_variables = {
	# Tobacco variables
	set_variable = { name = gbr_tobacco_progress_from_characters value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_igs value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_price value = 0 }
	set_variable = { name = gbr_tobacco_progress_next value = 0 }
	set_variable = { name = gbr_ending_tobacco_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_tools_variables = {
	# Tools variables
	set_variable = { name = gbr_tools_progress_from_characters value = 0 }
	set_variable = { name = gbr_tools_progress_from_igs value = 0 }
	set_variable = { name = gbr_tools_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tools_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tools_progress_from_price value = 0 }
	set_variable = { name = gbr_tools_progress_next value = 0 }
	set_variable = { name = gbr_ending_tools_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_wine_variables = {
	# Wine variables
	set_variable = { name = gbr_wine_progress_from_characters value = 0 }
	set_variable = { name = gbr_wine_progress_from_igs value = 0 }
	set_variable = { name = gbr_wine_progress_from_buildings value = 0 }
	set_variable = { name = gbr_wine_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_wine_progress_from_price value = 0 }
	set_variable = { name = gbr_wine_progress_next value = 0 }
	set_variable = { name = gbr_ending_wine_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_wood_variables = {
	# Wood variables
	set_variable = { name = gbr_wood_progress_from_characters value = 0 }
	set_variable = { name = gbr_wood_progress_from_igs value = 0 }
	set_variable = { name = gbr_wood_progress_from_buildings value = 0 }
	set_variable = { name = gbr_wood_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_wood_progress_from_price value = 0 }
	set_variable = { name = gbr_wood_progress_next value = 0 }
	set_variable = { name = gbr_ending_wood_rationing value = var:gbr_ending_rationing_starting_variable }
}

#####################################
##### Weekly Pulse Calculations #####
#####################################

# Building Count Weekly calculation
	# To calculate the progress from buildings, we need to know how many buildings there are that are outputting the good
	# However, we don't want players/AI to build buildings that aren't employing pops. A building with 0 employees isn't outputting goods
	# As such, the buildings are counted that match the desired building type & have an occupancy of 50% or higher
	# If the building outputs 2 or more types of goods, they are each seperately tracked, with the active production method enabling the good output used as an extra limit
	# Number of levels = Number of buildings.
	# As such, we can use the code from France's base game divided monarchists journal entry, which also counts the number of a type of building 
gbr_weekly_pulse_building_count = {
	if = {	# Aluminum Refineries
		limit = { has_variable = gbr_rationing_aluminum }
		set_variable = { name = gbr_aluminum_refinery_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_aluminum_refinery
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_aluminum_refinery_count add = prev.level } }
		}
	}
	if = {	# Bauxite Mines
		limit = { has_variable = gbr_rationing_bauxite }
		set_variable = { name = gbr_bauxite_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_bauxite_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_bauxite_mine_count add = prev.level } }
		}
	}
	if = {	# Chemical Plants
		limit = { has_variable = gbr_rationing_fertilizer }
		set_variable = { name = gbr_chemical_plant_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_chemical_plants
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_chemical_plant_count add = prev.level } }
		}
	}
	if = {	# Livestock Ranches - Fertilizer/Chemicals
		limit = { has_variable = gbr_rationing_fertilizer }
		set_variable = { name = gbr_livestock_ranch_fertilizer_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				OR = {
					has_active_production_method = pm_intensive_grazing_ranch
					has_active_production_method = pm_open_air_stockyards
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_fertilizer_count add = prev.level } }
		}
	}
	if = {	# Livestock Ranches - Meat
		limit = { has_variable = gbr_rationing_meat }
		set_variable = { name = gbr_livestock_ranch_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_count add = prev.level } }
		}
	}
	if = {	# Livestock Ranches - Fabric
		limit = { has_variable = gbr_rationing_fabric }
		set_variable = { name = gbr_livestock_ranch_fabric_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_fabric_count add = prev.level } }
		}
	}
	if = {	# Textile Manufactories
		limit = { has_variable = gbr_rationing_clothes }
		set_variable = { name = gbr_textile_manufactory_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_textile_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_textile_manufactory_count add = prev.level } }
		}
	}
	if = {	# Coal Mines
		limit = { has_variable = gbr_rationing_coal }
		set_variable = { name = gbr_coal_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_coal_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_coal_mine_count add = prev.level } }
		}
	}
	if = {	# Coffee Plantations
		limit = { has_variable = gbr_rationing_coffee }
		set_variable = { name = gbr_coffee_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_coffee_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_coffee_plantation_count add = prev.level } }
		}
	}
	if = {	# Copper Mines
		limit = { has_variable = gbr_rationing_copper }
		set_variable = { name = gbr_copper_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_copper_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_copper_mine_count add = prev.level } }
		}
	}
	if = {	# Motor Industries
		limit = { has_variable = gbr_rationing_engines }
		set_variable = { name = gbr_motor_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_motor_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_motor_industry_count add = prev.level } }
		}
	}
	if = {	# Explosives Industries
		limit = { has_variable = gbr_rationing_explosives }
		set_variable = { name = gbr_explosives_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_explosives_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_explosives_industry_count add = prev.level } }
		}
	}
	if = {	# Cotton Plantations
		limit = { has_variable = gbr_rationing_fabric }
		set_variable = { name = gbr_cotton_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_cotton_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_cotton_plantation_count add = prev.level } }
		}
	}
	if = {	# Fishing Wharf
		limit = { has_variable = gbr_rationing_fish }
		set_variable = { name = gbr_fishing_wharf_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_fishing_wharf
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fishing_wharf_count add = prev.level } }
		}
	}
	if = {	# Fishing Wharf - Meat
		limit = { has_variable = gbr_rationing_meat }
		set_variable = { name = gbr_fishing_wharf_meat_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_fishing_wharf
				OR = {
					has_active_production_method = pm_pre_war_whaling_ships
					has_active_production_method = pm_large_whaling_ships
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fishing_wharf_meat_count add = prev.level } }
		}
	}
	if = {	# Banana Plantation
		limit = { has_variable = gbr_rationing_fruit }
		set_variable = { name = gbr_banana_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_banana_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_banana_plantation_count add = prev.level } }
		}
	}
	if = {	# Rye/Wheat/Rice/Maize/Millet Farms - Grain
		limit = { has_variable = gbr_rationing_grain }
		set_variable = { name = gbr_rye_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_count add = prev.level } }
		}
	}
	if = {	# Rye/Wheat/Rice/Maize/Millet Farms - Fruit
		limit = { has_variable = gbr_rationing_fruit }
		set_variable = { name = gbr_rye_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				has_active_production_method = pm_apple_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				has_active_production_method = pm_citrus_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				has_active_production_method = pm_fig_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				has_active_production_method = pm_citrus_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				has_active_production_method = pm_fig_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_fruit_count add = prev.level } }
		}
	}
	if = {	# Rye/Wheat/Rice/Maize/Millet Farms - Sugar
		limit = { has_variable = gbr_rationing_sugar }
		set_variable = { name = gbr_rye_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				has_active_production_method = pm_sugar_beets
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				has_active_production_method = pm_corn_syrup
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_count add = prev.level } }
		}
	}
	if = {	# Glassworks
		limit = { has_variable = gbr_rationing_glass }
		set_variable = { name = gbr_glassworks_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_glassworks
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_glassworks_count add = prev.level } }
		}
	}
	if = {	# Food Industries
		limit = { has_variable = gbr_rationing_groceries }
		set_variable = { name = gbr_food_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_food_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_food_industry_count add = prev.level } }
		}
	}
	if = {	# Silk Plantations
		limit = { has_variable = gbr_rationing_high_quality_fabric }
		set_variable = { name = gbr_silk_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_silk_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_silk_plantation_count add = prev.level } }
		}
	}
	if = {	# Synthetics Plant
		limit = { has_variable = gbr_rationing_high_quality_fabric }
		set_variable = { name = gbr_synthetics_plant_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_synthetics_plant
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_synthetics_plant_count add = prev.level } }
		}
	}
	if = {	# Synthetics Plant - Rubber
		limit = { has_variable = gbr_rationing_rubber }
		set_variable = { name = gbr_synthetics_plant_rubber_count value = 0 }
		every_scope_building = {
			limit = { 	# 450 Construction Points
				is_building_type = building_synthetics_plant
				OR = {
					has_active_production_method = pm_styrene_butadiene
					has_active_production_method = pm_silicone
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_synthetics_plant_rubber_count add = prev.level } }
		}
	}
	if = {	# Iron Mines
		limit = { has_variable = gbr_rationing_iron }
		set_variable = { name = gbr_iron_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_iron_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_iron_mine_count add = prev.level } }
		}
	}
	if = {	# Lead Mines
		limit = { has_variable = gbr_rationing_lead }
		set_variable = { name = gbr_lead_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_lead_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_lead_mine_count add = prev.level } }
		}
	}
	if = {	# Distilleries - Liquor
		limit = { has_variable = gbr_rationing_liquor }
		set_variable = { name = gbr_distilleries_liquor_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_distilleries
				OR = {
					has_active_production_method = pm_basic_distillation_liquor
					has_active_production_method = pm_patent_stills_liquor
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_distilleries_liquor_count add = prev.level } }
		}
	}
	if = {	# Distilleries - Wine
		limit = { has_variable = gbr_rationing_wine }
		set_variable = { name = gbr_distilleries_wine_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_distilleries
				OR = {
					has_active_production_method = pm_basic_distillation_wine
					has_active_production_method = pm_patent_stills_wine
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_distilleries_wine_count add = prev.level } }
		}
	}
	if = {	# Oil Rig
		limit = { has_variable = gbr_rationing_oil }
		set_variable = { name = gbr_oil_rig_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_oil_rig
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_oil_rig_count add = prev.level } }
		}
	}
	if = {	# Opium Plantations
		limit = { has_variable = gbr_rationing_opium }
		set_variable = { name = gbr_opium_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_opium_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_opium_plantation_count add = prev.level } }
		}
	}
	if = {	# Paper Manufactories
		limit = { has_variable = gbr_rationing_paper }
		set_variable = { name = gbr_paper_manufactories_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_paper_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_paper_manufactories_count add = prev.level } }
		}
	}
	if = {	# Pharmaceutical Industries
		limit = { has_variable = gbr_rationing_pharmaceuticals }
		set_variable = { name = gbr_pharmaceutical_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_pharmaceutical_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_pharmaceutical_industry_count add = prev.level } }
		}
	}
	if = {	# Phosphorus Mines
		limit = { has_variable = gbr_rationing_phosphorus }
		set_variable = { name = gbr_phosphorus_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_phosphorus_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_phosphorus_mine_count add = prev.level } }
		}
	}
	if = {	# Fuel Refineries
		limit = { has_variable = gbr_rationing_refined_fuel }
		set_variable = { name = gbr_fuel_refineries_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_fuel_refineries
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fuel_refineries_count add = prev.level } }
		}
	}
	if = {	# Fuel Refineries - Plastics
		limit = { has_variable = gbr_rationing_plastics }
		set_variable = { name = gbr_fuel_refineries_plastics_count value = 0 }
		every_scope_building = {	# 600 Construction Points
			limit = {
				is_building_type = building_fuel_refineries
				OR = {
					has_active_production_method = pm_rudimentary_polymers
					has_active_production_method = pm_transition_metal_catalysts
					has_active_production_method = pm_dense_thermoplastics
					has_active_production_method = pm_saturated_elastomers
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fuel_refineries_plastics_count add = prev.level } }
		}
	}
	if = {	# Rubber Plantations
		limit = { has_variable = gbr_rationing_rubber }
		set_variable = { name = gbr_rubber_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rubber_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rubber_plantation_count add = prev.level } }
		}
	}
	if = {	# Steelworks
		limit = { has_variable = gbr_rationing_steel }
		set_variable = { name = gbr_steelworks_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_steelworks
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_steelworks_count add = prev.level } }
		}
	}
	if = {	# Sugar Plantations
		limit = { has_variable = gbr_rationing_sugar }
		set_variable = { name = gbr_sugar_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_sugar_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_sugar_plantation_count add = prev.level } }
		}
	}
	if = {	# Tea Plantations
		limit = { has_variable = gbr_rationing_tea }
		set_variable = { name = gbr_tea_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_tea_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tea_plantation_count add = prev.level } }
		}
	}
	if = {	# Tobacco Plantations
		limit = { has_variable = gbr_rationing_tobacco }
		set_variable = { name = gbr_tobacco_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_tobacco_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tobacco_plantation_count add = prev.level } }
		}
	}
	if = {	# Tool Manufactories
		limit = { has_variable = gbr_rationing_tools }
		set_variable = { name = gbr_tool_manufactories_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_tool_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tool_manufactories_count add = prev.level } }
		}
	}
	if = {	# Logging Camp
		limit = { has_variable = gbr_rationing_wood }
		set_variable = { name = gbr_logging_camp_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_logging_camp
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_logging_camp_count add = prev.level } }
		}
	}
}

gbr_weekly_pulse_rationing_from_characters = {
	# From Characters
		# There would be notable public individuals who would have an opinion on rationing, about whether they support it or are against it
		# These individuals would have influence on public opinion, which is determined based on a character's popularity
		# Currently, we are looking for characters who are members of certain Interest Groups which would be against rationing based on their preferred economic system
		# Preference for interventionism and socialism would support rationing, while believers in the free market would be against rationing
		# Having said that, some Interest Groups would have a stronger opinion on rationing than other interest groups, so we use a multiplier to scale that opinion strength
		# A custom trigger is used to make it easier in the future to modify the limits, and every character in the country is checked
	
	set_variable = { name = gbr_rationing_progress_from_characters value = 0 }
	set_variable = { name = gbr_character_popularity_ppp value = 0 }
	set_variable = { name = gbr_character_popularity_pp value = 0 }
	set_variable = { name = gbr_character_popularity_p value = 0 }
	set_variable = { name = gbr_character_popularity_n value = 0 }
	set_variable = { name = gbr_character_popularity_nn value = 0 }
	
	set_variable = { name = gbr_character_popularity_hardliner value = 0 }
	set_variable = { name = gbr_character_popularity_marxist_leninist value = 0 }
	set_variable = { name = gbr_character_popularity_developmentalist value = 0 }
	set_variable = { name = gbr_character_popularity_market_socialist value = 0 }
	set_variable = { name = gbr_character_popularity_democratic_socialist value = 0 }
	set_variable = { name = gbr_character_popularity_anarchist value = 0 }
	set_variable = { name = gbr_character_popularity_liberation_theologist value = 0 }
	set_variable = { name = gbr_character_popularity_apparatus value = 0 }
	set_variable = { name = gbr_character_popularity_vanguardist value = 0 }
	set_variable = { name = gbr_character_popularity_socialist value = 0 }
	set_variable = { name = gbr_character_popularity_state_interventionist value = 0 }
	set_variable = { name = gbr_character_popularity_agrarian value = 0 }
	set_variable = { name = gbr_character_popularity_social value = 0 }
	set_variable = { name = gbr_character_popularity_libermanist value = 0 }
	set_variable = { name = gbr_character_popularity_traditionalist value = 0 }
	set_variable = { name = gbr_character_popularity_market_liberal value = 0 }
	set_variable = { name = gbr_character_popularity_materialistic value = 0 }
	set_variable = { name = gbr_character_popularity_meritocratic value = 0 }
	
	
	# If a character very strongly supports rationing (x2 Approval)
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_hardliner }
		ROOT = { change_variable = { name = gbr_character_popularity_hardliner add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_hardliner multiply = 2 }
	change_variable = { name = gbr_character_popularity_ppp add = var:gbr_character_popularity_hardliner }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_marxist_leninist }
		ROOT = { change_variable = { name = gbr_character_popularity_marxist_leninist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_marxist_leninist multiply = 2 }
	change_variable = { name = gbr_character_popularity_ppp add = var:gbr_character_popularity_marxist_leninist }
	
	# If a character strongly supports rationing (x1.5 Approval)
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_developmentalist }
		ROOT = { change_variable = { name = gbr_character_popularity_developmentalist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_developmentalist multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_pp add = var:gbr_character_popularity_developmentalist }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_market_socialist }
		ROOT = { change_variable = { name = gbr_character_popularity_market_socialist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_market_socialist multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_pp add = var:gbr_character_popularity_market_socialist }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_democratic_socialist }
		ROOT = { change_variable = { name = gbr_character_popularity_democratic_socialist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_democratic_socialist multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_pp add = var:gbr_character_popularity_democratic_socialist }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_anarchist }
		ROOT = { change_variable = { name = gbr_character_popularity_anarchist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_anarchist multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_pp add = var:gbr_character_popularity_anarchist }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_liberation_theologist }
		ROOT = { change_variable = { name = gbr_character_popularity_liberation_theologist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_liberation_theologist multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_pp add = var:gbr_character_popularity_liberation_theologist }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_apparatus }
		ROOT = { change_variable = { name = gbr_character_popularity_apparatus add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_apparatus multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_pp add = var:gbr_character_popularity_apparatus }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_vanguardist }
		ROOT = { change_variable = { name = gbr_character_popularity_vanguardist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_vanguardist multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_pp add = var:gbr_character_popularity_vanguardist }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_socialist }
		ROOT = { change_variable = { name = gbr_character_popularity_socialist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_socialist multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_pp add = var:gbr_character_popularity_socialist }
	
	# If a character supports rationing (x1 Approval)
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_state_interventionist }
		ROOT = { change_variable = { name = gbr_character_popularity_state_interventionist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_state_interventionist multiply = 1 }
	change_variable = { name = gbr_character_popularity_p add = var:gbr_character_popularity_state_interventionist }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_agrarian }
		ROOT = { change_variable = { name = gbr_character_popularity_agrarian add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_agrarian multiply = 1 }
	change_variable = { name = gbr_character_popularity_p add = var:gbr_character_popularity_agrarian }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_social }
		ROOT = { change_variable = { name = gbr_character_popularity_social add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_social multiply = 1 }
	change_variable = { name = gbr_character_popularity_p add = var:gbr_character_popularity_social }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_libermanist }
		ROOT = { change_variable = { name = gbr_character_popularity_libermanist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_libermanist multiply = 1 }
	change_variable = { name = gbr_character_popularity_p add = var:gbr_character_popularity_libermanist }
	
	# If a character doesn't supports rationing (x1 Disapproval)
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_traditionalist }
		ROOT = { change_variable = { name = gbr_character_popularity_traditionalist add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_traditionalist multiply = 1 }
	change_variable = { name = gbr_character_popularity_n add = var:gbr_character_popularity_traditionalist }
	
	# If a character strongly doesn't supports rationing (x1.5 Disapproval)
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_market_liberal }
		ROOT = { change_variable = { name = gbr_character_popularity_market_liberal add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_market_liberal multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_nn add = var:gbr_character_popularity_market_liberal }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_materialistic }
		ROOT = { change_variable = { name = gbr_character_popularity_materialistic add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_materialistic multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_nn add = var:gbr_character_popularity_materialistic }
	every_scope_character = {
		limit = { has_ideology = ideology:ideology_meritocratic }
		ROOT = { change_variable = { name = gbr_character_popularity_meritocratic add = prev.popularity } }
	}
	change_variable = { name = gbr_character_popularity_meritocratic multiply = 1.5 }
	change_variable = { name = gbr_character_popularity_nn add = var:gbr_character_popularity_meritocratic }
	
	change_variable = { name = gbr_rationing_progress_from_characters subtract = var:gbr_character_popularity_ppp }
	change_variable = { name = gbr_rationing_progress_from_characters subtract = var:gbr_character_popularity_pp }
	change_variable = { name = gbr_rationing_progress_from_characters subtract = var:gbr_character_popularity_p }
	change_variable = { name = gbr_rationing_progress_from_characters add = var:gbr_character_popularity_n }
	change_variable = { name = gbr_rationing_progress_from_characters add = var:gbr_character_popularity_nn }
	
	change_variable = { name = gbr_rationing_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
}

gbr_weekly_pulse_rationing_from_interest_groups = {
	# From Interest Groups
		# Just as notable characters would have an opinion on rationing, based on the interest group they are a part of, so too would the pops
		# To model this, we use the interest group's clout as a way of modelling how much sway these interest groups have on the public opinion of rationing
		# Similar to the scaling logic used in characters, the clout is scaled based on the interest group's opinion of rationing based on their preferred economic system
		# However, we also model the effect of the interest group being able to use the resources of the state to sway public opinion, so a extra multiplier is used if the interest group is in government
	
	set_variable = { name = gbr_rationing_progress_from_interest_groups value = 0 }
	set_variable = { name = gbr_interest_group_clout_ppp value = 0 }
	set_variable = { name = gbr_interest_group_clout_pp value = 0 }
	set_variable = { name = gbr_interest_group_clout_p value = 0 }
	set_variable = { name = gbr_interest_group_clout_n value = 0 }
	set_variable = { name = gbr_interest_group_clout_nn value = 0 }
	
	set_variable = { name = gbr_interest_group_clout_hardliner value = 0 }
	set_variable = { name = gbr_interest_group_clout_marxist_leninist value = 0 }
	set_variable = { name = gbr_interest_group_clout_developmentalist value = 0 }
	set_variable = { name = gbr_interest_group_clout_market_socialist value = 0 }
	set_variable = { name = gbr_interest_group_clout_democratic_socialist value = 0 }
	set_variable = { name = gbr_interest_group_clout_anarchist value = 0 }
	set_variable = { name = gbr_interest_group_clout_liberation_theologist value = 0 }
	set_variable = { name = gbr_interest_group_clout_apparatus value = 0 }
	set_variable = { name = gbr_interest_group_clout_vanguardist value = 0 }
	set_variable = { name = gbr_interest_group_clout_socialist value = 0 }
	set_variable = { name = gbr_interest_group_clout_state_interventionist value = 0 }
	set_variable = { name = gbr_interest_group_clout_agrarian value = 0 }
	set_variable = { name = gbr_interest_group_clout_social value = 0 }
	set_variable = { name = gbr_interest_group_clout_libermanist value = 0 }
	set_variable = { name = gbr_interest_group_clout_traditionalist value = 0 }
	set_variable = { name = gbr_interest_group_clout_market_liberal value = 0 }
	set_variable = { name = gbr_interest_group_clout_materialistic value = 0 }
	set_variable = { name = gbr_interest_group_clout_meritocratic value = 0 }
	
	# If an interest group very strongly supports rationing (x2 Approval)
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_hardliner } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_hardliner add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_hardliner multiply = 2 }
	change_variable = { name = gbr_interest_group_clout_ppp add = var:gbr_interest_group_clout_hardliner }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_marxist_leninist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_marxist_leninist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_marxist_leninist multiply = 2 }
	change_variable = { name = gbr_interest_group_clout_ppp add = var:gbr_interest_group_clout_marxist_leninist }
	
	# If an interest group strongly supports rationing (x1.5 Approval)
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_developmentalist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_developmentalist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_developmentalist multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_pp add = var:gbr_interest_group_clout_developmentalist }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_market_socialist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_market_socialist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_market_socialist multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_pp add = var:gbr_interest_group_clout_market_socialist }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_democratic_socialist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_democratic_socialist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_democratic_socialist multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_pp add = var:gbr_interest_group_clout_democratic_socialist }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_anarchist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_anarchist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_anarchist multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_pp add = var:gbr_interest_group_clout_anarchist }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_liberation_theologist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_liberation_theologist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_liberation_theologist multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_pp add = var:gbr_interest_group_clout_liberation_theologist }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_apparatus } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_apparatus add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_apparatus multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_pp add = var:gbr_interest_group_clout_apparatus }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_vanguardist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_vanguardist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_vanguardist multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_pp add = var:gbr_interest_group_clout_vanguardist }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_socialist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_socialist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_socialist multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_pp add = var:gbr_interest_group_clout_socialist }
	
	# If an interest group supports rationing (x1 Approval)
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_state_interventionist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_state_interventionist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_state_interventionist multiply = 1 }
	change_variable = { name = gbr_interest_group_clout_p add = var:gbr_interest_group_clout_state_interventionist }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_agrarian } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_agrarian add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_agrarian multiply = 1 }
	change_variable = { name = gbr_interest_group_clout_p add = var:gbr_interest_group_clout_agrarian }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_social } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_social add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_social multiply = 1 }
	change_variable = { name = gbr_interest_group_clout_p add = var:gbr_interest_group_clout_social }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_libermanist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_libermanist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_libermanist multiply = 1 }
	change_variable = { name = gbr_interest_group_clout_p add = var:gbr_interest_group_clout_libermanist }
	
	# If an interest group doesn't support rationing (x1 Disapproval)
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_traditionalist } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_traditionalist add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_traditionalist multiply = 1 }
	change_variable = { name = gbr_interest_group_clout_n add = var:gbr_interest_group_clout_traditionalist }
	
	# If an interest group doesn't strongly support rationing (x1.5 Disapproval)
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_market_liberal } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_market_liberal add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_market_liberal multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_nn add = var:gbr_interest_group_clout_market_liberal }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_materialistic } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_materialistic add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_materialistic multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_nn add = var:gbr_interest_group_clout_materialistic }
	every_interest_group = {
		limit = { leader = { has_ideology = ideology:ideology_meritocratic } }
		ROOT = { set_variable = { name = gbr_ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = gbr_ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_interest_group_clout_meritocratic add = var:gbr_ig_weight } }
	}
	change_variable = { name = gbr_interest_group_clout_meritocratic multiply = 1.5 }
	change_variable = { name = gbr_interest_group_clout_nn add = var:gbr_interest_group_clout_meritocratic }
	
	change_variable = { name = gbr_rationing_progress_from_interest_groups subtract = var:gbr_interest_group_clout_ppp }
	change_variable = { name = gbr_rationing_progress_from_interest_groups subtract = var:gbr_interest_group_clout_pp }
	change_variable = { name = gbr_rationing_progress_from_interest_groups subtract = var:gbr_interest_group_clout_p }
	change_variable = { name = gbr_rationing_progress_from_interest_groups add = var:gbr_interest_group_clout_n }
	change_variable = { name = gbr_rationing_progress_from_interest_groups add = var:gbr_interest_group_clout_nn }
}

gbr_weekly_pulse_rationing_from_government_legitimacy = {
	# From Government Legitimacy
		# Rationing is a government policy. Mandated, organised, enforced, etc, by the government.
		# As such, the government's legitimacy would influence how willing the general population is to continue rationing and not complain/demand an end to it
		# A government legitimacy of 50 is considered the mid point, it has 0 effect on the progress. ( subtract = 0.5 )
		# As government legitimacy increases towards 100, the public agrees with the government action of mandating rationing to be valid, so negative progress is applied
		# As government legitimacy decreased towards 0, the public disagrees with the government's actions in mandating rationing, protesting it etc, so positive progress is applied
	
	set_variable = { name = gbr_rationing_progress_from_government_legitimacy value = root.government_legitimacy }
	change_variable = { name = gbr_rationing_progress_from_government_legitimacy divide = 100 }
	change_variable = { name = gbr_rationing_progress_from_government_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_rationing_progress_from_government_legitimacy multiply = -2 }
}

# Aluminum rationing progress weekly calculation
gbr_weekly_pulse_rationing_aluminum_progress = {
	# Progress Logic
		# Progress is inverse to how good it is. The higher the progress value, the worse it is
		# As such, the ideal scenario is to keep the progress at 0 or be reducing it
		# So ideally, the various 'progress from' would be negative
	
	set_variable = { name = gbr_aluminum_progress_from_characters value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_igs value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_buildings value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_price value = 0 }
	set_variable = { name = gbr_aluminum_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_aluminum_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_aluminum_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
		# Based on the number of buildings that output the good, there would be effect from the number of buildings that exist
		# The logic being that the public seeing these buildings would be given the impression that steps are being taken to increase the supply of a good
		# However, as the number of buildings can reach into triple digits for some buildings, the building count needs to be scaled
		# This scaling is also based on the construction cost of the building and how much of a good the building outputs
		# At a minimum, the number of buildings is divided by 100, so the progress from each building level is 0.01 instead of 1
	
	set_variable = { name = gbr_aluminum_building_holder value = var:gbr_aluminum_refinery_count }
	change_variable = { name = gbr_aluminum_building_holder divide = 200 }
	change_variable = { name = gbr_aluminum_progress_from_buildings subtract = var:gbr_aluminum_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_aluminum_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price
		# As the price of a good in the market is a reflection of whether a good is oversupplied or undersupplied, this is the primary source of inflation pressure for goods
		# As a good gets expensive, supply is unable to meet the demand which is inflationary. This increases the progress
		# As a good gets cheaper, supply is greater than the demand which is deflationary. This decreases the progress
		# As post-war rationing was to prevent demand-pull inflation from effecting the economy (see 2021 = 2023 inflation in developed economies), deflation isn't being considered here
		# The amount of progress being added/subtracted increases as the good gets expensive or cheaper, towards the +/- 75% cap on price
	
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 1 } # = 1
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 1 } # = 2
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 3 } # = 5
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 4 } # = 9
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 6 } # = 15
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 1 } # = -0.5
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 1 } # = -1
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 3 } # = -2.5
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 4 } # = -4.5
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 6 } # = -7.5
	}
	
	# Final Compliiation
		# Add all the calculated values to the progress_next variable, which is what gets added to the progress variable at the end of each month
		# The calculated values are done weekly, so only the last full week is important for determining whether progress increases or decreases
		# While it would be possible to modify the progress so that it could be done weekly, changing the maximum value from 360 to 1440
		# That hasn't been done at this stage. A possibility for the future
	
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_characters }
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_igs }
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_buildings }
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_legitimacy }
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_price }
}

# Bauxite rationing progress weekly calculation
gbr_weekly_pulse_rationing_bauxite_progress = {
	set_variable = { name = gbr_bauxite_progress_from_characters value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_igs value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_buildings value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_price value = 0 }
	set_variable = { name = gbr_bauxite_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_bauxite_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_bauxite_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_bauxite_building_holder value = var:gbr_bauxite_mine_count }
	change_variable = { name = gbr_bauxite_building_holder divide = 100 }
	change_variable = { name = gbr_bauxite_progress_from_buildings subtract = var:gbr_bauxite_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_bauxite_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_characters }
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_igs }
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_buildings }
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_legitimacy }
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_price }
}

# Chemicals (Fertilizer) rationing progress weekly calculation
gbr_weekly_pulse_rationing_fertilizer_progress = {
	set_variable = { name = gbr_fertilizer_progress_from_characters value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_igs value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_price value = 0 }
	set_variable = { name = gbr_fertilizer_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_fertilizer_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_fertilizer_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_fertilizer_building_holder value = var:gbr_chemical_plant_count }
	change_variable = { name = gbr_fertilizer_building_holder divide = 200 }
	change_variable = { name = gbr_fertilizer_progress_from_buildings subtract = var:gbr_fertilizer_building_holder }
	set_variable = { name = gbr_fertilizer_building_holder value = var:gbr_livestock_ranch_fertilizer_count }
	change_variable = { name = gbr_fertilizer_building_holder divide = 400 }
	change_variable = { name = gbr_fertilizer_progress_from_buildings subtract = var:gbr_fertilizer_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_fertilizer_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_characters }
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_igs }
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_buildings }
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_legitimacy }
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_price }
}

# Clothes rationing progress weekly calculation
gbr_weekly_pulse_rationing_clothes_progress = {
	set_variable = { name = gbr_clothes_progress_from_characters value = 0 }
	set_variable = { name = gbr_clothes_progress_from_igs value = 0 }
	set_variable = { name = gbr_clothes_progress_from_buildings value = 0 }
	set_variable = { name = gbr_clothes_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_clothes_progress_from_price value = 0 }
	set_variable = { name = gbr_clothes_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_clothes_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_clothes_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_clothes_building_holder value = var:gbr_textile_manufactory_count }
	change_variable = { name = gbr_clothes_building_holder divide = 200 }
	change_variable = { name = gbr_clothes_progress_from_buildings subtract = var:gbr_clothes_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_clothes_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_characters }
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_igs }
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_buildings }
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_legitimacy }
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_price }
}

# Coal rationing progress weekly calculation
gbr_weekly_pulse_rationing_coal_progress = {
	set_variable = { name = gbr_coal_progress_from_characters value = 0 }
	set_variable = { name = gbr_coal_progress_from_igs value = 0 }
	set_variable = { name = gbr_coal_progress_from_buildings value = 0 }
	set_variable = { name = gbr_coal_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_coal_progress_from_price value = 0 }
	set_variable = { name = gbr_coal_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_coal_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_coal_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_coal_building_holder value = var:gbr_coal_mine_count }
	change_variable = { name = gbr_coal_building_holder divide = 100 }
	change_variable = { name = gbr_coal_progress_from_buildings subtract = var:gbr_coal_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_coal_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_characters }
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_igs }
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_buildings }
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_legitimacy }
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_price }
}

# Coffee rationing progress weekly calculation
gbr_weekly_pulse_rationing_coffee_progress = {
	set_variable = { name = gbr_coffee_progress_from_characters value = 0 }
	set_variable = { name = gbr_coffee_progress_from_igs value = 0 }
	set_variable = { name = gbr_coffee_progress_from_buildings value = 0 }
	set_variable = { name = gbr_coffee_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_coffee_progress_from_price value = 0 }
	set_variable = { name = gbr_coffee_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_coffee_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_coffee_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_coffee_building_holder value = var:gbr_coffee_plantation_count }
	change_variable = { name = gbr_coffee_building_holder divide = 100 }
	change_variable = { name = gbr_coffee_progress_from_buildings subtract = var:gbr_coffee_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_coffee_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_characters }
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_igs }
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_buildings }
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_legitimacy }
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_price }
}

# Copper rationing progress weekly calculation
gbr_weekly_pulse_rationing_copper_progress = {
	set_variable = { name = gbr_copper_progress_from_characters value = 0 }
	set_variable = { name = gbr_copper_progress_from_igs value = 0 }
	set_variable = { name = gbr_copper_progress_from_buildings value = 0 }
	set_variable = { name = gbr_copper_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_copper_progress_from_price value = 0 }
	set_variable = { name = gbr_copper_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_copper_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_copper_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_copper_building_holder value = var:gbr_copper_mine_count }
	change_variable = { name = gbr_copper_building_holder divide = 100 }
	change_variable = { name = gbr_copper_progress_from_buildings subtract = var:gbr_copper_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_copper_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_characters }
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_igs }
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_buildings }
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_legitimacy }
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_price }
}

# Engines rationing progress weekly calculation
gbr_weekly_pulse_rationing_engines_progress = {
	set_variable = { name = gbr_engines_progress_from_characters value = 0 }
	set_variable = { name = gbr_engines_progress_from_igs value = 0 }
	set_variable = { name = gbr_engines_progress_from_buildings value = 0 }
	set_variable = { name = gbr_engines_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_engines_progress_from_price value = 0 }
	set_variable = { name = gbr_engines_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_engines_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_engines_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_engines_building_holder value = var:gbr_motor_industry_count }
	change_variable = { name = gbr_engines_building_holder divide = 200 }
	change_variable = { name = gbr_engines_progress_from_buildings subtract = var:gbr_engines_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_engines_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_characters }
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_igs }
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_buildings }
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_legitimacy }
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_price }
}

# Explosives rationing progress weekly calculation
gbr_weekly_pulse_rationing_explosives_progress = {
	set_variable = { name = gbr_explosives_progress_from_characters value = 0 }
	set_variable = { name = gbr_explosives_progress_from_igs value = 0 }
	set_variable = { name = gbr_explosives_progress_from_buildings value = 0 }
	set_variable = { name = gbr_explosives_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_explosives_progress_from_price value = 0 }
	set_variable = { name = gbr_explosives_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_explosives_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_explosives_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_explosives_building_holder value = var:gbr_explosives_industry_count }
	change_variable = { name = gbr_explosives_building_holder divide = 200 }
	change_variable = { name = gbr_explosives_progress_from_buildings subtract = var:gbr_explosives_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_explosives_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_characters }
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_igs }
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_buildings }
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_legitimacy }
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_price }
}

# Fabric rationing progress weekly calculation
gbr_weekly_pulse_rationing_fabric_progress = {
	set_variable = { name = gbr_fabric_progress_from_characters value = 0 }
	set_variable = { name = gbr_fabric_progress_from_igs value = 0 }
	set_variable = { name = gbr_fabric_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fabric_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fabric_progress_from_price value = 0 }
	set_variable = { name = gbr_fabric_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_fabric_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_fabric_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_fabric_building_holder value = var:gbr_cotton_plantation_count }
	change_variable = { name = gbr_fabric_building_holder divide = 100 }
	change_variable = { name = gbr_fabric_progress_from_buildings subtract = var:gbr_fabric_building_holder }
	set_variable = { name = gbr_fabric_building_holder value = var:gbr_livestock_ranch_fabric_count }
	change_variable = { name = gbr_fabric_building_holder divide = 200 }
	change_variable = { name = gbr_fabric_progress_from_buildings subtract = var:gbr_fabric_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_fabric_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_characters }
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_igs }
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_buildings }
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_legitimacy }
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_price }
}

# Fish rationing progress weekly calculation
gbr_weekly_pulse_rationing_fish_progress = {
	set_variable = { name = gbr_fish_progress_from_characters value = 0 }
	set_variable = { name = gbr_fish_progress_from_igs value = 0 }
	set_variable = { name = gbr_fish_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fish_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fish_progress_from_price value = 0 }
	set_variable = { name = gbr_fish_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_fish_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_fish_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_fish_building_holder value = var:gbr_fishing_wharf_count }
	change_variable = { name = gbr_fish_building_holder divide = 100 }
	change_variable = { name = gbr_fish_progress_from_buildings subtract = var:gbr_fish_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_fish_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_characters }
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_igs }
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_buildings }
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_legitimacy }
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_price }
}

# Fruit rationing progress weekly calculation
gbr_weekly_pulse_rationing_fruit_progress = {
	set_variable = { name = gbr_fruit_progress_from_characters value = 0 }
	set_variable = { name = gbr_fruit_progress_from_igs value = 0 }
	set_variable = { name = gbr_fruit_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fruit_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fruit_progress_from_price value = 0 }
	set_variable = { name = gbr_fruit_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_fruit_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_fruit_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_fruit_building_holder value = var:gbr_banana_plantation_count }
	change_variable = { name = gbr_fruit_building_holder divide = 100 }
	change_variable = { name = gbr_fruit_progress_from_buildings subtract = var:gbr_fruit_building_holder }
	set_variable = { name = gbr_fruit_building_holder value = var:gbr_rye_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder add = var:gbr_wheat_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder add = var:gbr_rice_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder add = var:gbr_maize_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder add = var:gbr_millet_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder divide = 400 }
	change_variable = { name = gbr_fruit_progress_from_buildings subtract = var:gbr_fruit_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_fruit_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_characters }
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_igs }
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_buildings }
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_legitimacy }
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_price }
}

# Glass rationing progress weekly calculation
gbr_weekly_pulse_rationing_glass_progress = {
	set_variable = { name = gbr_glass_progress_from_characters value = 0 }
	set_variable = { name = gbr_glass_progress_from_igs value = 0 }
	set_variable = { name = gbr_glass_progress_from_buildings value = 0 }
	set_variable = { name = gbr_glass_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_glass_progress_from_price value = 0 }
	set_variable = { name = gbr_glass_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_glass_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_glass_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_glass_building_holder value = var:gbr_glassworks_count }
	change_variable = { name = gbr_glass_building_holder divide = 200 }
	change_variable = { name = gbr_glass_progress_from_buildings subtract = var:gbr_glass_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_glass_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_characters }
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_igs }
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_buildings }
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_legitimacy }
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_price }
}

# Grain rationing progress weekly calculation
gbr_weekly_pulse_rationing_grain_progress = {
	set_variable = { name = gbr_grain_progress_from_characters value = 0 }
	set_variable = { name = gbr_grain_progress_from_igs value = 0 }
	set_variable = { name = gbr_grain_progress_from_buildings value = 0 }
	set_variable = { name = gbr_grain_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_grain_progress_from_price value = 0 }
	set_variable = { name = gbr_grain_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_grain_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_grain_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_grain_building_holder value = var:gbr_rye_farm_count }
	change_variable = { name = gbr_grain_building_holder add = var:gbr_wheat_farm_count }
	change_variable = { name = gbr_grain_building_holder add = var:gbr_rice_farm_count }
	change_variable = { name = gbr_grain_building_holder add = var:gbr_maize_farm_count }
	change_variable = { name = gbr_grain_building_holder add = var:gbr_millet_farm_count }
	change_variable = { name = gbr_grain_building_holder divide = 100 }
	change_variable = { name = gbr_grain_progress_from_buildings subtract = var:gbr_grain_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_grain_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_characters }
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_igs }
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_buildings }
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_legitimacy }
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_price }
}

# Groceries rationing progress weekly calculation
gbr_weekly_pulse_rationing_groceries_progress = {
	set_variable = { name = gbr_groceries_progress_from_characters value = 0 }
	set_variable = { name = gbr_groceries_progress_from_igs value = 0 }
	set_variable = { name = gbr_groceries_progress_from_buildings value = 0 }
	set_variable = { name = gbr_groceries_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_groceries_progress_from_price value = 0 }
	set_variable = { name = gbr_groceries_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_groceries_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_groceries_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_groceries_building_holder value = var:gbr_food_industry_count }
	change_variable = { name = gbr_groceries_building_holder divide = 200 }
	change_variable = { name = gbr_groceries_progress_from_buildings subtract = var:gbr_groceries_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_groceries_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_characters }
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_igs }
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_buildings }
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_legitimacy }
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_price }
}

# High Quality Fabric rationing progress weekly calculation
gbr_weekly_pulse_rationing_high_quality_fabric_progress = {
	set_variable = { name = gbr_high_quality_fabric_progress_from_characters value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_igs value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_buildings value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_price value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_high_quality_fabric_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_high_quality_fabric_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_high_quality_fabric_building_holder value = var:gbr_silk_plantation_count }
	change_variable = { name = gbr_high_quality_fabric_building_holder divide = 100 }
	change_variable = { name = gbr_high_quality_fabric_progress_from_buildings subtract = var:gbr_high_quality_fabric_building_holder }
	set_variable = { name = gbr_high_quality_fabric_building_holder value = var:gbr_synthetics_plant_count }
	change_variable = { name = gbr_high_quality_fabric_building_holder divide = 300 }
	change_variable = { name = gbr_high_quality_fabric_progress_from_buildings subtract = var:gbr_high_quality_fabric_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_high_quality_fabric_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_characters }
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_igs }
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_buildings }
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_legitimacy }
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_price }
}

# Iron rationing progress weekly calculation
gbr_weekly_pulse_rationing_iron_progress = {
	set_variable = { name = gbr_iron_progress_from_characters value = 0 }
	set_variable = { name = gbr_iron_progress_from_igs value = 0 }
	set_variable = { name = gbr_iron_progress_from_buildings value = 0 }
	set_variable = { name = gbr_iron_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_iron_progress_from_price value = 0 }
	set_variable = { name = gbr_iron_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_iron_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_iron_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_iron_building_holder value = var:gbr_iron_mine_count }
	change_variable = { name = gbr_iron_building_holder divide = 100 }
	change_variable = { name = gbr_iron_progress_from_buildings subtract = var:gbr_iron_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_iron_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_characters }
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_igs }
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_buildings }
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_legitimacy }
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_price }
}

# Lead rationing progress weekly calculation
gbr_weekly_pulse_rationing_lead_progress = {
	set_variable = { name = gbr_lead_progress_from_characters value = 0 }
	set_variable = { name = gbr_lead_progress_from_igs value = 0 }
	set_variable = { name = gbr_lead_progress_from_buildings value = 0 }
	set_variable = { name = gbr_lead_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_lead_progress_from_price value = 0 }
	set_variable = { name = gbr_lead_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_lead_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_lead_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_lead_building_holder value = var:gbr_lead_mine_count }
	change_variable = { name = gbr_lead_building_holder divide = 100 }
	change_variable = { name = gbr_lead_progress_from_buildings subtract = var:gbr_lead_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_lead_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_characters }
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_igs }
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_buildings }
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_legitimacy }
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_price }
}

# Liquor rationing progress weekly calculation
gbr_weekly_pulse_rationing_liquor_progress = {
	set_variable = { name = gbr_liquor_progress_from_characters value = 0 }
	set_variable = { name = gbr_liquor_progress_from_igs value = 0 }
	set_variable = { name = gbr_liquor_progress_from_buildings value = 0 }
	set_variable = { name = gbr_liquor_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_liquor_progress_from_price value = 0 }
	set_variable = { name = gbr_liquor_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_liquor_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_liquor_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_liquor_building_holder value = var:gbr_distilleries_liquor_count }
	change_variable = { name = gbr_liquor_building_holder divide = 200 }
	change_variable = { name = gbr_liquor_progress_from_buildings subtract = var:gbr_liquor_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_liquor_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_characters }
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_igs }
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_buildings }
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_legitimacy }
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_price }
}

# Meat rationing progress weekly calculation
gbr_weekly_pulse_rationing_meat_progress = {
	set_variable = { name = gbr_meat_progress_from_characters value = 0 }
	set_variable = { name = gbr_meat_progress_from_igs value = 0 }
	set_variable = { name = gbr_meat_progress_from_buildings value = 0 }
	set_variable = { name = gbr_meat_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_meat_progress_from_price value = 0 }
	set_variable = { name = gbr_meat_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_meat_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_meat_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_meat_building_holder value = var:gbr_livestock_ranch_count }
	change_variable = { name = gbr_meat_building_holder divide = 100 }
	change_variable = { name = gbr_meat_progress_from_buildings subtract = var:gbr_meat_building_holder }
	set_variable = { name = gbr_meat_building_holder value = var:gbr_fishing_wharf_meat_count }
	change_variable = { name = gbr_meat_building_holder divide = 300 }
	change_variable = { name = gbr_meat_progress_from_buildings subtract = var:gbr_meat_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_meat_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_characters }
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_igs }
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_buildings }
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_legitimacy }
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_price }
}

# Oil rationing progress weekly calculation
gbr_weekly_pulse_rationing_oil_progress = {
	set_variable = { name = gbr_oil_progress_from_characters value = 0 }
	set_variable = { name = gbr_oil_progress_from_igs value = 0 }
	set_variable = { name = gbr_oil_progress_from_buildings value = 0 }
	set_variable = { name = gbr_oil_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_oil_progress_from_price value = 0 }
	set_variable = { name = gbr_oil_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_oil_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_oil_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_oil_building_holder value = var:gbr_oil_rig_count }
	change_variable = { name = gbr_oil_building_holder divide = 100 }
	change_variable = { name = gbr_oil_progress_from_buildings subtract = var:gbr_oil_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_oil_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_characters }
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_igs }
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_buildings }
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_legitimacy }
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_price }
}

# Opium rationing progress weekly calculation
gbr_weekly_pulse_rationing_opium_progress = {
	set_variable = { name = gbr_opium_progress_from_characters value = 0 }
	set_variable = { name = gbr_opium_progress_from_igs value = 0 }
	set_variable = { name = gbr_opium_progress_from_buildings value = 0 }
	set_variable = { name = gbr_opium_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_opium_progress_from_price value = 0 }
	set_variable = { name = gbr_opium_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_opium_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_opium_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_opium_building_holder value = var:gbr_opium_plantation_count }
	change_variable = { name = gbr_opium_building_holder divide = 100 }
	change_variable = { name = gbr_opium_progress_from_buildings subtract = var:gbr_opium_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_opium_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_characters }
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_igs }
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_buildings }
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_legitimacy }
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_price }
}

# Paper rationing progress weekly calculation
gbr_weekly_pulse_rationing_paper_progress = {
	set_variable = { name = gbr_paper_progress_from_characters value = 0 }
	set_variable = { name = gbr_paper_progress_from_igs value = 0 }
	set_variable = { name = gbr_paper_progress_from_buildings value = 0 }
	set_variable = { name = gbr_paper_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_paper_progress_from_price value = 0 }
	set_variable = { name = gbr_paper_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_paper_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_paper_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_paper_building_holder value = var:gbr_paper_manufactories_count }
	change_variable = { name = gbr_paper_building_holder divide = 200 }
	change_variable = { name = gbr_paper_progress_from_buildings subtract = var:gbr_paper_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_paper_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_characters }
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_igs }
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_buildings }
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_legitimacy }
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_price }
}

# Pharmaceuticals rationing progress weekly calculation
gbr_weekly_pulse_rationing_pharmaceuticals_progress = {
	set_variable = { name = gbr_pharmaceuticals_progress_from_characters value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_igs value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_buildings value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_price value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_pharmaceuticals_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_pharmaceuticals_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_pharmaceuticals_building_holder value = var:gbr_pharmaceutical_industry_count }
	change_variable = { name = gbr_pharmaceuticals_building_holder divide = 200 }
	change_variable = { name = gbr_pharmaceuticals_progress_from_buildings subtract = var:gbr_pharmaceuticals_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_pharmaceuticals_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_characters }
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_igs }
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_buildings }
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_legitimacy }
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_price }
}

# Phosphorus rationing progress weekly calculation
gbr_weekly_pulse_rationing_phosphorus_progress = {
	set_variable = { name = gbr_phosphorus_progress_from_characters value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_igs value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_buildings value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_price value = 0 }
	set_variable = { name = gbr_phosphorus_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_phosphorus_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_phosphorus_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_phosphorus_building_holder value = var:gbr_phosphorus_mine_count }
	change_variable = { name = gbr_phosphorus_building_holder divide = 100 }
	change_variable = { name = gbr_phosphorus_progress_from_buildings subtract = var:gbr_phosphorus_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_phosphorus_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_characters }
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_igs }
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_buildings }
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_legitimacy }
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_price }
}

# Plastics rationing progress weekly calculation
gbr_weekly_pulse_rationing_plastics_progress = {
	set_variable = { name = gbr_plastics_progress_from_characters value = 0 }
	set_variable = { name = gbr_plastics_progress_from_igs value = 0 }
	set_variable = { name = gbr_plastics_progress_from_buildings value = 0 }
	set_variable = { name = gbr_plastics_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_plastics_progress_from_price value = 0 }
	set_variable = { name = gbr_plastics_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_plastics_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_plastics_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_plastics_building_holder value = var:gbr_fuel_refineries_plastics_count }
	change_variable = { name = gbr_plastics_building_holder divide = 200 }
	change_variable = { name = gbr_plastics_progress_from_buildings subtract = var:gbr_plastics_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_plastics_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_characters }
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_igs }
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_buildings }
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_legitimacy }
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_price }
}

# Refined Fuel rationing progress weekly calculation
gbr_weekly_pulse_rationing_refined_fuel_progress = {
	set_variable = { name = gbr_refined_fuel_progress_from_characters value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_igs value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_buildings value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_price value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_refined_fuel_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_refined_fuel_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_refined_fuel_building_holder value = var:gbr_fuel_refineries_count }
	change_variable = { name = gbr_refined_fuel_building_holder divide = 200 }
	change_variable = { name = gbr_refined_fuel_progress_from_buildings subtract = var:gbr_refined_fuel_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_refined_fuel_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_characters }
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_igs }
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_buildings }
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_legitimacy }
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_price }
}

# Rubber rationing progress weekly calculation
gbr_weekly_pulse_rationing_rubber_progress = {
	set_variable = { name = gbr_rubber_progress_from_characters value = 0 }
	set_variable = { name = gbr_rubber_progress_from_igs value = 0 }
	set_variable = { name = gbr_rubber_progress_from_buildings value = 0 }
	set_variable = { name = gbr_rubber_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_rubber_progress_from_price value = 0 }
	set_variable = { name = gbr_rubber_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_rubber_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_rubber_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_rubber_building_holder value = var:gbr_rubber_plantation_count }
	change_variable = { name = gbr_rubber_building_holder divide = 100 }
	change_variable = { name = gbr_rubber_progress_from_buildings subtract = var:gbr_rubber_building_holder }
	set_variable = { name = gbr_rubber_building_holder value = var:gbr_synthetics_plant_rubber_count }
	change_variable = { name = gbr_rubber_building_holder divide = 200 }
	change_variable = { name = gbr_rubber_progress_from_buildings subtract = var:gbr_rubber_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_rubber_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_characters }
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_igs }
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_buildings }
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_legitimacy }
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_price }
}

# Steel rationing progress weekly calculation
gbr_weekly_pulse_rationing_steel_progress = {
	set_variable = { name = gbr_steel_progress_from_characters value = 0 }
	set_variable = { name = gbr_steel_progress_from_igs value = 0 }
	set_variable = { name = gbr_steel_progress_from_buildings value = 0 }
	set_variable = { name = gbr_steel_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_steel_progress_from_price value = 0 }
	set_variable = { name = gbr_steel_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_steel_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_steel_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_steel_building_holder value = var:gbr_steelworks_count }
	change_variable = { name = gbr_steel_building_holder divide = 200 }
	change_variable = { name = gbr_steel_progress_from_buildings subtract = var:gbr_steel_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_steel_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_characters }
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_igs }
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_buildings }
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_legitimacy }
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_price }
}

# Sugar rationing progress weekly calculation
gbr_weekly_pulse_rationing_sugar_progress = {
	set_variable = { name = gbr_sugar_progress_from_characters value = 0 }
	set_variable = { name = gbr_sugar_progress_from_igs value = 0 }
	set_variable = { name = gbr_sugar_progress_from_buildings value = 0 }
	set_variable = { name = gbr_sugar_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_sugar_progress_from_price value = 0 }
	set_variable = { name = gbr_sugar_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_sugar_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_sugar_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_sugar_building_holder value = var:gbr_sugar_plantation_count }
	change_variable = { name = gbr_sugar_building_holder divide = 100 }
	change_variable = { name = gbr_sugar_progress_from_buildings subtract = var:gbr_sugar_building_holder }
	set_variable = { name = gbr_sugar_building_holder value = var:gbr_rye_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder add = var:gbr_wheat_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder add = var:gbr_rice_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder add = var:gbr_maize_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder add = var:gbr_millet_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder divide = 400 }
	change_variable = { name = gbr_sugar_progress_from_buildings subtract = var:gbr_sugar_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_sugar_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_characters }
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_igs }
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_buildings }
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_legitimacy }
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_price }
}

# Tea rationing progress weekly calculation
gbr_weekly_pulse_rationing_tea_progress = {
	set_variable = { name = gbr_tea_progress_from_characters value = 0 }
	set_variable = { name = gbr_tea_progress_from_igs value = 0 }
	set_variable = { name = gbr_tea_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tea_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tea_progress_from_price value = 0 }
	set_variable = { name = gbr_tea_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_tea_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_tea_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_tea_building_holder value = var:gbr_tea_plantation_count }
	change_variable = { name = gbr_tea_building_holder divide = 100 }
	change_variable = { name = gbr_tea_progress_from_buildings subtract = var:gbr_tea_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_tea_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_characters }
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_igs }
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_buildings }
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_legitimacy }
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_price }
}

# Tobacco rationing progress weekly calculation
gbr_weekly_pulse_rationing_tobacco_progress = {
	set_variable = { name = gbr_tobacco_progress_from_characters value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_igs value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_price value = 0 }
	set_variable = { name = gbr_tobacco_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_tobacco_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_tobacco_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_tobacco_building_holder value = var:gbr_tobacco_plantation_count }
	change_variable = { name = gbr_tobacco_building_holder divide = 100 }
	change_variable = { name = gbr_tobacco_progress_from_buildings subtract = var:gbr_tobacco_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_tobacco_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_characters }
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_igs }
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_buildings }
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_legitimacy }
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_price }
}

# Tools rationing progress weekly calculation
gbr_weekly_pulse_rationing_tools_progress = {
	set_variable = { name = gbr_tools_progress_from_characters value = 0 }
	set_variable = { name = gbr_tools_progress_from_igs value = 0 }
	set_variable = { name = gbr_tools_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tools_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tools_progress_from_price value = 0 }
	set_variable = { name = gbr_tools_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_tools_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_tools_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_tools_building_holder value = var:gbr_tool_manufactories_count }
	change_variable = { name = gbr_tools_building_holder divide = 200 }
	change_variable = { name = gbr_tools_progress_from_buildings subtract = var:gbr_tools_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_tools_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_characters }
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_igs }
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_buildings }
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_legitimacy }
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_price }
}

# Wine rationing progress weekly calculation
gbr_weekly_pulse_rationing_wine_progress = {
	set_variable = { name = gbr_wine_progress_from_characters value = 0 }
	set_variable = { name = gbr_wine_progress_from_igs value = 0 }
	set_variable = { name = gbr_wine_progress_from_buildings value = 0 }
	set_variable = { name = gbr_wine_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_wine_progress_from_price value = 0 }
	set_variable = { name = gbr_wine_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_wine_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_wine_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_wine_building_holder value = var:gbr_distilleries_wine_count }
	change_variable = { name = gbr_wine_building_holder divide = 200 }
	change_variable = { name = gbr_wine_progress_from_buildings subtract = var:gbr_wine_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_wine_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_characters }
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_igs }
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_buildings }
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_legitimacy }
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_price }
}

# Wood rationing progress weekly calculation
gbr_weekly_pulse_rationing_wood_progress = {
	set_variable = { name = gbr_wood_progress_from_characters value = 0 }
	set_variable = { name = gbr_wood_progress_from_igs value = 0 }
	set_variable = { name = gbr_wood_progress_from_buildings value = 0 }
	set_variable = { name = gbr_wood_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_wood_progress_from_price value = 0 }
	set_variable = { name = gbr_wood_progress_next value = 0 }
	
	# From Characters
	change_variable = { name = gbr_wood_progress_from_characters add = var:gbr_rationing_progress_from_characters }
	
	# From Interest Groups
	change_variable = { name = gbr_wood_progress_from_igs add = var:gbr_rationing_progress_from_interest_groups }
	
	# From Buildings
	set_variable = { name = gbr_wood_building_holder value = var:gbr_logging_camp_count }
	change_variable = { name = gbr_wood_building_holder divide = 100 }
	change_variable = { name = gbr_wood_progress_from_buildings subtract = var:gbr_wood_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_wood_progress_from_legitimacy add = var:gbr_rationing_progress_from_government_legitimacy }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.1 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.4 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.7 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.1 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.4 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.7 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_characters }
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_igs }
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_buildings }
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_legitimacy }
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_price }
}

gbr_start_rationing_aluminum = {
	# Logic
		# To determine whether a good should start being rationed, there are 2 primary factors
		# Actually 4 factors, but the extra 2 factors just check that the country has started rationing and that it isn't already rationing the good being checked
		# The first factor is to see whether the good has insufficient supply for the demand it has. i.e. how much more expensive is it compared to the base price
		# Currently it is set to 0.1, which means that a good's price needs to be 10% above the good's base price
		# The second factor is to see whether there is enough goods consumption for the good to need to be rationed
		# Really, its here because the AI would sometimes have a situation where the good consumption would be below 1, so the AI wouldn't try getting the supply
		# Currently it is set to 10
		# When a good starts getting rationed, we check to see how many buildings that output the good currently exist
	
	# Check that the UK is rationing & not already rationing aluminum
	# Determine whether aluminum needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:aluminum = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_aluminum }
		}
		set_variable = gbr_rationing_aluminum
		gbr_set_aluminum_variables = yes
		post_notification = gbr_aluminum_rationing_started_message
		set_variable = { name = gbr_aluminum_refinery_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_aluminum_refinery
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_aluminum_refinery_count add = prev.level } }
		}
	}
}

gbr_start_rationing_bauxite = {
	# Check that the UK is rationing & not already rationing bauxite
	# Determine whether bauxite needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:bauxite = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_bauxite }
		}
		set_variable = gbr_rationing_bauxite
		gbr_set_bauxite_variables = yes
		post_notification = gbr_bauxite_rationing_started_message
		set_variable = { name = gbr_bauxite_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_bauxite_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_bauxite_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_fertilizer = {
	# Check that the UK is rationing & not already rationing fertilizer (chemicals)
	# Determine whether fertilizer (chemicals) needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:fertilizer = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_fertilizer }
		}
		set_variable = gbr_rationing_fertilizer
		gbr_set_fertilizer_variables = yes
		post_notification = gbr_fertilizer_rationing_started_message
		set_variable = { name = gbr_chemical_plant_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_chemical_plants
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_chemical_plant_count add = prev.level } }
		}
		set_variable = { name = gbr_livestock_ranch_fertilizer_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				OR = {
					has_active_production_method = pm_intensive_grazing_ranch
					has_active_production_method = pm_open_air_stockyards
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_fertilizer_count add = prev.level } }
		}
	}
}

gbr_start_rationing_clothes = {
	# Check that the UK is rationing & not already rationing clothes
	# Determine whether clothes needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:clothes = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:clothes = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_clothes }
		}
		set_variable = gbr_rationing_clothes
		gbr_set_clothes_variables = yes
		post_notification = gbr_clothes_rationing_started_message
		set_variable = { name = gbr_textile_manufactory_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_textile_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_textile_manufactory_count add = prev.level } }
		}
	}
}

gbr_start_rationing_coal = {
	# Check that the UK is rationing & not already rationing coal
	# Determine whether coal needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:coal = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:coal = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_coal }
		}
		set_variable = gbr_rationing_coal
		gbr_set_coal_variables = yes
		post_notification = gbr_coal_rationing_started_message
		set_variable = { name = gbr_coal_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_coal_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_coal_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_coffee = {
	# Check that the UK is rationing & not already rationing coffee
	# Determine whether coffee needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:coffee = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:coffee = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_coffee }
		}
		set_variable = gbr_rationing_coffee
		gbr_set_coffee_variables = yes
		post_notification = gbr_coffee_rationing_started_message
		set_variable = { name = gbr_coffee_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_coffee_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_coffee_plantation_count add = prev.level } }
		}
	}
}

gbr_start_rationing_copper = {
	# Check that the UK is rationing & not already rationing copper
	# Determine whether copper needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:copper = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:copper = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_copper }
		}
		set_variable = gbr_rationing_copper
		gbr_set_copper_variables = yes
		post_notification = gbr_copper_rationing_started_message
		set_variable = { name = gbr_copper_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_copper_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_copper_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_engines = {
	# Check that the UK is rationing & not already rationing engines
	# Determine whether engines needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:engines = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:engines = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_engines }
		}
		set_variable = gbr_rationing_engines
		gbr_set_engines_variables = yes
		post_notification = gbr_engines_rationing_started_message
		set_variable = { name = gbr_motor_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_motor_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_motor_industry_count add = prev.level } }
		}
	}
}

gbr_start_rationing_explosives = {
	# Check that the UK is rationing & not already rationing explosives
	# Determine whether explosives needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:explosives = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:explosives = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_explosives }
		}
		set_variable = gbr_rationing_explosives
		gbr_set_explosives_variables = yes
		post_notification = gbr_explosives_rationing_started_message
		set_variable = { name = gbr_explosives_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_explosives_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_explosives_industry_count add = prev.level } }
		}
	}
}

gbr_start_rationing_fabric = {
	# Check that the UK is rationing & not already rationing fabric
	# Determine whether fabric needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:fabric = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:fabric = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_fabric }
		}
		set_variable = gbr_rationing_fabric
		gbr_set_fabric_variables = yes
		post_notification = gbr_fabric_rationing_started_message
		set_variable = { name = gbr_cotton_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_cotton_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_cotton_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_livestock_ranch_fabric_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_fabric_count add = prev.level } }
		}
	}
}

gbr_start_rationing_fish = {
	# Check that the UK is rationing & not already rationing fish
	# Determine whether fish needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:fish = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:fish = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_fish }
		}
		set_variable = gbr_rationing_fish
		gbr_set_fish_variables = yes
		post_notification = gbr_fish_rationing_started_message
		set_variable = { name = gbr_fishing_wharf_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_fishing_wharf
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fishing_wharf_count add = prev.level } }
		}
	}
}

gbr_start_rationing_fruit = {
	# Check that the UK is rationing & not already rationing fruit
	# Determine whether fruit needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:fruit = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:fruit = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_fruit }
		}
		set_variable = gbr_rationing_fruit
		gbr_set_fruit_variables = yes
		post_notification = gbr_fruit_rationing_started_message
		set_variable = { name = gbr_banana_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_banana_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_banana_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_rye_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				has_active_production_method = pm_apple_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				has_active_production_method = pm_citrus_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				has_active_production_method = pm_fig_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				has_active_production_method = pm_citrus_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				has_active_production_method = pm_fig_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_fruit_count add = prev.level } }
		}
	}
}

gbr_start_rationing_glass = {
	# Check that the UK is rationing & not already rationing glass
	# Determine whether glass needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:glass = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:glass = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_glass }
		}
		set_variable = gbr_rationing_glass
		gbr_set_glass_variables = yes
		post_notification = gbr_glass_rationing_started_message
		set_variable = { name = gbr_glassworks_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_glassworks
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_glassworks_count add = prev.level } }
		}
	}
}

gbr_start_rationing_grain = {
	# Check that the UK is rationing & not already rationing grain
	# Determine whether grain needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:grain = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:grain = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_grain }
		}
		set_variable = gbr_rationing_grain
		gbr_set_grain_variables = yes
		post_notification = gbr_grain_rationing_started_message
		set_variable = { name = gbr_rye_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_count add = prev.level } }
		}
	}
}

gbr_start_rationing_groceries = {
	# Check that the UK is rationing & not already rationing groceries
	# Determine whether groceries needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:groceries = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:groceries = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_groceries }
		}
		set_variable = gbr_rationing_groceries
		gbr_set_groceries_variables = yes
		post_notification = gbr_groceries_rationing_started_message
		set_variable = { name = gbr_food_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_food_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_food_industry_count add = prev.level } }
		}
	}
}

gbr_start_rationing_high_quality_fabric = {
	# Check that the UK is rationing & not already rationing high quality fabric
	# Determine whether high quality fabric needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:high_quality_fabric = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_high_quality_fabric }
		}
		set_variable = gbr_rationing_high_quality_fabric
		gbr_set_high_quality_fabric_variables = yes
		post_notification = gbr_high_quality_fabric_rationing_started_message
		set_variable = { name = gbr_silk_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_silk_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_silk_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_synthetics_plant_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_synthetics_plant
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_synthetics_plant_count add = prev.level } }
		}
	}
}

gbr_start_rationing_iron = {
	# Check that the UK is rationing & not already rationing iron
	# Determine whether iron needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:iron = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:iron = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_iron }
		}
		set_variable = gbr_rationing_iron
		gbr_set_iron_variables = yes
		post_notification = gbr_iron_rationing_started_message
		set_variable = { name = gbr_iron_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_iron_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_iron_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_lead = {
	# Check that the UK is rationing & not already rationing lead
	# Determine whether lead needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:lead = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:lead = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_lead }
		}
		set_variable = gbr_rationing_lead
		gbr_set_lead_variables = yes
		post_notification = gbr_lead_rationing_started_message
		set_variable = { name = gbr_lead_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_lead_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_lead_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_liquor = {
	# Check that the UK is rationing & not already rationing liquor
	# Determine whether liquor needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:liquor = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:liquor = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_liquor }
		}
		set_variable = gbr_rationing_liquor
		gbr_set_liquor_variables = yes
		post_notification = gbr_liquor_rationing_started_message
		set_variable = { name = gbr_distilleries_liquor_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_distilleries
				OR = {
					has_active_production_method = pm_basic_distillation_liquor
					has_active_production_method = pm_patent_stills_liquor
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_distilleries_liquor_count add = prev.level } }
		}
	}
}

gbr_start_rationing_meat = {
	# Check that the UK is rationing & not already rationing meat
	# Determine whether meat needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:meat = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:meat = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_meat }
		}
		set_variable = gbr_rationing_meat
		gbr_set_meat_variables = yes
		post_notification = gbr_meat_rationing_started_message
		set_variable = { name = gbr_livestock_ranch_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_count add = prev.level } }
		}
		set_variable = { name = gbr_fishing_wharf_meat_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_fishing_wharf
				OR = {
					has_active_production_method = pm_pre_war_whaling_ships
					has_active_production_method = pm_large_whaling_ships
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fishing_wharf_meat_count add = prev.level } }
		}
	}
}

gbr_start_rationing_oil = {
	# Check that the UK is rationing & not already rationing oil
	# Determine whether oil needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:oil = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:oil = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_oil }
		}
		set_variable = gbr_rationing_oil
		gbr_set_oil_variables = yes
		post_notification = gbr_oil_rationing_started_message
		set_variable = { name = gbr_oil_rig_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_oil_rig
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_oil_rig_count add = prev.level } }
		}
	}
}

gbr_start_rationing_opium = {
	# Check that the UK is rationing & not already rationing opium
	# Determine whether opium needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:opium = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:opium = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_opium }
		}
		set_variable = gbr_rationing_opium
		gbr_set_opium_variables = yes
		post_notification = gbr_opium_rationing_started_message
		set_variable = { name = gbr_opium_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_opium_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_opium_plantation_count add = prev.level } }
		}
	}
}

gbr_start_rationing_paper = {
	# Check that the UK is rationing & not already rationing paper
	# Determine whether paper needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:paper = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:paper = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_paper }
		}
		set_variable = gbr_rationing_paper
		gbr_set_paper_variables = yes
		post_notification = gbr_paper_rationing_started_message
		set_variable = { name = gbr_paper_manufactories_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_paper_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_paper_manufactories_count add = prev.level } }
		}
	}
}

gbr_start_rationing_pharmaceuticals = {
	# Check that the UK is rationing & not already rationing pharmaceuticals
	# Determine whether pharmaceuticals needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:pharmaceuticals = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_pharmaceuticals }
		}
		set_variable = gbr_rationing_pharmaceuticals
		gbr_set_pharmaceuticals_variables = yes
		post_notification = gbr_pharmaceuticals_rationing_started_message
		set_variable = { name = gbr_pharmaceutical_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_pharmaceutical_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_pharmaceutical_industry_count add = prev.level } }
		}
	}
}

gbr_start_rationing_phosphorus = {
	# Check that the UK is rationing & not already rationing phosphorus
	# Determine whether phosphorus needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:phosphorus = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_phosphorus }
		}
		set_variable = gbr_rationing_phosphorus
		gbr_set_phosphorus_variables = yes
		post_notification = gbr_phosphorus_rationing_started_message
		set_variable = { name = gbr_phosphorus_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_phosphorus_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_phosphorus_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_plastics = {
	# Check that the UK is rationing & not already rationing plastics
	# Determine whether plastics needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:plastics = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:plastics = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_plastics }
		}
		set_variable = gbr_rationing_plastics
		gbr_set_plastics_variables = yes
		post_notification = gbr_plastics_rationing_started_message
		set_variable = { name = gbr_fuel_refineries_plastics_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_fuel_refineries
				OR = {
					has_active_production_method = pm_rudimentary_polymers
					has_active_production_method = pm_transition_metal_catalysts
					has_active_production_method = pm_dense_thermoplastics
					has_active_production_method = pm_saturated_elastomers
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fuel_refineries_plastics_count add = prev.level } }
		}
	}
}

gbr_start_rationing_refined_fuel = {
	# Check that the UK is rationing & not already rationing refined fuel
	# Determine whether refined fuel needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:refined_fuel = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_refined_fuel }
		}
		set_variable = gbr_rationing_refined_fuel
		gbr_set_refined_fuel_variables = yes
		post_notification = gbr_refined_fuel_rationing_started_message
		set_variable = { name = gbr_fuel_refineries_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_fuel_refineries
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fuel_refineries_count add = prev.level } }
		}
	}
}

gbr_start_rationing_rubber = {
	# Check that the UK is rationing & not already rationing rubber
	# Determine whether rubber needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:rubber = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:rubber = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_rubber }
		}
		set_variable = gbr_rationing_rubber
		gbr_set_rubber_variables = yes
		post_notification = gbr_rubber_rationing_started_message
		set_variable = { name = gbr_rubber_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rubber_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rubber_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_synthetics_plant_rubber_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_synthetics_plant
				OR = {
					has_active_production_method = pm_styrene_butadiene
					has_active_production_method = pm_silicone
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_synthetics_plant_rubber_count add = prev.level } }
		}
	}
}

gbr_start_rationing_steel = {
	# Check that the UK is rationing & not already rationing steel
	# Determine whether steel needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:steel = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:steel = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_steel }
		}
		set_variable = gbr_rationing_steel
		gbr_set_steel_variables = yes
		post_notification = gbr_steel_rationing_started_message
		set_variable = { name = gbr_steelworks_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_steelworks
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_steelworks_count add = prev.level } }
		}
	}
}

gbr_start_rationing_sugar = {
	# Check that the UK is rationing & not already rationing sugar
	# Determine whether sugar needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:sugar = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:sugar = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_sugar }
		}
		set_variable = gbr_rationing_sugar
		gbr_set_sugar_variables = yes
		post_notification = gbr_sugar_rationing_started_message
		set_variable = { name = gbr_sugar_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_sugar_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_sugar_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_rye_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				has_active_production_method = pm_sugar_beets
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				has_active_production_method = pm_corn_syrup
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_count add = prev.level } }
		}
	}
}

gbr_start_rationing_tea = {
	# Check that the UK is rationing & not already rationing tea
	# Determine whether tea needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:tea = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:tea = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_tea }
		}
		set_variable = gbr_rationing_tea
		gbr_set_tea_variables = yes
		post_notification = gbr_tea_rationing_started_message
		set_variable = { name = gbr_tea_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_tea_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tea_plantation_count add = prev.level } }
		}
	}
}

gbr_start_rationing_tobacco = {
	# Check that the UK is rationing & not already rationing tobacco
	# Determine whether tobacco needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:tobacco = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_tobacco }
		}
		set_variable = gbr_rationing_tobacco
		gbr_set_tobacco_variables = yes
		post_notification = gbr_tobacco_rationing_started_message
		set_variable = { name = gbr_tobacco_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_tobacco_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tobacco_plantation_count add = prev.level } }
		}
	}
}

gbr_start_rationing_tools = {
	# Check that the UK is rationing & not already rationing tools
	# Determine whether tools needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:tools = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:tools = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_tools }
		}
		set_variable = gbr_rationing_tools
		gbr_set_tools_variables = yes
		post_notification = gbr_tools_rationing_started_message
		set_variable = { name = gbr_tool_manufactories_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_tool_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tool_manufactories_count add = prev.level } }
		}
	}
}

gbr_start_rationing_wine = {
	# Check that the UK is rationing & not already rationing wine
	# Determine whether wine needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:wine = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:wine = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_wine }
		}
		set_variable = gbr_rationing_wine
		gbr_set_wine_variables = yes
		post_notification = gbr_wine_rationing_started_message
		set_variable = { name = gbr_distilleries_wine_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_distilleries
				OR = {
					has_active_production_method = pm_basic_distillation_wine
					has_active_production_method = pm_patent_stills_wine
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_distilleries_wine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_wood = {
	# Check that the UK is rationing & not already rationing wood
	# Determine whether wood needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:wood = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:wood = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_wood }
		}
		set_variable = gbr_rationing_wood
		gbr_set_wood_variables = yes
		post_notification = gbr_wood_rationing_started_message
		set_variable = { name = gbr_logging_camp_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_logging_camp
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_logging_camp_count add = prev.level } }
		}
	}
}

gbr_end_rationing_aluminum = {
	# Logic
		# Determining when Rationing should end is an abstraction
		# First test is to see if the consumption of a good has dropped below the required consumption amount to start rationing
		# If good consumption has dropped below the required consumption amount, rationing for that good ends due to their being insufficient demand to require rationing the good
		# If there is sufficient good demand, then rationing will only end if the country can ensure that the progress_next variable is negative for a set amount of time
		# This amount of time is dependent on how much progress there currently is, as the idea is that it takes longer to prove that rationing is no longer needed
		# This needs to be done continuously, so if the progress_next is negative, the count increases by 1, but if the country has even 1 month where progress_next is positive, then the count resets to 0
		# If the count reaches the target value, then rationing will end for that good
	
	# Check to see if rationing for aluminum can be ended
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_consumption < 10 } } }
		post_notification = gbr_aluminum_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_aluminum
		gbr_remove_aluminum_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_aluminum_progress < 0
			var:gbr_ending_aluminum_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_aluminum_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_aluminum_progress < 0 }
			var:gbr_ending_aluminum_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_aluminum_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_aluminum_progress < 0
			var:gbr_ending_aluminum_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_aluminum_rationing_ended_message
		remove_variable = gbr_rationing_aluminum
		gbr_remove_aluminum_variables = yes
	}
}

gbr_end_rationing_bauxite = {
	# Check to see if rationing for bauxite can be ended
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_consumption < 10 } } }
		post_notification = gbr_bauxite_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_bauxite
		gbr_remove_bauxite_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_bauxite_progress < 0
			var:gbr_ending_bauxite_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_bauxite_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_bauxite_progress < 0 }
			var:gbr_ending_bauxite_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_bauxite_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_bauxite_progress < 0
			var:gbr_ending_bauxite_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_bauxite_rationing_ended_message
		remove_variable = gbr_rationing_bauxite
		gbr_remove_bauxite_variables = yes
	}
}

gbr_end_rationing_fertilizer = {
	# Check to see if rationing for fertilizer can be ended
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_consumption < 10 } } }
		post_notification = gbr_fertilizer_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_fertilizer
		gbr_remove_fertilizer_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fertilizer_progress < 0
			var:gbr_ending_fertilizer_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_fertilizer_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_fertilizer_progress < 0 }
			var:gbr_ending_fertilizer_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_fertilizer_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_fertilizer_progress < 0
			var:gbr_ending_fertilizer_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_fertilizer_rationing_ended_message
		remove_variable = gbr_rationing_fertilizer
		gbr_remove_fertilizer_variables = yes
	}
}

gbr_end_rationing_clothes = {
	# Check to see if rationing for clothes can be ended
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_consumption < 10 } } }
		post_notification = gbr_clothes_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_clothes
		gbr_remove_clothes_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_clothes_progress < 0
			var:gbr_ending_clothes_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_clothes_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_clothes_progress < 0 }
			var:gbr_ending_clothes_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_clothes_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_clothes_progress < 0
			var:gbr_ending_clothes_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_clothes_rationing_ended_message
		remove_variable = gbr_rationing_clothes
		gbr_remove_clothes_variables = yes
	}
}

gbr_end_rationing_coal = {
	# Check to see if rationing for coal can be ended
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_consumption < 10 } } }
		post_notification = gbr_coal_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_coal
		gbr_remove_coal_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_coal_progress < 0
			var:gbr_ending_coal_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_coal_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_coal_progress < 0 }
			var:gbr_ending_coal_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_coal_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_coal_progress < 0
			var:gbr_ending_coal_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_coal_rationing_ended_message
		remove_variable = gbr_rationing_coal
		gbr_remove_coal_variables = yes
	}
}

gbr_end_rationing_coffee = {
	# Check to see if rationing for coffee can be ended
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_consumption < 10 } } }
		post_notification = gbr_coffee_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_coffee
		gbr_remove_coffee_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_coffee_progress < 0
			var:gbr_ending_coffee_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_coffee_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_coffee_progress < 0 }
			var:gbr_ending_coffee_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_coffee_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_coffee_progress < 0
			var:gbr_ending_coffee_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_coffee_rationing_ended_message
		remove_variable = gbr_rationing_coffee
		gbr_remove_coffee_variables = yes
	}
}

gbr_end_rationing_copper = {
	# Check to see if rationing for copper can be ended
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_consumption < 10 } } }
		post_notification = gbr_copper_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_copper
		gbr_remove_copper_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_copper_progress < 0
			var:gbr_ending_copper_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_copper_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_copper_progress < 0 }
			var:gbr_ending_copper_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_copper_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_copper_progress < 0
			var:gbr_ending_copper_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_copper_rationing_ended_message
		remove_variable = gbr_rationing_copper
		gbr_remove_copper_variables = yes
	}
}

gbr_end_rationing_engines = {
	# Check to see if rationing for engines can be ended
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_consumption < 10 } } }
		post_notification = gbr_engines_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_engines
		gbr_remove_engines_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_engines_progress < 0
			var:gbr_ending_engines_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_engines_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_engines_progress < 0 }
			var:gbr_ending_engines_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_engines_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_engines_progress < 0
			var:gbr_ending_engines_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_engines_rationing_ended_message
		remove_variable = gbr_rationing_engines
		gbr_remove_engines_variables = yes
	}
}

gbr_end_rationing_explosives = {
	# Check to see if rationing for explosives can be ended
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_consumption < 10 } } }
		post_notification = gbr_explosives_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_explosives
		gbr_remove_explosives_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_explosives_progress < 0
			var:gbr_ending_explosives_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_explosives_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_explosives_progress < 0 }
			var:gbr_ending_explosives_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_explosives_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_explosives_progress < 0
			var:gbr_ending_explosives_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_explosives_rationing_ended_message
		remove_variable = gbr_rationing_explosives
		gbr_remove_explosives_variables = yes
	}
}

gbr_end_rationing_fabric = {
	# Check to see if rationing for fabric can be ended
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_consumption < 10 } } }
		post_notification = gbr_fabric_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_fabric
		gbr_remove_fabric_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fabric_progress < 0
			var:gbr_ending_fabric_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_fabric_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_fabric_progress < 0 }
			var:gbr_ending_fabric_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_fabric_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_fabric_progress < 0
			var:gbr_ending_fabric_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_fabric_rationing_ended_message
		remove_variable = gbr_rationing_fabric
		gbr_remove_fabric_variables = yes
	}
}

gbr_end_rationing_fish = {
	# Check to see if rationing for fish can be ended
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_consumption < 10 } } }
		post_notification = gbr_fish_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_fish
		gbr_remove_fish_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fish_progress < 0
			var:gbr_ending_fish_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_fish_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_fish_progress < 0 }
			var:gbr_ending_fish_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_fish_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_fish_progress < 0
			var:gbr_ending_fish_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_fish_rationing_ended_message
		remove_variable = gbr_rationing_fish
		gbr_remove_fish_variables = yes
	}
}

gbr_end_rationing_fruit = {
	# Check to see if rationing for fruit can be ended
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_consumption < 10 } } }
		post_notification = gbr_fruit_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_fruit
		gbr_remove_fruit_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fruit_progress < 0
			var:gbr_ending_fruit_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_fruit_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_fruit_progress < 0 }
			var:gbr_ending_fruit_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_fruit_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_fruit_progress < 0
			var:gbr_ending_fruit_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_fruit_rationing_ended_message
		remove_variable = gbr_rationing_fruit
		gbr_remove_fruit_variables = yes
	}
}

gbr_end_rationing_glass = {
	# Check to see if rationing for glass can be ended
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_consumption < 10 } } }
		post_notification = gbr_glass_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_glass
		gbr_remove_glass_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_glass_progress < 0
			var:gbr_ending_glass_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_glass_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_glass_progress < 0 }
			var:gbr_ending_glass_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_glass_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_glass_progress < 0
			var:gbr_ending_glass_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_glass_rationing_ended_message
		remove_variable = gbr_rationing_glass
		gbr_remove_glass_variables = yes
	}
}

gbr_end_rationing_grain = {
	# Check to see if rationing for grain can be ended
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_consumption < 10 } } }
		post_notification = gbr_grain_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_grain
		gbr_remove_grain_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_grain_progress < 0
			var:gbr_ending_grain_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_grain_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_grain_progress < 0 }
			var:gbr_ending_grain_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_grain_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_grain_progress < 0
			var:gbr_ending_grain_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_grain_rationing_ended_message
		remove_variable = gbr_rationing_grain
		gbr_remove_grain_variables = yes
	}
}

gbr_end_rationing_groceries = {
	# Check to see if rationing for groceries can be ended
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_consumption < 10 } } }
		post_notification = gbr_groceries_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_groceries
		gbr_remove_groceries_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_groceries_progress < 0
			var:gbr_ending_groceries_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_groceries_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_groceries_progress < 0 }
			var:gbr_ending_groceries_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_groceries_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_groceries_progress < 0
			var:gbr_ending_groceries_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_groceries_rationing_ended_message
		remove_variable = gbr_rationing_groceries
		gbr_remove_groceries_variables = yes
	}
}

gbr_end_rationing_high_quality_fabric = {
	# Check to see if rationing for high quality fabric can be ended
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_consumption < 10 } } }
		post_notification = gbr_high_quality_fabric_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_high_quality_fabric
		gbr_remove_high_quality_fabric_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_high_quality_fabric_progress < 0
			var:gbr_ending_high_quality_fabric_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_high_quality_fabric_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_high_quality_fabric_progress < 0 }
			var:gbr_ending_high_quality_fabric_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_high_quality_fabric_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_high_quality_fabric_progress < 0
			var:gbr_ending_high_quality_fabric_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_high_quality_fabric_rationing_ended_message
		remove_variable = gbr_rationing_high_quality_fabric
		gbr_remove_high_quality_fabric_variables = yes
	}
}

gbr_end_rationing_iron = {
	# Check to see if rationing for iron can be ended
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_consumption < 10 } } }
		post_notification = gbr_iron_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_iron
		gbr_remove_iron_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_iron_progress < 0
			var:gbr_ending_iron_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_iron_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_iron_progress < 0 }
			var:gbr_ending_iron_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_iron_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_iron_progress < 0
			var:gbr_ending_iron_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_iron_rationing_ended_message
		remove_variable = gbr_rationing_iron
		gbr_remove_iron_variables = yes
	}
}

gbr_end_rationing_lead = {
	# Check to see if rationing for lead can be ended
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_consumption < 10 } } }
		post_notification = gbr_lead_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_lead
		gbr_remove_lead_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_lead_progress < 0
			var:gbr_ending_lead_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_lead_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_lead_progress < 0 }
			var:gbr_ending_lead_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_lead_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_lead_progress < 0
			var:gbr_ending_lead_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_lead_rationing_ended_message
		remove_variable = gbr_rationing_lead
		gbr_remove_lead_variables = yes
	}
}

gbr_end_rationing_liquor = {
	# Check to see if rationing for liquor can be ended
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_consumption < 10 } } }
		post_notification = gbr_liquor_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_liquor
		gbr_remove_liquor_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_liquor_progress < 0
			var:gbr_ending_liquor_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_liquor_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_liquor_progress < 0 }
			var:gbr_ending_liquor_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_liquor_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_liquor_progress < 0
			var:gbr_ending_liquor_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_liquor_rationing_ended_message
		remove_variable = gbr_rationing_liquor
		gbr_remove_liquor_variables = yes
	}
}

gbr_end_rationing_meat = {
	# Check to see if rationing for meat can be ended
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_consumption < 10 } } }
		post_notification = gbr_meat_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_meat
		gbr_remove_meat_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_meat_progress < 0
			var:gbr_ending_meat_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_meat_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_meat_progress < 0 }
			var:gbr_ending_meat_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_meat_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_meat_progress < 0
			var:gbr_ending_meat_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_meat_rationing_ended_message
		remove_variable = gbr_rationing_meat
		gbr_remove_meat_variables = yes
	}
}

gbr_end_rationing_oil = {
	# Check to see if rationing for oil can be ended
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_consumption < 10 } } }
		post_notification = gbr_oil_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_oil
		gbr_remove_oil_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_oil_progress < 0
			var:gbr_ending_oil_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_oil_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_oil_progress < 0 }
			var:gbr_ending_oil_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_oil_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_oil_progress < 0
			var:gbr_ending_oil_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_oil_rationing_ended_message
		remove_variable = gbr_rationing_oil
		gbr_remove_oil_variables = yes
	}
}

gbr_end_rationing_opium = {
	# Check to see if rationing for opium can be ended
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_consumption < 10 } } }
		post_notification = gbr_opium_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_opium
		gbr_remove_opium_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_opium_progress < 0
			var:gbr_ending_opium_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_opium_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_opium_progress < 0 }
			var:gbr_ending_opium_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_opium_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_opium_progress < 0
			var:gbr_ending_opium_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_opium_rationing_ended_message
		remove_variable = gbr_rationing_opium
		gbr_remove_opium_variables = yes
	}
}

gbr_end_rationing_paper = {
	# Check to see if rationing for paper can be ended
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_consumption < 10 } } }
		post_notification = gbr_paper_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_paper
		gbr_remove_paper_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_paper_progress < 0
			var:gbr_ending_paper_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_paper_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_paper_progress < 0 }
			var:gbr_ending_paper_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_paper_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_paper_progress < 0
			var:gbr_ending_paper_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_paper_rationing_ended_message
		remove_variable = gbr_rationing_paper
		gbr_remove_paper_variables = yes
	}
}

gbr_end_rationing_pharmaceuticals = {
	# Check to see if rationing for pharmaceuticals can be ended
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_consumption < 10 } } }
		post_notification = gbr_pharmaceuticals_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_pharmaceuticals
		gbr_remove_pharmaceuticals_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_pharmaceuticals_progress < 0
			var:gbr_ending_pharmaceuticals_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_pharmaceuticals_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_pharmaceuticals_progress < 0 }
			var:gbr_ending_pharmaceuticals_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_pharmaceuticals_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_pharmaceuticals_progress < 0
			var:gbr_ending_pharmaceuticals_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_pharmaceuticals_rationing_ended_message
		remove_variable = gbr_rationing_pharmaceuticals
		gbr_remove_pharmaceuticals_variables = yes
	}
}

gbr_end_rationing_phosphorus = {
	# Check to see if rationing for phosphorus can be ended
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_consumption < 10 } } }
		post_notification = gbr_phosphorus_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_phosphorus
		gbr_remove_phosphorus_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_phosphorus_progress < 0
			var:gbr_ending_phosphorus_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_phosphorus_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_phosphorus_progress < 0 }
			var:gbr_ending_phosphorus_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_phosphorus_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_phosphorus_progress < 0
			var:gbr_ending_phosphorus_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_phosphorus_rationing_ended_message
		remove_variable = gbr_rationing_phosphorus
		gbr_remove_phosphorus_variables = yes
	}
}

gbr_end_rationing_plastics = {
	# Check to see if rationing for plastics can be ended
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_consumption < 10 } } }
		post_notification = gbr_plastics_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_plastics
		gbr_remove_plastics_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_plastics_progress < 0
			var:gbr_ending_plastics_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_plastics_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_plastics_progress < 0 }
			var:gbr_ending_plastics_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_plastics_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_plastics_progress < 0
			var:gbr_ending_plastics_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_plastics_rationing_ended_message
		remove_variable = gbr_rationing_plastics
		gbr_remove_plastics_variables = yes
	}
}

gbr_end_rationing_refined_fuel = {
	# Check to see if rationing for refined fuel can be ended
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_consumption < 10 } } }
		post_notification = gbr_refined_fuel_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_refined_fuel
		gbr_remove_refined_fuel_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_refined_fuel_progress < 0
			var:gbr_ending_refined_fuel_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_refined_fuel_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_refined_fuel_progress < 0 }
			var:gbr_ending_refined_fuel_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_refined_fuel_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_refined_fuel_progress < 0
			var:gbr_ending_refined_fuel_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_refined_fuel_rationing_ended_message
		remove_variable = gbr_rationing_refined_fuel
		gbr_remove_refined_fuel_variables = yes
	}
}

gbr_end_rationing_rubber = {
	# Check to see if rationing for rubber can be ended
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_consumption < 10 } } }
		post_notification = gbr_rubber_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_rubber
		gbr_remove_rubber_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_rubber_progress < 0
			var:gbr_ending_rubber_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_rubber_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_rubber_progress < 0 }
			var:gbr_ending_rubber_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_rubber_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_rubber_progress < 0
			var:gbr_ending_rubber_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_rubber_rationing_ended_message
		remove_variable = gbr_rationing_rubber
		gbr_remove_rubber_variables = yes
	}
}

gbr_end_rationing_steel = {
	# Check to see if rationing for steel can be ended
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_consumption < 10 } } }
		post_notification = gbr_steel_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_steel
		gbr_remove_steel_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_steel_progress < 0
			var:gbr_ending_steel_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_steel_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_steel_progress < 0 }
			var:gbr_ending_steel_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_steel_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_steel_progress < 0
			var:gbr_ending_steel_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_steel_rationing_ended_message
		remove_variable = gbr_rationing_steel
		gbr_remove_steel_variables = yes
	}
}

gbr_end_rationing_sugar = {
	# Check to see if rationing for sugar can be ended
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_consumption < 10 } } }
		post_notification = gbr_sugar_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_sugar
		gbr_remove_sugar_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_sugar_progress < 0
			var:gbr_ending_sugar_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_sugar_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_sugar_progress < 0 }
			var:gbr_ending_sugar_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_sugar_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_sugar_progress < 0
			var:gbr_ending_sugar_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_sugar_rationing_ended_message
		remove_variable = gbr_rationing_sugar
		gbr_remove_sugar_variables = yes
	}
}

gbr_end_rationing_tea = {
	# Check to see if rationing for tea can be ended
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_consumption < 10 } } }
		post_notification = gbr_tea_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_tea
		gbr_remove_tea_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tea_progress < 0
			var:gbr_ending_tea_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_tea_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_tea_progress < 0 }
			var:gbr_ending_tea_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_tea_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_tea_progress < 0
			var:gbr_ending_tea_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_tea_rationing_ended_message
		remove_variable = gbr_rationing_tea
		gbr_remove_tea_variables = yes
	}
}

gbr_end_rationing_tobacco = {
	# Check to see if rationing for tobacco can be ended
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_consumption < 10 } } }
		post_notification = gbr_tobacco_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_tobacco
		gbr_remove_tobacco_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tobacco_progress < 0
			var:gbr_ending_tobacco_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_tobacco_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_tobacco_progress < 0 }
			var:gbr_ending_tobacco_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_tobacco_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_tobacco_progress < 0
			var:gbr_ending_tobacco_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_tobacco_rationing_ended_message
		remove_variable = gbr_rationing_tobacco
		gbr_remove_tobacco_variables = yes
	}
}

gbr_end_rationing_tools = {
	# Check to see if rationing for tools can be ended
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_consumption < 10 } } }
		post_notification = gbr_tools_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_tools
		gbr_remove_tools_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tools_progress < 0
			var:gbr_ending_tools_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_tools_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_tools_progress < 0 }
			var:gbr_ending_tools_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_tools_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_tools_progress < 0
			var:gbr_ending_tools_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_tools_rationing_ended_message
		remove_variable = gbr_rationing_tools
		gbr_remove_tools_variables = yes
	}
}

gbr_end_rationing_wine = {
	# Check to see if rationing for wine can be ended
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_consumption < 10 } } }
		post_notification = gbr_wine_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_wine
		gbr_remove_wine_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_wine_progress < 0
			var:gbr_ending_wine_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_wine_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_wine_progress < 0 }
			var:gbr_ending_wine_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_wine_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_wine_progress < 0
			var:gbr_ending_wine_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_wine_rationing_ended_message
		remove_variable = gbr_rationing_wine
		gbr_remove_wine_variables = yes
	}
}

gbr_end_rationing_wood = {
	# Check to see if rationing for wood can be ended
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_consumption < 10 } } }
		post_notification = gbr_wood_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_wood
		gbr_remove_wood_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_wood_progress < 0
			var:gbr_ending_wood_rationing < var:gbr_ending_rationing_target_variable
		}
		change_variable = { name = gbr_ending_wood_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_wood_progress < 0 }
			var:gbr_ending_wood_rationing <= var:gbr_ending_rationing_target_variable
		}
		set_variable = { name = gbr_ending_wood_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_wood_progress < 0
			var:gbr_ending_wood_rationing = var:gbr_ending_rationing_target_variable
		}
		post_notification = gbr_wood_rationing_ended_message
		remove_variable = gbr_rationing_wood
		gbr_remove_wood_variables = yes
	}
}

gbr_rationing_required_check = {
	# Logic
		# This function is to determine whether a good needs to be checked on whether it should start being rationed or have rationing end
		# If the good is being rationed, it calls the end rationing function for that good
		# If the good isn't being rationed, it calls the start rationing function for that good
		# This is done monthly
	
	if = {
		limit = { has_variable = gbr_rationing_aluminum }
		gbr_end_rationing_aluminum = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_aluminum } }
		gbr_start_rationing_aluminum = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_bauxite }
		gbr_end_rationing_bauxite = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_bauxite } }
		gbr_start_rationing_bauxite = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_fertilizer }
		gbr_end_rationing_fertilizer = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_fertilizer } }
		gbr_start_rationing_fertilizer = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_clothes }
		gbr_end_rationing_clothes = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_clothes } }
		gbr_start_rationing_clothes = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_coal }
		gbr_end_rationing_coal = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_coal } }
		gbr_start_rationing_coal = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_coffee }
		gbr_end_rationing_coffee = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_coffee } }
		gbr_start_rationing_coffee = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_copper }
		gbr_end_rationing_copper = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_copper } }
		gbr_start_rationing_copper = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_engines }
		gbr_end_rationing_engines = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_engines } }
		gbr_start_rationing_engines = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_explosives }
		gbr_end_rationing_explosives = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_explosives } }
		gbr_start_rationing_explosives = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_fabric }
		gbr_end_rationing_fabric = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_fabric } }
		gbr_start_rationing_fabric = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_fish }
		gbr_end_rationing_fish = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_fish } }
		gbr_start_rationing_fish = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_fruit }
		gbr_end_rationing_fruit = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_fruit } }
		gbr_start_rationing_fruit = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_glass }
		gbr_end_rationing_glass = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_glass } }
		gbr_start_rationing_glass = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_grain }
		gbr_end_rationing_grain = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_grain } }
		gbr_start_rationing_grain = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_groceries }
		gbr_end_rationing_groceries = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_groceries } }
		gbr_start_rationing_groceries = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_high_quality_fabric }
		gbr_end_rationing_high_quality_fabric = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_high_quality_fabric } }
		gbr_start_rationing_high_quality_fabric = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_iron }
		gbr_end_rationing_iron = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_iron } }
		gbr_start_rationing_iron = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_lead }
		gbr_end_rationing_lead = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_lead } }
		gbr_start_rationing_lead = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_liquor }
		gbr_end_rationing_liquor = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_liquor } }
		gbr_start_rationing_liquor = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_meat }
		gbr_end_rationing_meat = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_meat } }
		gbr_start_rationing_meat = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_oil }
		gbr_end_rationing_oil = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_oil } }
		gbr_start_rationing_oil = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_opium }
		gbr_end_rationing_opium = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_opium } }
		gbr_start_rationing_opium = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_paper }
		gbr_end_rationing_paper = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_paper } }
		gbr_start_rationing_paper = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_pharmaceuticals }
		gbr_end_rationing_pharmaceuticals = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_pharmaceuticals } }
		gbr_start_rationing_pharmaceuticals = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_phosphorus }
		gbr_end_rationing_phosphorus = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_phosphorus } }
		gbr_start_rationing_phosphorus = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_plastics }
		gbr_end_rationing_plastics = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_plastics } }
		gbr_start_rationing_plastics = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_refined_fuel }
		gbr_end_rationing_refined_fuel = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_refined_fuel } }
		gbr_start_rationing_refined_fuel = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_rubber }
		gbr_end_rationing_rubber = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_rubber } }
		gbr_start_rationing_rubber = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_steel }
		gbr_end_rationing_steel = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_steel } }
		gbr_start_rationing_steel = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_sugar }
		gbr_end_rationing_sugar = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_sugar } }
		gbr_start_rationing_sugar = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_tea }
		gbr_end_rationing_tea = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_tea } }
		gbr_start_rationing_tea = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_tobacco }
		gbr_end_rationing_tobacco = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_tobacco } }
		gbr_start_rationing_tobacco = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_tools }
		gbr_end_rationing_tools = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_tools } }
		gbr_start_rationing_tools = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_wine }
		gbr_end_rationing_wine = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_wine } }
		gbr_start_rationing_wine = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_wood }
		gbr_end_rationing_wood = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_wood } }
		gbr_start_rationing_wood = yes
	}
}

gbr_forced_devaluation_check = {
	# Logic
		# This function is called every month by the journal
		# It checks to see if the currency should be forcibly devalued to reset the demand pressure
		# The player/AI has the option of devaluing the currency when the demand pressure is 10 or above
		# But some random chance helps keep things interesting
		# Likelihood of having the currency forcibly devalued increases as the demand pressure increases
		# If the demand pressure reaches 50, then the currency is forcibly devalued, no random chance, it happens
	
	if = {
		limit = {
			inflation_value >= 10
			inflation_value < 20
		}
		random_list = {
			99 = {  }
			1 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
	else_if = {
		limit = {
			inflation_value >= 20
			inflation_value < 30
		}
		random_list = {
			98 = {  }
			2 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
	else_if = {
		limit = {
			inflation_value >= 30
			inflation_value < 40
		}
		random_list = {
			96 = {  }
			4 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
	else_if = {
		limit = {
			inflation_value >= 40
			inflation_value < 50
		}
		random_list = {
			92 = {  }
			8 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
	else_if = {
		limit = { inflation_value >= 50 }
		random_list = {
			90 = {  }
			10 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
}

gbr_pound_sterling_calculation = {
	# logic
		# Logic to determine what the new value of the pound sterling would be if the pound sterling is devalued
		# For use in the "Devalue the Pound Sterling" scripted button localization
	
	# Current Value
	set_variable = { name = gbr_pound_sterling_current value = global_var:currency_gbp_v }
	
	# 5% Devaluation
	set_variable = { name = gbr_pound_sterling_5 value = global_var:currency_gbp_v }
	change_variable = { name = gbr_pound_sterling_5 multiply = 0.95 }
	
	# 10% Devaluation
	set_variable = { name = gbr_pound_sterling_10 value = global_var:currency_gbp_v }
	change_variable = { name = gbr_pound_sterling_10 multiply = 0.9 }
	
	# 15% Devaluation
	set_variable = { name = gbr_pound_sterling_15 value = global_var:currency_gbp_v }
	change_variable = { name = gbr_pound_sterling_15 multiply = 0.85 }
	
	# 20% Devaluation
	set_variable = { name = gbr_pound_sterling_20 value = global_var:currency_gbp_v }
	change_variable = { name = gbr_pound_sterling_20 multiply = 0.8 }
	
	# 25% Devaluation
	set_variable = { name = gbr_pound_sterling_25 value = global_var:currency_gbp_v }
	change_variable = { name = gbr_pound_sterling_25 multiply = 0.75 }
	
	# 30% Devaluation
	set_variable = { name = gbr_pound_sterling_30 value = global_var:currency_gbp_v }
	change_variable = { name = gbr_pound_sterling_30 multiply = 0.7 }
}

gbr_rationing_demand_pressure_change = {
	# Logic
		# Determing the demand pressure increase is based on the progress for each good
		# The higher the progress, the more demand pressure increases
		# The lower the progress, the more demand pressure decreases
	
	set_variable = { name = gbr_added_demand_pressure value = 0 }
	if = {
		limit = { has_variable = gbr_rationing_aluminum }
		set_variable = { name = gbr_rationing_aluminum_demand_pressure value = var:gbr_aluminum_progress }
		change_variable = { name = gbr_rationing_aluminum_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_aluminum_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_bauxite }
		set_variable = { name = gbr_rationing_bauxite_demand_pressure value = var:gbr_bauxite_progress }
		change_variable = { name = gbr_rationing_bauxite_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_bauxite_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_fertilizer }
		set_variable = { name = gbr_rationing_fertilizer_demand_pressure value = var:gbr_fertilizer_progress }
		change_variable = { name = gbr_rationing_fertilizer_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_fertilizer_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_clothes }
		set_variable = { name = gbr_rationing_clothes_demand_pressure value = var:gbr_clothes_progress }
		change_variable = { name = gbr_rationing_clothes_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_clothes_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_coal }
		set_variable = { name = gbr_rationing_coal_demand_pressure value = var:gbr_coal_progress }
		change_variable = { name = gbr_rationing_coal_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_coal_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_coffee }
		set_variable = { name = gbr_rationing_coffee_demand_pressure value = var:gbr_coffee_progress }
		change_variable = { name = gbr_rationing_coffee_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_coffee_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_copper }
		set_variable = { name = gbr_rationing_copper_demand_pressure value = var:gbr_copper_progress }
		change_variable = { name = gbr_rationing_copper_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_copper_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_engines }
		set_variable = { name = gbr_rationing_engines_demand_pressure value = var:gbr_engines_progress }
		change_variable = { name = gbr_rationing_engines_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_engines_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_explosives }
		set_variable = { name = gbr_rationing_explosives_demand_pressure value = var:gbr_explosives_progress }
		change_variable = { name = gbr_rationing_explosives_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_explosives_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_fabric }
		set_variable = { name = gbr_rationing_fabric_demand_pressure value = var:gbr_fabric_progress }
		change_variable = { name = gbr_rationing_fabric_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_fabric_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_fish }
		set_variable = { name = gbr_rationing_fish_demand_pressure value = var:gbr_fish_progress }
		change_variable = { name = gbr_rationing_fish_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_fish_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_fruit }
		set_variable = { name = gbr_rationing_fruit_demand_pressure value = var:gbr_fruit_progress }
		change_variable = { name = gbr_rationing_fruit_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_fruit_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_glass }
		set_variable = { name = gbr_rationing_glass_demand_pressure value = var:gbr_glass_progress }
		change_variable = { name = gbr_rationing_glass_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_glass_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_grain }
		set_variable = { name = gbr_rationing_grain_demand_pressure value = var:gbr_grain_progress }
		change_variable = { name = gbr_rationing_grain_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_grain_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_groceries }
		set_variable = { name = gbr_rationing_groceries_demand_pressure value = var:gbr_groceries_progress }
		change_variable = { name = gbr_rationing_groceries_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_groceries_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_high_quality_fabric }
		set_variable = { name = gbr_rationing_high_quality_fabric_demand_pressure value = var:gbr_high_quality_fabric_progress }
		change_variable = { name = gbr_rationing_high_quality_fabric_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_high_quality_fabric_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_iron }
		set_variable = { name = gbr_rationing_iron_demand_pressure value = var:gbr_iron_progress }
		change_variable = { name = gbr_rationing_iron_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_iron_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_lead }
		set_variable = { name = gbr_rationing_lead_demand_pressure value = var:gbr_lead_progress }
		change_variable = { name = gbr_rationing_lead_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_lead_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_liquor }
		set_variable = { name = gbr_rationing_liquor_demand_pressure value = var:gbr_liquor_progress }
		change_variable = { name = gbr_rationing_liquor_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_liquor_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_meat }
		set_variable = { name = gbr_rationing_meat_demand_pressure value = var:gbr_meat_progress }
		change_variable = { name = gbr_rationing_meat_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_meat_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_oil }
		set_variable = { name = gbr_rationing_oil_demand_pressure value = var:gbr_oil_progress }
		change_variable = { name = gbr_rationing_oil_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_oil_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_opium }
		set_variable = { name = gbr_rationing_opium_demand_pressure value = var:gbr_opium_progress }
		change_variable = { name = gbr_rationing_opium_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_opium_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_paper }
		set_variable = { name = gbr_rationing_paper_demand_pressure value = var:gbr_paper_progress }
		change_variable = { name = gbr_rationing_paper_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_paper_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_pharmaceuticals }
		set_variable = { name = gbr_rationing_pharmaceuticals_demand_pressure value = var:gbr_pharmaceuticals_progress }
		change_variable = { name = gbr_rationing_pharmaceuticals_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_pharmaceuticals_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_phosphorus }
		set_variable = { name = gbr_rationing_phosphorus_demand_pressure value = var:gbr_phosphorus_progress }
		change_variable = { name = gbr_rationing_phosphorus_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_phosphorus_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_plastics }
		set_variable = { name = gbr_rationing_plastics_demand_pressure value = var:gbr_plastics_progress }
		change_variable = { name = gbr_rationing_plastics_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_plastics_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_refined_fuel }
		set_variable = { name = gbr_rationing_refined_fuel_demand_pressure value = var:gbr_refined_fuel_progress }
		change_variable = { name = gbr_rationing_refined_fuel_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_refined_fuel_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_rubber }
		set_variable = { name = gbr_rationing_rubber_demand_pressure value = var:gbr_rubber_progress }
		change_variable = { name = gbr_rationing_rubber_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_rubber_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_steel }
		set_variable = { name = gbr_rationing_steel_demand_pressure value = var:gbr_steel_progress }
		change_variable = { name = gbr_rationing_steel_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_steel_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_sugar }
		set_variable = { name = gbr_rationing_sugar_demand_pressure value = var:gbr_sugar_progress }
		change_variable = { name = gbr_rationing_sugar_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_sugar_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_tea }
		set_variable = { name = gbr_rationing_tea_demand_pressure value = var:gbr_tea_progress }
		change_variable = { name = gbr_rationing_tea_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_tea_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_tobacco }
		set_variable = { name = gbr_rationing_tobacco_demand_pressure value = var:gbr_tobacco_progress }
		change_variable = { name = gbr_rationing_tobacco_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_tobacco_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_tools }
		set_variable = { name = gbr_rationing_tools_demand_pressure value = var:gbr_tools_progress }
		change_variable = { name = gbr_rationing_tools_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_tools_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_wine }
		set_variable = { name = gbr_rationing_wine_demand_pressure value = var:gbr_wine_progress }
		change_variable = { name = gbr_rationing_wine_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_wine_demand_pressure }
	}
	if = {
		limit = { has_variable = gbr_rationing_wood }
		set_variable = { name = gbr_rationing_wood_demand_pressure value = var:gbr_wood_progress }
		change_variable = { name = gbr_rationing_wood_demand_pressure divide = 180 }
		change_variable = { name = gbr_added_demand_pressure add = var:gbr_rationing_wood_demand_pressure }
	}
}

gbr_number_of_goods_rationed = {
	# Logic
		# For the journal entry to track the progress of rationing, it needs to know how many goods out of a possible 35 are being rationed
		# The logic is in reverse, if a good isn't being rationed, then it adds 1 to the number of goods variable
		# This allows the journal entry progress bar to show that less goods being rationed = rationing is being completed
		# This is done monthly
	
	set_variable = { name = gbr_rationing_number_of_goods value = 0 }
	if = { # Aluminum
		limit = { NOT = { has_variable = gbr_rationing_aluminum } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Bauxite
		limit = { NOT = { has_variable = gbr_rationing_bauxite } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Fertilizer ( Chemicals }
		limit = { NOT = { has_variable = gbr_rationing_fertilizer } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Clothes
		limit = { NOT = { has_variable = gbr_rationing_clothes } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Coal
		limit = { NOT = { has_variable = gbr_rationing_coal } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Coffee
		limit = { NOT = { has_variable = gbr_rationing_coffee } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Copper
		limit = { NOT = { has_variable = gbr_rationing_copper } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Engines
		limit = { NOT = { has_variable = gbr_rationing_engines } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Explosives
		limit = { NOT = { has_variable = gbr_rationing_explosives } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Fabric
		limit = { NOT = { has_variable = gbr_rationing_fabric } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Fish
		limit = { NOT = { has_variable = gbr_rationing_fish } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Fruit
		limit = { NOT = { has_variable = gbr_rationing_fruit } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Glass
		limit = { NOT = { has_variable = gbr_rationing_glass } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Grain
		limit = { NOT = { has_variable = gbr_rationing_grain } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Groceries
		limit = { NOT = { has_variable = gbr_rationing_groceries } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # High Quality Fabric
		limit = { NOT = { has_variable = gbr_rationing_high_quality_fabric } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Iron
		limit = { NOT = { has_variable = gbr_rationing_iron } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Lead
		limit = { NOT = { has_variable = gbr_rationing_lead } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Liquor
		limit = { NOT = { has_variable = gbr_rationing_liquor } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Meat
		limit = { NOT = { has_variable = gbr_rationing_meat } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Oil
		limit = { NOT = { has_variable = gbr_rationing_oil } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Opium
		limit = { NOT = { has_variable = gbr_rationing_opium } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Paper
		limit = { NOT = { has_variable = gbr_rationing_paper } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Pharmaceuticals
		limit = { NOT = { has_variable = gbr_rationing_pharmaceuticals } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Phosphorus
		limit = { NOT = { has_variable = gbr_rationing_phosphorus } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Plastics
		limit = { NOT = { has_variable = gbr_rationing_plastics } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Refined Fuel
		limit = { NOT = { has_variable = gbr_rationing_refined_fuel } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Rubber
		limit = { NOT = { has_variable = gbr_rationing_rubber } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Steel
		limit = { NOT = { has_variable = gbr_rationing_steel } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Sugar
		limit = { NOT = { has_variable = gbr_rationing_sugar } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Tea
		limit = { NOT = { has_variable = gbr_rationing_tea } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Tobacco
		limit = { NOT = { has_variable = gbr_rationing_tobacco } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Tools
		limit = { NOT = { has_variable = gbr_rationing_tools } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Wine
		limit = { NOT = { has_variable = gbr_rationing_wine } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Wood
		limit = { NOT = { has_variable = gbr_rationing_wood } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
}

gbr_rationing_over = {
	# Logic
		# Determining if rationing is over is fairly simple
		# If at least 1 good is being rationed, then rationing isn't over
		# When 0 goods are being rationed, the rationing_over variable is set
	
	if = {
		limit = {
			NOR = {
				has_variable = gbr_rationing_aluminum
				has_variable = gbr_rationing_bauxite
				has_variable = gbr_rationing_fertilizer
				has_variable = gbr_rationing_clothes
				has_variable = gbr_rationing_coal
				has_variable = gbr_rationing_coffee
				has_variable = gbr_rationing_copper
				has_variable = gbr_rationing_engines
				has_variable = gbr_rationing_explosives
				has_variable = gbr_rationing_fabric
				has_variable = gbr_rationing_fish
				has_variable = gbr_rationing_fruit
				has_variable = gbr_rationing_glass
				has_variable = gbr_rationing_grain
				has_variable = gbr_rationing_groceries
				has_variable = gbr_rationing_high_quality_fabric
				has_variable = gbr_rationing_iron
				has_variable = gbr_rationing_lead
				has_variable = gbr_rationing_liquor
				has_variable = gbr_rationing_meat
				has_variable = gbr_rationing_oil
				has_variable = gbr_rationing_opium
				has_variable = gbr_rationing_paper
				has_variable = gbr_rationing_pharmaceuticals
				has_variable = gbr_rationing_phosphorus
				has_variable = gbr_rationing_plastics
				has_variable = gbr_rationing_refined_fuel
				has_variable = gbr_rationing_rubber
				has_variable = gbr_rationing_steel
				has_variable = gbr_rationing_sugar
				has_variable = gbr_rationing_tea
				has_variable = gbr_rationing_tobacco
				has_variable = gbr_rationing_tools
				has_variable = gbr_rationing_wine
				has_variable = gbr_rationing_wood
			}
		}
		set_variable = gbr_rationing_over
	}
}

# Clears unused variables - Save memory/performance
gbr_remove_core_variables = {
	remove_variable = gbr_ig_weight
	
	remove_variable = gbr_staple_goods_visible
	remove_variable = gbr_staple_goods_hidden
	remove_variable = gbr_industrial_goods_visible
	remove_variable = gbr_industrial_goods_hidden
	remove_variable = gbr_luxury_goods_visible
	remove_variable = gbr_luxury_goods_hidden
	remove_variable = gbr_devalue_button_pressed
	remove_variable = gbr_end_rationing_early_button_pressed
	
	remove_variable = gbr_ending_rationing_starting_variable
	remove_variable = gbr_ending_rationing_target_variable
	remove_variable = gbr_rationing_number_of_goods
	remove_variable = gbr_added_demand_pressure
	remove_variable = gbr_ended_rationing_early
	remove_variable = gbr_months_of_rationing
	remove_variable = gbr_started_rationing
	remove_variable = gbr_rationing_start_price
	remove_variable = gbr_rationing_start_consumption
	
	remove_variable = gbr_aluminum_progress
	remove_variable = gbr_bauxite_progress
	remove_variable = gbr_fertilizer_progress
	remove_variable = gbr_clothes_progress
	remove_variable = gbr_coal_progress
	remove_variable = gbr_coffee_progress
	remove_variable = gbr_copper_progress
	remove_variable = gbr_engines_progress
	remove_variable = gbr_explosives_progress
	remove_variable = gbr_fabric_progress
	remove_variable = gbr_fish_progress
	remove_variable = gbr_fruit_progress
	remove_variable = gbr_glass_progress
	remove_variable = gbr_grain_progress
	remove_variable = gbr_groceries_progress
	remove_variable = gbr_high_quality_fabric_progress
	remove_variable = gbr_iron_progress
	remove_variable = gbr_lead_progress
	remove_variable = gbr_liquor_progress
	remove_variable = gbr_meat_progress
	remove_variable = gbr_oil_progress
	remove_variable = gbr_opium_progress
	remove_variable = gbr_paper_progress
	remove_variable = gbr_pharmaceuticals_progress
	remove_variable = gbr_phosphorus_progress
	remove_variable = gbr_plastics_progress
	remove_variable = gbr_refined_fuel_progress
	remove_variable = gbr_rubber_progress
	remove_variable = gbr_steel_progress
	remove_variable = gbr_sugar_progress
	remove_variable = gbr_tea_progress
	remove_variable = gbr_tobacco_progress
	remove_variable = gbr_tools_progress
	remove_variable = gbr_wine_progress
	remove_variable = gbr_wood_progress
	
	remove_variable = gbr_rationing_progress_from_characters
	remove_variable = gbr_character_popularity_ppp
	remove_variable = gbr_character_popularity_pp
	remove_variable = gbr_character_popularity_p
	remove_variable = gbr_character_popularity_n
	remove_variable = gbr_character_popularity_nn
	
	remove_variable = gbr_character_popularity_hardliner
	remove_variable = gbr_character_popularity_marxist_leninist
	remove_variable = gbr_character_popularity_developmentalist
	remove_variable = gbr_character_popularity_market_socialist
	remove_variable = gbr_character_popularity_democratic_socialist
	remove_variable = gbr_character_popularity_anarchist
	remove_variable = gbr_character_popularity_liberation_theologist
	remove_variable = gbr_character_popularity_apparatus
	remove_variable = gbr_character_popularity_vanguardist
	remove_variable = gbr_character_popularity_socialist
	remove_variable = gbr_character_popularity_state_interventionist
	remove_variable = gbr_character_popularity_agrarian
	remove_variable = gbr_character_popularity_social
	remove_variable = gbr_character_popularity_libermanist
	remove_variable = gbr_character_popularity_traditionalist
	remove_variable = gbr_character_popularity_market_liberal
	remove_variable = gbr_character_popularity_materialistic
	remove_variable = gbr_character_popularity_meritocratic
	
	remove_variable = gbr_rationing_progress_from_interest_groups
	remove_variable = gbr_interest_group_clout_ppp
	remove_variable = gbr_interest_group_clout_pp
	remove_variable = gbr_interest_group_clout_p
	remove_variable = gbr_interest_group_clout_n
	remove_variable = gbr_interest_group_clout_nn
	
	remove_variable = gbr_interest_group_clout_hardliner
	remove_variable = gbr_interest_group_clout_marxist_leninist
	remove_variable = gbr_interest_group_clout_developmentalist
	remove_variable = gbr_interest_group_clout_market_socialist
	remove_variable = gbr_interest_group_clout_democratic_socialist
	remove_variable = gbr_interest_group_clout_anarchist
	remove_variable = gbr_interest_group_clout_liberation_theologist
	remove_variable = gbr_interest_group_clout_apparatus
	remove_variable = gbr_interest_group_clout_vanguardist
	remove_variable = gbr_interest_group_clout_socialist
	remove_variable = gbr_interest_group_clout_state_interventionist
	remove_variable = gbr_interest_group_clout_agrarian
	remove_variable = gbr_interest_group_clout_social
	remove_variable = gbr_interest_group_clout_libermanist
	remove_variable = gbr_interest_group_clout_traditionalist
	remove_variable = gbr_interest_group_clout_market_liberal
	remove_variable = gbr_interest_group_clout_materialistic
	remove_variable = gbr_interest_group_clout_meritocratic
	
	remove_variable = gbr_pound_sterling_current
	remove_variable = gbr_pound_sterling_5
	remove_variable = gbr_pound_sterling_10
	remove_variable = gbr_pound_sterling_15
	remove_variable = gbr_pound_sterling_20
	remove_variable = gbr_pound_sterling_25
	remove_variable = gbr_pound_sterling_30
}

gbr_remove_aluminum_variables = {
	# Aluminum variables
	remove_variable = gbr_aluminum_progress_from_characters
	remove_variable = gbr_aluminum_progress_from_igs
	remove_variable = gbr_aluminum_progress_from_buildings
	remove_variable = gbr_aluminum_progress_from_legitimacy
	remove_variable = gbr_aluminum_progress_from_price
	remove_variable = gbr_aluminum_progress_next
	remove_variable = gbr_ending_aluminum_rationing
	remove_variable = gbr_rationing_aluminum
	remove_variable = gbr_aluminum_building_holder
	remove_variable = gbr_aluminum_refinery_count
}

gbr_remove_bauxite_variables = {
	# Bauxite variables
	remove_variable = gbr_bauxite_progress_from_characters
	remove_variable = gbr_bauxite_progress_from_igs
	remove_variable = gbr_bauxite_progress_from_buildings
	remove_variable = gbr_bauxite_progress_from_legitimacy
	remove_variable = gbr_bauxite_progress_from_price
	remove_variable = gbr_bauxite_progress_next
	remove_variable = gbr_ending_bauxite_rationing
	remove_variable = gbr_rationing_bauxite
	remove_variable = gbr_bauxite_building_holder
	remove_variable = gbr_bauxite_mine_count
}

gbr_remove_fertilizer_variables = {
	# Fertilizer variables (Chemicals)
	remove_variable = gbr_fertilizer_progress_from_characters
	remove_variable = gbr_fertilizer_progress_from_igs
	remove_variable = gbr_fertilizer_progress_from_buildings
	remove_variable = gbr_fertilizer_progress_from_legitimacy
	remove_variable = gbr_fertilizer_progress_from_price
	remove_variable = gbr_fertilizer_progress_next
	remove_variable = gbr_ending_fertilizer_rationing
	remove_variable = gbr_rationing_fertilizer
	remove_variable = gbr_fertilizer_building_holder
	remove_variable = gbr_chemical_plant_count
	remove_variable = gbr_livestock_ranch_fertilizer_count
}

gbr_remove_clothes_variables = {	
	# Clothes variables
	remove_variable = gbr_clothes_progress_from_characters
	remove_variable = gbr_clothes_progress_from_igs
	remove_variable = gbr_clothes_progress_from_buildings
	remove_variable = gbr_clothes_progress_from_legitimacy
	remove_variable = gbr_clothes_progress_from_price
	remove_variable = gbr_clothes_progress_next
	remove_variable = gbr_ending_clothes_rationing
	remove_variable = gbr_rationing_clothes
	remove_variable = gbr_clothes_building_holder
	remove_variable = gbr_textile_manufactory_count
}

gbr_remove_coal_variables = {	
	# Coal variables
	remove_variable = gbr_coal_progress_from_characters
	remove_variable = gbr_coal_progress_from_igs
	remove_variable = gbr_coal_progress_from_buildings
	remove_variable = gbr_coal_progress_from_legitimacy
	remove_variable = gbr_coal_progress_from_price
	remove_variable = gbr_coal_progress_next
	remove_variable = gbr_ending_coal_rationing
	remove_variable = gbr_rationing_coal
	remove_variable = gbr_coal_building_holder
	remove_variable = gbr_coal_mine_count
}

gbr_remove_coffee_variables = {	
	# Coffee variables
	remove_variable = gbr_coffee_progress_from_characters
	remove_variable = gbr_coffee_progress_from_igs
	remove_variable = gbr_coffee_progress_from_buildings
	remove_variable = gbr_coffee_progress_from_legitimacy
	remove_variable = gbr_coffee_progress_from_price
	remove_variable = gbr_coffee_progress_next
	remove_variable = gbr_ending_coffee_rationing
	remove_variable = gbr_rationing_coffee
	remove_variable = gbr_coffee_building_holder
	remove_variable = gbr_coffee_plantation_count
}

gbr_remove_copper_variables = {	
	# Copper variables
	remove_variable = gbr_copper_progress_from_characters
	remove_variable = gbr_copper_progress_from_igs
	remove_variable = gbr_copper_progress_from_buildings
	remove_variable = gbr_copper_progress_from_legitimacy
	remove_variable = gbr_copper_progress_from_price
	remove_variable = gbr_copper_progress_next
	remove_variable = gbr_ending_copper_rationing
	remove_variable = gbr_rationing_copper
	remove_variable = gbr_copper_building_holder
	remove_variable = gbr_copper_mine_count
}

gbr_remove_engines_variables = {	
	# Engines variables
	remove_variable = gbr_engines_progress_from_characters
	remove_variable = gbr_engines_progress_from_igs
	remove_variable = gbr_engines_progress_from_buildings
	remove_variable = gbr_engines_progress_from_legitimacy
	remove_variable = gbr_engines_progress_from_price
	remove_variable = gbr_engines_progress_next
	remove_variable = gbr_ending_engines_rationing
	remove_variable = gbr_rationing_engines
	remove_variable = gbr_engines_building_holder
	remove_variable = gbr_motor_industry_count
}

gbr_remove_explosives_variables = {	
	# Explosives variables
	remove_variable = gbr_explosives_progress_from_characters
	remove_variable = gbr_explosives_progress_from_igs
	remove_variable = gbr_explosives_progress_from_buildings
	remove_variable = gbr_explosives_progress_from_legitimacy
	remove_variable = gbr_explosives_progress_from_price
	remove_variable = gbr_explosives_progress_next
	remove_variable = gbr_ending_explosives_rationing
	remove_variable = gbr_rationing_explosives
	remove_variable = gbr_explosives_building_holder
	remove_variable = gbr_explosives_industry_count
}

gbr_remove_fabric_variables = {
	# Fabric variables
	remove_variable = gbr_fabric_progress_from_characters
	remove_variable = gbr_fabric_progress_from_igs
	remove_variable = gbr_fabric_progress_from_buildings
	remove_variable = gbr_fabric_progress_from_legitimacy
	remove_variable = gbr_fabric_progress_from_price
	remove_variable = gbr_fabric_progress_next
	remove_variable = gbr_ending_fabric_rationing
	remove_variable = gbr_rationing_fabric
	remove_variable = gbr_fabric_building_holder
	remove_variable = gbr_cotton_plantation_count
	remove_variable = gbr_livestock_ranch_fabric_count
}

gbr_remove_fish_variables = {
	# Fish variables
	remove_variable = gbr_fish_progress_from_characters
	remove_variable = gbr_fish_progress_from_igs
	remove_variable = gbr_fish_progress_from_buildings
	remove_variable = gbr_fish_progress_from_legitimacy
	remove_variable = gbr_fish_progress_from_price
	remove_variable = gbr_fish_progress_next
	remove_variable = gbr_ending_fish_rationing
	remove_variable = gbr_rationing_fish
	remove_variable = gbr_fish_building_holder
	remove_variable = gbr_fishing_wharf_count
}

gbr_remove_fruit_variables = {
	# Fruit variables
	remove_variable = gbr_fruit_progress_from_characters
	remove_variable = gbr_fruit_progress_from_igs
	remove_variable = gbr_fruit_progress_from_buildings
	remove_variable = gbr_fruit_progress_from_legitimacy
	remove_variable = gbr_fruit_progress_from_price
	remove_variable = gbr_fruit_progress_next
	remove_variable = gbr_ending_fruit_rationing
	remove_variable = gbr_rationing_fruit
	remove_variable = gbr_fruit_building_holder
	remove_variable = gbr_banana_plantation_count
	remove_variable = gbr_rye_farm_fruit_count
	remove_variable = gbr_wheat_farm_fruit_count
	remove_variable = gbr_rice_farm_fruit_count
	remove_variable = gbr_maize_farm_fruit_count
	remove_variable = gbr_millet_farm_fruit_count
}

gbr_remove_glass_variables = {
	# Glass variables
	remove_variable = gbr_glass_progress_from_characters
	remove_variable = gbr_glass_progress_from_igs
	remove_variable = gbr_glass_progress_from_buildings
	remove_variable = gbr_glass_progress_from_legitimacy
	remove_variable = gbr_glass_progress_from_price
	remove_variable = gbr_glass_progress_next
	remove_variable = gbr_ending_glass_rationing
	remove_variable = gbr_rationing_glass
	remove_variable = gbr_glass_building_holder
	remove_variable = gbr_glassworks_count
}

gbr_remove_grain_variables = {
	# Grain variables
	remove_variable = gbr_grain_progress_from_characters
	remove_variable = gbr_grain_progress_from_igs
	remove_variable = gbr_grain_progress_from_buildings
	remove_variable = gbr_grain_progress_from_legitimacy
	remove_variable = gbr_grain_progress_from_price
	remove_variable = gbr_grain_progress_next
	remove_variable = gbr_ending_grain_rationing
	remove_variable = gbr_rationing_grain
	remove_variable = gbr_grain_building_holder
	remove_variable = gbr_rye_farm_count
	remove_variable = gbr_wheat_farm_count
	remove_variable = gbr_rice_farm_count
	remove_variable = gbr_maize_farm_count
	remove_variable = gbr_millet_farm_count
}

gbr_remove_groceries_variables = {
	# Groceries variables
	remove_variable = gbr_groceries_progress_from_characters
	remove_variable = gbr_groceries_progress_from_igs
	remove_variable = gbr_groceries_progress_from_buildings
	remove_variable = gbr_groceries_progress_from_legitimacy
	remove_variable = gbr_groceries_progress_from_price
	remove_variable = gbr_groceries_progress_next
	remove_variable = gbr_ending_groceries_rationing
	remove_variable = gbr_rationing_groceries
	remove_variable = gbr_groceries_building_holder
	remove_variable = gbr_food_industry_count
}

gbr_remove_high_quality_fabric_variables = {
	# High Quality Fabric variables
	remove_variable = gbr_high_quality_fabric_progress_from_characters
	remove_variable = gbr_high_quality_fabric_progress_from_igs
	remove_variable = gbr_high_quality_fabric_progress_from_buildings
	remove_variable = gbr_high_quality_fabric_progress_from_legitimacy
	remove_variable = gbr_high_quality_fabric_progress_from_price
	remove_variable = gbr_high_quality_fabric_progress_next
	remove_variable = gbr_ending_high_quality_fabric_rationing
	remove_variable = gbr_rationing_high_quality_fabric
	remove_variable = gbr_high_quality_fabric_building_holder
	remove_variable = gbr_silk_plantation_count
	remove_variable = gbr_synthetics_plant_count
}

gbr_remove_iron_variables = {
	# Iron variables
	remove_variable = gbr_iron_progress_from_characters
	remove_variable = gbr_iron_progress_from_igs
	remove_variable = gbr_iron_progress_from_buildings
	remove_variable = gbr_iron_progress_from_legitimacy
	remove_variable = gbr_iron_progress_from_price
	remove_variable = gbr_iron_progress_next
	remove_variable = gbr_ending_iron_rationing
	remove_variable = gbr_rationing_iron
	remove_variable = gbr_iron_building_holder
	remove_variable = gbr_iron_mine_count
}

gbr_remove_lead_variables = {
	# Lead variables
	remove_variable = gbr_lead_progress_from_characters
	remove_variable = gbr_lead_progress_from_igs
	remove_variable = gbr_lead_progress_from_buildings
	remove_variable = gbr_lead_progress_from_legitimacy
	remove_variable = gbr_lead_progress_from_price
	remove_variable = gbr_lead_progress_next
	remove_variable = gbr_ending_lead_rationing
	remove_variable = gbr_rationing_lead
	remove_variable = gbr_lead_building_holder
	remove_variable = gbr_lead_mine_count
}

gbr_remove_liquor_variables = {
	# Liquor variables
	remove_variable = gbr_liquor_progress_from_characters
	remove_variable = gbr_liquor_progress_from_igs
	remove_variable = gbr_liquor_progress_from_buildings
	remove_variable = gbr_liquor_progress_from_legitimacy
	remove_variable = gbr_liquor_progress_from_price
	remove_variable = gbr_liquor_progress_next
	remove_variable = gbr_ending_liquor_rationing
	remove_variable = gbr_rationing_liquor
	remove_variable = gbr_liquor_building_holder
	remove_variable = gbr_distilleries_liquor_count
}

gbr_remove_meat_variables = {
	# Meat variables
	remove_variable = gbr_meat_progress_from_characters
	remove_variable = gbr_meat_progress_from_igs
	remove_variable = gbr_meat_progress_from_buildings
	remove_variable = gbr_meat_progress_from_legitimacy
	remove_variable = gbr_meat_progress_from_price
	remove_variable = gbr_meat_progress_next
	remove_variable = gbr_ending_meat_rationing
	remove_variable = gbr_rationing_meat
	remove_variable = gbr_meat_building_holder
	remove_variable = gbr_livestock_ranch_count
	remove_variable = gbr_fishing_wharf_meat_count
}

gbr_remove_oil_variables = {
	# Oil variables
	remove_variable = gbr_oil_progress_from_characters
	remove_variable = gbr_oil_progress_from_igs
	remove_variable = gbr_oil_progress_from_buildings
	remove_variable = gbr_oil_progress_from_legitimacy
	remove_variable = gbr_oil_progress_from_price
	remove_variable = gbr_oil_progress_next
	remove_variable = gbr_ending_oil_rationing
	remove_variable = gbr_rationing_oil
	remove_variable = gbr_oil_building_holder
	remove_variable = gbr_oil_rig_count
}

gbr_remove_opium_variables = {
	# Opium variables
	remove_variable = gbr_opium_progress_from_characters
	remove_variable = gbr_opium_progress_from_igs
	remove_variable = gbr_opium_progress_from_buildings
	remove_variable = gbr_opium_progress_from_legitimacy
	remove_variable = gbr_opium_progress_from_price
	remove_variable = gbr_opium_progress_next
	remove_variable = gbr_ending_opium_rationing
	remove_variable = gbr_rationing_opium
	remove_variable = gbr_opium_building_holder
	remove_variable = gbr_opium_plantation_count
}

gbr_remove_paper_variables = {
	# Paper variables
	remove_variable = gbr_paper_progress_from_characters
	remove_variable = gbr_paper_progress_from_igs
	remove_variable = gbr_paper_progress_from_buildings
	remove_variable = gbr_paper_progress_from_legitimacy
	remove_variable = gbr_paper_progress_from_price
	remove_variable = gbr_paper_progress_next
	remove_variable = gbr_ending_paper_rationing
	remove_variable = gbr_rationing_paper
	remove_variable = gbr_paper_building_holder
	remove_variable = gbr_paper_manufactories_count
}

gbr_remove_pharmaceuticals_variables = {
	# Pharmaceuticals variables
	remove_variable = gbr_pharmaceuticals_progress_from_characters
	remove_variable = gbr_pharmaceuticals_progress_from_igs
	remove_variable = gbr_pharmaceuticals_progress_from_buildings
	remove_variable = gbr_pharmaceuticals_progress_from_legitimacy
	remove_variable = gbr_pharmaceuticals_progress_from_price
	remove_variable = gbr_pharmaceuticals_progress_next
	remove_variable = gbr_ending_pharmaceuticals_rationing
	remove_variable = gbr_rationing_pharmaceuticals
	remove_variable = gbr_pharmaceuticals_building_holder
	remove_variable = gbr_pharmaceutical_industry_count
}

gbr_remove_phosphorus_variables = {
	# Phosphorus variables
	remove_variable = gbr_phosphorus_progress_from_characters
	remove_variable = gbr_phosphorus_progress_from_igs
	remove_variable = gbr_phosphorus_progress_from_buildings
	remove_variable = gbr_phosphorus_progress_from_legitimacy
	remove_variable = gbr_phosphorus_progress_from_price
	remove_variable = gbr_phosphorus_progress_next
	remove_variable = gbr_ending_phosphorus_rationing
	remove_variable = gbr_rationing_phosphorus
	remove_variable = gbr_phosphorus_building_holder
	remove_variable = gbr_phosphorus_mine_count
}

gbr_remove_plastics_variables = {
	# Plastics variables
	remove_variable = gbr_plastics_progress_from_characters
	remove_variable = gbr_plastics_progress_from_igs
	remove_variable = gbr_plastics_progress_from_buildings
	remove_variable = gbr_plastics_progress_from_legitimacy
	remove_variable = gbr_plastics_progress_from_price
	remove_variable = gbr_plastics_progress_next
	remove_variable = gbr_ending_plastics_rationing
	remove_variable = gbr_rationing_plastics
	remove_variable = gbr_plastics_building_holder
	remove_variable = gbr_fuel_refineries_plastics_count
}

gbr_remove_refined_fuel_variables = {
	# Refined Fuel variables
	remove_variable = gbr_refined_fuel_progress_from_characters
	remove_variable = gbr_refined_fuel_progress_from_igs
	remove_variable = gbr_refined_fuel_progress_from_buildings
	remove_variable = gbr_refined_fuel_progress_from_legitimacy
	remove_variable = gbr_refined_fuel_progress_from_price
	remove_variable = gbr_refined_fuel_progress_next
	remove_variable = gbr_ending_refined_fuel_rationing
	remove_variable = gbr_rationing_refined_fuel
	remove_variable = gbr_refined_fuel_building_holder
	remove_variable = gbr_fuel_refineries_count
}

gbr_remove_rubber_variables = {
	# Rubber variables
	remove_variable = gbr_rubber_progress_from_characters
	remove_variable = gbr_rubber_progress_from_igs
	remove_variable = gbr_rubber_progress_from_buildings
	remove_variable = gbr_rubber_progress_from_legitimacy
	remove_variable = gbr_rubber_progress_from_price
	remove_variable = gbr_rubber_progress_next
	remove_variable = gbr_ending_rubber_rationing
	remove_variable = gbr_rationing_rubber
	remove_variable = gbr_rubber_building_holder
	remove_variable = gbr_rubber_plantation_count
	remove_variable = gbr_synthetics_plant_rubber_count
}

gbr_remove_steel_variables = {
	# Steel variables
	remove_variable = gbr_steel_progress_from_characters
	remove_variable = gbr_steel_progress_from_igs
	remove_variable = gbr_steel_progress_from_buildings
	remove_variable = gbr_steel_progress_from_legitimacy
	remove_variable = gbr_steel_progress_from_price
	remove_variable = gbr_steel_progress_next
	remove_variable = gbr_ending_steel_rationing
	remove_variable = gbr_rationing_steel
	remove_variable = gbr_steel_building_holder
	remove_variable = gbr_steelworks_count
}

gbr_remove_sugar_variables = {
	# Sugar variables
	remove_variable = gbr_sugar_progress_from_characters
	remove_variable = gbr_sugar_progress_from_igs
	remove_variable = gbr_sugar_progress_from_buildings
	remove_variable = gbr_sugar_progress_from_legitimacy
	remove_variable = gbr_sugar_progress_from_price
	remove_variable = gbr_sugar_progress_next
	remove_variable = gbr_ending_sugar_rationing
	remove_variable = gbr_rationing_sugar
	remove_variable = gbr_sugar_building_holder
	remove_variable = gbr_sugar_plantation_count
	remove_variable = gbr_rye_farm_sugar_count
	remove_variable = gbr_wheat_farm_sugar_count
	remove_variable = gbr_rice_farm_sugar_count
	remove_variable = gbr_maize_farm_sugar_count
	remove_variable = gbr_millet_farm_sugar_count
}

gbr_remove_tea_variables = {
	# Tea variables
	remove_variable = gbr_tea_progress_from_characters
	remove_variable = gbr_tea_progress_from_igs
	remove_variable = gbr_tea_progress_from_buildings
	remove_variable = gbr_tea_progress_from_legitimacy
	remove_variable = gbr_tea_progress_from_price
	remove_variable = gbr_tea_progress_next
	remove_variable = gbr_ending_tea_rationing
	remove_variable = gbr_rationing_tea
	remove_variable = gbr_tea_building_holder
	remove_variable = gbr_tea_plantation_count	
}

gbr_remove_tobacco_variables = {
	# Tobacco variables
	remove_variable = gbr_tobacco_progress_from_characters
	remove_variable = gbr_tobacco_progress_from_igs
	remove_variable = gbr_tobacco_progress_from_buildings
	remove_variable = gbr_tobacco_progress_from_legitimacy
	remove_variable = gbr_tobacco_progress_from_price
	remove_variable = gbr_tobacco_progress_next
	remove_variable = gbr_ending_tobacco_rationing
	remove_variable = gbr_rationing_tobacco
	remove_variable = gbr_tobacco_building_holder
	remove_variable = gbr_tobacco_plantation_count
}

gbr_remove_tools_variables = {
	# Tools variables
	remove_variable = gbr_tools_progress_from_characters
	remove_variable = gbr_tools_progress_from_igs
	remove_variable = gbr_tools_progress_from_buildings
	remove_variable = gbr_tools_progress_from_legitimacy
	remove_variable = gbr_tools_progress_from_price
	remove_variable = gbr_tools_progress_next
	remove_variable = gbr_ending_tools_rationing
	remove_variable = gbr_rationing_tools
	remove_variable = gbr_tools_building_holder
	remove_variable = gbr_tool_manufactories_count
}

gbr_remove_wine_variables = {
	# Wine variables
	remove_variable = gbr_wine_progress_from_characters
	remove_variable = gbr_wine_progress_from_igs
	remove_variable = gbr_wine_progress_from_buildings
	remove_variable = gbr_wine_progress_from_legitimacy
	remove_variable = gbr_wine_progress_from_price
	remove_variable = gbr_wine_progress_next
	remove_variable = gbr_ending_wine_rationing
	remove_variable = gbr_rationing_wine
	remove_variable = gbr_wine_building_holder
	remove_variable = gbr_distilleries_wine_count
}

gbr_remove_wood_variables = {
	# Wood variables
	remove_variable = gbr_wood_progress_from_characters
	remove_variable = gbr_wood_progress_from_igs
	remove_variable = gbr_wood_progress_from_buildings
	remove_variable = gbr_wood_progress_from_legitimacy
	remove_variable = gbr_wood_progress_from_price
	remove_variable = gbr_wood_progress_next
	remove_variable = gbr_ending_wood_rationing
	remove_variable = gbr_rationing_wood
	remove_variable = gbr_wood_building_holder
	remove_variable = gbr_logging_camp_count	
}