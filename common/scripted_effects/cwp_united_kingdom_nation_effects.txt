#	gbr_good_progress					: Master Progress Variable to track number of months good has spent outside the acceptable price range
#	gbr_good_progress_from_characters	: Variable tracking characters
#	gbr_good_progress_from_igs			: Variable tracking interest groups
#	gbr_good_progress_from_buildings		: Variable tracking buildings
#	gbr_good_progress_from_legitimacy	: Variable tracking current government legitimacy. Strong government = fast progress variable reduction. Weak government legitimacy = slow or no progress variable reduction
#	gbr_good_progress_from_price			: Variable tracking market price of good
#	gbr_good_progress_next				: Variable is an incrementor - it is calculated from previous 6 variables (characters, IGs, buildings, government legitimacy, events) on a weekly basis, and is added to gbr_good_progress on the monthly. Used in localization to tell the player the current rate of change for gbr_good_progress is.

gbr_set_gbr_core_variables = {
	# Used solely for mathematical purposes, and is set as equivalent to the clout
	# of a given interest group. It exists so that IGs can be weighted higher or lower
	# depending on whether they're in government or not
	set_variable = { name = gbr_ig_weight value = 0 }
	
	# Button Visibility
	set_variable = gbr_staple_goods_visible
	set_variable = gbr_industrial_goods_visible
	set_variable = gbr_luxury_goods_visible
	
	# Core Variables
	set_variable = { name = gbr_ending_rationing_starting_variable value = 0 }
	set_variable = { name = gbr_ending_rationing_target_variable_short value = 6 }
	set_variable = { name = gbr_ending_rationing_target_variable_medium value = 9 }
	set_variable = { name = gbr_ending_rationing_target_variable_long value = 12 }
	set_variable = { name = gbr_rationing_number_of_goods value = 0 }
	set_variable = { name = gbr_rationing_inflation_rate value = 2.75 } # UK's 1945 inflation rate
	set_variable = { name = gbr_added_inflation value = 0 }
	set_variable = { name = gbr_months_of_rationing value = 0 }
	
	# Progress Variables
	set_variable = { name = gbr_biggest_goods_risk_progress value = 0 }
	set_variable = { name = gbr_aluminum_progress value = 0 }
	set_variable = { name = gbr_bauxite_progress value = 0 }
	set_variable = { name = gbr_fertilizer_progress value = 0 }
	set_variable = { name = gbr_clothes_progress value = 0 }
	set_variable = { name = gbr_coal_progress value = 0 }
	set_variable = { name = gbr_coffee_progress value = 0 }
	set_variable = { name = gbr_copper_progress value = 0 }
	set_variable = { name = gbr_engines_progress value = 0 }
	set_variable = { name = gbr_explosives_progress value = 0 }
	set_variable = { name = gbr_fabric_progress value = 0 }
	set_variable = { name = gbr_fish_progress value = 0 }
	set_variable = { name = gbr_fruit_progress value = 0 }
	set_variable = { name = gbr_glass_progress value = 0 }
	set_variable = { name = gbr_grain_progress value = 0 }
	set_variable = { name = gbr_groceries_progress value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress value = 0 }
	set_variable = { name = gbr_iron_progress value = 0 }
	set_variable = { name = gbr_lead_progress value = 0 }
	set_variable = { name = gbr_liquor_progress value = 0 }
	set_variable = { name = gbr_meat_progress value = 0 }
	set_variable = { name = gbr_oil_progress value = 0 }
	set_variable = { name = gbr_opium_progress value = 0 }
	set_variable = { name = gbr_paper_progress value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress value = 0 }
	set_variable = { name = gbr_phosphorus_progress value = 0 }
	set_variable = { name = gbr_plastics_progress value = 0 }
	set_variable = { name = gbr_refined_fuel_progress value = 0 }
	set_variable = { name = gbr_rubber_progress value = 0 }
	set_variable = { name = gbr_steel_progress value = 0 }
	set_variable = { name = gbr_sugar_progress value = 0 }
	set_variable = { name = gbr_tea_progress value = 0 }
	set_variable = { name = gbr_tobacco_progress value = 0 }
	set_variable = { name = gbr_tools_progress value = 0 }
	set_variable = { name = gbr_wine_progress value = 0 }
	set_variable = { name = gbr_wood_progress value = 0 }
}

gbr_set_gbr_aluminum_variables = {
	# Aluminum variables
	set_variable = { name = gbr_aluminum_progress_from_characters value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_igs value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_buildings value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_price value = 0 }
	set_variable = { name = gbr_aluminum_progress_next value = 0 }
	set_variable = { name = gbr_ending_aluminum_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_bauxite_variables = {
	# Bauxite variables
	set_variable = { name = gbr_bauxite_progress_from_characters value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_igs value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_buildings value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_price value = 0 }
	set_variable = { name = gbr_bauxite_progress_next value = 0 }
	set_variable = { name = gbr_ending_bauxite_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_fertilizer_variables = {
	# Fertilizer variables (Chemicals)
	set_variable = { name = gbr_fertilizer_progress_from_characters value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_igs value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_price value = 0 }
	set_variable = { name = gbr_fertilizer_progress_next value = 0 }
	set_variable = { name = gbr_ending_fertilizer_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_clothes_variables = {	
	# Clothes variables
	set_variable = { name = gbr_clothes_progress_from_characters value = 0 }
	set_variable = { name = gbr_clothes_progress_from_igs value = 0 }
	set_variable = { name = gbr_clothes_progress_from_buildings value = 0 }
	set_variable = { name = gbr_clothes_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_clothes_progress_from_price value = 0 }
	set_variable = { name = gbr_clothes_progress_next value = 0 }
	set_variable = { name = gbr_ending_clothes_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_coal_variables = {	
	# Coal variables
	set_variable = { name = gbr_coal_progress_from_characters value = 0 }
	set_variable = { name = gbr_coal_progress_from_igs value = 0 }
	set_variable = { name = gbr_coal_progress_from_buildings value = 0 }
	set_variable = { name = gbr_coal_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_coal_progress_from_price value = 0 }
	set_variable = { name = gbr_coal_progress_next value = 0 }
	set_variable = { name = gbr_ending_coal_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_coffee_variables = {	
	# Coffee variables
	set_variable = { name = gbr_coffee_progress_from_characters value = 0 }
	set_variable = { name = gbr_coffee_progress_from_igs value = 0 }
	set_variable = { name = gbr_coffee_progress_from_buildings value = 0 }
	set_variable = { name = gbr_coffee_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_coffee_progress_from_price value = 0 }
	set_variable = { name = gbr_coffee_progress_next value = 0 }
	set_variable = { name = gbr_ending_coffee_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_copper_variables = {	
	# Copper variables
	set_variable = { name = gbr_copper_progress_from_characters value = 0 }
	set_variable = { name = gbr_copper_progress_from_igs value = 0 }
	set_variable = { name = gbr_copper_progress_from_buildings value = 0 }
	set_variable = { name = gbr_copper_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_copper_progress_from_price value = 0 }
	set_variable = { name = gbr_copper_progress_next value = 0 }
	set_variable = { name = gbr_ending_copper_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_engines_variables = {	
	# Engines variables
	set_variable = { name = gbr_engines_progress_from_characters value = 0 }
	set_variable = { name = gbr_engines_progress_from_igs value = 0 }
	set_variable = { name = gbr_engines_progress_from_buildings value = 0 }
	set_variable = { name = gbr_engines_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_engines_progress_from_price value = 0 }
	set_variable = { name = gbr_engines_progress_next value = 0 }
	set_variable = { name = gbr_ending_engines_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_explosives_variables = {	
	# Explosives variables
	set_variable = { name = gbr_explosives_progress_from_characters value = 0 }
	set_variable = { name = gbr_explosives_progress_from_igs value = 0 }
	set_variable = { name = gbr_explosives_progress_from_buildings value = 0 }
	set_variable = { name = gbr_explosives_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_explosives_progress_from_price value = 0 }
	set_variable = { name = gbr_explosives_progress_next value = 0 }
	set_variable = { name = gbr_ending_explosives_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_fabric_variables = {
	# Fabric variables
	set_variable = { name = gbr_fabric_progress_from_characters value = 0 }
	set_variable = { name = gbr_fabric_progress_from_igs value = 0 }
	set_variable = { name = gbr_fabric_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fabric_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fabric_progress_from_price value = 0 }
	set_variable = { name = gbr_fabric_progress_next value = 0 }
	set_variable = { name = gbr_ending_fabric_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_fish_variables = {
	# Fish variables
	set_variable = { name = gbr_fish_progress_from_characters value = 0 }
	set_variable = { name = gbr_fish_progress_from_igs value = 0 }
	set_variable = { name = gbr_fish_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fish_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fish_progress_from_price value = 0 }
	set_variable = { name = gbr_fish_progress_next value = 0 }
	set_variable = { name = gbr_ending_fish_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_fruit_variables = {
	# Fruit variables
	set_variable = { name = gbr_fruit_progress_from_characters value = 0 }
	set_variable = { name = gbr_fruit_progress_from_igs value = 0 }
	set_variable = { name = gbr_fruit_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fruit_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_fruit_progress_from_price value = 0 }
	set_variable = { name = gbr_fruit_progress_next value = 0 }
	set_variable = { name = gbr_ending_fruit_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_glass_variables = {
	# Glass variables
	set_variable = { name = gbr_glass_progress_from_characters value = 0 }
	set_variable = { name = gbr_glass_progress_from_igs value = 0 }
	set_variable = { name = gbr_glass_progress_from_buildings value = 0 }
	set_variable = { name = gbr_glass_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_glass_progress_from_price value = 0 }
	set_variable = { name = gbr_glass_progress_next value = 0 }
	set_variable = { name = gbr_ending_glass_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_grain_variables = {
	# Grain variables
	set_variable = { name = gbr_grain_progress_from_characters value = 0 }
	set_variable = { name = gbr_grain_progress_from_igs value = 0 }
	set_variable = { name = gbr_grain_progress_from_buildings value = 0 }
	set_variable = { name = gbr_grain_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_grain_progress_from_price value = 0 }
	set_variable = { name = gbr_grain_progress_next value = 0 }
	set_variable = { name = gbr_ending_grain_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_groceries_variables = {
	# Groceries variables
	set_variable = { name = gbr_groceries_progress_from_characters value = 0 }
	set_variable = { name = gbr_groceries_progress_from_igs value = 0 }
	set_variable = { name = gbr_groceries_progress_from_buildings value = 0 }
	set_variable = { name = gbr_groceries_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_groceries_progress_from_price value = 0 }
	set_variable = { name = gbr_groceries_progress_next value = 0 }
	set_variable = { name = gbr_ending_groceries_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_high_quality_fabric_variables = {
	# High Quality Fabric variables
	set_variable = { name = gbr_high_quality_fabric_progress_from_characters value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_igs value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_buildings value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_price value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_next value = 0 }
	set_variable = { name = gbr_ending_high_quality_fabric_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_iron_variables = {
	# Iron variables
	set_variable = { name = gbr_iron_progress_from_characters value = 0 }
	set_variable = { name = gbr_iron_progress_from_igs value = 0 }
	set_variable = { name = gbr_iron_progress_from_buildings value = 0 }
	set_variable = { name = gbr_iron_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_iron_progress_from_price value = 0 }
	set_variable = { name = gbr_iron_progress_next value = 0 }
	set_variable = { name = gbr_ending_iron_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_lead_variables = {
	# Lead variables
	set_variable = { name = gbr_lead_progress_from_characters value = 0 }
	set_variable = { name = gbr_lead_progress_from_igs value = 0 }
	set_variable = { name = gbr_lead_progress_from_buildings value = 0 }
	set_variable = { name = gbr_lead_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_lead_progress_from_price value = 0 }
	set_variable = { name = gbr_lead_progress_next value = 0 }
	set_variable = { name = gbr_ending_lead_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_liquor_variables = {
	# Liquor variables
	set_variable = { name = gbr_liquor_progress_from_characters value = 0 }
	set_variable = { name = gbr_liquor_progress_from_igs value = 0 }
	set_variable = { name = gbr_liquor_progress_from_buildings value = 0 }
	set_variable = { name = gbr_liquor_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_liquor_progress_from_price value = 0 }
	set_variable = { name = gbr_liquor_progress_next value = 0 }
	set_variable = { name = gbr_ending_liquor_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_meat_variables = {
	# Meat variables
	set_variable = { name = gbr_meat_progress_from_characters value = 0 }
	set_variable = { name = gbr_meat_progress_from_igs value = 0 }
	set_variable = { name = gbr_meat_progress_from_buildings value = 0 }
	set_variable = { name = gbr_meat_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_meat_progress_from_price value = 0 }
	set_variable = { name = gbr_meat_progress_next value = 0 }
	set_variable = { name = gbr_ending_meat_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_oil_variables = {
	# Oil variables
	set_variable = { name = gbr_oil_progress_from_characters value = 0 }
	set_variable = { name = gbr_oil_progress_from_igs value = 0 }
	set_variable = { name = gbr_oil_progress_from_buildings value = 0 }
	set_variable = { name = gbr_oil_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_oil_progress_from_price value = 0 }
	set_variable = { name = gbr_oil_progress_next value = 0 }
	set_variable = { name = gbr_ending_oil_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_opium_variables = {
	# Opium variables
	set_variable = { name = gbr_opium_progress_from_characters value = 0 }
	set_variable = { name = gbr_opium_progress_from_igs value = 0 }
	set_variable = { name = gbr_opium_progress_from_buildings value = 0 }
	set_variable = { name = gbr_opium_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_opium_progress_from_price value = 0 }
	set_variable = { name = gbr_opium_progress_next value = 0 }
	set_variable = { name = gbr_ending_opium_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_paper_variables = {
	# Paper variables
	set_variable = { name = gbr_paper_progress_from_characters value = 0 }
	set_variable = { name = gbr_paper_progress_from_igs value = 0 }
	set_variable = { name = gbr_paper_progress_from_buildings value = 0 }
	set_variable = { name = gbr_paper_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_paper_progress_from_price value = 0 }
	set_variable = { name = gbr_paper_progress_next value = 0 }
	set_variable = { name = gbr_ending_paper_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_pharmaceuticals_variables = {
	# Pharmaceuticals variables
	set_variable = { name = gbr_pharmaceuticals_progress_from_characters value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_igs value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_buildings value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_price value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_next value = 0 }
	set_variable = { name = gbr_ending_pharmaceuticals_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_phosphorus_variables = {
	# Phosphorus variables
	set_variable = { name = gbr_phosphorus_progress_from_characters value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_igs value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_buildings value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_price value = 0 }
	set_variable = { name = gbr_phosphorus_progress_next value = 0 }
	set_variable = { name = gbr_ending_phosphorus_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_plastics_variables = {
	# Plastics variables
	set_variable = { name = gbr_plastics_progress_from_characters value = 0 }
	set_variable = { name = gbr_plastics_progress_from_igs value = 0 }
	set_variable = { name = gbr_plastics_progress_from_buildings value = 0 }
	set_variable = { name = gbr_plastics_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_plastics_progress_from_price value = 0 }
	set_variable = { name = gbr_plastics_progress_next value = 0 }
	set_variable = { name = gbr_ending_plastics_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_refined_fuel_variables = {
	# Refined Fuel variables
	set_variable = { name = gbr_refined_fuel_progress_from_characters value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_igs value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_buildings value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_price value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_next value = 0 }
	set_variable = { name = gbr_ending_refined_fuel_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_rubber_variables = {
	# Rubber variables
	set_variable = { name = gbr_rubber_progress_from_characters value = 0 }
	set_variable = { name = gbr_rubber_progress_from_igs value = 0 }
	set_variable = { name = gbr_rubber_progress_from_buildings value = 0 }
	set_variable = { name = gbr_rubber_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_rubber_progress_from_price value = 0 }
	set_variable = { name = gbr_rubber_progress_next value = 0 }
	set_variable = { name = gbr_ending_rubber_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_steel_variables = {
	# Steel variables
	set_variable = { name = gbr_steel_progress_from_characters value = 0 }
	set_variable = { name = gbr_steel_progress_from_igs value = 0 }
	set_variable = { name = gbr_steel_progress_from_buildings value = 0 }
	set_variable = { name = gbr_steel_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_steel_progress_from_price value = 0 }
	set_variable = { name = gbr_steel_progress_next value = 0 }
	set_variable = { name = gbr_ending_steel_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_sugar_variables = {
	# Sugar variables
	set_variable = { name = gbr_sugar_progress_from_characters value = 0 }
	set_variable = { name = gbr_sugar_progress_from_igs value = 0 }
	set_variable = { name = gbr_sugar_progress_from_buildings value = 0 }
	set_variable = { name = gbr_sugar_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_sugar_progress_from_price value = 0 }
	set_variable = { name = gbr_sugar_progress_next value = 0 }
	set_variable = { name = gbr_ending_sugar_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_tea_variables = {
	# Tea variables
	set_variable = { name = gbr_tea_progress_from_characters value = 0 }
	set_variable = { name = gbr_tea_progress_from_igs value = 0 }
	set_variable = { name = gbr_tea_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tea_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tea_progress_from_price value = 0 }
	set_variable = { name = gbr_tea_progress_next value = 0 }
	set_variable = { name = gbr_ending_tea_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_tobacco_variables = {
	# Tobacco variables
	set_variable = { name = gbr_tobacco_progress_from_characters value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_igs value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_price value = 0 }
	set_variable = { name = gbr_tobacco_progress_next value = 0 }
	set_variable = { name = gbr_ending_tobacco_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_tools_variables = {
	# Tools variables
	set_variable = { name = gbr_tools_progress_from_characters value = 0 }
	set_variable = { name = gbr_tools_progress_from_igs value = 0 }
	set_variable = { name = gbr_tools_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tools_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_tools_progress_from_price value = 0 }
	set_variable = { name = gbr_tools_progress_next value = 0 }
	set_variable = { name = gbr_ending_tools_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_wine_variables = {
	# Wine variables
	set_variable = { name = gbr_wine_progress_from_characters value = 0 }
	set_variable = { name = gbr_wine_progress_from_igs value = 0 }
	set_variable = { name = gbr_wine_progress_from_buildings value = 0 }
	set_variable = { name = gbr_wine_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_wine_progress_from_price value = 0 }
	set_variable = { name = gbr_wine_progress_next value = 0 }
	set_variable = { name = gbr_ending_wine_rationing value = var:gbr_ending_rationing_starting_variable }
}

gbr_set_gbr_wood_variables = {
	# Wood variables
	set_variable = { name = gbr_wood_progress_from_characters value = 0 }
	set_variable = { name = gbr_wood_progress_from_igs value = 0 }
	set_variable = { name = gbr_wood_progress_from_buildings value = 0 }
	set_variable = { name = gbr_wood_progress_from_legitimacy value = 0 }
	set_variable = { name = gbr_wood_progress_from_price value = 0 }
	set_variable = { name = gbr_wood_progress_next value = 0 }
	set_variable = { name = gbr_ending_wood_rationing value = var:gbr_ending_rationing_starting_variable }
}

#####################################
##### Weekly Pulse Calculations #####
#####################################

# Building Count Weekly calculation
gbr_weekly_pulse_building_count = {
	if = {	# Aluminum Refineries
		limit = { has_variable = gbr_rationing_aluminum }
		set_variable = { name = gbr_aluminum_refinery_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_aluminum_refinery
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_aluminum_refinery_count add = prev.level } }
		}
	}
	if = {	# Bauxite Mines
		limit = { has_variable = gbr_rationing_bauxite }
		set_variable = { name = gbr_bauxite_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_bauxite_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_bauxite_mine_count add = prev.level } }
		}
	}
	if = {	# Chemical Plants
		limit = { has_variable = gbr_rationing_fertilizer }
		set_variable = { name = gbr_chemical_plant_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_chemical_plants
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_chemical_plant_count add = prev.level } }
		}
	}
	if = {	# Livestock Ranches - Fertilizer/Chemicals
		limit = { has_variable = gbr_rationing_fertilizer }
		set_variable = { name = gbr_livestock_ranch_fertilizer_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				OR = {
					has_active_production_method = pm_intensive_grazing_ranch
					has_active_production_method = pm_open_air_stockyards
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_fertilizer_count add = prev.level } }
		}
	}
	if = {	# Livestock Ranches - Meat
		limit = { has_variable = gbr_rationing_meat }
		set_variable = { name = gbr_livestock_ranch_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_count add = prev.level } }
		}
	}
	if = {	# Livestock Ranches - Fabric
		limit = { has_variable = gbr_rationing_fabric }
		set_variable = { name = gbr_livestock_ranch_fabric_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_fabric_count add = prev.level } }
		}
	}
	if = {	# Textile Manufactories
		limit = { has_variable = gbr_rationing_clothes }
		set_variable = { name = gbr_textile_manufactory_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_textile_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_textile_manufactory_count add = prev.level } }
		}
	}
	if = {	# Coal Mines
		limit = { has_variable = gbr_rationing_coal }
		set_variable = { name = gbr_coal_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_coal_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_coal_mine_count add = prev.level } }
		}
	}
	if = {	# Coffee Plantations
		limit = { has_variable = gbr_rationing_coffee }
		set_variable = { name = gbr_coffee_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_coffee_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_coffee_plantation_count add = prev.level } }
		}
	}
	if = {	# Copper Mines
		limit = { has_variable = gbr_rationing_copper }
		set_variable = { name = gbr_copper_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_copper_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_copper_mine_count add = prev.level } }
		}
	}
	if = {	# Motor Industries
		limit = { has_variable = gbr_rationing_engines }
		set_variable = { name = gbr_motor_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_motor_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_motor_industry_count add = prev.level } }
		}
	}
	if = {	# Explosives Industries
		limit = { has_variable = gbr_rationing_explosives }
		set_variable = { name = gbr_explosives_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_explosives_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_explosives_industry_count add = prev.level } }
		}
	}
	if = {	# Cotton Plantations
		limit = { has_variable = gbr_rationing_fabric }
		set_variable = { name = gbr_cotton_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_cotton_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_cotton_plantation_count add = prev.level } }
		}
	}
	if = {	# Fishing Wharf
		limit = { has_variable = gbr_rationing_fish }
		set_variable = { name = gbr_fishing_wharf_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_fishing_wharf
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fishing_wharf_count add = prev.level } }
		}
	}
	if = {	# Fishing Wharf - Meat
		limit = { has_variable = gbr_rationing_meat }
		set_variable = { name = gbr_fishing_wharf_meat_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_fishing_wharf
				OR = {
					has_active_production_method = pm_pre_war_whaling_ships
					has_active_production_method = pm_large_whaling_ships
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fishing_wharf_meat_count add = prev.level } }
		}
	}
	if = {	# Banana Plantation
		limit = { has_variable = gbr_rationing_fruit }
		set_variable = { name = gbr_banana_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_banana_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_banana_plantation_count add = prev.level } }
		}
	}
	if = {	# Rye/Wheat/Rice/Maize/Millet Farms - Grain
		limit = { has_variable = gbr_rationing_grain }
		set_variable = { name = gbr_rye_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_count add = prev.level } }
		}
	}
	if = {	# Rye/Wheat/Rice/Maize/Millet Farms - Fruit
		limit = { has_variable = gbr_rationing_fruit }
		set_variable = { name = gbr_rye_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				has_active_production_method = pm_apple_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				has_active_production_method = pm_citrus_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				has_active_production_method = pm_fig_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				has_active_production_method = pm_citrus_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				has_active_production_method = pm_fig_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_fruit_count add = prev.level } }
		}
	}
	if = {	# Rye/Wheat/Rice/Maize/Millet Farms - Sugar
		limit = { has_variable = gbr_rationing_sugar }
		set_variable = { name = gbr_rye_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				has_active_production_method = pm_sugar_beets
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				has_active_production_method = pm_corn_syrup
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_count add = prev.level } }
		}
	}
	if = {	# Glassworks
		limit = { has_variable = gbr_rationing_glass }
		set_variable = { name = gbr_glassworks_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_glassworks
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_glassworks_count add = prev.level } }
		}
	}
	if = {	# Food Industries
		limit = { has_variable = gbr_rationing_groceries }
		set_variable = { name = gbr_food_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_food_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_food_industry_count add = prev.level } }
		}
	}
	if = {	# Silk Plantations
		limit = { has_variable = gbr_rationing_high_quality_fabric }
		set_variable = { name = gbr_silk_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_silk_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_silk_plantation_count add = prev.level } }
		}
	}
	if = {	# Synthetics Plant
		limit = { has_variable = gbr_rationing_high_quality_fabric }
		set_variable = { name = gbr_synthetics_plant_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_synthetics_plant
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_synthetics_plant_count add = prev.level } }
		}
	}
	if = {	# Synthetics Plant - Rubber
		limit = { has_variable = gbr_rationing_rubber }
		set_variable = { name = gbr_synthetics_plant_rubber_count value = 0 }
		every_scope_building = {
			limit = { 	# 450 Construction Points
				is_building_type = building_synthetics_plant
				OR = {
					has_active_production_method = pm_styrene_butadiene
					has_active_production_method = pm_silicone
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_synthetics_plant_rubber_count add = prev.level } }
		}
	}
	if = {	# Iron Mines
		limit = { has_variable = gbr_rationing_iron }
		set_variable = { name = gbr_iron_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_iron_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_iron_mine_count add = prev.level } }
		}
	}
	if = {	# Lead Mines
		limit = { has_variable = gbr_rationing_lead }
		set_variable = { name = gbr_lead_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_lead_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_lead_mine_count add = prev.level } }
		}
	}
	if = {	# Distilleries - Liquor
		limit = { has_variable = gbr_rationing_liquor }
		set_variable = { name = gbr_distilleries_liquor_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_distilleries
				OR = {
					has_active_production_method = pm_basic_distillation_liquor
					has_active_production_method = pm_patent_stills_liquor
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_distilleries_liquor_count add = prev.level } }
		}
	}
	if = {	# Distilleries - Wine
		limit = { has_variable = gbr_rationing_wine }
		set_variable = { name = gbr_distilleries_wine_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_distilleries
				OR = {
					has_active_production_method = pm_basic_distillation_wine
					has_active_production_method = pm_patent_stills_wine
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_distilleries_wine_count add = prev.level } }
		}
	}
	if = {	# Oil Rig
		limit = { has_variable = gbr_rationing_oil }
		set_variable = { name = gbr_oil_rig_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_oil_rig
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_oil_rig_count add = prev.level } }
		}
	}
	if = {	# Opium Plantations
		limit = { has_variable = gbr_rationing_opium }
		set_variable = { name = gbr_opium_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_opium_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_opium_plantation_count add = prev.level } }
		}
	}
	if = {	# Paper Manufactories
		limit = { has_variable = gbr_rationing_paper }
		set_variable = { name = gbr_paper_manufactories_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_paper_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_paper_manufactories_count add = prev.level } }
		}
	}
	if = {	# Pharmaceutical Industries
		limit = { has_variable = gbr_rationing_pharmaceuticals }
		set_variable = { name = gbr_pharmaceutical_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_pharmaceutical_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_pharmaceutical_industry_count add = prev.level } }
		}
	}
	if = {	# Phosphorus Mines
		limit = { has_variable = gbr_rationing_phosphorus }
		set_variable = { name = gbr_phosphorus_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_phosphorus_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_phosphorus_mine_count add = prev.level } }
		}
	}
	if = {	# Fuel Refineries
		limit = { has_variable = gbr_rationing_refined_fuel }
		set_variable = { name = gbr_fuel_refineries_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_fuel_refineries
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fuel_refineries_count add = prev.level } }
		}
	}
	if = {	# Fuel Refineries - Plastics
		limit = { has_variable = gbr_rationing_plastics }
		set_variable = { name = gbr_fuel_refineries_plastics_count value = 0 }
		every_scope_building = {	# 600 Construction Points
			limit = {
				is_building_type = building_fuel_refineries
				OR = {
					has_active_production_method = pm_rudimentary_polymers
					has_active_production_method = pm_transition_metal_catalysts
					has_active_production_method = pm_dense_thermoplastics
					has_active_production_method = pm_saturated_elastomers
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fuel_refineries_plastics_count add = prev.level } }
		}
	}
	if = {	# Rubber Plantations
		limit = { has_variable = gbr_rationing_rubber }
		set_variable = { name = gbr_rubber_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rubber_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rubber_plantation_count add = prev.level } }
		}
	}
	if = {	# Steelworks
		limit = { has_variable = gbr_rationing_steel }
		set_variable = { name = gbr_steelworks_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_steelworks
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_steelworks_count add = prev.level } }
		}
	}
	if = {	# Sugar Plantations
		limit = { has_variable = gbr_rationing_sugar }
		set_variable = { name = gbr_sugar_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_sugar_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_sugar_plantation_count add = prev.level } }
		}
	}
	if = {	# Tea Plantations
		limit = { has_variable = gbr_rationing_tea }
		set_variable = { name = gbr_tea_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_tea_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tea_plantation_count add = prev.level } }
		}
	}
	if = {	# Tobacco Plantations
		limit = { has_variable = gbr_rationing_tobacco }
		set_variable = { name = gbr_tobacco_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_tobacco_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tobacco_plantation_count add = prev.level } }
		}
	}
	if = {	# Tool Manufactories
		limit = { has_variable = gbr_rationing_tools }
		set_variable = { name = gbr_tool_manufactories_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_tool_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tool_manufactories_count add = prev.level } }
		}
	}
	if = {	# Logging Camp
		limit = { has_variable = gbr_rationing_wood }
		set_variable = { name = gbr_logging_camp_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_logging_camp
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_logging_camp_count add = prev.level } }
		}
	}
}

# Aluminum rationing progress weekly calculation
gbr_weekly_pulse_rationing_aluminum_progress = {
	set_variable = { name = gbr_aluminum_progress_from_characters value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_igs value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_buildings value = 0 }
	set_variable = { name = gbr_aluminum_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_aluminum_progress_from_price value = 0 }
	set_variable = { name = gbr_aluminum_progress_next value = 0 }
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_aluminum_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_aluminum_popularity_holder multiply = 3 }
			change_variable = { name = gbr_aluminum_progress_from_characters subtract = var:gbr_aluminum_popularity_holder }
			remove_variable = gbr_aluminum_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_aluminum_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_aluminum_popularity_holder multiply = 2 }
			change_variable = { name = gbr_aluminum_progress_from_characters subtract = var:gbr_aluminum_popularity_holder }
			remove_variable = gbr_aluminum_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_aluminum_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_aluminum_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_aluminum_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_aluminum_popularity_holder multiply = 2 }
			change_variable = { name = gbr_aluminum_progress_from_characters add = var:gbr_aluminum_popularity_holder }
			remove_variable = gbr_aluminum_popularity_holder
		}
	}
	change_variable = { name = gbr_aluminum_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_aluminum_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_aluminum_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_aluminum_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_aluminum_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_aluminum_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_aluminum_building_holder value = var:gbr_aluminum_refinery_count }
	change_variable = { name = gbr_aluminum_building_holder divide = 200 }
	change_variable = { name = gbr_aluminum_progress_from_buildings subtract = var:gbr_aluminum_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_aluminum_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_aluminum_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_aluminum_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 1 } # = 1
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 1 } # = 2
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 3 } # = 5
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 4 } # = 9
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_aluminum_progress_from_price add = 6 } # = 15
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 1 } # = -0.5
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 1 } # = -1
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 3 } # = -2.5
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 4 } # = -4.5
	}
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_aluminum_progress_from_price subtract = 6 } # = -7.5
	}
	
	# Final Compliiation
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_characters }
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_igs }
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_buildings }
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_legitimacy }
	change_variable = { name = gbr_aluminum_progress_next add = var:gbr_aluminum_progress_from_price }
}

# Bauxite rationing progress weekly calculation
gbr_weekly_pulse_rationing_bauxite_progress = {
	set_variable = { name = gbr_bauxite_progress_from_characters value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_igs value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_buildings value = 0 }
	set_variable = { name = gbr_bauxite_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_bauxite_progress_from_price value = 0 }
	set_variable = { name = gbr_bauxite_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_bauxite_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_bauxite_popularity_holder multiply = 3 }
			change_variable = { name = gbr_bauxite_progress_from_characters subtract = var:gbr_bauxite_popularity_holder }
			remove_variable = gbr_bauxite_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_bauxite_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_bauxite_popularity_holder multiply = 2 }
			change_variable = { name = gbr_bauxite_progress_from_characters subtract = var:gbr_bauxite_popularity_holder }
			remove_variable = gbr_bauxite_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_bauxite_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_bauxite_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_bauxite_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_bauxite_popularity_holder multiply = 2 }
			change_variable = { name = gbr_bauxite_progress_from_characters add = var:gbr_bauxite_popularity_holder }
			remove_variable = gbr_bauxite_popularity_holder
		}
	}
	change_variable = { name = gbr_bauxite_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_bauxite_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_bauxite_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_bauxite_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_bauxite_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_bauxite_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_bauxite_building_holder value = var:gbr_bauxite_mine_count }
	change_variable = { name = gbr_bauxite_building_holder divide = 100 }
	change_variable = { name = gbr_bauxite_progress_from_buildings subtract = var:gbr_bauxite_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_bauxite_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_bauxite_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_bauxite_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_bauxite_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_bauxite_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_characters }
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_igs }
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_buildings }
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_legitimacy }
	change_variable = { name = gbr_bauxite_progress_next add = var:gbr_bauxite_progress_from_price }
}

# Chemicals (Fertilizer) rationing progress weekly calculation
gbr_weekly_pulse_rationing_fertilizer_progress = {
	set_variable = { name = gbr_fertilizer_progress_from_characters value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_igs value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fertilizer_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_fertilizer_progress_from_price value = 0 }
	set_variable = { name = gbr_fertilizer_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fertilizer_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fertilizer_popularity_holder multiply = 3 }
			change_variable = { name = gbr_fertilizer_progress_from_characters subtract = var:gbr_fertilizer_popularity_holder }
			remove_variable = gbr_fertilizer_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fertilizer_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fertilizer_popularity_holder multiply = 2 }
			change_variable = { name = gbr_fertilizer_progress_from_characters subtract = var:gbr_fertilizer_popularity_holder }
			remove_variable = gbr_fertilizer_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_fertilizer_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_fertilizer_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fertilizer_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fertilizer_popularity_holder multiply = 2 }
			change_variable = { name = gbr_fertilizer_progress_from_characters add = var:gbr_fertilizer_popularity_holder }
			remove_variable = gbr_fertilizer_popularity_holder
		}
	}
	change_variable = { name = gbr_fertilizer_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fertilizer_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fertilizer_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fertilizer_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fertilizer_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fertilizer_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_fertilizer_building_holder value = var:gbr_chemical_plant_count }
	change_variable = { name = gbr_fertilizer_building_holder divide = 200 }
	change_variable = { name = gbr_fertilizer_progress_from_buildings subtract = var:gbr_fertilizer_building_holder }
	set_variable = { name = gbr_fertilizer_building_holder value = var:gbr_livestock_ranch_fertilizer_count }
	change_variable = { name = gbr_fertilizer_building_holder divide = 400 }
	change_variable = { name = gbr_fertilizer_progress_from_buildings subtract = var:gbr_fertilizer_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_fertilizer_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_fertilizer_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_fertilizer_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_fertilizer_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_characters }
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_igs }
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_buildings }
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_legitimacy }
	change_variable = { name = gbr_fertilizer_progress_next add = var:gbr_fertilizer_progress_from_price }
}

# Clothes rationing progress weekly calculation
gbr_weekly_pulse_rationing_clothes_progress = {
	set_variable = { name = gbr_clothes_progress_from_characters value = 0 }
	set_variable = { name = gbr_clothes_progress_from_igs value = 0 }
	set_variable = { name = gbr_clothes_progress_from_buildings value = 0 }
	set_variable = { name = gbr_clothes_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_clothes_progress_from_price value = 0 }
	set_variable = { name = gbr_clothes_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_clothes_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_clothes_popularity_holder multiply = 3 }
			change_variable = { name = gbr_clothes_progress_from_characters subtract = var:gbr_clothes_popularity_holder }
			remove_variable = gbr_clothes_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_clothes_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_clothes_popularity_holder multiply = 2 }
			change_variable = { name = gbr_clothes_progress_from_characters subtract = var:gbr_clothes_popularity_holder }
			remove_variable = gbr_clothes_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_clothes_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_clothes_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_clothes_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_clothes_popularity_holder multiply = 2 }
			change_variable = { name = gbr_clothes_progress_from_characters add = var:gbr_clothes_popularity_holder }
			remove_variable = gbr_clothes_popularity_holder
		}
	}
	change_variable = { name = gbr_clothes_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_clothes_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_clothes_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_clothes_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_clothes_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_clothes_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_clothes_building_holder value = var:gbr_textile_manufactory_count }
	change_variable = { name = gbr_clothes_building_holder divide = 200 }
	change_variable = { name = gbr_clothes_progress_from_buildings subtract = var:gbr_clothes_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_clothes_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_clothes_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_clothes_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_clothes_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_clothes_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_characters }
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_igs }
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_buildings }
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_legitimacy }
	change_variable = { name = gbr_clothes_progress_next add = var:gbr_clothes_progress_from_price }
}

# Coal rationing progress weekly calculation
gbr_weekly_pulse_rationing_coal_progress = {
	set_variable = { name = gbr_coal_progress_from_characters value = 0 }
	set_variable = { name = gbr_coal_progress_from_igs value = 0 }
	set_variable = { name = gbr_coal_progress_from_buildings value = 0 }
	set_variable = { name = gbr_coal_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_coal_progress_from_price value = 0 }
	set_variable = { name = gbr_coal_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_coal_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_coal_popularity_holder multiply = 3 }
			change_variable = { name = gbr_coal_progress_from_characters subtract = var:gbr_coal_popularity_holder }
			remove_variable = gbr_coal_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_coal_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_coal_popularity_holder multiply = 2 }
			change_variable = { name = gbr_coal_progress_from_characters subtract = var:gbr_coal_popularity_holder }
			remove_variable = gbr_coal_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_coal_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_coal_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_coal_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_coal_popularity_holder multiply = 2 }
			change_variable = { name = gbr_coal_progress_from_characters add = var:gbr_coal_popularity_holder }
			remove_variable = gbr_coal_popularity_holder
		}
	}
	change_variable = { name = gbr_coal_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coal_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coal_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coal_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coal_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coal_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_coal_building_holder value = var:gbr_coal_mine_count }
	change_variable = { name = gbr_coal_building_holder divide = 100 }
	change_variable = { name = gbr_coal_progress_from_buildings subtract = var:gbr_coal_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_coal_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_coal_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_coal_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_coal_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_coal_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_characters }
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_igs }
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_buildings }
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_legitimacy }
	change_variable = { name = gbr_coal_progress_next add = var:gbr_coal_progress_from_price }
}

# Coffee rationing progress weekly calculation
gbr_weekly_pulse_rationing_coffee_progress = {
	set_variable = { name = gbr_coffee_progress_from_characters value = 0 }
	set_variable = { name = gbr_coffee_progress_from_igs value = 0 }
	set_variable = { name = gbr_coffee_progress_from_buildings value = 0 }
	set_variable = { name = gbr_coffee_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_coffee_progress_from_price value = 0 }
	set_variable = { name = gbr_coffee_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_coffee_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_coffee_popularity_holder multiply = 3 }
			change_variable = { name = gbr_coffee_progress_from_characters subtract = var:gbr_coffee_popularity_holder }
			remove_variable = gbr_coffee_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_coffee_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_coffee_popularity_holder multiply = 2 }
			change_variable = { name = gbr_coffee_progress_from_characters subtract = var:gbr_coffee_popularity_holder }
			remove_variable = gbr_coffee_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_coffee_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_coffee_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_coffee_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_coffee_popularity_holder multiply = 2 }
			change_variable = { name = gbr_coffee_progress_from_characters add = var:gbr_coffee_popularity_holder }
			remove_variable = gbr_coffee_popularity_holder
		}
	}
	change_variable = { name = gbr_coffee_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coffee_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coffee_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coffee_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coffee_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_coffee_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_coffee_building_holder value = var:gbr_coffee_plantation_count }
	change_variable = { name = gbr_coffee_building_holder divide = 100 }
	change_variable = { name = gbr_coffee_progress_from_buildings subtract = var:gbr_coffee_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_coffee_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_coffee_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_coffee_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_coffee_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_coffee_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_characters }
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_igs }
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_buildings }
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_legitimacy }
	change_variable = { name = gbr_coffee_progress_next add = var:gbr_coffee_progress_from_price }
}

# Copper rationing progress weekly calculation
gbr_weekly_pulse_rationing_copper_progress = {
	set_variable = { name = gbr_copper_progress_from_characters value = 0 }
	set_variable = { name = gbr_copper_progress_from_igs value = 0 }
	set_variable = { name = gbr_copper_progress_from_buildings value = 0 }
	set_variable = { name = gbr_copper_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_copper_progress_from_price value = 0 }
	set_variable = { name = gbr_copper_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_copper_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_copper_popularity_holder multiply = 3 }
			change_variable = { name = gbr_copper_progress_from_characters subtract = var:gbr_copper_popularity_holder }
			remove_variable = gbr_copper_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_copper_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_copper_popularity_holder multiply = 2 }
			change_variable = { name = gbr_copper_progress_from_characters subtract = var:gbr_copper_popularity_holder }
			remove_variable = gbr_copper_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_copper_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_copper_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_copper_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_copper_popularity_holder multiply = 2 }
			change_variable = { name = gbr_copper_progress_from_characters add = var:gbr_copper_popularity_holder }
			remove_variable = gbr_copper_popularity_holder
		}
	}
	change_variable = { name = gbr_copper_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_copper_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_copper_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_copper_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_copper_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_copper_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_copper_building_holder value = var:gbr_copper_mine_count }
	change_variable = { name = gbr_copper_building_holder divide = 100 }
	change_variable = { name = gbr_copper_progress_from_buildings subtract = var:gbr_copper_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_copper_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_copper_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_copper_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_copper_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_copper_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_characters }
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_igs }
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_buildings }
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_legitimacy }
	change_variable = { name = gbr_copper_progress_next add = var:gbr_copper_progress_from_price }
}

# Engines rationing progress weekly calculation
gbr_weekly_pulse_rationing_engines_progress = {
	set_variable = { name = gbr_engines_progress_from_characters value = 0 }
	set_variable = { name = gbr_engines_progress_from_igs value = 0 }
	set_variable = { name = gbr_engines_progress_from_buildings value = 0 }
	set_variable = { name = gbr_engines_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_engines_progress_from_price value = 0 }
	set_variable = { name = gbr_engines_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_engines_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_engines_popularity_holder multiply = 3 }
			change_variable = { name = gbr_engines_progress_from_characters subtract = var:gbr_engines_popularity_holder }
			remove_variable = gbr_engines_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_engines_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_engines_popularity_holder multiply = 2 }
			change_variable = { name = gbr_engines_progress_from_characters subtract = var:gbr_engines_popularity_holder }
			remove_variable = gbr_engines_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_engines_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_engines_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_engines_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_engines_popularity_holder multiply = 2 }
			change_variable = { name = gbr_engines_progress_from_characters add = var:gbr_engines_popularity_holder }
			remove_variable = gbr_engines_popularity_holder
		}
	}
	change_variable = { name = gbr_engines_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_engines_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_engines_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_engines_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_engines_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_engines_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_engines_building_holder value = var:gbr_motor_industry_count }
	change_variable = { name = gbr_engines_building_holder divide = 200 }
	change_variable = { name = gbr_engines_progress_from_buildings subtract = var:gbr_engines_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_engines_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_engines_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_engines_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_engines_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_engines_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_characters }
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_igs }
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_buildings }
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_legitimacy }
	change_variable = { name = gbr_engines_progress_next add = var:gbr_engines_progress_from_price }
}

# Explosives rationing progress weekly calculation
gbr_weekly_pulse_rationing_explosives_progress = {
	set_variable = { name = gbr_explosives_progress_from_characters value = 0 }
	set_variable = { name = gbr_explosives_progress_from_igs value = 0 }
	set_variable = { name = gbr_explosives_progress_from_buildings value = 0 }
	set_variable = { name = gbr_explosives_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_explosives_progress_from_price value = 0 }
	set_variable = { name = gbr_explosives_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_explosives_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_explosives_popularity_holder multiply = 3 }
			change_variable = { name = gbr_explosives_progress_from_characters subtract = var:gbr_explosives_popularity_holder }
			remove_variable = gbr_explosives_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_explosives_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_explosives_popularity_holder multiply = 2 }
			change_variable = { name = gbr_explosives_progress_from_characters subtract = var:gbr_explosives_popularity_holder }
			remove_variable = gbr_explosives_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_explosives_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_explosives_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_explosives_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_explosives_popularity_holder multiply = 2 }
			change_variable = { name = gbr_explosives_progress_from_characters add = var:gbr_explosives_popularity_holder }
			remove_variable = gbr_explosives_popularity_holder
		}
	}
	change_variable = { name = gbr_explosives_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_explosives_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_explosives_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_explosives_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_explosives_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_explosives_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_explosives_building_holder value = var:gbr_explosives_industry_count }
	change_variable = { name = gbr_explosives_building_holder divide = 200 }
	change_variable = { name = gbr_explosives_progress_from_buildings subtract = var:gbr_explosives_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_explosives_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_explosives_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_explosives_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_explosives_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_explosives_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_characters }
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_igs }
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_buildings }
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_legitimacy }
	change_variable = { name = gbr_explosives_progress_next add = var:gbr_explosives_progress_from_price }
}

# Fabric rationing progress weekly calculation
gbr_weekly_pulse_rationing_fabric_progress = {
	set_variable = { name = gbr_fabric_progress_from_characters value = 0 }
	set_variable = { name = gbr_fabric_progress_from_igs value = 0 }
	set_variable = { name = gbr_fabric_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fabric_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_fabric_progress_from_price value = 0 }
	set_variable = { name = gbr_fabric_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fabric_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fabric_popularity_holder multiply = 3 }
			change_variable = { name = gbr_fabric_progress_from_characters subtract = var:gbr_fabric_popularity_holder }
			remove_variable = gbr_fabric_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fabric_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fabric_popularity_holder multiply = 2 }
			change_variable = { name = gbr_fabric_progress_from_characters subtract = var:gbr_fabric_popularity_holder }
			remove_variable = gbr_fabric_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_fabric_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_fabric_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fabric_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fabric_popularity_holder multiply = 2 }
			change_variable = { name = gbr_fabric_progress_from_characters add = var:gbr_fabric_popularity_holder }
			remove_variable = gbr_fabric_popularity_holder
		}
	}
	change_variable = { name = gbr_fabric_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fabric_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fabric_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fabric_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fabric_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fabric_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_fabric_building_holder value = var:gbr_cotton_plantation_count }
	change_variable = { name = gbr_fabric_building_holder divide = 100 }
	change_variable = { name = gbr_fabric_progress_from_buildings subtract = var:gbr_fabric_building_holder }
	set_variable = { name = gbr_fabric_building_holder value = var:gbr_livestock_ranch_fabric_count }
	change_variable = { name = gbr_fabric_building_holder divide = 200 }
	change_variable = { name = gbr_fabric_progress_from_buildings subtract = var:gbr_fabric_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_fabric_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_fabric_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_fabric_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_fabric_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_fabric_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_characters }
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_igs }
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_buildings }
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_legitimacy }
	change_variable = { name = gbr_fabric_progress_next add = var:gbr_fabric_progress_from_price }
}

# Fish rationing progress weekly calculation
gbr_weekly_pulse_rationing_fish_progress = {
	set_variable = { name = gbr_fish_progress_from_characters value = 0 }
	set_variable = { name = gbr_fish_progress_from_igs value = 0 }
	set_variable = { name = gbr_fish_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fish_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_fish_progress_from_price value = 0 }
	set_variable = { name = gbr_fish_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fish_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fish_popularity_holder multiply = 3 }
			change_variable = { name = gbr_fish_progress_from_characters subtract = var:gbr_fish_popularity_holder }
			remove_variable = gbr_fish_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fish_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fish_popularity_holder multiply = 2 }
			change_variable = { name = gbr_fish_progress_from_characters subtract = var:gbr_fish_popularity_holder }
			remove_variable = gbr_fish_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_fish_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_fish_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fish_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fish_popularity_holder multiply = 2 }
			change_variable = { name = gbr_fish_progress_from_characters add = var:gbr_fish_popularity_holder }
			remove_variable = gbr_fish_popularity_holder
		}
	}
	change_variable = { name = gbr_fish_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fish_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fish_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fish_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fish_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fish_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_fish_building_holder value = var:gbr_fishing_wharf_count }
	change_variable = { name = gbr_fish_building_holder divide = 100 }
	change_variable = { name = gbr_fish_progress_from_buildings subtract = var:gbr_fish_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_fish_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_fish_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_fish_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_fish_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_fish_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_characters }
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_igs }
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_buildings }
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_legitimacy }
	change_variable = { name = gbr_fish_progress_next add = var:gbr_fish_progress_from_price }
}

# Fruit rationing progress weekly calculation
gbr_weekly_pulse_rationing_fruit_progress = {
	set_variable = { name = gbr_fruit_progress_from_characters value = 0 }
	set_variable = { name = gbr_fruit_progress_from_igs value = 0 }
	set_variable = { name = gbr_fruit_progress_from_buildings value = 0 }
	set_variable = { name = gbr_fruit_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_fruit_progress_from_price value = 0 }
	set_variable = { name = gbr_fruit_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fruit_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fruit_popularity_holder multiply = 3 }
			change_variable = { name = gbr_fruit_progress_from_characters subtract = var:gbr_fruit_popularity_holder }
			remove_variable = gbr_fruit_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fruit_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fruit_popularity_holder multiply = 2 }
			change_variable = { name = gbr_fruit_progress_from_characters subtract = var:gbr_fruit_popularity_holder }
			remove_variable = gbr_fruit_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_fruit_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_fruit_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_fruit_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_fruit_popularity_holder multiply = 2 }
			change_variable = { name = gbr_fruit_progress_from_characters add = var:gbr_fruit_popularity_holder }
			remove_variable = gbr_fruit_popularity_holder
		}
	}
	change_variable = { name = gbr_fruit_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fruit_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fruit_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fruit_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fruit_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_fruit_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_fruit_building_holder value = var:gbr_banana_plantation_count }
	change_variable = { name = gbr_fruit_building_holder divide = 100 }
	change_variable = { name = gbr_fruit_progress_from_buildings subtract = var:gbr_fruit_building_holder }
	set_variable = { name = gbr_fruit_building_holder value = var:gbr_rye_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder add = var:gbr_wheat_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder add = var:gbr_rice_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder add = var:gbr_maize_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder add = var:gbr_millet_farm_fruit_count }
	change_variable = { name = gbr_fruit_building_holder divide = 400 }
	change_variable = { name = gbr_fruit_progress_from_buildings subtract = var:gbr_fruit_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_fruit_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_fruit_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_fruit_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_fruit_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_fruit_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_characters }
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_igs }
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_buildings }
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_legitimacy }
	change_variable = { name = gbr_fruit_progress_next add = var:gbr_fruit_progress_from_price }
}

# Glass rationing progress weekly calculation
gbr_weekly_pulse_rationing_glass_progress = {
	set_variable = { name = gbr_glass_progress_from_characters value = 0 }
	set_variable = { name = gbr_glass_progress_from_igs value = 0 }
	set_variable = { name = gbr_glass_progress_from_buildings value = 0 }
	set_variable = { name = gbr_glass_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_glass_progress_from_price value = 0 }
	set_variable = { name = gbr_glass_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_glass_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_glass_popularity_holder multiply = 3 }
			change_variable = { name = gbr_glass_progress_from_characters subtract = var:gbr_glass_popularity_holder }
			remove_variable = gbr_glass_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_glass_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_glass_popularity_holder multiply = 2 }
			change_variable = { name = gbr_glass_progress_from_characters subtract = var:gbr_glass_popularity_holder }
			remove_variable = gbr_glass_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_glass_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_glass_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_glass_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_glass_popularity_holder multiply = 2 }
			change_variable = { name = gbr_glass_progress_from_characters add = var:gbr_glass_popularity_holder }
			remove_variable = gbr_glass_popularity_holder
		}
	}
	change_variable = { name = gbr_glass_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_glass_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_glass_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_glass_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_glass_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_glass_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_glass_building_holder value = var:gbr_glassworks_count }
	change_variable = { name = gbr_glass_building_holder divide = 200 }
	change_variable = { name = gbr_glass_progress_from_buildings subtract = var:gbr_glass_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_glass_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_glass_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_glass_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_glass_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_glass_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_characters }
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_igs }
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_buildings }
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_legitimacy }
	change_variable = { name = gbr_glass_progress_next add = var:gbr_glass_progress_from_price }
}

# Grain rationing progress weekly calculation
gbr_weekly_pulse_rationing_grain_progress = {
	set_variable = { name = gbr_grain_progress_from_characters value = 0 }
	set_variable = { name = gbr_grain_progress_from_igs value = 0 }
	set_variable = { name = gbr_grain_progress_from_buildings value = 0 }
	set_variable = { name = gbr_grain_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_grain_progress_from_price value = 0 }
	set_variable = { name = gbr_grain_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_grain_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_grain_popularity_holder multiply = 3 }
			change_variable = { name = gbr_grain_progress_from_characters subtract = var:gbr_grain_popularity_holder }
			remove_variable = gbr_grain_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_grain_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_grain_popularity_holder multiply = 2 }
			change_variable = { name = gbr_grain_progress_from_characters subtract = var:gbr_grain_popularity_holder }
			remove_variable = gbr_grain_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_grain_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_grain_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_grain_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_grain_popularity_holder multiply = 2 }
			change_variable = { name = gbr_grain_progress_from_characters add = var:gbr_grain_popularity_holder }
			remove_variable = gbr_grain_popularity_holder
		}
	}
	change_variable = { name = gbr_grain_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_grain_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_grain_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_grain_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_grain_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_grain_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_grain_building_holder value = var:gbr_rye_farm_count }
	change_variable = { name = gbr_grain_building_holder add = var:gbr_wheat_farm_count }
	change_variable = { name = gbr_grain_building_holder add = var:gbr_rice_farm_count }
	change_variable = { name = gbr_grain_building_holder add = var:gbr_maize_farm_count }
	change_variable = { name = gbr_grain_building_holder add = var:gbr_millet_farm_count }
	change_variable = { name = gbr_grain_building_holder divide = 100 }
	change_variable = { name = gbr_grain_progress_from_buildings subtract = var:gbr_grain_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_grain_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_grain_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_grain_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_grain_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_grain_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_characters }
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_igs }
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_buildings }
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_legitimacy }
	change_variable = { name = gbr_grain_progress_next add = var:gbr_grain_progress_from_price }
}

# Groceries rationing progress weekly calculation
gbr_weekly_pulse_rationing_groceries_progress = {
	set_variable = { name = gbr_groceries_progress_from_characters value = 0 }
	set_variable = { name = gbr_groceries_progress_from_igs value = 0 }
	set_variable = { name = gbr_groceries_progress_from_buildings value = 0 }
	set_variable = { name = gbr_groceries_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_groceries_progress_from_price value = 0 }
	set_variable = { name = gbr_groceries_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_groceries_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_groceries_popularity_holder multiply = 3 }
			change_variable = { name = gbr_groceries_progress_from_characters subtract = var:gbr_groceries_popularity_holder }
			remove_variable = gbr_groceries_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_groceries_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_groceries_popularity_holder multiply = 2 }
			change_variable = { name = gbr_groceries_progress_from_characters subtract = var:gbr_groceries_popularity_holder }
			remove_variable = gbr_groceries_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_groceries_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_groceries_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_groceries_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_groceries_popularity_holder multiply = 2 }
			change_variable = { name = gbr_groceries_progress_from_characters add = var:gbr_groceries_popularity_holder }
			remove_variable = gbr_groceries_popularity_holder
		}
	}
	change_variable = { name = gbr_groceries_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_groceries_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_groceries_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_groceries_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_groceries_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_groceries_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_groceries_building_holder value = var:gbr_food_industry_count }
	change_variable = { name = gbr_groceries_building_holder divide = 200 }
	change_variable = { name = gbr_groceries_progress_from_buildings subtract = var:gbr_groceries_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_groceries_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_groceries_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_groceries_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_groceries_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_groceries_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_characters }
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_igs }
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_buildings }
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_legitimacy }
	change_variable = { name = gbr_groceries_progress_next add = var:gbr_groceries_progress_from_price }
}

# High Quality Fabric rationing progress weekly calculation
gbr_weekly_pulse_rationing_high_quality_fabric_progress = {
	set_variable = { name = gbr_high_quality_fabric_progress_from_characters value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_igs value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_buildings value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_high_quality_fabric_progress_from_price value = 0 }
	set_variable = { name = gbr_high_quality_fabric_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_high_quality_fabric_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_high_quality_fabric_popularity_holder multiply = 3 }
			change_variable = { name = gbr_high_quality_fabric_progress_from_characters subtract = var:gbr_high_quality_fabric_popularity_holder }
			remove_variable = gbr_high_quality_fabric_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_high_quality_fabric_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_high_quality_fabric_popularity_holder multiply = 2 }
			change_variable = { name = gbr_high_quality_fabric_progress_from_characters subtract = var:gbr_high_quality_fabric_popularity_holder }
			remove_variable = gbr_high_quality_fabric_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_high_quality_fabric_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_high_quality_fabric_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_high_quality_fabric_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_high_quality_fabric_popularity_holder multiply = 2 }
			change_variable = { name = gbr_high_quality_fabric_progress_from_characters add = var:gbr_high_quality_fabric_popularity_holder }
			remove_variable = gbr_high_quality_fabric_popularity_holder
		}
	}
	change_variable = { name = gbr_high_quality_fabric_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_high_quality_fabric_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_high_quality_fabric_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_high_quality_fabric_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_high_quality_fabric_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_high_quality_fabric_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_high_quality_fabric_building_holder value = var:gbr_silk_plantation_count }
	change_variable = { name = gbr_high_quality_fabric_building_holder divide = 100 }
	change_variable = { name = gbr_high_quality_fabric_progress_from_buildings subtract = var:gbr_high_quality_fabric_building_holder }
	set_variable = { name = gbr_high_quality_fabric_building_holder value = var:gbr_synthetics_plant_count }
	change_variable = { name = gbr_high_quality_fabric_building_holder divide = 300 }
	change_variable = { name = gbr_high_quality_fabric_progress_from_buildings subtract = var:gbr_high_quality_fabric_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_high_quality_fabric_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_high_quality_fabric_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_high_quality_fabric_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_high_quality_fabric_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_characters }
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_igs }
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_buildings }
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_legitimacy }
	change_variable = { name = gbr_high_quality_fabric_progress_next add = var:gbr_high_quality_fabric_progress_from_price }
}

# Iron rationing progress weekly calculation
gbr_weekly_pulse_rationing_iron_progress = {
	set_variable = { name = gbr_iron_progress_from_characters value = 0 }
	set_variable = { name = gbr_iron_progress_from_igs value = 0 }
	set_variable = { name = gbr_iron_progress_from_buildings value = 0 }
	set_variable = { name = gbr_iron_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_iron_progress_from_price value = 0 }
	set_variable = { name = gbr_iron_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_iron_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_iron_popularity_holder multiply = 3 }
			change_variable = { name = gbr_iron_progress_from_characters subtract = var:gbr_iron_popularity_holder }
			remove_variable = gbr_iron_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_iron_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_iron_popularity_holder multiply = 2 }
			change_variable = { name = gbr_iron_progress_from_characters subtract = var:gbr_iron_popularity_holder }
			remove_variable = gbr_iron_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_iron_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_iron_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_iron_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_iron_popularity_holder multiply = 2 }
			change_variable = { name = gbr_iron_progress_from_characters add = var:gbr_iron_popularity_holder }
			remove_variable = gbr_iron_popularity_holder
		}
	}
	change_variable = { name = gbr_iron_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_iron_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_iron_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_iron_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_iron_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_iron_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_iron_building_holder value = var:gbr_iron_mine_count }
	change_variable = { name = gbr_iron_building_holder divide = 100 }
	change_variable = { name = gbr_iron_progress_from_buildings subtract = var:gbr_iron_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_iron_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_iron_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_iron_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_iron_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_iron_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_characters }
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_igs }
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_buildings }
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_legitimacy }
	change_variable = { name = gbr_iron_progress_next add = var:gbr_iron_progress_from_price }
}

# Lead rationing progress weekly calculation
gbr_weekly_pulse_rationing_lead_progress = {
	set_variable = { name = gbr_lead_progress_from_characters value = 0 }
	set_variable = { name = gbr_lead_progress_from_igs value = 0 }
	set_variable = { name = gbr_lead_progress_from_buildings value = 0 }
	set_variable = { name = gbr_lead_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_lead_progress_from_price value = 0 }
	set_variable = { name = gbr_lead_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_lead_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_lead_popularity_holder multiply = 3 }
			change_variable = { name = gbr_lead_progress_from_characters subtract = var:gbr_lead_popularity_holder }
			remove_variable = gbr_lead_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_lead_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_lead_popularity_holder multiply = 2 }
			change_variable = { name = gbr_lead_progress_from_characters subtract = var:gbr_lead_popularity_holder }
			remove_variable = gbr_lead_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_lead_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_lead_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_lead_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_lead_popularity_holder multiply = 2 }
			change_variable = { name = gbr_lead_progress_from_characters add = var:gbr_lead_popularity_holder }
			remove_variable = gbr_lead_popularity_holder
		}
	}
	change_variable = { name = gbr_lead_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_lead_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_lead_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_lead_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_lead_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_lead_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_lead_building_holder value = var:gbr_lead_mine_count }
	change_variable = { name = gbr_lead_building_holder divide = 100 }
	change_variable = { name = gbr_lead_progress_from_buildings subtract = var:gbr_lead_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_lead_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_lead_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_lead_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_lead_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_lead_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_characters }
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_igs }
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_buildings }
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_legitimacy }
	change_variable = { name = gbr_lead_progress_next add = var:gbr_lead_progress_from_price }
}

# Liquor rationing progress weekly calculation
gbr_weekly_pulse_rationing_liquor_progress = {
	set_variable = { name = gbr_liquor_progress_from_characters value = 0 }
	set_variable = { name = gbr_liquor_progress_from_igs value = 0 }
	set_variable = { name = gbr_liquor_progress_from_buildings value = 0 }
	set_variable = { name = gbr_liquor_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_liquor_progress_from_price value = 0 }
	set_variable = { name = gbr_liquor_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_liquor_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_liquor_popularity_holder multiply = 3 }
			change_variable = { name = gbr_liquor_progress_from_characters subtract = var:gbr_liquor_popularity_holder }
			remove_variable = gbr_liquor_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_liquor_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_liquor_popularity_holder multiply = 2 }
			change_variable = { name = gbr_liquor_progress_from_characters subtract = var:gbr_liquor_popularity_holder }
			remove_variable = gbr_liquor_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_liquor_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_liquor_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_liquor_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_liquor_popularity_holder multiply = 2 }
			change_variable = { name = gbr_liquor_progress_from_characters add = var:gbr_liquor_popularity_holder }
			remove_variable = gbr_liquor_popularity_holder
		}
	}
	change_variable = { name = gbr_liquor_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_liquor_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_liquor_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_liquor_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_liquor_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_liquor_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_liquor_building_holder value = var:gbr_distilleries_liquor_count }
	change_variable = { name = gbr_liquor_building_holder divide = 200 }
	change_variable = { name = gbr_liquor_progress_from_buildings subtract = var:gbr_liquor_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_liquor_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_liquor_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_liquor_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_liquor_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_liquor_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_characters }
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_igs }
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_buildings }
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_legitimacy }
	change_variable = { name = gbr_liquor_progress_next add = var:gbr_liquor_progress_from_price }
}

# Meat rationing progress weekly calculation
gbr_weekly_pulse_rationing_meat_progress = {
	set_variable = { name = gbr_meat_progress_from_characters value = 0 }
	set_variable = { name = gbr_meat_progress_from_igs value = 0 }
	set_variable = { name = gbr_meat_progress_from_buildings value = 0 }
	set_variable = { name = gbr_meat_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_meat_progress_from_price value = 0 }
	set_variable = { name = gbr_meat_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_meat_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_meat_popularity_holder multiply = 3 }
			change_variable = { name = gbr_meat_progress_from_characters subtract = var:gbr_meat_popularity_holder }
			remove_variable = gbr_meat_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_meat_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_meat_popularity_holder multiply = 2 }
			change_variable = { name = gbr_meat_progress_from_characters subtract = var:gbr_meat_popularity_holder }
			remove_variable = gbr_meat_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_meat_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_meat_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_meat_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_meat_popularity_holder multiply = 2 }
			change_variable = { name = gbr_meat_progress_from_characters add = var:gbr_meat_popularity_holder }
			remove_variable = gbr_meat_popularity_holder
		}
	}
	change_variable = { name = gbr_meat_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_meat_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_meat_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_meat_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_meat_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_meat_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_meat_building_holder value = var:gbr_livestock_ranch_count }
	change_variable = { name = gbr_meat_building_holder divide = 100 }
	change_variable = { name = gbr_meat_progress_from_buildings subtract = var:gbr_meat_building_holder }
	set_variable = { name = gbr_meat_building_holder value = var:gbr_fishing_wharf_meat_count }
	change_variable = { name = gbr_meat_building_holder divide = 300 }
	change_variable = { name = gbr_meat_progress_from_buildings subtract = var:gbr_meat_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_meat_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_meat_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_meat_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_meat_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_meat_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_characters }
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_igs }
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_buildings }
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_legitimacy }
	change_variable = { name = gbr_meat_progress_next add = var:gbr_meat_progress_from_price }
}

# Oil rationing progress weekly calculation
gbr_weekly_pulse_rationing_oil_progress = {
	set_variable = { name = gbr_oil_progress_from_characters value = 0 }
	set_variable = { name = gbr_oil_progress_from_igs value = 0 }
	set_variable = { name = gbr_oil_progress_from_buildings value = 0 }
	set_variable = { name = gbr_oil_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_oil_progress_from_price value = 0 }
	set_variable = { name = gbr_oil_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_oil_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_oil_popularity_holder multiply = 3 }
			change_variable = { name = gbr_oil_progress_from_characters subtract = var:gbr_oil_popularity_holder }
			remove_variable = gbr_oil_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_oil_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_oil_popularity_holder multiply = 2 }
			change_variable = { name = gbr_oil_progress_from_characters subtract = var:gbr_oil_popularity_holder }
			remove_variable = gbr_oil_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_oil_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_oil_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_oil_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_oil_popularity_holder multiply = 2 }
			change_variable = { name = gbr_oil_progress_from_characters add = var:gbr_oil_popularity_holder }
			remove_variable = gbr_oil_popularity_holder
		}
	}
	change_variable = { name = gbr_oil_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_oil_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_oil_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_oil_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_oil_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_oil_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_oil_building_holder value = var:gbr_oil_rig_count }
	change_variable = { name = gbr_oil_building_holder divide = 100 }
	change_variable = { name = gbr_oil_progress_from_buildings subtract = var:gbr_oil_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_oil_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_oil_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_oil_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_oil_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_oil_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_characters }
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_igs }
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_buildings }
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_legitimacy }
	change_variable = { name = gbr_oil_progress_next add = var:gbr_oil_progress_from_price }
}

# Code for total goods imports
# set_variable = {
	# name = gbr_oil_imports_total
	# value = market.mg:oil.market_goods_imports
# }
# Code for total goods exports
# set_variable = {
	# name = gbr_oil_exports_total
	# value = market.mg:oil.market_goods_exports
# }

# Opium rationing progress weekly calculation
gbr_weekly_pulse_rationing_opium_progress = {
	set_variable = { name = gbr_opium_progress_from_characters value = 0 }
	set_variable = { name = gbr_opium_progress_from_igs value = 0 }
	set_variable = { name = gbr_opium_progress_from_buildings value = 0 }
	set_variable = { name = gbr_opium_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_opium_progress_from_price value = 0 }
	set_variable = { name = gbr_opium_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_opium_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_opium_popularity_holder multiply = 3 }
			change_variable = { name = gbr_opium_progress_from_characters subtract = var:gbr_opium_popularity_holder }
			remove_variable = gbr_opium_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_opium_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_opium_popularity_holder multiply = 2 }
			change_variable = { name = gbr_opium_progress_from_characters subtract = var:gbr_opium_popularity_holder }
			remove_variable = gbr_opium_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_opium_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_opium_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_opium_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_opium_popularity_holder multiply = 2 }
			change_variable = { name = gbr_opium_progress_from_characters add = var:gbr_opium_popularity_holder }
			remove_variable = gbr_opium_popularity_holder
		}
	}
	change_variable = { name = gbr_opium_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_opium_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_opium_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_opium_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_opium_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_opium_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_opium_building_holder value = var:gbr_opium_plantation_count }
	change_variable = { name = gbr_opium_building_holder divide = 100 }
	change_variable = { name = gbr_opium_progress_from_buildings subtract = var:gbr_opium_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_opium_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_opium_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_opium_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_opium_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_opium_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_characters }
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_igs }
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_buildings }
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_legitimacy }
	change_variable = { name = gbr_opium_progress_next add = var:gbr_opium_progress_from_price }
}

# Paper rationing progress weekly calculation
gbr_weekly_pulse_rationing_paper_progress = {
	set_variable = { name = gbr_paper_progress_from_characters value = 0 }
	set_variable = { name = gbr_paper_progress_from_igs value = 0 }
	set_variable = { name = gbr_paper_progress_from_buildings value = 0 }
	set_variable = { name = gbr_paper_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_paper_progress_from_price value = 0 }
	set_variable = { name = gbr_paper_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_paper_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_paper_popularity_holder multiply = 3 }
			change_variable = { name = gbr_paper_progress_from_characters subtract = var:gbr_paper_popularity_holder }
			remove_variable = gbr_paper_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_paper_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_paper_popularity_holder multiply = 2 }
			change_variable = { name = gbr_paper_progress_from_characters subtract = var:gbr_paper_popularity_holder }
			remove_variable = gbr_paper_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_paper_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_paper_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_paper_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_paper_popularity_holder multiply = 2 }
			change_variable = { name = gbr_paper_progress_from_characters add = var:gbr_paper_popularity_holder }
			remove_variable = gbr_paper_popularity_holder
		}
	}
	change_variable = { name = gbr_paper_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_paper_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_paper_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_paper_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_paper_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_paper_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_paper_building_holder value = var:gbr_paper_manufactories_count }
	change_variable = { name = gbr_paper_building_holder divide = 200 }
	change_variable = { name = gbr_paper_progress_from_buildings subtract = var:gbr_paper_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_paper_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_paper_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_paper_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_paper_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_paper_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_characters }
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_igs }
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_buildings }
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_legitimacy }
	change_variable = { name = gbr_paper_progress_next add = var:gbr_paper_progress_from_price }
}

# Pharmaceuticals rationing progress weekly calculation
gbr_weekly_pulse_rationing_pharmaceuticals_progress = {
	set_variable = { name = gbr_pharmaceuticals_progress_from_characters value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_igs value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_buildings value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_pharmaceuticals_progress_from_price value = 0 }
	set_variable = { name = gbr_pharmaceuticals_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_pharmaceuticals_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_pharmaceuticals_popularity_holder multiply = 3 }
			change_variable = { name = gbr_pharmaceuticals_progress_from_characters subtract = var:gbr_pharmaceuticals_popularity_holder }
			remove_variable = gbr_pharmaceuticals_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_pharmaceuticals_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_pharmaceuticals_popularity_holder multiply = 2 }
			change_variable = { name = gbr_pharmaceuticals_progress_from_characters subtract = var:gbr_pharmaceuticals_popularity_holder }
			remove_variable = gbr_pharmaceuticals_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_pharmaceuticals_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_pharmaceuticals_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_pharmaceuticals_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_pharmaceuticals_popularity_holder multiply = 2 }
			change_variable = { name = gbr_pharmaceuticals_progress_from_characters add = var:gbr_pharmaceuticals_popularity_holder }
			remove_variable = gbr_pharmaceuticals_popularity_holder
		}
	}
	change_variable = { name = gbr_pharmaceuticals_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_pharmaceuticals_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_pharmaceuticals_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_pharmaceuticals_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_pharmaceuticals_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_pharmaceuticals_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_pharmaceuticals_building_holder value = var:gbr_pharmaceutical_industry_count }
	change_variable = { name = gbr_pharmaceuticals_building_holder divide = 200 }
	change_variable = { name = gbr_pharmaceuticals_progress_from_buildings subtract = var:gbr_pharmaceuticals_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_pharmaceuticals_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_pharmaceuticals_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_pharmaceuticals_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_pharmaceuticals_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_characters }
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_igs }
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_buildings }
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_legitimacy }
	change_variable = { name = gbr_pharmaceuticals_progress_next add = var:gbr_pharmaceuticals_progress_from_price }
}

# Phosphorus rationing progress weekly calculation
gbr_weekly_pulse_rationing_phosphorus_progress = {
	set_variable = { name = gbr_phosphorus_progress_from_characters value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_igs value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_buildings value = 0 }
	set_variable = { name = gbr_phosphorus_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_phosphorus_progress_from_price value = 0 }
	set_variable = { name = gbr_phosphorus_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_phosphorus_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_phosphorus_popularity_holder multiply = 3 }
			change_variable = { name = gbr_phosphorus_progress_from_characters subtract = var:gbr_phosphorus_popularity_holder }
			remove_variable = gbr_phosphorus_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_phosphorus_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_phosphorus_popularity_holder multiply = 2 }
			change_variable = { name = gbr_phosphorus_progress_from_characters subtract = var:gbr_phosphorus_popularity_holder }
			remove_variable = gbr_phosphorus_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_phosphorus_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_phosphorus_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_phosphorus_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_phosphorus_popularity_holder multiply = 2 }
			change_variable = { name = gbr_phosphorus_progress_from_characters add = var:gbr_phosphorus_popularity_holder }
			remove_variable = gbr_phosphorus_popularity_holder
		}
	}
	change_variable = { name = gbr_phosphorus_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_phosphorus_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_phosphorus_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_phosphorus_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_phosphorus_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_phosphorus_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_phosphorus_building_holder value = var:gbr_phosphorus_mine_count }
	change_variable = { name = gbr_phosphorus_building_holder divide = 100 }
	change_variable = { name = gbr_phosphorus_progress_from_buildings subtract = var:gbr_phosphorus_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_phosphorus_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_phosphorus_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_phosphorus_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_phosphorus_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_characters }
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_igs }
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_buildings }
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_legitimacy }
	change_variable = { name = gbr_phosphorus_progress_next add = var:gbr_phosphorus_progress_from_price }
}

# Plastics rationing progress weekly calculation
gbr_weekly_pulse_rationing_plastics_progress = {
	set_variable = { name = gbr_plastics_progress_from_characters value = 0 }
	set_variable = { name = gbr_plastics_progress_from_igs value = 0 }
	set_variable = { name = gbr_plastics_progress_from_buildings value = 0 }
	set_variable = { name = gbr_plastics_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_plastics_progress_from_price value = 0 }
	set_variable = { name = gbr_plastics_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_plastics_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_plastics_popularity_holder multiply = 3 }
			change_variable = { name = gbr_plastics_progress_from_characters subtract = var:gbr_plastics_popularity_holder }
			remove_variable = gbr_plastics_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_plastics_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_plastics_popularity_holder multiply = 2 }
			change_variable = { name = gbr_plastics_progress_from_characters subtract = var:gbr_plastics_popularity_holder }
			remove_variable = gbr_plastics_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_plastics_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_plastics_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_plastics_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_plastics_popularity_holder multiply = 2 }
			change_variable = { name = gbr_plastics_progress_from_characters add = var:gbr_plastics_popularity_holder }
			remove_variable = gbr_plastics_popularity_holder
		}
	}
	change_variable = { name = gbr_plastics_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_plastics_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_plastics_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_plastics_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_plastics_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_plastics_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_plastics_building_holder value = var:gbr_fuel_refineries_plastics_count }
	change_variable = { name = gbr_plastics_building_holder divide = 200 }
	change_variable = { name = gbr_plastics_progress_from_buildings subtract = var:gbr_plastics_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_plastics_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_plastics_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_plastics_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_plastics_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_plastics_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_characters }
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_igs }
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_buildings }
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_legitimacy }
	change_variable = { name = gbr_plastics_progress_next add = var:gbr_plastics_progress_from_price }
}

# Refined Fuel rationing progress weekly calculation
gbr_weekly_pulse_rationing_refined_fuel_progress = {
	set_variable = { name = gbr_refined_fuel_progress_from_characters value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_igs value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_buildings value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_refined_fuel_progress_from_price value = 0 }
	set_variable = { name = gbr_refined_fuel_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_refined_fuel_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_refined_fuel_popularity_holder multiply = 3 }
			change_variable = { name = gbr_refined_fuel_progress_from_characters subtract = var:gbr_refined_fuel_popularity_holder }
			remove_variable = gbr_refined_fuel_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_refined_fuel_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_refined_fuel_popularity_holder multiply = 2 }
			change_variable = { name = gbr_refined_fuel_progress_from_characters subtract = var:gbr_refined_fuel_popularity_holder }
			remove_variable = gbr_refined_fuel_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_refined_fuel_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_refined_fuel_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_refined_fuel_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_refined_fuel_popularity_holder multiply = 2 }
			change_variable = { name = gbr_refined_fuel_progress_from_characters add = var:gbr_refined_fuel_popularity_holder }
			remove_variable = gbr_refined_fuel_popularity_holder
		}
	}
	change_variable = { name = gbr_refined_fuel_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_refined_fuel_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_refined_fuel_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_refined_fuel_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_refined_fuel_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_refined_fuel_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_refined_fuel_building_holder value = var:gbr_fuel_refineries_count }
	change_variable = { name = gbr_refined_fuel_building_holder divide = 200 }
	change_variable = { name = gbr_refined_fuel_progress_from_buildings subtract = var:gbr_refined_fuel_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_refined_fuel_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_refined_fuel_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_refined_fuel_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_refined_fuel_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_characters }
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_igs }
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_buildings }
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_legitimacy }
	change_variable = { name = gbr_refined_fuel_progress_next add = var:gbr_refined_fuel_progress_from_price }
}

# Rubber rationing progress weekly calculation
gbr_weekly_pulse_rationing_rubber_progress = {
	set_variable = { name = gbr_rubber_progress_from_characters value = 0 }
	set_variable = { name = gbr_rubber_progress_from_igs value = 0 }
	set_variable = { name = gbr_rubber_progress_from_buildings value = 0 }
	set_variable = { name = gbr_rubber_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_rubber_progress_from_price value = 0 }
	set_variable = { name = gbr_rubber_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_rubber_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_rubber_popularity_holder multiply = 3 }
			change_variable = { name = gbr_rubber_progress_from_characters subtract = var:gbr_rubber_popularity_holder }
			remove_variable = gbr_rubber_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_rubber_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_rubber_popularity_holder multiply = 2 }
			change_variable = { name = gbr_rubber_progress_from_characters subtract = var:gbr_rubber_popularity_holder }
			remove_variable = gbr_rubber_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_rubber_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_rubber_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_rubber_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_rubber_popularity_holder multiply = 2 }
			change_variable = { name = gbr_rubber_progress_from_characters add = var:gbr_rubber_popularity_holder }
			remove_variable = gbr_rubber_popularity_holder
		}
	}
	change_variable = { name = gbr_rubber_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_rubber_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_rubber_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_rubber_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_rubber_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_rubber_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_rubber_building_holder value = var:gbr_rubber_plantation_count }
	change_variable = { name = gbr_rubber_building_holder divide = 100 }
	change_variable = { name = gbr_rubber_progress_from_buildings subtract = var:gbr_rubber_building_holder }
	set_variable = { name = gbr_rubber_building_holder value = var:gbr_synthetics_plant_rubber_count }
	change_variable = { name = gbr_rubber_building_holder divide = 200 }
	change_variable = { name = gbr_rubber_progress_from_buildings subtract = var:gbr_rubber_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_rubber_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_rubber_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_rubber_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_rubber_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_rubber_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_characters }
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_igs }
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_buildings }
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_legitimacy }
	change_variable = { name = gbr_rubber_progress_next add = var:gbr_rubber_progress_from_price }
}

# Steel rationing progress weekly calculation
gbr_weekly_pulse_rationing_steel_progress = {
	set_variable = { name = gbr_steel_progress_from_characters value = 0 }
	set_variable = { name = gbr_steel_progress_from_igs value = 0 }
	set_variable = { name = gbr_steel_progress_from_buildings value = 0 }
	set_variable = { name = gbr_steel_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_steel_progress_from_price value = 0 }
	set_variable = { name = gbr_steel_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_steel_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_steel_popularity_holder multiply = 3 }
			change_variable = { name = gbr_steel_progress_from_characters subtract = var:gbr_steel_popularity_holder }
			remove_variable = gbr_steel_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_steel_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_steel_popularity_holder multiply = 2 }
			change_variable = { name = gbr_steel_progress_from_characters subtract = var:gbr_steel_popularity_holder }
			remove_variable = gbr_steel_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_steel_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_steel_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_steel_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_steel_popularity_holder multiply = 2 }
			change_variable = { name = gbr_steel_progress_from_characters add = var:gbr_steel_popularity_holder }
			remove_variable = gbr_steel_popularity_holder
		}
	}
	change_variable = { name = gbr_steel_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_steel_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_steel_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_steel_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_steel_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_steel_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_steel_building_holder value = var:gbr_steelworks_count }
	change_variable = { name = gbr_steel_building_holder divide = 200 }
	change_variable = { name = gbr_steel_progress_from_buildings subtract = var:gbr_steel_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_steel_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_steel_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_steel_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_steel_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_steel_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_characters }
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_igs }
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_buildings }
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_legitimacy }
	change_variable = { name = gbr_steel_progress_next add = var:gbr_steel_progress_from_price }
}

# Sugar rationing progress weekly calculation
gbr_weekly_pulse_rationing_sugar_progress = {
	set_variable = { name = gbr_sugar_progress_from_characters value = 0 }
	set_variable = { name = gbr_sugar_progress_from_igs value = 0 }
	set_variable = { name = gbr_sugar_progress_from_buildings value = 0 }
	set_variable = { name = gbr_sugar_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_sugar_progress_from_price value = 0 }
	set_variable = { name = gbr_sugar_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_sugar_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_sugar_popularity_holder multiply = 3 }
			change_variable = { name = gbr_sugar_progress_from_characters subtract = var:gbr_sugar_popularity_holder }
			remove_variable = gbr_sugar_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_sugar_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_sugar_popularity_holder multiply = 2 }
			change_variable = { name = gbr_sugar_progress_from_characters subtract = var:gbr_sugar_popularity_holder }
			remove_variable = gbr_sugar_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_sugar_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_sugar_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_sugar_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_sugar_popularity_holder multiply = 2 }
			change_variable = { name = gbr_sugar_progress_from_characters add = var:gbr_sugar_popularity_holder }
			remove_variable = gbr_sugar_popularity_holder
		}
	}
	change_variable = { name = gbr_sugar_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_sugar_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_sugar_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_sugar_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_sugar_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_sugar_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_sugar_building_holder value = var:gbr_sugar_plantation_count }
	change_variable = { name = gbr_sugar_building_holder divide = 100 }
	change_variable = { name = gbr_sugar_progress_from_buildings subtract = var:gbr_sugar_building_holder }
	set_variable = { name = gbr_sugar_building_holder value = var:gbr_rye_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder add = var:gbr_wheat_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder add = var:gbr_rice_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder add = var:gbr_maize_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder add = var:gbr_millet_farm_sugar_count }
	change_variable = { name = gbr_sugar_building_holder divide = 400 }
	change_variable = { name = gbr_sugar_progress_from_buildings subtract = var:gbr_sugar_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_sugar_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_sugar_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_sugar_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_sugar_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_sugar_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_characters }
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_igs }
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_buildings }
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_legitimacy }
	change_variable = { name = gbr_sugar_progress_next add = var:gbr_sugar_progress_from_price }
}

# Tea rationing progress weekly calculation
gbr_weekly_pulse_rationing_tea_progress = {
	set_variable = { name = gbr_tea_progress_from_characters value = 0 }
	set_variable = { name = gbr_tea_progress_from_igs value = 0 }
	set_variable = { name = gbr_tea_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tea_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_tea_progress_from_price value = 0 }
	set_variable = { name = gbr_tea_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tea_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tea_popularity_holder multiply = 3 }
			change_variable = { name = gbr_tea_progress_from_characters subtract = var:gbr_tea_popularity_holder }
			remove_variable = gbr_tea_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tea_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tea_popularity_holder multiply = 2 }
			change_variable = { name = gbr_tea_progress_from_characters subtract = var:gbr_tea_popularity_holder }
			remove_variable = gbr_tea_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_tea_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_tea_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tea_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tea_popularity_holder multiply = 2 }
			change_variable = { name = gbr_tea_progress_from_characters add = var:gbr_tea_popularity_holder }
			remove_variable = gbr_tea_popularity_holder
		}
	}
	change_variable = { name = gbr_tea_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tea_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tea_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tea_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tea_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tea_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_tea_building_holder value = var:gbr_tea_plantation_count }
	change_variable = { name = gbr_tea_building_holder divide = 100 }
	change_variable = { name = gbr_tea_progress_from_buildings subtract = var:gbr_tea_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_tea_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_tea_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_tea_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_tea_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_tea_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_characters }
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_igs }
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_buildings }
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_legitimacy }
	change_variable = { name = gbr_tea_progress_next add = var:gbr_tea_progress_from_price }
}

# Tobacco rationing progress weekly calculation
gbr_weekly_pulse_rationing_tobacco_progress = {
	set_variable = { name = gbr_tobacco_progress_from_characters value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_igs value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tobacco_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_tobacco_progress_from_price value = 0 }
	set_variable = { name = gbr_tobacco_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tobacco_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tobacco_popularity_holder multiply = 3 }
			change_variable = { name = gbr_tobacco_progress_from_characters subtract = var:gbr_tobacco_popularity_holder }
			remove_variable = gbr_tobacco_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tobacco_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tobacco_popularity_holder multiply = 2 }
			change_variable = { name = gbr_tobacco_progress_from_characters subtract = var:gbr_tobacco_popularity_holder }
			remove_variable = gbr_tobacco_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_tobacco_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_tobacco_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tobacco_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tobacco_popularity_holder multiply = 2 }
			change_variable = { name = gbr_tobacco_progress_from_characters add = var:gbr_tobacco_popularity_holder }
			remove_variable = gbr_tobacco_popularity_holder
		}
	}
	change_variable = { name = gbr_tobacco_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tobacco_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tobacco_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tobacco_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tobacco_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tobacco_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_tobacco_building_holder value = var:gbr_tobacco_plantation_count }
	change_variable = { name = gbr_tobacco_building_holder divide = 100 }
	change_variable = { name = gbr_tobacco_progress_from_buildings subtract = var:gbr_tobacco_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_tobacco_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_tobacco_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_tobacco_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_tobacco_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_tobacco_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_characters }
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_igs }
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_buildings }
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_legitimacy }
	change_variable = { name = gbr_tobacco_progress_next add = var:gbr_tobacco_progress_from_price }
}

# Tools rationing progress weekly calculation
gbr_weekly_pulse_rationing_tools_progress = {
	set_variable = { name = gbr_tools_progress_from_characters value = 0 }
	set_variable = { name = gbr_tools_progress_from_igs value = 0 }
	set_variable = { name = gbr_tools_progress_from_buildings value = 0 }
	set_variable = { name = gbr_tools_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_tools_progress_from_price value = 0 }
	set_variable = { name = gbr_tools_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tools_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tools_popularity_holder multiply = 3 }
			change_variable = { name = gbr_tools_progress_from_characters subtract = var:gbr_tools_popularity_holder }
			remove_variable = gbr_tools_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tools_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tools_popularity_holder multiply = 2 }
			change_variable = { name = gbr_tools_progress_from_characters subtract = var:gbr_tools_popularity_holder }
			remove_variable = gbr_tools_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_tools_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_tools_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_tools_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_tools_popularity_holder multiply = 2 }
			change_variable = { name = gbr_tools_progress_from_characters add = var:gbr_tools_popularity_holder }
			remove_variable = gbr_tools_popularity_holder
		}
	}
	change_variable = { name = gbr_tools_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tools_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tools_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tools_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tools_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_tools_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_tools_building_holder value = var:gbr_tool_manufactories_count }
	change_variable = { name = gbr_tools_building_holder divide = 200 }
	change_variable = { name = gbr_tools_progress_from_buildings subtract = var:gbr_tools_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_tools_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_tools_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_tools_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_tools_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_tools_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_characters }
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_igs }
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_buildings }
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_legitimacy }
	change_variable = { name = gbr_tools_progress_next add = var:gbr_tools_progress_from_price }
}

# Wine rationing progress weekly calculation
gbr_weekly_pulse_rationing_wine_progress = {
	set_variable = { name = gbr_wine_progress_from_characters value = 0 }
	set_variable = { name = gbr_wine_progress_from_igs value = 0 }
	set_variable = { name = gbr_wine_progress_from_buildings value = 0 }
	set_variable = { name = gbr_wine_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_wine_progress_from_price value = 0 }
	set_variable = { name = gbr_wine_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_wine_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_wine_popularity_holder multiply = 3 }
			change_variable = { name = gbr_wine_progress_from_characters subtract = var:gbr_wine_popularity_holder }
			remove_variable = gbr_wine_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_wine_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_wine_popularity_holder multiply = 2 }
			change_variable = { name = gbr_wine_progress_from_characters subtract = var:gbr_wine_popularity_holder }
			remove_variable = gbr_wine_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_wine_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_wine_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_wine_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_wine_popularity_holder multiply = 2 }
			change_variable = { name = gbr_wine_progress_from_characters add = var:gbr_wine_popularity_holder }
			remove_variable = gbr_wine_popularity_holder
		}
	}
	change_variable = { name = gbr_wine_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wine_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wine_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wine_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wine_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wine_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_wine_building_holder value = var:gbr_distilleries_wine_count }
	change_variable = { name = gbr_wine_building_holder divide = 200 }
	change_variable = { name = gbr_wine_progress_from_buildings subtract = var:gbr_wine_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_wine_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_wine_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_wine_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_wine_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_wine_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_characters }
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_igs }
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_buildings }
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_legitimacy }
	change_variable = { name = gbr_wine_progress_next add = var:gbr_wine_progress_from_price }
}

# Wood rationing progress weekly calculation
gbr_weekly_pulse_rationing_wood_progress = {
	set_variable = { name = gbr_wood_progress_from_characters value = 0 }
	set_variable = { name = gbr_wood_progress_from_igs value = 0 }
	set_variable = { name = gbr_wood_progress_from_buildings value = 0 }
	set_variable = { name = gbr_wood_progress_from_legitimacy value = root.government_legitimacy }
	set_variable = { name = gbr_wood_progress_from_price value = 0 }
	set_variable = { name = gbr_wood_progress_next value = 0 }
	
	# From Characters
	# If a character very strongly supports rationing
	every_scope_character = {
		limit = { gbr_very_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_wood_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_wood_popularity_holder multiply = 3 }
			change_variable = { name = gbr_wood_progress_from_characters subtract = var:gbr_wood_popularity_holder }
			remove_variable = gbr_wood_popularity_holder
		}
	}
	# If a character strongly supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing = yes }
		ROOT = {	# For each loop, add that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_wood_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_wood_popularity_holder multiply = 2 }
			change_variable = { name = gbr_wood_progress_from_characters subtract = var:gbr_wood_popularity_holder }
			remove_variable = gbr_wood_popularity_holder
		}
	}
	# If a character supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing = yes }
		ROOT = {
			change_variable = { name = gbr_wood_progress_from_characters subtract = prev.popularity }	# For each loop, add that character's popularity to goods_progress_from_characters
		}
	}
	# If a character doesn't supports rationing
	every_scope_character = {
		limit = { gbr_supports_rationing_not = yes }
		ROOT = {
			change_variable = { name = gbr_wood_progress_from_characters add = prev.popularity }	# For each loop, subtract that character's popularity to goods_progress_from_characters
		}
	}
	# If a character strongly doesn't supports rationing
	every_scope_character = {
		limit = { gbr_strongly_supports_rationing_not = yes }
		ROOT = {	# For each loop, subtract that character's popularity to goods_progress_from_characters
			set_variable = { name = gbr_wood_popularity_holder value = prev.popularity }
			change_variable = { name = gbr_wood_popularity_holder multiply = 2 }
			change_variable = { name = gbr_wood_progress_from_characters add = var:gbr_wood_popularity_holder }
			remove_variable = gbr_wood_popularity_holder
		}
	}
	change_variable = { name = gbr_wood_progress_from_characters divide = 100 } #Character popularities are -100/100, rather than our desired -1/1, so divide by 100.
		
	# From Interest Groups
	# If an interest group very strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_very_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 3 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wood_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group strongly supports rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wood_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group supports rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wood_progress_from_igs subtract = var:ig_weight } }
	}
	# If an interest group doesn't support rationing
	every_interest_group = {
		limit = { leader = { gbr_supports_rationing_not = yes } }
		ROOT = { set_variable = { name = ig_weight value = prev.ig_clout } }
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wood_progress_from_igs add = var:ig_weight } }
	}
	# If an interest group doesn't strongly support rationing
	every_interest_group = {
		limit = { leader = { gbr_strongly_supports_rationing_not = yes } }
		ROOT = {
			set_variable = { name = ig_weight value = prev.ig_clout }
			change_variable = { name = ig_weight multiply = 2 }
		}
		if = {
			limit = { is_in_government = yes }
			ROOT = { change_variable = { name = ig_weight multiply = 2 } }
		}
		ROOT = { change_variable = { name = gbr_wood_progress_from_igs add = var:ig_weight } }
	}
	
	# From Buildings
	set_variable = { name = gbr_wood_building_holder value = var:gbr_logging_camp_count }
	change_variable = { name = gbr_wood_building_holder divide = 100 }
	change_variable = { name = gbr_wood_progress_from_buildings subtract = var:gbr_wood_building_holder }
	
	# From Government Legitimacy
	change_variable = { name = gbr_wood_progress_from_legitimacy divide = 100 }
	change_variable = { name = gbr_wood_progress_from_legitimacy subtract = 0.5 }
	change_variable = { name = gbr_wood_progress_from_legitimacy multiply = -2 }
	
	# From price - Price of good goes beyond given limits, government losing control over pricing so progress increases
	#			   Price of good within given limits, government regaining control over pricing so progress decreases
	#			   Easier to lose control than regain it, so takes longer to regain control over pricing of good
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.15 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.25 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.35 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 3 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.45 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_pricier >= 0.55 } } }
		change_variable = { name = gbr_wood_progress_from_price add = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.15 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.25 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 1 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.35 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 6 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.45 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 4 }
	}
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_cheaper >= 0.55 } } }
		change_variable = { name = gbr_wood_progress_from_price subtract = 6 }
	}
	
	# Final Compliiation
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_characters }
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_igs }
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_buildings }
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_legitimacy }
	change_variable = { name = gbr_wood_progress_next add = var:gbr_wood_progress_from_price }
}

gbr_start_rationing_aluminum = {
	# Check that the UK is rationing & not already rationing aluminum
	# Determine whether aluminum needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:aluminum = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:aluminum = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_aluminum }
		}
		set_variable = gbr_rationing_aluminum
		gbr_set_gbr_aluminum_variables = yes
		post_notification = gbr_aluminum_rationing_started_message
		set_variable = { name = gbr_aluminum_refinery_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_aluminum_refinery
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_aluminum_refinery_count add = prev.level } }
		}
	}
}

gbr_start_rationing_bauxite = {
	# Check that the UK is rationing & not already rationing bauxite
	# Determine whether bauxite needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:bauxite = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:bauxite = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_bauxite }
		}
		set_variable = gbr_rationing_bauxite
		gbr_set_gbr_bauxite_variables = yes
		post_notification = gbr_bauxite_rationing_started_message
		set_variable = { name = gbr_bauxite_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_bauxite_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_bauxite_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_fertilizer = {
	# Check that the UK is rationing & not already rationing fertilizer (chemicals)
	# Determine whether fertilizer (chemicals) needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:fertilizer = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:fertilizer = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_fertilizer }
		}
		set_variable = gbr_rationing_fertilizer
		gbr_set_gbr_fertilizer_variables = yes
		post_notification = gbr_fertilizer_rationing_started_message
		set_variable = { name = gbr_chemical_plant_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_chemical_plants
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_chemical_plant_count add = prev.level } }
		}
		set_variable = { name = gbr_livestock_ranch_fertilizer_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				OR = {
					has_active_production_method = pm_intensive_grazing_ranch
					has_active_production_method = pm_open_air_stockyards
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_fertilizer_count add = prev.level } }
		}
	}
}

gbr_start_rationing_clothes = {
	# Check that the UK is rationing & not already rationing clothes
	# Determine whether clothes needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:clothes = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:clothes = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_clothes }
		}
		set_variable = gbr_rationing_clothes
		gbr_set_gbr_clothes_variables = yes
		post_notification = gbr_clothes_rationing_started_message
		set_variable = { name = gbr_textile_manufactory_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_textile_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_textile_manufactory_count add = prev.level } }
		}
	}
}

gbr_start_rationing_coal = {
	# Check that the UK is rationing & not already rationing coal
	# Determine whether coal needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:coal = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:coal = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_coal }
		}
		set_variable = gbr_rationing_coal
		gbr_set_gbr_coal_variables = yes
		post_notification = gbr_coal_rationing_started_message
		set_variable = { name = gbr_coal_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_coal_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_coal_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_coffee = {
	# Check that the UK is rationing & not already rationing coffee
	# Determine whether coffee needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:coffee = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:coffee = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_coffee }
		}
		set_variable = gbr_rationing_coffee
		gbr_set_gbr_coffee_variables = yes
		post_notification = gbr_coffee_rationing_started_message
		set_variable = { name = gbr_coffee_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_coffee_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_coffee_plantation_count add = prev.level } }
		}
	}
}

gbr_start_rationing_copper = {
	# Check that the UK is rationing & not already rationing copper
	# Determine whether copper needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:copper = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:copper = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_copper }
		}
		set_variable = gbr_rationing_copper
		gbr_set_gbr_copper_variables = yes
		post_notification = gbr_copper_rationing_started_message
		set_variable = { name = gbr_copper_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_copper_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_copper_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_engines = {
	# Check that the UK is rationing & not already rationing engines
	# Determine whether engines needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:engines = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:engines = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_engines }
		}
		set_variable = gbr_rationing_engines
		gbr_set_gbr_engines_variables = yes
		post_notification = gbr_engines_rationing_started_message
		set_variable = { name = gbr_motor_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_motor_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_motor_industry_count add = prev.level } }
		}
	}
}

gbr_start_rationing_explosives = {
	# Check that the UK is rationing & not already rationing explosives
	# Determine whether explosives needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:explosives = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:explosives = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_explosives }
		}
		set_variable = gbr_rationing_explosives
		gbr_set_gbr_explosives_variables = yes
		post_notification = gbr_explosives_rationing_started_message
		set_variable = { name = gbr_explosives_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_explosives_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_explosives_industry_count add = prev.level } }
		}
	}
}

gbr_start_rationing_fabric = {
	# Check that the UK is rationing & not already rationing fabric
	# Determine whether fabric needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:fabric = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:fabric = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_fabric }
		}
		set_variable = gbr_rationing_fabric
		gbr_set_gbr_fabric_variables = yes
		post_notification = gbr_fabric_rationing_started_message
		set_variable = { name = gbr_cotton_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_cotton_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_cotton_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_livestock_ranch_fabric_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_fabric_count add = prev.level } }
		}
	}
}

gbr_start_rationing_fish = {
	# Check that the UK is rationing & not already rationing fish
	# Determine whether fish needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:fish = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:fish = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_fish }
		}
		set_variable = gbr_rationing_fish
		gbr_set_gbr_fish_variables = yes
		post_notification = gbr_fish_rationing_started_message
		set_variable = { name = gbr_fishing_wharf_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_fishing_wharf
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fishing_wharf_count add = prev.level } }
		}
	}
}

gbr_start_rationing_fruit = {
	# Check that the UK is rationing & not already rationing fruit
	# Determine whether fruit needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:fruit = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:fruit = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_fruit }
		}
		set_variable = gbr_rationing_fruit
		gbr_set_gbr_fruit_variables = yes
		post_notification = gbr_fruit_rationing_started_message
		set_variable = { name = gbr_banana_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_banana_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_banana_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_rye_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				has_active_production_method = pm_apple_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				has_active_production_method = pm_citrus_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				has_active_production_method = pm_fig_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				has_active_production_method = pm_citrus_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_fruit_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_fruit_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				has_active_production_method = pm_fig_orchards
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_fruit_count add = prev.level } }
		}
	}
}

gbr_start_rationing_glass = {
	# Check that the UK is rationing & not already rationing glass
	# Determine whether glass needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:glass = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:glass = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_glass }
		}
		set_variable = gbr_rationing_glass
		gbr_set_gbr_glass_variables = yes
		post_notification = gbr_glass_rationing_started_message
		set_variable = { name = gbr_glassworks_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_glassworks
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_glassworks_count add = prev.level } }
		}
	}
}

gbr_start_rationing_grain = {
	# Check that the UK is rationing & not already rationing grain
	# Determine whether grain needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:grain = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:grain = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_grain }
		}
		set_variable = gbr_rationing_grain
		gbr_set_gbr_grain_variables = yes
		post_notification = gbr_grain_rationing_started_message
		set_variable = { name = gbr_rye_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_count add = prev.level } }
		}
	}
}

gbr_start_rationing_groceries = {
	# Check that the UK is rationing & not already rationing groceries
	# Determine whether groceries needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:groceries = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:groceries = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_groceries }
		}
		set_variable = gbr_rationing_groceries
		gbr_set_gbr_groceries_variables = yes
		post_notification = gbr_groceries_rationing_started_message
		set_variable = { name = gbr_food_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_food_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_food_industry_count add = prev.level } }
		}
	}
}

gbr_start_rationing_high_quality_fabric = {
	# Check that the UK is rationing & not already rationing high quality fabric
	# Determine whether high quality fabric needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:high_quality_fabric = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:high_quality_fabric = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_high_quality_fabric }
		}
		set_variable = gbr_rationing_high_quality_fabric
		gbr_set_gbr_high_quality_fabric_variables = yes
		post_notification = gbr_high_quality_fabric_rationing_started_message
		set_variable = { name = gbr_silk_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_silk_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_silk_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_synthetics_plant_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_synthetics_plant
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_synthetics_plant_count add = prev.level } }
		}
	}
}

gbr_start_rationing_iron = {
	# Check that the UK is rationing & not already rationing iron
	# Determine whether iron needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:iron = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:iron = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_iron }
		}
		set_variable = gbr_rationing_iron
		gbr_set_gbr_iron_variables = yes
		post_notification = gbr_iron_rationing_started_message
		set_variable = { name = gbr_iron_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_iron_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_iron_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_lead = {
	# Check that the UK is rationing & not already rationing lead
	# Determine whether lead needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:lead = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:lead = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_lead }
		}
		set_variable = gbr_rationing_lead
		gbr_set_gbr_lead_variables = yes
		post_notification = gbr_lead_rationing_started_message
		set_variable = { name = gbr_lead_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_lead_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_lead_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_liquor = {
	# Check that the UK is rationing & not already rationing liquor
	# Determine whether liquor needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:liquor = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:liquor = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_liquor }
		}
		set_variable = gbr_rationing_liquor
		gbr_set_gbr_liquor_variables = yes
		post_notification = gbr_liquor_rationing_started_message
		set_variable = { name = gbr_distilleries_liquor_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_distilleries
				OR = {
					has_active_production_method = pm_basic_distillation_liquor
					has_active_production_method = pm_patent_stills_liquor
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_distilleries_liquor_count add = prev.level } }
		}
	}
}

gbr_start_rationing_meat = {
	# Check that the UK is rationing & not already rationing meat
	# Determine whether meat needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:meat = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:meat = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_meat }
		}
		set_variable = gbr_rationing_meat
		gbr_set_gbr_meat_variables = yes
		post_notification = gbr_meat_rationing_started_message
		set_variable = { name = gbr_livestock_ranch_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_livestock_ranch
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_livestock_ranch_count add = prev.level } }
		}
		set_variable = { name = gbr_fishing_wharf_meat_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_fishing_wharf
				OR = {
					has_active_production_method = pm_pre_war_whaling_ships
					has_active_production_method = pm_large_whaling_ships
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fishing_wharf_meat_count add = prev.level } }
		}
	}
}

gbr_start_rationing_oil = {
	# Check that the UK is rationing & not already rationing oil
	# Determine whether oil needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:oil = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:oil = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_oil }
		}
		set_variable = gbr_rationing_oil
		gbr_set_gbr_oil_variables = yes
		post_notification = gbr_oil_rationing_started_message
		set_variable = { name = gbr_oil_rig_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_oil_rig
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_oil_rig_count add = prev.level } }
		}
	}
}

gbr_start_rationing_opium = {
	# Check that the UK is rationing & not already rationing opium
	# Determine whether opium needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:opium = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:opium = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_opium }
		}
		set_variable = gbr_rationing_opium
		gbr_set_gbr_opium_variables = yes
		post_notification = gbr_opium_rationing_started_message
		set_variable = { name = gbr_opium_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_opium_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_opium_plantation_count add = prev.level } }
		}
	}
}

gbr_start_rationing_paper = {
	# Check that the UK is rationing & not already rationing paper
	# Determine whether paper needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:paper = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:paper = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_paper }
		}
		set_variable = gbr_rationing_paper
		gbr_set_gbr_paper_variables = yes
		post_notification = gbr_paper_rationing_started_message
		set_variable = { name = gbr_paper_manufactories_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_paper_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_paper_manufactories_count add = prev.level } }
		}
	}
}

gbr_start_rationing_pharmaceuticals = {
	# Check that the UK is rationing & not already rationing pharmaceuticals
	# Determine whether pharmaceuticals needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:pharmaceuticals = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:pharmaceuticals = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_pharmaceuticals }
		}
		set_variable = gbr_rationing_pharmaceuticals
		gbr_set_gbr_pharmaceuticals_variables = yes
		post_notification = gbr_pharmaceuticals_rationing_started_message
		set_variable = { name = gbr_pharmaceutical_industry_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_pharmaceutical_industry
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_pharmaceutical_industry_count add = prev.level } }
		}
	}
}

gbr_start_rationing_phosphorus = {
	# Check that the UK is rationing & not already rationing phosphorus
	# Determine whether phosphorus needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:phosphorus = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:phosphorus = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_phosphorus }
		}
		set_variable = gbr_rationing_phosphorus
		gbr_set_gbr_phosphorus_variables = yes
		post_notification = gbr_phosphorus_rationing_started_message
		set_variable = { name = gbr_phosphorus_mine_count value = 0 }
		every_scope_building = {
			limit = {	# 300 Construction Points
				is_building_type = building_phosphorus_mine
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_phosphorus_mine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_plastics = {
	# Check that the UK is rationing & not already rationing plastics
	# Determine whether plastics needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:plastics = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:plastics = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_plastics }
		}
		set_variable = gbr_rationing_plastics
		gbr_set_gbr_plastics_variables = yes
		post_notification = gbr_plastics_rationing_started_message
		set_variable = { name = gbr_fuel_refineries_plastics_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_fuel_refineries
				OR = {
					has_active_production_method = pm_rudimentary_polymers
					has_active_production_method = pm_transition_metal_catalysts
					has_active_production_method = pm_dense_thermoplastics
					has_active_production_method = pm_saturated_elastomers
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fuel_refineries_plastics_count add = prev.level } }
		}
	}
}

gbr_start_rationing_refined_fuel = {
	# Check that the UK is rationing & not already rationing refined fuel
	# Determine whether refined fuel needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:refined_fuel = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:refined_fuel = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_refined_fuel }
		}
		set_variable = gbr_rationing_refined_fuel
		gbr_set_gbr_refined_fuel_variables = yes
		post_notification = gbr_refined_fuel_rationing_started_message
		set_variable = { name = gbr_fuel_refineries_count value = 0 }
		every_scope_building = {
			limit = {	# 600 Construction Points
				is_building_type = building_fuel_refineries
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_fuel_refineries_count add = prev.level } }
		}
	}
}

gbr_start_rationing_rubber = {
	# Check that the UK is rationing & not already rationing rubber
	# Determine whether rubber needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:rubber = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:rubber = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_rubber }
		}
		set_variable = gbr_rationing_rubber
		gbr_set_gbr_rubber_variables = yes
		post_notification = gbr_rubber_rationing_started_message
		set_variable = { name = gbr_rubber_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rubber_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rubber_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_synthetics_plant_rubber_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_synthetics_plant
				OR = {
					has_active_production_method = pm_styrene_butadiene
					has_active_production_method = pm_silicone
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_synthetics_plant_rubber_count add = prev.level } }
		}
	}
}

gbr_start_rationing_steel = {
	# Check that the UK is rationing & not already rationing steel
	# Determine whether steel needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:steel = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:steel = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_steel }
		}
		set_variable = gbr_rationing_steel
		gbr_set_gbr_steel_variables = yes
		post_notification = gbr_steel_rationing_started_message
		set_variable = { name = gbr_steelworks_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_steelworks
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_steelworks_count add = prev.level } }
		}
	}
}

gbr_start_rationing_sugar = {
	# Check that the UK is rationing & not already rationing sugar
	# Determine whether sugar needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:sugar = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:sugar = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_sugar }
		}
		set_variable = gbr_rationing_sugar
		gbr_set_gbr_sugar_variables = yes
		post_notification = gbr_sugar_rationing_started_message
		set_variable = { name = gbr_sugar_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_sugar_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_sugar_plantation_count add = prev.level } }
		}
		set_variable = { name = gbr_rye_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rye_farm
				has_active_production_method = pm_sugar_beets
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rye_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_wheat_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_wheat_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_wheat_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_rice_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_rice_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_rice_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_maize_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_maize_farm
				has_active_production_method = pm_corn_syrup
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_maize_farm_count add = prev.level } }
		}
		set_variable = { name = gbr_millet_farm_sugar_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_millet_farm
				has_active_production_method = pm_honey_production
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_millet_farm_count add = prev.level } }
		}
	}
}

gbr_start_rationing_tea = {
	# Check that the UK is rationing & not already rationing tea
	# Determine whether tea needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:tea = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:tea = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_tea }
		}
		set_variable = gbr_rationing_tea
		gbr_set_gbr_tea_variables = yes
		post_notification = gbr_tea_rationing_started_message
		set_variable = { name = gbr_tea_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_tea_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tea_plantation_count add = prev.level } }
		}
	}
}

gbr_start_rationing_tobacco = {
	# Check that the UK is rationing & not already rationing tobacco
	# Determine whether tobacco needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:tobacco = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:tobacco = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_tobacco }
		}
		set_variable = gbr_rationing_tobacco
		gbr_set_gbr_tobacco_variables = yes
		post_notification = gbr_tobacco_rationing_started_message
		set_variable = { name = gbr_tobacco_plantation_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_tobacco_plantation
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tobacco_plantation_count add = prev.level } }
		}
	}
}

gbr_start_rationing_tools = {
	# Check that the UK is rationing & not already rationing tools
	# Determine whether tools needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:tools = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:tools = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_tools }
		}
		set_variable = gbr_rationing_tools
		gbr_set_gbr_tools_variables = yes
		post_notification = gbr_tools_rationing_started_message
		set_variable = { name = gbr_tool_manufactories_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_tool_manufactories
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_tool_manufactories_count add = prev.level } }
		}
	}
}

gbr_start_rationing_wine = {
	# Check that the UK is rationing & not already rationing wine
	# Determine whether wine needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:wine = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:wine = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_wine }
		}
		set_variable = gbr_rationing_wine
		gbr_set_gbr_wine_variables = yes
		post_notification = gbr_wine_rationing_started_message
		set_variable = { name = gbr_distilleries_wine_count value = 0 }
		every_scope_building = {
			limit = {	# 450 Construction Points
				is_building_type = building_distilleries
				OR = {
					has_active_production_method = pm_basic_distillation_wine
					has_active_production_method = pm_patent_stills_wine
				}
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_distilleries_wine_count add = prev.level } }
		}
	}
}

gbr_start_rationing_wood = {
	# Check that the UK is rationing & not already rationing wood
	# Determine whether wood needs to be rationed
	if = {
		limit = {
			has_variable = gbr_started_rationing
			market_capital.market = { mg:wood = { market_goods_consumption >= 10 } }
			market_capital.market = { mg:wood = { market_goods_pricier >= 0.1 } }
			NOT = { has_variable = gbr_rationing_wood }
		}
		set_variable = gbr_rationing_wood
		gbr_set_gbr_wood_variables = yes
		post_notification = gbr_wood_rationing_started_message
		set_variable = { name = gbr_logging_camp_count value = 0 }
		every_scope_building = {
			limit = {	# 150 Construction Points
				is_building_type = building_logging_camp
				occupancy >= 0.5
			}
			ROOT = { change_variable = { name = gbr_logging_camp_count add = prev.level } }
		}
	}
}

gbr_end_rationing_aluminum = {
	# Check to see if rationing for aluminum can be ended
	if = {
		limit = { market_capital.market = { mg:aluminum = { market_goods_consumption < 10 } } }
		post_notification = gbr_aluminum_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_aluminum
		gbr_remove_aluminum_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_aluminum_progress_next < 0
			OR = {
				var:gbr_ending_aluminum_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_aluminum_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_aluminum_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_aluminum_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_aluminum_progress_next < 0 }
			OR = {
				var:gbr_ending_aluminum_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_aluminum_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_aluminum_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_aluminum_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_aluminum_progress_next < 0
			var:gbr_aluminum_progress < 120
			var:gbr_ending_aluminum_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_aluminum_rationing_ended_message
		remove_variable = gbr_rationing_aluminum
		gbr_remove_aluminum_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_aluminum_progress_next < 0
			var:gbr_aluminum_progress >= 120
			var:gbr_aluminum_progress < 240
			var:gbr_ending_aluminum_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_aluminum_rationing_ended_message
		remove_variable = gbr_rationing_aluminum
		gbr_remove_aluminum_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_aluminum_progress_next < 0
			var:gbr_aluminum_progress >= 240
			var:gbr_ending_aluminum_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_aluminum_rationing_ended_message
		remove_variable = gbr_rationing_aluminum
		gbr_remove_aluminum_variables = yes
	}
}

gbr_end_rationing_bauxite = {
	# Check to see if rationing for bauxite can be ended
	if = {
		limit = { market_capital.market = { mg:bauxite = { market_goods_consumption < 10 } } }
		post_notification = gbr_bauxite_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_bauxite
		gbr_remove_bauxite_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_bauxite_progress_next < 0
			OR = {
				var:gbr_ending_bauxite_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_bauxite_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_bauxite_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_bauxite_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_bauxite_progress_next < 0 }
			OR = {
				var:gbr_ending_bauxite_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_bauxite_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_bauxite_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_bauxite_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_bauxite_progress_next < 0
			var:gbr_bauxite_progress < 120
			var:gbr_ending_bauxite_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_bauxite_rationing_ended_message
		remove_variable = gbr_rationing_bauxite
		gbr_remove_bauxite_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_bauxite_progress_next < 0
			var:gbr_bauxite_progress >= 120
			var:gbr_bauxite_progress < 240
			var:gbr_ending_bauxite_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_bauxite_rationing_ended_message
		remove_variable = gbr_rationing_bauxite
		gbr_remove_bauxite_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_bauxite_progress_next < 0
			var:gbr_bauxite_progress >= 240
			var:gbr_ending_bauxite_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_bauxite_rationing_ended_message
		remove_variable = gbr_rationing_bauxite
		gbr_remove_bauxite_variables = yes
	}
}

gbr_end_rationing_fertilizer = {
	# Check to see if rationing for fertilizer can be ended
	if = {
		limit = { market_capital.market = { mg:fertilizer = { market_goods_consumption < 10 } } }
		post_notification = gbr_fertilizer_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_fertilizer
		gbr_remove_fertilizer_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fertilizer_progress_next < 0
			OR = {
				var:gbr_ending_fertilizer_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_fertilizer_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_fertilizer_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_fertilizer_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_fertilizer_progress_next < 0 }
			OR = {
				var:gbr_ending_fertilizer_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_fertilizer_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_fertilizer_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_fertilizer_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_fertilizer_progress_next < 0
			var:gbr_fertilizer_progress < 120
			var:gbr_ending_fertilizer_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_fertilizer_rationing_ended_message
		remove_variable = gbr_rationing_fertilizer
		gbr_remove_fertilizer_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fertilizer_progress_next < 0
			var:gbr_fertilizer_progress >= 120
			var:gbr_fertilizer_progress < 240
			var:gbr_ending_fertilizer_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_fertilizer_rationing_ended_message
		remove_variable = gbr_rationing_fertilizer
		gbr_remove_fertilizer_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fertilizer_progress_next < 0
			var:gbr_fertilizer_progress >= 240
			var:gbr_ending_fertilizer_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_fertilizer_rationing_ended_message
		remove_variable = gbr_rationing_fertilizer
		gbr_remove_fertilizer_variables = yes
	}
}

gbr_end_rationing_clothes = {
	# Check to see if rationing for clothes can be ended
	if = {
		limit = { market_capital.market = { mg:clothes = { market_goods_consumption < 10 } } }
		post_notification = gbr_clothes_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_clothes
		gbr_remove_clothes_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_clothes_progress_next < 0
			OR = {
				var:gbr_ending_clothes_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_clothes_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_clothes_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_clothes_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_clothes_progress_next < 0 }
			OR = {
				var:gbr_ending_clothes_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_clothes_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_clothes_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_clothes_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_clothes_progress_next < 0
			var:gbr_clothes_progress < 120
			var:gbr_ending_clothes_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_clothes_rationing_ended_message
		remove_variable = gbr_rationing_clothes
		gbr_remove_clothes_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_clothes_progress_next < 0
			var:gbr_clothes_progress >= 120
			var:gbr_clothes_progress < 240
			var:gbr_ending_clothes_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_clothes_rationing_ended_message
		remove_variable = gbr_rationing_clothes
		gbr_remove_clothes_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_clothes_progress_next < 0
			var:gbr_clothes_progress >= 240
			var:gbr_ending_clothes_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_clothes_rationing_ended_message
		remove_variable = gbr_rationing_clothes
		gbr_remove_clothes_variables = yes
	}
}

gbr_end_rationing_coal = {
	# Check to see if rationing for coal can be ended
	if = {
		limit = { market_capital.market = { mg:coal = { market_goods_consumption < 10 } } }
		post_notification = gbr_coal_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_coal
		gbr_remove_coal_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_coal_progress_next < 0
			OR = {
				var:gbr_ending_coal_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_coal_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_coal_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_coal_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_coal_progress_next < 0 }
			OR = {
				var:gbr_ending_coal_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_coal_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_coal_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_coal_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_coal_progress_next < 0
			var:gbr_coal_progress < 120
			var:gbr_ending_coal_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_coal_rationing_ended_message
		remove_variable = gbr_rationing_coal
		gbr_remove_coal_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_coal_progress_next < 0
			var:gbr_coal_progress >= 120
			var:gbr_coal_progress < 240
			var:gbr_ending_coal_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_coal_rationing_ended_message
		remove_variable = gbr_rationing_coal
		gbr_remove_coal_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_coal_progress_next < 0
			var:gbr_coal_progress >= 240
			var:gbr_ending_coal_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_coal_rationing_ended_message
		remove_variable = gbr_rationing_coal
		gbr_remove_coal_variables = yes
	}
}

gbr_end_rationing_coffee = {
	# Check to see if rationing for coffee can be ended
	if = {
		limit = { market_capital.market = { mg:coffee = { market_goods_consumption < 10 } } }
		post_notification = gbr_coffee_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_coffee
		gbr_remove_coffee_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_coffee_progress_next < 0
			OR = {
				var:gbr_ending_coffee_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_coffee_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_coffee_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_coffee_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_coffee_progress_next < 0 }
			OR = {
				var:gbr_ending_coffee_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_coffee_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_coffee_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_coffee_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_coffee_progress_next < 0
			var:gbr_coffee_progress < 120
			var:gbr_ending_coffee_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_coffee_rationing_ended_message
		remove_variable = gbr_rationing_coffee
		gbr_remove_coffee_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_coffee_progress_next < 0
			var:gbr_coffee_progress >= 120
			var:gbr_coffee_progress < 240
			var:gbr_ending_coffee_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_coffee_rationing_ended_message
		remove_variable = gbr_rationing_coffee
		gbr_remove_coffee_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_coffee_progress_next < 0
			var:gbr_coffee_progress >= 240
			var:gbr_ending_coffee_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_coffee_rationing_ended_message
		remove_variable = gbr_rationing_coffee
		gbr_remove_coffee_variables = yes
	}
}

gbr_end_rationing_copper = {
	# Check to see if rationing for copper can be ended
	if = {
		limit = { market_capital.market = { mg:copper = { market_goods_consumption < 10 } } }
		post_notification = gbr_copper_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_copper
		gbr_remove_copper_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_copper_progress_next < 0
			OR = {
				var:gbr_ending_copper_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_copper_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_copper_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_copper_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_copper_progress_next < 0 }
			OR = {
				var:gbr_ending_copper_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_copper_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_copper_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_copper_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_copper_progress_next < 0
			var:gbr_copper_progress < 120
			var:gbr_ending_copper_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_copper_rationing_ended_message
		remove_variable = gbr_rationing_copper
		gbr_remove_copper_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_copper_progress_next < 0
			var:gbr_copper_progress >= 120
			var:gbr_copper_progress < 240
			var:gbr_ending_copper_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_copper_rationing_ended_message
		remove_variable = gbr_rationing_copper
		gbr_remove_copper_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_copper_progress_next < 0
			var:gbr_copper_progress >= 240
			var:gbr_ending_copper_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_copper_rationing_ended_message
		remove_variable = gbr_rationing_copper
		gbr_remove_copper_variables = yes
	}
}

gbr_end_rationing_engines = {
	# Check to see if rationing for engines can be ended
	if = {
		limit = { market_capital.market = { mg:engines = { market_goods_consumption < 10 } } }
		post_notification = gbr_engines_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_engines
		gbr_remove_engines_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_engines_progress_next < 0
			OR = {
				var:gbr_ending_engines_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_engines_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_engines_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_engines_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_engines_progress_next < 0 }
			OR = {
				var:gbr_ending_engines_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_engines_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_engines_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_engines_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_engines_progress_next < 0
			var:gbr_engines_progress < 120
			var:gbr_ending_engines_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_engines_rationing_ended_message
		remove_variable = gbr_rationing_engines
		gbr_remove_engines_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_engines_progress_next < 0
			var:gbr_engines_progress >= 120
			var:gbr_engines_progress < 240
			var:gbr_ending_engines_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_engines_rationing_ended_message
		remove_variable = gbr_rationing_engines
		gbr_remove_engines_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_engines_progress_next < 0
			var:gbr_engines_progress >= 240
			var:gbr_ending_engines_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_engines_rationing_ended_message
		remove_variable = gbr_rationing_engines
		gbr_remove_engines_variables = yes
	}
}

gbr_end_rationing_explosives = {
	# Check to see if rationing for explosives can be ended
	if = {
		limit = { market_capital.market = { mg:explosives = { market_goods_consumption < 10 } } }
		post_notification = gbr_explosives_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_explosives
		gbr_remove_explosives_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_explosives_progress_next < 0
			OR = {
				var:gbr_ending_explosives_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_explosives_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_explosives_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_explosives_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_explosives_progress_next < 0 }
			OR = {
				var:gbr_ending_explosives_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_explosives_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_explosives_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_explosives_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_explosives_progress_next < 0
			var:gbr_explosives_progress < 120
			var:gbr_ending_explosives_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_explosives_rationing_ended_message
		remove_variable = gbr_rationing_explosives
		gbr_remove_explosives_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_explosives_progress_next < 0
			var:gbr_explosives_progress >= 120
			var:gbr_explosives_progress < 240
			var:gbr_ending_explosives_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_explosives_rationing_ended_message
		remove_variable = gbr_rationing_explosives
		gbr_remove_explosives_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_explosives_progress_next < 0
			var:gbr_explosives_progress >= 240
			var:gbr_ending_explosives_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_explosives_rationing_ended_message
		remove_variable = gbr_rationing_explosives
		gbr_remove_explosives_variables = yes
	}
}

gbr_end_rationing_fabric = {
	# Check to see if rationing for fabric can be ended
	if = {
		limit = { market_capital.market = { mg:fabric = { market_goods_consumption < 10 } } }
		post_notification = gbr_fabric_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_fabric
		gbr_remove_fabric_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fabric_progress_next < 0
			OR = {
				var:gbr_ending_fabric_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_fabric_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_fabric_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_fabric_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_fabric_progress_next < 0 }
			OR = {
				var:gbr_ending_fabric_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_fabric_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_fabric_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_fabric_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_fabric_progress_next < 0
			var:gbr_fabric_progress < 120
			var:gbr_ending_fabric_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_fabric_rationing_ended_message
		remove_variable = gbr_rationing_fabric
		gbr_remove_fabric_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fabric_progress_next < 0
			var:gbr_fabric_progress >= 120
			var:gbr_fabric_progress < 240
			var:gbr_ending_fabric_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_fabric_rationing_ended_message
		remove_variable = gbr_rationing_fabric
		gbr_remove_fabric_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fabric_progress_next < 0
			var:gbr_fabric_progress >= 240
			var:gbr_ending_fabric_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_fabric_rationing_ended_message
		remove_variable = gbr_rationing_fabric
		gbr_remove_fabric_variables = yes
	}
}

gbr_end_rationing_fish = {
	# Check to see if rationing for fish can be ended
	if = {
		limit = { market_capital.market = { mg:fish = { market_goods_consumption < 10 } } }
		post_notification = gbr_fish_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_fish
		gbr_remove_fish_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fish_progress_next < 0
			OR = {
				var:gbr_ending_fish_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_fish_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_fish_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_fish_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_fish_progress_next < 0 }
			OR = {
				var:gbr_ending_fish_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_fish_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_fish_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_fish_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_fish_progress_next < 0
			var:gbr_fish_progress < 120
			var:gbr_ending_fish_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_fish_rationing_ended_message
		remove_variable = gbr_rationing_fish
		gbr_remove_fish_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fish_progress_next < 0
			var:gbr_fish_progress >= 120
			var:gbr_fish_progress < 240
			var:gbr_ending_fish_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_fish_rationing_ended_message
		remove_variable = gbr_rationing_fish
		gbr_remove_fish_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fish_progress_next < 0
			var:gbr_fish_progress >= 240
			var:gbr_ending_fish_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_fish_rationing_ended_message
		remove_variable = gbr_rationing_fish
		gbr_remove_fish_variables = yes
	}
}

gbr_end_rationing_fruit = {
	# Check to see if rationing for fruit can be ended
	if = {
		limit = { market_capital.market = { mg:fruit = { market_goods_consumption < 10 } } }
		post_notification = gbr_fruit_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_fruit
		gbr_remove_fruit_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fruit_progress_next < 0
			OR = {
				var:gbr_ending_fruit_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_fruit_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_fruit_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_fruit_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_fruit_progress_next < 0 }
			OR = {
				var:gbr_ending_fruit_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_fruit_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_fruit_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_fruit_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_fruit_progress_next < 0
			var:gbr_fruit_progress < 120
			var:gbr_ending_fruit_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_fruit_rationing_ended_message
		remove_variable = gbr_rationing_fruit
		gbr_remove_fruit_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fruit_progress_next < 0
			var:gbr_fruit_progress >= 120
			var:gbr_fruit_progress < 240
			var:gbr_ending_fruit_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_fruit_rationing_ended_message
		remove_variable = gbr_rationing_fruit
		gbr_remove_fruit_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_fruit_progress_next < 0
			var:gbr_fruit_progress >= 240
			var:gbr_ending_fruit_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_fruit_rationing_ended_message
		remove_variable = gbr_rationing_fruit
		gbr_remove_fruit_variables = yes
	}
}

gbr_end_rationing_glass = {
	# Check to see if rationing for glass can be ended
	if = {
		limit = { market_capital.market = { mg:glass = { market_goods_consumption < 10 } } }
		post_notification = gbr_glass_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_glass
		gbr_remove_glass_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_glass_progress_next < 0
			OR = {
				var:gbr_ending_glass_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_glass_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_glass_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_glass_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_glass_progress_next < 0 }
			OR = {
				var:gbr_ending_glass_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_glass_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_glass_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_glass_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_glass_progress_next < 0
			var:gbr_glass_progress < 120
			var:gbr_ending_glass_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_glass_rationing_ended_message
		remove_variable = gbr_rationing_glass
		gbr_remove_glass_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_glass_progress_next < 0
			var:gbr_glass_progress >= 120
			var:gbr_glass_progress < 240
			var:gbr_ending_glass_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_glass_rationing_ended_message
		remove_variable = gbr_rationing_glass
		gbr_remove_glass_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_glass_progress_next < 0
			var:gbr_glass_progress >= 240
			var:gbr_ending_glass_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_glass_rationing_ended_message
		remove_variable = gbr_rationing_glass
		gbr_remove_glass_variables = yes
	}
}

gbr_end_rationing_grain = {
	# Check to see if rationing for grain can be ended
	if = {
		limit = { market_capital.market = { mg:grain = { market_goods_consumption < 10 } } }
		post_notification = gbr_grain_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_grain
		gbr_remove_grain_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_grain_progress_next < 0
			OR = {
				var:gbr_ending_grain_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_grain_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_grain_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_grain_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_grain_progress_next < 0 }
			OR = {
				var:gbr_ending_grain_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_grain_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_grain_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_grain_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_grain_progress_next < 0
			var:gbr_grain_progress < 120
			var:gbr_ending_grain_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_grain_rationing_ended_message
		remove_variable = gbr_rationing_grain
		gbr_remove_grain_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_grain_progress_next < 0
			var:gbr_grain_progress >= 120
			var:gbr_grain_progress < 240
			var:gbr_ending_grain_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_grain_rationing_ended_message
		remove_variable = gbr_rationing_grain
		gbr_remove_grain_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_grain_progress_next < 0
			var:gbr_grain_progress >= 240
			var:gbr_ending_grain_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_grain_rationing_ended_message
		remove_variable = gbr_rationing_grain
		gbr_remove_grain_variables = yes
	}
}

gbr_end_rationing_groceries = {
	# Check to see if rationing for groceries can be ended
	if = {
		limit = { market_capital.market = { mg:groceries = { market_goods_consumption < 10 } } }
		post_notification = gbr_groceries_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_groceries
		gbr_remove_groceries_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_groceries_progress_next < 0
			OR = {
				var:gbr_ending_groceries_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_groceries_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_groceries_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_groceries_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_groceries_progress_next < 0 }
			OR = {
				var:gbr_ending_groceries_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_groceries_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_groceries_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_groceries_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_groceries_progress_next < 0
			var:gbr_groceries_progress < 120
			var:gbr_ending_groceries_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_groceries_rationing_ended_message
		remove_variable = gbr_rationing_groceries
		gbr_remove_groceries_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_groceries_progress_next < 0
			var:gbr_groceries_progress >= 120
			var:gbr_groceries_progress < 240
			var:gbr_ending_groceries_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_groceries_rationing_ended_message
		remove_variable = gbr_rationing_groceries
		gbr_remove_groceries_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_groceries_progress_next < 0
			var:gbr_groceries_progress >= 240
			var:gbr_ending_groceries_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_groceries_rationing_ended_message
		remove_variable = gbr_rationing_groceries
		gbr_remove_groceries_variables = yes
	}
}

gbr_end_rationing_high_quality_fabric = {
	# Check to see if rationing for high quality fabric can be ended
	if = {
		limit = { market_capital.market = { mg:high_quality_fabric = { market_goods_consumption < 10 } } }
		post_notification = gbr_high_quality_fabric_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_high_quality_fabric
		gbr_remove_high_quality_fabric_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_high_quality_fabric_progress_next < 0
			OR = {
				var:gbr_ending_high_quality_fabric_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_high_quality_fabric_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_high_quality_fabric_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_high_quality_fabric_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_high_quality_fabric_progress_next < 0 }
			OR = {
				var:gbr_ending_high_quality_fabric_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_high_quality_fabric_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_high_quality_fabric_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_high_quality_fabric_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_high_quality_fabric_progress_next < 0
			var:gbr_high_quality_fabric_progress < 120
			var:gbr_ending_high_quality_fabric_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_high_quality_fabric_rationing_ended_message
		remove_variable = gbr_rationing_high_quality_fabric
		gbr_remove_high_quality_fabric_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_high_quality_fabric_progress_next < 0
			var:gbr_high_quality_fabric_progress >= 120
			var:gbr_high_quality_fabric_progress < 240
			var:gbr_ending_high_quality_fabric_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_high_quality_fabric_rationing_ended_message
		remove_variable = gbr_rationing_high_quality_fabric
		gbr_remove_high_quality_fabric_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_high_quality_fabric_progress_next < 0
			var:gbr_high_quality_fabric_progress >= 240
			var:gbr_ending_high_quality_fabric_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_high_quality_fabric_rationing_ended_message
		remove_variable = gbr_rationing_high_quality_fabric
		gbr_remove_high_quality_fabric_variables = yes
	}
}

gbr_end_rationing_iron = {
	# Check to see if rationing for iron can be ended
	if = {
		limit = { market_capital.market = { mg:iron = { market_goods_consumption < 10 } } }
		post_notification = gbr_iron_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_iron
		gbr_remove_iron_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_iron_progress_next < 0
			OR = {
				var:gbr_ending_iron_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_iron_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_iron_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_iron_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_iron_progress_next < 0 }
			OR = {
				var:gbr_ending_iron_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_iron_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_iron_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_iron_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_iron_progress_next < 0
			var:gbr_iron_progress < 120
			var:gbr_ending_iron_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_iron_rationing_ended_message
		remove_variable = gbr_rationing_iron
		gbr_remove_iron_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_iron_progress_next < 0
			var:gbr_iron_progress >= 120
			var:gbr_iron_progress < 240
			var:gbr_ending_iron_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_iron_rationing_ended_message
		remove_variable = gbr_rationing_iron
		gbr_remove_iron_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_iron_progress_next < 0
			var:gbr_iron_progress >= 240
			var:gbr_ending_iron_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_iron_rationing_ended_message
		remove_variable = gbr_rationing_iron
		gbr_remove_iron_variables = yes
	}
}

gbr_end_rationing_lead = {
	# Check to see if rationing for lead can be ended
	if = {
		limit = { market_capital.market = { mg:lead = { market_goods_consumption < 10 } } }
		post_notification = gbr_lead_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_lead
		gbr_remove_lead_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_lead_progress_next < 0
			OR = {
				var:gbr_ending_lead_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_lead_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_lead_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_lead_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_lead_progress_next < 0 }
			OR = {
				var:gbr_ending_lead_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_lead_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_lead_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_lead_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_lead_progress_next < 0
			var:gbr_lead_progress < 120
			var:gbr_ending_lead_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_lead_rationing_ended_message
		remove_variable = gbr_rationing_lead
		gbr_remove_lead_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_lead_progress_next < 0
			var:gbr_lead_progress >= 120
			var:gbr_lead_progress < 240
			var:gbr_ending_lead_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_lead_rationing_ended_message
		remove_variable = gbr_rationing_lead
		gbr_remove_lead_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_lead_progress_next < 0
			var:gbr_lead_progress >= 240
			var:gbr_ending_lead_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_lead_rationing_ended_message
		remove_variable = gbr_rationing_lead
		gbr_remove_lead_variables = yes
	}
}

gbr_end_rationing_liquor = {
	# Check to see if rationing for liquor can be ended
	if = {
		limit = { market_capital.market = { mg:liquor = { market_goods_consumption < 10 } } }
		post_notification = gbr_liquor_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_liquor
		gbr_remove_liquor_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_liquor_progress_next < 0
			OR = {
				var:gbr_ending_liquor_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_liquor_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_liquor_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_liquor_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_liquor_progress_next < 0 }
			OR = {
				var:gbr_ending_liquor_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_liquor_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_liquor_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_liquor_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_liquor_progress_next < 0
			var:gbr_liquor_progress < 120
			var:gbr_ending_liquor_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_liquor_rationing_ended_message
		remove_variable = gbr_rationing_liquor
		gbr_remove_liquor_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_liquor_progress_next < 0
			var:gbr_liquor_progress >= 120
			var:gbr_liquor_progress < 240
			var:gbr_ending_liquor_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_liquor_rationing_ended_message
		remove_variable = gbr_rationing_liquor
		gbr_remove_liquor_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_liquor_progress_next < 0
			var:gbr_liquor_progress >= 240
			var:gbr_ending_liquor_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_liquor_rationing_ended_message
		remove_variable = gbr_rationing_liquor
		gbr_remove_liquor_variables = yes
	}
}

gbr_end_rationing_meat = {
	# Check to see if rationing for meat can be ended
	if = {
		limit = { market_capital.market = { mg:meat = { market_goods_consumption < 10 } } }
		post_notification = gbr_meat_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_meat
		gbr_remove_meat_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_meat_progress_next < 0
			OR = {
				var:gbr_ending_meat_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_meat_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_meat_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_meat_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_meat_progress_next < 0 }
			OR = {
				var:gbr_ending_meat_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_meat_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_meat_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_meat_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_meat_progress_next < 0
			var:gbr_meat_progress < 120
			var:gbr_ending_meat_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_meat_rationing_ended_message
		remove_variable = gbr_rationing_meat
		gbr_remove_meat_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_meat_progress_next < 0
			var:gbr_meat_progress >= 120
			var:gbr_meat_progress < 240
			var:gbr_ending_meat_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_meat_rationing_ended_message
		remove_variable = gbr_rationing_meat
		gbr_remove_meat_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_meat_progress_next < 0
			var:gbr_meat_progress >= 240
			var:gbr_ending_meat_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_meat_rationing_ended_message
		remove_variable = gbr_rationing_meat
		gbr_remove_meat_variables = yes
	}
}

gbr_end_rationing_oil = {
	# Check to see if rationing for oil can be ended
	if = {
		limit = { market_capital.market = { mg:oil = { market_goods_consumption < 10 } } }
		post_notification = gbr_oil_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_oil
		gbr_remove_oil_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_oil_progress_next < 0
			OR = {
				var:gbr_ending_oil_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_oil_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_oil_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_oil_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_oil_progress_next < 0 }
			OR = {
				var:gbr_ending_oil_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_oil_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_oil_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_oil_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_oil_progress_next < 0
			var:gbr_oil_progress < 120
			var:gbr_ending_oil_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_oil_rationing_ended_message
		remove_variable = gbr_rationing_oil
		gbr_remove_oil_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_oil_progress_next < 0
			var:gbr_oil_progress >= 120
			var:gbr_oil_progress < 240
			var:gbr_ending_oil_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_oil_rationing_ended_message
		remove_variable = gbr_rationing_oil
		gbr_remove_oil_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_oil_progress_next < 0
			var:gbr_oil_progress >= 240
			var:gbr_ending_oil_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_oil_rationing_ended_message
		remove_variable = gbr_rationing_oil
		gbr_remove_oil_variables = yes
	}
}

gbr_end_rationing_opium = {
	# Check to see if rationing for opium can be ended
	if = {
		limit = { market_capital.market = { mg:opium = { market_goods_consumption < 10 } } }
		post_notification = gbr_opium_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_opium
		gbr_remove_opium_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_opium_progress_next < 0
			OR = {
				var:gbr_ending_opium_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_opium_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_opium_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_opium_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_opium_progress_next < 0 }
			OR = {
				var:gbr_ending_opium_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_opium_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_opium_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_opium_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_opium_progress_next < 0
			var:gbr_opium_progress < 120
			var:gbr_ending_opium_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_opium_rationing_ended_message
		remove_variable = gbr_rationing_opium
		gbr_remove_opium_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_opium_progress_next < 0
			var:gbr_opium_progress >= 120
			var:gbr_opium_progress < 240
			var:gbr_ending_opium_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_opium_rationing_ended_message
		remove_variable = gbr_rationing_opium
		gbr_remove_opium_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_opium_progress_next < 0
			var:gbr_opium_progress >= 240
			var:gbr_ending_opium_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_opium_rationing_ended_message
		remove_variable = gbr_rationing_opium
		gbr_remove_opium_variables = yes
	}
}

gbr_end_rationing_paper = {
	# Check to see if rationing for paper can be ended
	if = {
		limit = { market_capital.market = { mg:paper = { market_goods_consumption < 10 } } }
		post_notification = gbr_paper_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_paper
		gbr_remove_paper_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_paper_progress_next < 0
			OR = {
				var:gbr_ending_paper_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_paper_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_paper_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_paper_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_paper_progress_next < 0 }
			OR = {
				var:gbr_ending_paper_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_paper_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_paper_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_paper_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_paper_progress_next < 0
			var:gbr_paper_progress < 120
			var:gbr_ending_paper_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_paper_rationing_ended_message
		remove_variable = gbr_rationing_paper
		gbr_remove_paper_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_paper_progress_next < 0
			var:gbr_paper_progress >= 120
			var:gbr_paper_progress < 240
			var:gbr_ending_paper_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_paper_rationing_ended_message
		remove_variable = gbr_rationing_paper
		gbr_remove_paper_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_paper_progress_next < 0
			var:gbr_paper_progress >= 240
			var:gbr_ending_paper_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_paper_rationing_ended_message
		remove_variable = gbr_rationing_paper
		gbr_remove_paper_variables = yes
	}
}

gbr_end_rationing_pharmaceuticals = {
	# Check to see if rationing for pharmaceuticals can be ended
	if = {
		limit = { market_capital.market = { mg:pharmaceuticals = { market_goods_consumption < 10 } } }
		post_notification = gbr_pharmaceuticals_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_pharmaceuticals
		gbr_remove_pharmaceuticals_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_pharmaceuticals_progress_next < 0
			OR = {
				var:gbr_ending_pharmaceuticals_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_pharmaceuticals_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_pharmaceuticals_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_pharmaceuticals_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_pharmaceuticals_progress_next < 0 }
			OR = {
				var:gbr_ending_pharmaceuticals_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_pharmaceuticals_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_pharmaceuticals_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_pharmaceuticals_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_pharmaceuticals_progress_next < 0
			var:gbr_pharmaceuticals_progress < 120
			var:gbr_ending_pharmaceuticals_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_pharmaceuticals_rationing_ended_message
		remove_variable = gbr_rationing_pharmaceuticals
		gbr_remove_pharmaceuticals_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_pharmaceuticals_progress_next < 0
			var:gbr_pharmaceuticals_progress >= 120
			var:gbr_pharmaceuticals_progress < 240
			var:gbr_ending_pharmaceuticals_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_pharmaceuticals_rationing_ended_message
		remove_variable = gbr_rationing_pharmaceuticals
		gbr_remove_pharmaceuticals_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_pharmaceuticals_progress_next < 0
			var:gbr_pharmaceuticals_progress >= 240
			var:gbr_ending_pharmaceuticals_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_pharmaceuticals_rationing_ended_message
		remove_variable = gbr_rationing_pharmaceuticals
		gbr_remove_pharmaceuticals_variables = yes
	}
}

gbr_end_rationing_phosphorus = {
	# Check to see if rationing for phosphorus can be ended
	if = {
		limit = { market_capital.market = { mg:phosphorus = { market_goods_consumption < 10 } } }
		post_notification = gbr_phosphorus_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_phosphorus
		gbr_remove_phosphorus_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_phosphorus_progress_next < 0
			OR = {
				var:gbr_ending_phosphorus_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_phosphorus_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_phosphorus_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_phosphorus_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_phosphorus_progress_next < 0 }
			OR = {
				var:gbr_ending_phosphorus_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_phosphorus_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_phosphorus_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_phosphorus_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_phosphorus_progress_next < 0
			var:gbr_phosphorus_progress < 120
			var:gbr_ending_phosphorus_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_phosphorus_rationing_ended_message
		remove_variable = gbr_rationing_phosphorus
		gbr_remove_phosphorus_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_phosphorus_progress_next < 0
			var:gbr_phosphorus_progress >= 120
			var:gbr_phosphorus_progress < 240
			var:gbr_ending_phosphorus_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_phosphorus_rationing_ended_message
		remove_variable = gbr_rationing_phosphorus
		gbr_remove_phosphorus_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_phosphorus_progress_next < 0
			var:gbr_phosphorus_progress >= 240
			var:gbr_ending_phosphorus_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_phosphorus_rationing_ended_message
		remove_variable = gbr_rationing_phosphorus
		gbr_remove_phosphorus_variables = yes
	}
}

gbr_end_rationing_plastics = {
	# Check to see if rationing for plastics can be ended
	if = {
		limit = { market_capital.market = { mg:plastics = { market_goods_consumption < 10 } } }
		post_notification = gbr_plastics_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_plastics
		gbr_remove_plastics_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_plastics_progress_next < 0
			OR = {
				var:gbr_ending_plastics_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_plastics_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_plastics_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_plastics_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_plastics_progress_next < 0 }
			OR = {
				var:gbr_ending_plastics_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_plastics_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_plastics_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_plastics_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_plastics_progress_next < 0
			var:gbr_plastics_progress < 120
			var:gbr_ending_plastics_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_plastics_rationing_ended_message
		remove_variable = gbr_rationing_plastics
		gbr_remove_plastics_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_plastics_progress_next < 0
			var:gbr_plastics_progress >= 120
			var:gbr_plastics_progress < 240
			var:gbr_ending_plastics_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_plastics_rationing_ended_message
		remove_variable = gbr_rationing_plastics
		gbr_remove_plastics_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_plastics_progress_next < 0
			var:gbr_plastics_progress >= 240
			var:gbr_ending_plastics_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_plastics_rationing_ended_message
		remove_variable = gbr_rationing_plastics
		gbr_remove_plastics_variables = yes
	}
}

gbr_end_rationing_refined_fuel = {
	# Check to see if rationing for refined fuel can be ended
	if = {
		limit = { market_capital.market = { mg:refined_fuel = { market_goods_consumption < 10 } } }
		post_notification = gbr_refined_fuel_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_refined_fuel
		gbr_remove_refined_fuel_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_refined_fuel_progress_next < 0
			OR = {
				var:gbr_ending_refined_fuel_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_refined_fuel_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_refined_fuel_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_refined_fuel_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_refined_fuel_progress_next < 0 }
			OR = {
				var:gbr_ending_refined_fuel_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_refined_fuel_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_refined_fuel_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_refined_fuel_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_refined_fuel_progress_next < 0
			var:gbr_refined_fuel_progress < 120
			var:gbr_ending_refined_fuel_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_refined_fuel_rationing_ended_message
		remove_variable = gbr_rationing_refined_fuel
		gbr_remove_refined_fuel_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_refined_fuel_progress_next < 0
			var:gbr_refined_fuel_progress >= 120
			var:gbr_refined_fuel_progress < 240
			var:gbr_ending_refined_fuel_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_refined_fuel_rationing_ended_message
		remove_variable = gbr_rationing_refined_fuel
		gbr_remove_refined_fuel_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_refined_fuel_progress_next < 0
			var:gbr_refined_fuel_progress >= 240
			var:gbr_ending_refined_fuel_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_refined_fuel_rationing_ended_message
		remove_variable = gbr_rationing_refined_fuel
		gbr_remove_refined_fuel_variables = yes
	}
}

gbr_end_rationing_rubber = {
	# Check to see if rationing for rubber can be ended
	if = {
		limit = { market_capital.market = { mg:rubber = { market_goods_consumption < 10 } } }
		post_notification = gbr_rubber_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_rubber
		gbr_remove_rubber_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_rubber_progress_next < 0
			OR = {
				var:gbr_ending_rubber_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_rubber_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_rubber_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_rubber_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_rubber_progress_next < 0 }
			OR = {
				var:gbr_ending_rubber_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_rubber_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_rubber_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_rubber_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_rubber_progress_next < 0
			var:gbr_rubber_progress < 120
			var:gbr_ending_rubber_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_rubber_rationing_ended_message
		remove_variable = gbr_rationing_rubber
		gbr_remove_rubber_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_rubber_progress_next < 0
			var:gbr_rubber_progress >= 120
			var:gbr_rubber_progress < 240
			var:gbr_ending_rubber_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_rubber_rationing_ended_message
		remove_variable = gbr_rationing_rubber
		gbr_remove_rubber_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_rubber_progress_next < 0
			var:gbr_rubber_progress >= 240
			var:gbr_ending_rubber_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_rubber_rationing_ended_message
		remove_variable = gbr_rationing_rubber
		gbr_remove_rubber_variables = yes
	}
}

gbr_end_rationing_steel = {
	# Check to see if rationing for steel can be ended
	if = {
		limit = { market_capital.market = { mg:steel = { market_goods_consumption < 10 } } }
		post_notification = gbr_steel_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_steel
		gbr_remove_steel_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_steel_progress_next < 0
			OR = {
				var:gbr_ending_steel_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_steel_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_steel_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_steel_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_steel_progress_next < 0 }
			OR = {
				var:gbr_ending_steel_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_steel_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_steel_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_steel_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_steel_progress_next < 0
			var:gbr_steel_progress < 120
			var:gbr_ending_steel_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_steel_rationing_ended_message
		remove_variable = gbr_rationing_steel
		gbr_remove_steel_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_steel_progress_next < 0
			var:gbr_steel_progress >= 120
			var:gbr_steel_progress < 240
			var:gbr_ending_steel_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_steel_rationing_ended_message
		remove_variable = gbr_rationing_steel
		gbr_remove_steel_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_steel_progress_next < 0
			var:gbr_steel_progress >= 240
			var:gbr_ending_steel_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_steel_rationing_ended_message
		remove_variable = gbr_rationing_steel
		gbr_remove_steel_variables = yes
	}
}

gbr_end_rationing_sugar = {
	# Check to see if rationing for sugar can be ended
	if = {
		limit = { market_capital.market = { mg:sugar = { market_goods_consumption < 10 } } }
		post_notification = gbr_sugar_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_sugar
		gbr_remove_sugar_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_sugar_progress_next < 0
			OR = {
				var:gbr_ending_sugar_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_sugar_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_sugar_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_sugar_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_sugar_progress_next < 0 }
			OR = {
				var:gbr_ending_sugar_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_sugar_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_sugar_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_sugar_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_sugar_progress_next < 0
			var:gbr_sugar_progress < 120
			var:gbr_ending_sugar_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_sugar_rationing_ended_message
		remove_variable = gbr_rationing_sugar
		gbr_remove_sugar_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_sugar_progress_next < 0
			var:gbr_sugar_progress >= 120
			var:gbr_sugar_progress < 240
			var:gbr_ending_sugar_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_sugar_rationing_ended_message
		remove_variable = gbr_rationing_sugar
		gbr_remove_sugar_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_sugar_progress_next < 0
			var:gbr_sugar_progress >= 240
			var:gbr_ending_sugar_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_sugar_rationing_ended_message
		remove_variable = gbr_rationing_sugar
		gbr_remove_sugar_variables = yes
	}
}

gbr_end_rationing_tea = {
	# Check to see if rationing for tea can be ended
	if = {
		limit = { market_capital.market = { mg:tea = { market_goods_consumption < 10 } } }
		post_notification = gbr_tea_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_tea
		gbr_remove_tea_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tea_progress_next < 0
			OR = {
				var:gbr_ending_tea_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_tea_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_tea_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_tea_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_tea_progress_next < 0 }
			OR = {
				var:gbr_ending_tea_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_tea_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_tea_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_tea_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_tea_progress_next < 0
			var:gbr_tea_progress < 120
			var:gbr_ending_tea_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_tea_rationing_ended_message
		remove_variable = gbr_rationing_tea
		gbr_remove_tea_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tea_progress_next < 0
			var:gbr_tea_progress >= 120
			var:gbr_tea_progress < 240
			var:gbr_ending_tea_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_tea_rationing_ended_message
		remove_variable = gbr_rationing_tea
		gbr_remove_tea_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tea_progress_next < 0
			var:gbr_tea_progress >= 240
			var:gbr_ending_tea_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_tea_rationing_ended_message
		remove_variable = gbr_rationing_tea
		gbr_remove_tea_variables = yes
	}
}

gbr_end_rationing_tobacco = {
	# Check to see if rationing for tobacco can be ended
	if = {
		limit = { market_capital.market = { mg:tobacco = { market_goods_consumption < 10 } } }
		post_notification = gbr_tobacco_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_tobacco
		gbr_remove_tobacco_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tobacco_progress_next < 0
			OR = {
				var:gbr_ending_tobacco_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_tobacco_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_tobacco_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_tobacco_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_tobacco_progress_next < 0 }
			OR = {
				var:gbr_ending_tobacco_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_tobacco_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_tobacco_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_tobacco_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_tobacco_progress_next < 0
			var:gbr_tobacco_progress < 120
			var:gbr_ending_tobacco_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_tobacco_rationing_ended_message
		remove_variable = gbr_rationing_tobacco
		gbr_remove_tobacco_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tobacco_progress_next < 0
			var:gbr_tobacco_progress >= 120
			var:gbr_tobacco_progress < 240
			var:gbr_ending_tobacco_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_tobacco_rationing_ended_message
		remove_variable = gbr_rationing_tobacco
		gbr_remove_tobacco_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tobacco_progress_next < 0
			var:gbr_tobacco_progress >= 240
			var:gbr_ending_tobacco_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_tobacco_rationing_ended_message
		remove_variable = gbr_rationing_tobacco
		gbr_remove_tobacco_variables = yes
	}
}

gbr_end_rationing_tools = {
	# Check to see if rationing for tools can be ended
	if = {
		limit = { market_capital.market = { mg:tools = { market_goods_consumption < 10 } } }
		post_notification = gbr_tools_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_tools
		gbr_remove_tools_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tools_progress_next < 0
			OR = {
				var:gbr_ending_tools_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_tools_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_tools_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_tools_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_tools_progress_next < 0 }
			OR = {
				var:gbr_ending_tools_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_tools_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_tools_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_tools_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_tools_progress_next < 0
			var:gbr_tools_progress < 120
			var:gbr_ending_tools_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_tools_rationing_ended_message
		remove_variable = gbr_rationing_tools
		gbr_remove_tools_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tools_progress_next < 0
			var:gbr_tools_progress >= 120
			var:gbr_tools_progress < 240
			var:gbr_ending_tools_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_tools_rationing_ended_message
		remove_variable = gbr_rationing_tools
		gbr_remove_tools_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_tools_progress_next < 0
			var:gbr_tools_progress >= 240
			var:gbr_ending_tools_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_tools_rationing_ended_message
		remove_variable = gbr_rationing_tools
		gbr_remove_tools_variables = yes
	}
}

gbr_end_rationing_wine = {
	# Check to see if rationing for wine can be ended
	if = {
		limit = { market_capital.market = { mg:wine = { market_goods_consumption < 10 } } }
		post_notification = gbr_wine_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_wine
		gbr_remove_wine_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_wine_progress_next < 0
			OR = {
				var:gbr_ending_wine_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_wine_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_wine_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_wine_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_wine_progress_next < 0 }
			OR = {
				var:gbr_ending_wine_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_wine_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_wine_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_wine_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_wine_progress_next < 0
			var:gbr_wine_progress < 120
			var:gbr_ending_wine_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_wine_rationing_ended_message
		remove_variable = gbr_rationing_wine
		gbr_remove_wine_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_wine_progress_next < 0
			var:gbr_wine_progress >= 120
			var:gbr_wine_progress < 240
			var:gbr_ending_wine_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_wine_rationing_ended_message
		remove_variable = gbr_rationing_wine
		gbr_remove_wine_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_wine_progress_next < 0
			var:gbr_wine_progress >= 240
			var:gbr_ending_wine_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_wine_rationing_ended_message
		remove_variable = gbr_rationing_wine
		gbr_remove_wine_variables = yes
	}
}

gbr_end_rationing_wood = {
	# Check to see if rationing for wood can be ended
	if = {
		limit = { market_capital.market = { mg:wood = { market_goods_consumption < 10 } } }
		post_notification = gbr_wood_rationing_ended_no_consumption_message
		remove_variable = gbr_rationing_wood
		gbr_remove_wood_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_wood_progress_next < 0
			OR = {
				var:gbr_ending_wood_rationing < var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_wood_rationing < var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_wood_rationing < var:gbr_ending_rationing_target_variable_long
			}
		}
		change_variable = { name = gbr_ending_wood_rationing add = 1 }
	}
	else_if = {
		limit = {
			NOT = { var:gbr_wood_progress_next < 0 }
			OR = {
				var:gbr_ending_wood_rationing <= var:gbr_ending_rationing_target_variable_short
				var:gbr_ending_wood_rationing <= var:gbr_ending_rationing_target_variable_medium
				var:gbr_ending_wood_rationing <= var:gbr_ending_rationing_target_variable_long
			}
		}
		set_variable = { name = gbr_ending_wood_rationing value = 0 }
	}
	if = {
		limit = {
			var:gbr_wood_progress_next < 0
			var:gbr_wood_progress < 120
			var:gbr_ending_wood_rationing = var:gbr_ending_rationing_target_variable_short
		}
		post_notification = gbr_wood_rationing_ended_message
		remove_variable = gbr_rationing_wood
		gbr_remove_wood_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_wood_progress_next < 0
			var:gbr_wood_progress >= 120
			var:gbr_wood_progress < 240
			var:gbr_ending_wood_rationing = var:gbr_ending_rationing_target_variable_medium
		}
		post_notification = gbr_wood_rationing_ended_message
		remove_variable = gbr_rationing_wood
		gbr_remove_wood_variables = yes
	}
	else_if = {
		limit = {
			var:gbr_wood_progress_next < 0
			var:gbr_wood_progress >= 240
			var:gbr_ending_wood_rationing = var:gbr_ending_rationing_target_variable_long
		}
		post_notification = gbr_wood_rationing_ended_message
		remove_variable = gbr_rationing_wood
		gbr_remove_wood_variables = yes
	}
}

gbr_rationing_ended_progress_reduction = {
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_aluminum }
			var:gbr_aluminum_progress > 7
		}
		change_variable = { name = gbr_aluminum_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_aluminum }
			var:gbr_aluminum_progress <= 7
			NOT = { var:gbr_aluminum_progress = 0 }
		}
		change_variable = { name = gbr_aluminum_progress subtract = var:gbr_aluminum_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_bauxite }
			var:gbr_bauxite_progress > 0
		}
		change_variable = { name = gbr_bauxite_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_bauxite }
			var:gbr_bauxite_progress <= 7
			NOT = { var:gbr_bauxite_progress = 0 }
		}
		change_variable = { name = gbr_bauxite_progress subtract = var:gbr_bauxite_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_fertilizer }
			var:gbr_fertilizer_progress > 0
		}
		change_variable = { name = gbr_fertilizer_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_fertilizer }
			var:gbr_fertilizer_progress <= 7
			NOT = { var:gbr_fertilizer_progress = 0 }
		}
		change_variable = { name = gbr_fertilizer_progress subtract = var:gbr_fertilizer_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_clothes }
			var:gbr_clothes_progress > 0
		}
		change_variable = { name = gbr_clothes_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_clothes }
			var:gbr_clothes_progress <= 7
			NOT = { var:gbr_clothes_progress = 0 }
		}
		change_variable = { name = gbr_clothes_progress subtract = var:gbr_clothes_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_coal }
			var:gbr_coal_progress > 0
		}
		change_variable = { name = gbr_coal_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_coal }
			var:gbr_coal_progress <= 7
			NOT = { var:gbr_coal_progress = 0 }
		}
		change_variable = { name = gbr_coal_progress subtract = var:gbr_coal_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_coffee }
			var:gbr_coffee_progress > 0
		}
		change_variable = { name = gbr_coffee_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_coffee }
			var:gbr_coffee_progress <= 7
			NOT = { var:gbr_coffee_progress = 0 }
		}
		change_variable = { name = gbr_coffee_progress subtract = var:gbr_coffee_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_copper }
			var:gbr_copper_progress > 0
		}
		change_variable = { name = gbr_copper_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_copper }
			var:gbr_copper_progress <= 7
			NOT = { var:gbr_copper_progress = 0 }
		}
		change_variable = { name = gbr_copper_progress subtract = var:gbr_copper_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_engines }
			var:gbr_engines_progress > 0
		}
		change_variable = { name = gbr_engines_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_engines }
			var:gbr_engines_progress <= 7
			NOT = { var:gbr_engines_progress = 0 }
		}
		change_variable = { name = gbr_engines_progress subtract = var:gbr_engines_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_explosives }
			var:gbr_explosives_progress > 0
		}
		change_variable = { name = gbr_explosives_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_explosives }
			var:gbr_explosives_progress <= 7
			NOT = { var:gbr_explosives_progress = 0 }
		}
		change_variable = { name = gbr_explosives_progress subtract = var:gbr_explosives_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_fabric }
			var:gbr_fabric_progress > 0
		}
		change_variable = { name = gbr_fabric_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_fabric }
			var:gbr_fabric_progress <= 7
			NOT = { var:gbr_fabric_progress = 0 }
		}
		change_variable = { name = gbr_fabric_progress subtract = var:gbr_fabric_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_fish }
			var:gbr_fish_progress > 0
		}
		change_variable = { name = gbr_fish_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_fish }
			var:gbr_fish_progress <= 7
			NOT = { var:gbr_fish_progress = 0 }
		}
		change_variable = { name = gbr_fish_progress subtract = var:gbr_fish_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_fruit }
			var:gbr_fruit_progress > 0
		}
		change_variable = { name = gbr_fruit_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_fruit }
			var:gbr_fruit_progress <= 7
			NOT = { var:gbr_fruit_progress = 0 }
		}
		change_variable = { name = gbr_fruit_progress subtract = var:gbr_fruit_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_glass }
			var:gbr_glass_progress > 0
		}
		change_variable = { name = gbr_glass_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_glass }
			var:gbr_glass_progress <= 7
			NOT = { var:gbr_glass_progress = 0 }
		}
		change_variable = { name = gbr_glass_progress subtract = var:gbr_glass_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_grain }
			var:gbr_grain_progress > 0
		}
		change_variable = { name = gbr_grain_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_grain }
			var:gbr_grain_progress <= 7
			NOT = { var:gbr_grain_progress = 0 }
		}
		change_variable = { name = gbr_grain_progress subtract = var:gbr_grain_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_groceries }
			var:gbr_groceries_progress > 0
		}
		change_variable = { name = gbr_groceries_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_groceries }
			var:gbr_groceries_progress <= 7
			NOT = { var:gbr_groceries_progress = 0 }
		}
		change_variable = { name = gbr_groceries_progress subtract = var:gbr_groceries_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_high_quality_fabric }
			var:gbr_high_quality_fabric_progress > 0
		}
		change_variable = { name = gbr_high_quality_fabric_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_high_quality_fabric }
			var:gbr_high_quality_fabric_progress <= 7
			NOT = { var:gbr_high_quality_fabric_progress = 0 }
		}
		change_variable = { name = gbr_high_quality_fabric_progress subtract = var:gbr_high_quality_fabric_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_iron }
			var:gbr_iron_progress > 0
		}
		change_variable = { name = gbr_iron_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_iron }
			var:gbr_iron_progress <= 7
			NOT = { var:gbr_iron_progress = 0 }
		}
		change_variable = { name = gbr_iron_progress subtract = var:gbr_iron_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_lead }
			var:gbr_lead_progress > 0
		}
		change_variable = { name = gbr_lead_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_lead }
			var:gbr_lead_progress <= 7
			NOT = { var:gbr_lead_progress = 0 }
		}
		change_variable = { name = gbr_lead_progress subtract = var:gbr_lead_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_liquor }
			var:gbr_liquor_progress > 0
		}
		change_variable = { name = gbr_liquor_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_liquor }
			var:gbr_liquor_progress <= 7
			NOT = { var:gbr_liquor_progress = 0 }
		}
		change_variable = { name = gbr_liquor_progress subtract = var:gbr_liquor_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_meat }
			var:gbr_meat_progress > 0
		}
		change_variable = { name = gbr_meat_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_meat }
			var:gbr_meat_progress <= 7
			NOT = { var:gbr_meat_progress = 0 }
		}
		change_variable = { name = gbr_meat_progress subtract = var:gbr_meat_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_oil }
			var:gbr_oil_progress > 0
		}
		change_variable = { name = gbr_oil_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_oil }
			var:gbr_oil_progress <= 7
			NOT = { var:gbr_oil_progress = 0 }
		}
		change_variable = { name = gbr_oil_progress subtract = var:gbr_oil_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_opium }
			var:gbr_opium_progress > 0
		}
		change_variable = { name = gbr_opium_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_opium }
			var:gbr_opium_progress <= 7
			NOT = { var:gbr_opium_progress = 0 }
		}
		change_variable = { name = gbr_opium_progress subtract = var:gbr_opium_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_paper }
			var:gbr_paper_progress > 0
		}
		change_variable = { name = gbr_paper_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_paper }
			var:gbr_paper_progress <= 7
			NOT = { var:gbr_paper_progress = 0 }
		}
		change_variable = { name = gbr_paper_progress subtract = var:gbr_paper_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_pharmaceuticals }
			var:gbr_pharmaceuticals_progress > 0
		}
		change_variable = { name = gbr_pharmaceuticals_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_pharmaceuticals }
			var:gbr_pharmaceuticals_progress <= 7
			NOT = { var:gbr_pharmaceuticals_progress = 0 }
		}
		change_variable = { name = gbr_pharmaceuticals_progress subtract = var:gbr_pharmaceuticals_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_phosphorus }
			var:gbr_phosphorus_progress > 0
		}
		change_variable = { name = gbr_phosphorus_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_phosphorus }
			var:gbr_phosphorus_progress <= 7
			NOT = { var:gbr_phosphorus_progress = 0 }
		}
		change_variable = { name = gbr_phosphorus_progress subtract = var:gbr_phosphorus_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_plastics }
			var:gbr_plastics_progress > 0
		}
		change_variable = { name = gbr_plastics_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_plastics }
			var:gbr_plastics_progress <= 7
			NOT = { var:gbr_plastics_progress = 0 }
		}
		change_variable = { name = gbr_plastics_progress subtract = var:gbr_plastics_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_refined_fuel }
			var:gbr_refined_fuel_progress > 0
		}
		change_variable = { name = gbr_refined_fuel_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_refined_fuel }
			var:gbr_refined_fuel_progress <= 7
			NOT = { var:gbr_refined_fuel_progress = 0 }
		}
		change_variable = { name = gbr_refined_fuel_progress subtract = var:gbr_refined_fuel_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_rubber }
			var:gbr_rubber_progress > 0
		}
		change_variable = { name = gbr_rubber_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_rubber }
			var:gbr_rubber_progress <= 7
			NOT = { var:gbr_rubber_progress = 0 }
		}
		change_variable = { name = gbr_rubber_progress subtract = var:gbr_rubber_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_steel }
			var:gbr_steel_progress > 0
		}
		change_variable = { name = gbr_steel_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_steel }
			var:gbr_steel_progress <= 7
			NOT = { var:gbr_steel_progress = 0 }
		}
		change_variable = { name = gbr_steel_progress subtract = var:gbr_steel_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_sugar }
			var:gbr_sugar_progress > 0
		}
		change_variable = { name = gbr_sugar_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_sugar }
			var:gbr_sugar_progress <= 7
			NOT = { var:gbr_sugar_progress = 0 }
		}
		change_variable = { name = gbr_sugar_progress subtract = var:gbr_sugar_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_tea }
			var:gbr_tea_progress > 0
		}
		change_variable = { name = gbr_tea_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_tea }
			var:gbr_tea_progress <= 7
			NOT = { var:gbr_tea_progress = 0 }
		}
		change_variable = { name = gbr_tea_progress subtract = var:gbr_tea_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_tobacco }
			var:gbr_tobacco_progress > 0
		}
		change_variable = { name = gbr_tobacco_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_tobacco }
			var:gbr_tobacco_progress <= 7
			NOT = { var:gbr_tobacco_progress = 0 }
		}
		change_variable = { name = gbr_tobacco_progress subtract = var:gbr_tobacco_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_tools }
			var:gbr_tools_progress > 0
		}
		change_variable = { name = gbr_tools_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_tools }
			var:gbr_tools_progress <= 7
			NOT = { var:gbr_tools_progress = 0 }
		}
		change_variable = { name = gbr_tools_progress subtract = var:gbr_tools_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_wine }
			var:gbr_wine_progress > 0
		}
		change_variable = { name = gbr_wine_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_wine }
			var:gbr_wine_progress <= 7
			NOT = { var:gbr_wine_progress = 0 }
		}
		change_variable = { name = gbr_wine_progress subtract = var:gbr_wine_progress }
	}
	if = {
		limit = {
			NOT = { has_variable = gbr_rationing_wood }
			var:gbr_wood_progress > 0
		}
		change_variable = { name = gbr_wood_progress subtract = 7 }
	}
	else_if = {
		limit = {
			NOT = { has_variable = gbr_rationing_wood }
			var:gbr_wood_progress <= 7
			NOT = { var:gbr_wood_progress = 0 }
		}
		change_variable = { name = gbr_wood_progress subtract = var:gbr_wood_progress }
	}
}

gbr_rationing_required_check = {
	if = {
		limit = { has_variable = gbr_rationing_aluminum }
		gbr_end_rationing_aluminum = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_aluminum } }
		gbr_start_rationing_aluminum = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_bauxite }
		gbr_end_rationing_bauxite = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_bauxite } }
		gbr_start_rationing_bauxite = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_fertilizer }
		gbr_end_rationing_fertilizer = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_fertilizer } }
		gbr_start_rationing_fertilizer = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_clothes }
		gbr_end_rationing_clothes = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_clothes } }
		gbr_start_rationing_clothes = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_coal }
		gbr_end_rationing_coal = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_coal } }
		gbr_start_rationing_coal = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_coffee }
		gbr_end_rationing_coffee = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_coffee } }
		gbr_start_rationing_coffee = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_copper }
		gbr_end_rationing_copper = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_copper } }
		gbr_start_rationing_copper = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_engines }
		gbr_end_rationing_engines = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_engines } }
		gbr_start_rationing_engines = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_explosives }
		gbr_end_rationing_explosives = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_explosives } }
		gbr_start_rationing_explosives = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_fabric }
		gbr_end_rationing_fabric = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_fabric } }
		gbr_start_rationing_fabric = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_fish }
		gbr_end_rationing_fish = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_fish } }
		gbr_start_rationing_fish = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_fruit }
		gbr_end_rationing_fruit = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_fruit } }
		gbr_start_rationing_fruit = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_glass }
		gbr_end_rationing_glass = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_glass } }
		gbr_start_rationing_glass = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_grain }
		gbr_end_rationing_grain = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_grain } }
		gbr_start_rationing_grain = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_groceries }
		gbr_end_rationing_groceries = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_groceries } }
		gbr_start_rationing_groceries = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_high_quality_fabric }
		gbr_end_rationing_high_quality_fabric = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_high_quality_fabric } }
		gbr_start_rationing_high_quality_fabric = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_iron }
		gbr_end_rationing_iron = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_iron } }
		gbr_start_rationing_iron = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_lead }
		gbr_end_rationing_lead = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_lead } }
		gbr_start_rationing_lead = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_liquor }
		gbr_end_rationing_liquor = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_liquor } }
		gbr_start_rationing_liquor = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_meat }
		gbr_end_rationing_meat = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_meat } }
		gbr_start_rationing_meat = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_oil }
		gbr_end_rationing_oil = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_oil } }
		gbr_start_rationing_oil = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_opium }
		gbr_end_rationing_opium = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_opium } }
		gbr_start_rationing_opium = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_paper }
		gbr_end_rationing_paper = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_paper } }
		gbr_start_rationing_paper = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_pharmaceuticals }
		gbr_end_rationing_pharmaceuticals = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_pharmaceuticals } }
		gbr_start_rationing_pharmaceuticals = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_phosphorus }
		gbr_end_rationing_phosphorus = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_phosphorus } }
		gbr_start_rationing_phosphorus = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_plastics }
		gbr_end_rationing_plastics = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_plastics } }
		gbr_start_rationing_plastics = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_refined_fuel }
		gbr_end_rationing_refined_fuel = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_refined_fuel } }
		gbr_start_rationing_refined_fuel = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_rubber }
		gbr_end_rationing_rubber = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_rubber } }
		gbr_start_rationing_rubber = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_steel }
		gbr_end_rationing_steel = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_steel } }
		gbr_start_rationing_steel = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_sugar }
		gbr_end_rationing_sugar = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_sugar } }
		gbr_start_rationing_sugar = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_tea }
		gbr_end_rationing_tea = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_tea } }
		gbr_start_rationing_tea = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_tobacco }
		gbr_end_rationing_tobacco = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_tobacco } }
		gbr_start_rationing_tobacco = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_tools }
		gbr_end_rationing_tools = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_tools } }
		gbr_start_rationing_tools = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_wine }
		gbr_end_rationing_wine = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_wine } }
		gbr_start_rationing_wine = yes
	}
	if = { 
		limit = { has_variable = gbr_rationing_wood }
		gbr_end_rationing_wood = yes
	}
	else_if = { 
		limit = { NOT = { has_variable = gbr_rationing_wood } }
		gbr_start_rationing_wood = yes
	}
}

gbr_forced_devaluation_check = {
	if = {
		limit = {
			var:gbr_rationing_inflation_rate >= 10
			var:gbr_rationing_inflation_rate < 20
		}
		random_list = {
			99 = {  }
			1 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
	else_if = {
		limit = {
			var:gbr_rationing_inflation_rate >= 20
			var:gbr_rationing_inflation_rate < 30
		}
		random_list = {
			98 = {  }
			2 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
	else_if = {
		limit = {
			var:gbr_rationing_inflation_rate >= 30
			var:gbr_rationing_inflation_rate < 40
		}
		random_list = {
			96 = {  }
			4 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
	else_if = {
		limit = {
			var:gbr_rationing_inflation_rate >= 40
			var:gbr_rationing_inflation_rate < 50
		}
		random_list = {
			92 = {  }
			8 = { trigger_event = united_kingdom_post_war_events.101 }
		}
	}
	else_if = {
		limit = { var:gbr_rationing_inflation_rate = 50 }
		trigger_event = united_kingdom_post_war_events.101
	}
}

gbr_rationing_inflation_effect = {
	remove_modifier = gbr_goods_demand_inflation
	if = {
		limit = { NOT = { has_modifier = gbr_forced_currency_devaluation } }
		add_modifier = {
			name = gbr_goods_demand_inflation
			multiplier = var:gbr_rationing_inflation_rate
		}
	}
}

gbr_rationing_inflation_change = {
	# What effect does the progress of each good have on the UK's inflation
	set_variable = { name = gbr_added_inflation value = 0 }
	if = {
		limit = { has_variable = gbr_rationing_aluminum }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:aluminum = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:aluminum = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:aluminum = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:aluminum = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:aluminum = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:aluminum = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:aluminum = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_aluminum_progress > 0
				var:gbr_aluminum_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_aluminum_progress > 60
				var:gbr_aluminum_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_aluminum_progress > 120
				var:gbr_aluminum_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_aluminum_progress > 180
				var:gbr_aluminum_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_aluminum_progress > 240
				var:gbr_aluminum_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_aluminum_progress > 300
				var:gbr_aluminum_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_bauxite }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:bauxite = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:bauxite = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:bauxite = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:bauxite = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:bauxite = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:bauxite = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:bauxite = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_bauxite_progress > 0
				var:gbr_bauxite_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_bauxite_progress > 60
				var:gbr_bauxite_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_bauxite_progress > 120
				var:gbr_bauxite_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_bauxite_progress > 180
				var:gbr_bauxite_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_bauxite_progress > 240
				var:gbr_bauxite_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_bauxite_progress > 300
				var:gbr_bauxite_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_fertilizer }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fertilizer = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fertilizer = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fertilizer = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fertilizer = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fertilizer = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fertilizer = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fertilizer = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_fertilizer_progress > 0
				var:gbr_fertilizer_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_fertilizer_progress > 60
				var:gbr_fertilizer_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_fertilizer_progress > 120
				var:gbr_fertilizer_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_fertilizer_progress > 180
				var:gbr_fertilizer_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_fertilizer_progress > 240
				var:gbr_fertilizer_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_fertilizer_progress > 300
				var:gbr_fertilizer_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_clothes }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:clothes = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:clothes = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:clothes = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:clothes = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:clothes = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:clothes = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:clothes = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_clothes_progress > 0
				var:gbr_clothes_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_clothes_progress > 60
				var:gbr_clothes_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_clothes_progress > 120
				var:gbr_clothes_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_clothes_progress > 180
				var:gbr_clothes_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_clothes_progress > 240
				var:gbr_clothes_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_clothes_progress > 300
				var:gbr_clothes_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_coal }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coal = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coal = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coal = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coal = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coal = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coal = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coal = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_coal_progress > 0
				var:gbr_coal_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_coal_progress > 60
				var:gbr_coal_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_coal_progress > 120
				var:gbr_coal_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_coal_progress > 180
				var:gbr_coal_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_coal_progress > 240
				var:gbr_coal_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_coal_progress > 300
				var:gbr_coal_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_coffee }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coffee = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coffee = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coffee = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coffee = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coffee = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coffee = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:coffee = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_coffee_progress > 0
				var:gbr_coffee_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_coffee_progress > 60
				var:gbr_coffee_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_coffee_progress > 120
				var:gbr_coffee_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_coffee_progress > 180
				var:gbr_coffee_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_coffee_progress > 240
				var:gbr_coffee_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_coffee_progress > 300
				var:gbr_coffee_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_copper }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:copper = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:copper = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:copper = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:copper = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:copper = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:copper = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:copper = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_copper_progress > 0
				var:gbr_copper_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_copper_progress > 60
				var:gbr_copper_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_copper_progress > 120
				var:gbr_copper_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_copper_progress > 180
				var:gbr_copper_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_copper_progress > 240
				var:gbr_copper_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_copper_progress > 300
				var:gbr_copper_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_engines }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:engines = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:engines = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:engines = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:engines = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:engines = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:engines = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:engines = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_engines_progress > 0
				var:gbr_engines_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_engines_progress > 60
				var:gbr_engines_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_engines_progress > 120
				var:gbr_engines_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_engines_progress > 180
				var:gbr_engines_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_engines_progress > 240
				var:gbr_engines_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_engines_progress > 300
				var:gbr_engines_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_explosives }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:explosives = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:explosives = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:explosives = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:explosives = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:explosives = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:explosives = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:explosives = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_explosives_progress > 0
				var:gbr_explosives_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_explosives_progress > 60
				var:gbr_explosives_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_explosives_progress > 120
				var:gbr_explosives_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_explosives_progress > 180
				var:gbr_explosives_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_explosives_progress > 240
				var:gbr_explosives_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_explosives_progress > 300
				var:gbr_explosives_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_fabric }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fabric = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fabric = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fabric = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fabric = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fabric = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fabric = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fabric = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_fabric_progress > 0
				var:gbr_fabric_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_fabric_progress > 60
				var:gbr_fabric_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_fabric_progress > 120
				var:gbr_fabric_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_fabric_progress > 180
				var:gbr_fabric_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_fabric_progress > 240
				var:gbr_fabric_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_fabric_progress > 300
				var:gbr_fabric_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_fish }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fish = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fish = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fish = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fish = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fish = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fish = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fish = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_fish_progress > 0
				var:gbr_fish_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_fish_progress > 60
				var:gbr_fish_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_fish_progress > 120
				var:gbr_fish_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_fish_progress > 180
				var:gbr_fish_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_fish_progress > 240
				var:gbr_fish_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_fish_progress > 300
				var:gbr_fish_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_fruit }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fruit = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fruit = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fruit = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fruit = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fruit = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fruit = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:fruit = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_fruit_progress > 0
				var:gbr_fruit_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_fruit_progress > 60
				var:gbr_fruit_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_fruit_progress > 120
				var:gbr_fruit_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_fruit_progress > 180
				var:gbr_fruit_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_fruit_progress > 240
				var:gbr_fruit_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_fruit_progress > 300
				var:gbr_fruit_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_glass }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:glass = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:glass = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:glass = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:glass = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:glass = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:glass = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:glass = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_glass_progress > 0
				var:gbr_glass_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_glass_progress > 60
				var:gbr_glass_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_glass_progress > 120
				var:gbr_glass_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_glass_progress > 180
				var:gbr_glass_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_glass_progress > 240
				var:gbr_glass_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_glass_progress > 300
				var:gbr_glass_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_grain }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:grain = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:grain = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:grain = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:grain = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:grain = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:grain = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:grain = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_grain_progress > 0
				var:gbr_grain_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_grain_progress > 60
				var:gbr_grain_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_grain_progress > 120
				var:gbr_grain_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_grain_progress > 180
				var:gbr_grain_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_grain_progress > 240
				var:gbr_grain_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_grain_progress > 300
				var:gbr_grain_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_groceries }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:groceries = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:groceries = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:groceries = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:groceries = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:groceries = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:groceries = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:groceries = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_groceries_progress > 0
				var:gbr_groceries_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_groceries_progress > 60
				var:gbr_groceries_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_groceries_progress > 120
				var:gbr_groceries_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_groceries_progress > 180
				var:gbr_groceries_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_groceries_progress > 240
				var:gbr_groceries_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_groceries_progress > 300
				var:gbr_groceries_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_high_quality_fabric }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:high_quality_fabric = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_high_quality_fabric_progress > 0
				var:gbr_high_quality_fabric_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_high_quality_fabric_progress > 60
				var:gbr_high_quality_fabric_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_high_quality_fabric_progress > 120
				var:gbr_high_quality_fabric_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_high_quality_fabric_progress > 180
				var:gbr_high_quality_fabric_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_high_quality_fabric_progress > 240
				var:gbr_high_quality_fabric_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_high_quality_fabric_progress > 300
				var:gbr_high_quality_fabric_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_iron }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:iron = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:iron = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:iron = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:iron = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:iron = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:iron = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:iron = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_iron_progress > 0
				var:gbr_iron_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_iron_progress > 60
				var:gbr_iron_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_iron_progress > 120
				var:gbr_iron_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_iron_progress > 180
				var:gbr_iron_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_iron_progress > 240
				var:gbr_iron_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_iron_progress > 300
				var:gbr_iron_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_lead }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:lead = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:lead = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:lead = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:lead = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:lead = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:lead = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:lead = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_lead_progress > 0
				var:gbr_lead_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_lead_progress > 60
				var:gbr_lead_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_lead_progress > 120
				var:gbr_lead_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_lead_progress > 180
				var:gbr_lead_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_lead_progress > 240
				var:gbr_lead_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_lead_progress > 300
				var:gbr_lead_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_liquor }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:liquor = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:liquor = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:liquor = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:liquor = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:liquor = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:liquor = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:liquor = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_liquor_progress > 0
				var:gbr_liquor_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_liquor_progress > 60
				var:gbr_liquor_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_liquor_progress > 120
				var:gbr_liquor_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_liquor_progress > 180
				var:gbr_liquor_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_liquor_progress > 240
				var:gbr_liquor_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_liquor_progress > 300
				var:gbr_liquor_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_meat }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:meat = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:meat = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:meat = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:meat = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:meat = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:meat = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:meat = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_meat_progress > 0
				var:gbr_meat_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_meat_progress > 60
				var:gbr_meat_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_meat_progress > 120
				var:gbr_meat_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_meat_progress > 180
				var:gbr_meat_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_meat_progress > 240
				var:gbr_meat_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_meat_progress > 300
				var:gbr_meat_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_oil }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:oil = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:oil = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:oil = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:oil = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:oil = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:oil = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:oil = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_oil_progress > 0
				var:gbr_oil_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_oil_progress > 60
				var:gbr_oil_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_oil_progress > 120
				var:gbr_oil_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_oil_progress > 180
				var:gbr_oil_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_oil_progress > 240
				var:gbr_oil_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_oil_progress > 300
				var:gbr_oil_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_opium }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:opium = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:opium = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:opium = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:opium = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:opium = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:opium = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:opium = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_opium_progress > 0
				var:gbr_opium_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_opium_progress > 60
				var:gbr_opium_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_opium_progress > 120
				var:gbr_opium_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_opium_progress > 180
				var:gbr_opium_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_opium_progress > 240
				var:gbr_opium_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_opium_progress > 300
				var:gbr_opium_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_paper }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:paper = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:paper = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:paper = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:paper = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:paper = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:paper = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:paper = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_paper_progress > 0
				var:gbr_paper_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_paper_progress > 60
				var:gbr_paper_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_paper_progress > 120
				var:gbr_paper_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_paper_progress > 180
				var:gbr_paper_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_paper_progress > 240
				var:gbr_paper_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_paper_progress > 300
				var:gbr_paper_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_pharmaceuticals }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:pharmaceuticals = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_pharmaceuticals_progress > 0
				var:gbr_pharmaceuticals_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_pharmaceuticals_progress > 60
				var:gbr_pharmaceuticals_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_pharmaceuticals_progress > 120
				var:gbr_pharmaceuticals_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_pharmaceuticals_progress > 180
				var:gbr_pharmaceuticals_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_pharmaceuticals_progress > 240
				var:gbr_pharmaceuticals_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_pharmaceuticals_progress > 300
				var:gbr_pharmaceuticals_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_phosphorus }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:phosphorus = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:phosphorus = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:phosphorus = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:phosphorus = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:phosphorus = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:phosphorus = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:phosphorus = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_phosphorus_progress > 0
				var:gbr_phosphorus_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_phosphorus_progress > 60
				var:gbr_phosphorus_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_phosphorus_progress > 120
				var:gbr_phosphorus_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_phosphorus_progress > 180
				var:gbr_phosphorus_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_phosphorus_progress > 240
				var:gbr_phosphorus_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_phosphorus_progress > 300
				var:gbr_phosphorus_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_plastics }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:plastics = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:plastics = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:plastics = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:plastics = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:plastics = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:plastics = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:plastics = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_plastics_progress > 0
				var:gbr_plastics_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_plastics_progress > 60
				var:gbr_plastics_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_plastics_progress > 120
				var:gbr_plastics_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_plastics_progress > 180
				var:gbr_plastics_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_plastics_progress > 240
				var:gbr_plastics_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_plastics_progress > 300
				var:gbr_plastics_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_refined_fuel }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:refined_fuel = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:refined_fuel = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:refined_fuel = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:refined_fuel = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:refined_fuel = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:refined_fuel = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:refined_fuel = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_refined_fuel_progress > 0
				var:gbr_refined_fuel_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_refined_fuel_progress > 60
				var:gbr_refined_fuel_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_refined_fuel_progress > 120
				var:gbr_refined_fuel_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_refined_fuel_progress > 180
				var:gbr_refined_fuel_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_refined_fuel_progress > 240
				var:gbr_refined_fuel_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_refined_fuel_progress > 300
				var:gbr_refined_fuel_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_rubber }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:rubber = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:rubber = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:rubber = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:rubber = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:rubber = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:rubber = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:rubber = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rubber_progress > 0
				var:gbr_rubber_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rubber_progress > 60
				var:gbr_rubber_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_rubber_progress > 120
				var:gbr_rubber_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_rubber_progress > 180
				var:gbr_rubber_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_rubber_progress > 240
				var:gbr_rubber_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_rubber_progress > 300
				var:gbr_rubber_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_steel }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:steel = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:steel = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:steel = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:steel = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:steel = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:steel = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:steel = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_steel_progress > 0
				var:gbr_steel_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_steel_progress > 60
				var:gbr_steel_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_steel_progress > 120
				var:gbr_steel_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_steel_progress > 180
				var:gbr_steel_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_steel_progress > 240
				var:gbr_steel_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_steel_progress > 300
				var:gbr_steel_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_sugar }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:sugar = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:sugar = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:sugar = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:sugar = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:sugar = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:sugar = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:sugar = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_sugar_progress > 0
				var:gbr_sugar_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_sugar_progress > 60
				var:gbr_sugar_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_sugar_progress > 120
				var:gbr_sugar_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_sugar_progress > 180
				var:gbr_sugar_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_sugar_progress > 240
				var:gbr_sugar_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_sugar_progress > 300
				var:gbr_sugar_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_tea }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tea = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tea = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tea = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tea = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tea = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tea = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tea = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_tea_progress > 0
				var:gbr_tea_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_tea_progress > 60
				var:gbr_tea_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_tea_progress > 120
				var:gbr_tea_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_tea_progress > 180
				var:gbr_tea_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_tea_progress > 240
				var:gbr_tea_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_tea_progress > 300
				var:gbr_tea_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_tobacco }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tobacco = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tobacco = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tobacco = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tobacco = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tobacco = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tobacco = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tobacco = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_tobacco_progress > 0
				var:gbr_tobacco_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_tobacco_progress > 60
				var:gbr_tobacco_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_tobacco_progress > 120
				var:gbr_tobacco_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_tobacco_progress > 180
				var:gbr_tobacco_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_tobacco_progress > 240
				var:gbr_tobacco_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_tobacco_progress > 300
				var:gbr_tobacco_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_tools }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tools = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tools = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tools = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tools = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tools = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tools = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:tools = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_tools_progress > 0
				var:gbr_tools_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_tools_progress > 60
				var:gbr_tools_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_tools_progress > 120
				var:gbr_tools_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_tools_progress > 180
				var:gbr_tools_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_tools_progress > 240
				var:gbr_tools_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_tools_progress > 300
				var:gbr_tools_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_wine }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wine = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wine = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wine = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wine = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wine = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wine = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wine = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_wine_progress > 0
				var:gbr_wine_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_wine_progress > 60
				var:gbr_wine_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_wine_progress > 120
				var:gbr_wine_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_wine_progress > 180
				var:gbr_wine_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_wine_progress > 240
				var:gbr_wine_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_wine_progress > 300
				var:gbr_wine_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
	if = {
		limit = { has_variable = gbr_rationing_wood }
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wood = { market_goods_cheaper > 0.1 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wood = { market_goods_cheaper > 0.2 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wood = { market_goods_cheaper > 0.3 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wood = { market_goods_cheaper > 0.4 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wood = { market_goods_cheaper > 0.5 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wood = { market_goods_cheaper > 0.6 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_rationing_inflation_rate > 0
				market_capital.market = { mg:wood = { market_goods_cheaper > 0.7 } }
			}
			change_variable = { name = gbr_added_inflation subtract = 0.025 }
		}
		if = {
			limit = {
				var:gbr_wood_progress > 0
				var:gbr_wood_progress <= 60
			}
			change_variable = { name = gbr_added_inflation add = 0.025 }
		}
		if = {
			limit = {
				var:gbr_wood_progress > 60
				var:gbr_wood_progress <= 120
			}
			change_variable = { name = gbr_added_inflation add = 0.05 }
		}
		if = {
			limit = {
				var:gbr_wood_progress > 120
				var:gbr_wood_progress <= 180
			}
			change_variable = { name = gbr_added_inflation add = 0.1 }
		}
		if = {
			limit = {
				var:gbr_wood_progress > 180
				var:gbr_wood_progress <= 240
			}
			change_variable = { name = gbr_added_inflation add = 0.15 }
		}
		if = {
			limit = {
				var:gbr_wood_progress > 240
				var:gbr_wood_progress <= 300
			}
			change_variable = { name = gbr_added_inflation add = 0.2 }
		}
		if = {
			limit = {
				var:gbr_wood_progress > 300
				var:gbr_wood_progress <= 360
			}
			change_variable = { name = gbr_added_inflation add = 0.25 }
		}
	}
}

gbr_number_of_goods_rationed = {
	set_variable = { name = gbr_rationing_number_of_goods value = 0 }
	if = { # Aluminum
		limit = { NOT = { has_variable = gbr_rationing_aluminum } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Bauxite
		limit = { NOT = { has_variable = gbr_rationing_bauxite } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Fertilizer ( Chemicals }
		limit = { NOT = { has_variable = gbr_rationing_fertilizer } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Clothes
		limit = { NOT = { has_variable = gbr_rationing_clothes } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Coal
		limit = { NOT = { has_variable = gbr_rationing_coal } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Coffee
		limit = { NOT = { has_variable = gbr_rationing_coffee } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Copper
		limit = { NOT = { has_variable = gbr_rationing_copper } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Engines
		limit = { NOT = { has_variable = gbr_rationing_engines } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Explosives
		limit = { NOT = { has_variable = gbr_rationing_explosives } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Fabric
		limit = { NOT = { has_variable = gbr_rationing_fabric } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Fish
		limit = { NOT = { has_variable = gbr_rationing_fish } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Fruit
		limit = { NOT = { has_variable = gbr_rationing_fruit } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Glass
		limit = { NOT = { has_variable = gbr_rationing_glass } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Grain
		limit = { NOT = { has_variable = gbr_rationing_grain } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Groceries
		limit = { NOT = { has_variable = gbr_rationing_groceries } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # High Quality Fabric
		limit = { NOT = { has_variable = gbr_rationing_high_quality_fabric } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Iron
		limit = { NOT = { has_variable = gbr_rationing_iron } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Lead
		limit = { NOT = { has_variable = gbr_rationing_lead } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Liquor
		limit = { NOT = { has_variable = gbr_rationing_liquor } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Meat
		limit = { NOT = { has_variable = gbr_rationing_meat } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Oil
		limit = { NOT = { has_variable = gbr_rationing_oil } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Opium
		limit = { NOT = { has_variable = gbr_rationing_opium } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Paper
		limit = { NOT = { has_variable = gbr_rationing_paper } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Pharmaceuticals
		limit = { NOT = { has_variable = gbr_rationing_pharmaceuticals } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Phosphorus
		limit = { NOT = { has_variable = gbr_rationing_phosphorus } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Plastics
		limit = { NOT = { has_variable = gbr_rationing_plastics } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Refined Fuel
		limit = { NOT = { has_variable = gbr_rationing_refined_fuel } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Rubber
		limit = { NOT = { has_variable = gbr_rationing_rubber } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Steel
		limit = { NOT = { has_variable = gbr_rationing_steel } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Sugar
		limit = { NOT = { has_variable = gbr_rationing_sugar } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Tea
		limit = { NOT = { has_variable = gbr_rationing_tea } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Tobacco
		limit = { NOT = { has_variable = gbr_rationing_tobacco } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Tools
		limit = { NOT = { has_variable = gbr_rationing_tools } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Wine
		limit = { NOT = { has_variable = gbr_rationing_wine } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
	if = { # Wood
		limit = { NOT = { has_variable = gbr_rationing_wood } }
		change_variable = { name = gbr_rationing_number_of_goods add = 1 }
	}
}

gbr_rationing_over = {
	if = {
		limit = {
			NOR = {
				has_variable = gbr_rationing_aluminum
				has_variable = gbr_rationing_bauxite
				has_variable = gbr_rationing_fertilizer
				has_variable = gbr_rationing_clothes
				has_variable = gbr_rationing_coal
				has_variable = gbr_rationing_coffee
				has_variable = gbr_rationing_copper
				has_variable = gbr_rationing_engines
				has_variable = gbr_rationing_explosives
				has_variable = gbr_rationing_fabric
				has_variable = gbr_rationing_fish
				has_variable = gbr_rationing_fruit
				has_variable = gbr_rationing_glass
				has_variable = gbr_rationing_grain
				has_variable = gbr_rationing_groceries
				has_variable = gbr_rationing_high_quality_fabric
				has_variable = gbr_rationing_iron
				has_variable = gbr_rationing_lead
				has_variable = gbr_rationing_liquor
				has_variable = gbr_rationing_meat
				has_variable = gbr_rationing_oil
				has_variable = gbr_rationing_opium
				has_variable = gbr_rationing_paper
				has_variable = gbr_rationing_pharmaceuticals
				has_variable = gbr_rationing_phosphorus
				has_variable = gbr_rationing_plastics
				has_variable = gbr_rationing_refined_fuel
				has_variable = gbr_rationing_rubber
				has_variable = gbr_rationing_steel
				has_variable = gbr_rationing_sugar
				has_variable = gbr_rationing_tea
				has_variable = gbr_rationing_tobacco
				has_variable = gbr_rationing_tools
				has_variable = gbr_rationing_wine
				has_variable = gbr_rationing_wood
			}
		}
		set_variable = gbr_rationing_over
	}
}

# gbr_random_rationing_events_check = {
	
# }

gbr_weather_season_check = {
	gbr_weather_winter_check = yes
	gbr_weather_spring_check = yes
	gbr_weather_summer_check = yes
	gbr_weather_autumn_check = yes
}

gbr_weather_spring_check = {
	if = {
		limit = {
			OR = {
				AND = {
					game_date >= 1946.3.1
					game_date <= 1946.5.31
				}
				AND = {
					game_date >= 1947.3.1
					game_date <= 1947.5.31
				}
				AND = {
					game_date >= 1948.3.1
					game_date <= 1948.5.31
				}
				AND = {
					game_date >= 1949.3.1
					game_date <= 1949.5.31
				}
				AND = {
					game_date >= 1950.3.1
					game_date <= 1950.5.31
				}
				AND = {
					game_date >= 1951.3.1
					game_date <= 1951.5.31
				}
				AND = {
					game_date >= 1952.3.1
					game_date <= 1952.5.31
				}
				AND = {
					game_date >= 1953.3.1
					game_date <= 1953.5.31
				}
				AND = {
					game_date >= 1954.3.1
					game_date <= 1954.5.31
				}
				AND = {
					game_date >= 1955.3.1
					game_date <= 1955.5.31
				}
				AND = {
					game_date >= 1956.3.1
					game_date <= 1956.5.31
				}
			}
		}
		set_variable = gbr_is_spring_yes
		remove_variable = gbr_is_spring_no
	}
	else = {
		set_variable = gbr_is_spring_no
		remove_variable = gbr_is_spring_yes
	}
}

gbr_weather_summer_check = {
	if = {
		limit = {
			OR = {
				AND = {
					game_date >= 1946.6.1
					game_date <= 1946.8.31
				}
				AND = {
					game_date >= 1947.6.1
					game_date <= 1947.8.31
				}
				AND = {
					game_date >= 1948.6.1
					game_date <= 1948.8.31
				}
				AND = {
					game_date >= 1949.6.1
					game_date <= 1949.8.31
				}
				AND = {
					game_date >= 1950.6.1
					game_date <= 1950.8.31
				}
				AND = {
					game_date >= 1951.6.1
					game_date <= 1951.8.31
				}
				AND = {
					game_date >= 1952.6.1
					game_date <= 1952.8.31
				}
				AND = {
					game_date >= 1953.6.1
					game_date <= 1953.8.31
				}
				AND = {
					game_date >= 1954.6.1
					game_date <= 1954.8.31
				}
				AND = {
					game_date >= 1955.6.1
					game_date <= 1955.8.31
				}
				AND = {
					game_date >= 1956.6.1
					game_date <= 1956.8.31
				}
			}
		}
		set_variable = gbr_is_summer_yes
		remove_variable = gbr_is_summer_no
	}
	else = {
		set_variable = gbr_is_summer_no
		remove_variable = gbr_is_summer_yes
	}
}

gbr_weather_autumn_check = {
	if = {
		limit = {
			OR = {
				AND = {
					game_date >= 1946.9.1
					game_date <= 1946.11.30
				}
				AND = {
					game_date >= 1947.9.1
					game_date <= 1947.11.30
				}
				AND = {
					game_date >= 1948.9.1
					game_date <= 1948.11.30
				}
				AND = {
					game_date >= 1949.9.1
					game_date <= 1949.11.30
				}
				AND = {
					game_date >= 1950.9.1
					game_date <= 1950.11.30
				}
				AND = {
					game_date >= 1951.9.1
					game_date <= 1951.11.30
				}
				AND = {
					game_date >= 1952.9.1
					game_date <= 1952.11.30
				}
				AND = {
					game_date >= 1953.9.1
					game_date <= 1953.11.30
				}
				AND = {
					game_date >= 1954.9.1
					game_date <= 1954.11.30
				}
				AND = {
					game_date >= 1955.9.1
					game_date <= 1955.11.30
				}
				AND = {
					game_date >= 1956.9.1
					game_date <= 1956.11.30
				}
			}
		}
		set_variable = gbr_is_autumn_yes
		remove_variable = gbr_is_autumn_no
	}
	else = {
		set_variable = gbr_is_autumn_no
		remove_variable = gbr_is_autumn_yes
	}
}

gbr_weather_winter_check = {
	if = {
		limit = {
			OR = {
				AND = {
					game_date >= 1946.1.1
					game_date <= 1946.2.28
				}
				AND = {
					game_date >= 1946.12.1
					game_date <= 1947.2.28
				}
				AND = {
					game_date >= 1947.12.1
					game_date <= 1948.2.28
				}
				AND = {
					game_date >= 1948.12.1
					game_date <= 1949.2.28
				}
				AND = {
					game_date >= 1949.12.1
					game_date <= 1950.2.28
				}
				AND = {
					game_date >= 1950.12.1
					game_date <= 1951.2.28
				}
				AND = {
					game_date >= 1951.12.1
					game_date <= 1952.2.28
				}
				AND = {
					game_date >= 1952.12.1
					game_date <= 1953.2.28
				}
				AND = {
					game_date >= 1953.12.1
					game_date <= 1954.2.28
				}
				AND = {
					game_date >= 1954.12.1
					game_date <= 1955.2.28
				}
				AND = {
					game_date >= 1955.12.1
					game_date <= 1955.12.31
				}
			}
		}
		set_variable = gbr_is_winter_yes
		remove_variable = gbr_is_winter_no
	}
	else = {
		set_variable = gbr_is_winter_no
		remove_variable = gbr_is_winter_yes
	}
}

gbr_seasonal_weather_events_check = {
	if = {	# Winter
		limit = {
			has_variable = gbr_is_winter_yes
			NOT = { has_variable = gbr_is_winter_no }
			NOT = { has_variable = gbr_winter_event_triggered }
			NOT = { has_variable = gbr_winter_event_picked }
		}
		
		set_variable = gbr_winter_event_triggered
		remove_variable = gbr_autumn_event_picked
		
		random_list = {
			55 = { trigger_event = united_kingdom_post_war_events.102 } # 55% per year - Mild Winter
			30 = { trigger_event = united_kingdom_post_war_events.103 } # 30% per year - Moderate Winter
			10 = { trigger_event = united_kingdom_post_war_events.104 } # 10% per year - Severe Winter
			3 = { trigger_event = united_kingdom_post_war_events.105 } # 4% per year - Critical Winter
			1 = { trigger_event = united_kingdom_post_war_events.106 } # 1% per year - Catastrophic Winter
		}
	}
	else_if = {	# Spring
		limit = {
			has_variable = gbr_is_spring_yes
			NOT = { has_variable = gbr_is_spring_no }
			NOT = { has_variable = gbr_spring_event_triggered }
			NOT = { has_variable = gbr_spring_event_picked }
		}
		
		set_variable = gbr_spring_event_triggered
		remove_variable = gbr_winter_event_picked
		
		random_list = {
			70 = { trigger_event = united_kingdom_post_war_events.107 } # 70% per year - Mild Spring
			20 = { trigger_event = united_kingdom_post_war_events.112 } # 20% per year - Pleasant Spring
			5 = { trigger_event = united_kingdom_post_war_events.113 } # 5% per year - Production Spring
			5 = { trigger_event = united_kingdom_post_war_events.114 } # 5% per year - Bad Spring
		}
	}
	else_if = {	# Summer
		limit = {
			has_variable = gbr_is_summer_yes
			NOT = { has_variable = gbr_is_summer_no }
			NOT = { has_variable = gbr_summer_event_triggered }
			NOT = { has_variable = gbr_summer_event_picked }
		}
		
		set_variable = gbr_summer_event_triggered
		remove_variable = gbr_spring_event_picked
		
		random_list = {
			70 = { trigger_event = united_kingdom_post_war_events.108 } # 70% per year - Mild Summer
			20 = { trigger_event = united_kingdom_post_war_events.115 } # 20% per year - Pleasant Summer
			5 = { trigger_event = united_kingdom_post_war_events.116 } # 5% per year - Productive Summer
			5 = { trigger_event = united_kingdom_post_war_events.117 } # 5% per year - Bad Summer
		}
	}
	else_if = {	# Autumn
		limit = {
			has_variable = gbr_is_autumn_yes
			NOT = { has_variable = gbr_is_autumn_no }
			NOT = { has_variable = gbr_autumn_event_triggered }
			NOT = { has_variable = gbr_autumn_event_picked }
		}
		
		set_variable = gbr_autumn_event_triggered
		remove_variable = gbr_summer_event_picked
		
		random_list = {
			70 = { trigger_event = united_kingdom_post_war_events.109 } # 70% per year - Mild Autumn
			20 = { trigger_event = united_kingdom_post_war_events.118 } # 20% per year - Pleasant Autumn
			5 = { trigger_event = united_kingdom_post_war_events.119 } # 5% per year - Productive Autumn
			5 = { trigger_event = united_kingdom_post_war_events.120 } # 5% per year - Bad Autumn
		}
	}
}

# Clears unused variables - Save memory/performance
gbr_remove_core_variables = {
	remove_variable = gbr_ig_weight
	
	remove_variable = gbr_staple_goods_visible
	remove_variable = gbr_staple_goods_hidden
	remove_variable = gbr_industrial_goods_visible
	remove_variable = gbr_industrial_goods_hidden
	remove_variable = gbr_luxury_goods_visible
	remove_variable = gbr_luxury_goods_hidden
	remove_variable = gbr_devalue_button_pressed
	remove_variable = gbr_end_rationing_early_button_pressed
	
	remove_variable = gbr_ending_rationing_starting_variable
	remove_variable = gbr_ending_rationing_target_variable_short
	remove_variable = gbr_ending_rationing_target_variable_medium
	remove_variable = gbr_ending_rationing_target_variable_long
	remove_variable = gbr_rationing_number_of_goods
	remove_variable = gbr_rationing_inflation_rate
	remove_variable = gbr_added_inflation
	remove_variable = gbr_biggest_goods_risk_progress
	remove_variable = gbr_ended_rationing_early
	
	remove_variable = gbr_aluminum_progress
	remove_variable = gbr_bauxite_progress
	remove_variable = gbr_fertilizer_progress
	remove_variable = gbr_clothes_progress
	remove_variable = gbr_coal_progress
	remove_variable = gbr_coffee_progress
	remove_variable = gbr_copper_progress
	remove_variable = gbr_engines_progress
	remove_variable = gbr_explosives_progress
	remove_variable = gbr_fabric_progress
	remove_variable = gbr_fish_progress
	remove_variable = gbr_fruit_progress
	remove_variable = gbr_glass_progress
	remove_variable = gbr_grain_progress
	remove_variable = gbr_groceries_progress
	remove_variable = gbr_high_quality_fabric_progress
	remove_variable = gbr_iron_progress
	remove_variable = gbr_lead_progress
	remove_variable = gbr_liquor_progress
	remove_variable = gbr_meat_progress
	remove_variable = gbr_oil_progress
	remove_variable = gbr_opium_progress
	remove_variable = gbr_paper_progress
	remove_variable = gbr_pharmaceuticals_progress
	remove_variable = gbr_phosphorus_progress
	remove_variable = gbr_plastics_progress
	remove_variable = gbr_refined_fuel_progress
	remove_variable = gbr_rubber_progress
	remove_variable = gbr_steel_progress
	remove_variable = gbr_sugar_progress
	remove_variable = gbr_tea_progress
	remove_variable = gbr_tobacco_progress
	remove_variable = gbr_tools_progress
	remove_variable = gbr_wine_progress
	remove_variable = gbr_wood_progress
}

gbr_remove_aluminum_variables = {
	# Aluminum variables
	remove_variable = gbr_aluminum_progress_from_characters
	remove_variable = gbr_aluminum_progress_from_igs
	remove_variable = gbr_aluminum_progress_from_buildings
	remove_variable = gbr_aluminum_progress_from_legitimacy
	remove_variable = gbr_aluminum_progress_from_price
	remove_variable = gbr_aluminum_progress_next
	remove_variable = gbr_ending_aluminum_rationing
	remove_variable = gbr_rationing_aluminum
	remove_variable = gbr_aluminum_building_holder
	remove_variable = gbr_aluminum_refinery_count
}

gbr_remove_bauxite_variables = {
	# Bauxite variables
	remove_variable = gbr_bauxite_progress_from_characters
	remove_variable = gbr_bauxite_progress_from_igs
	remove_variable = gbr_bauxite_progress_from_buildings
	remove_variable = gbr_bauxite_progress_from_legitimacy
	remove_variable = gbr_bauxite_progress_from_price
	remove_variable = gbr_bauxite_progress_next
	remove_variable = gbr_ending_bauxite_rationing
	remove_variable = gbr_rationing_bauxite
	remove_variable = gbr_bauxite_building_holder
	remove_variable = gbr_bauxite_mine_count
}

gbr_remove_fertilizer_variables = {
	# Fertilizer variables (Chemicals)
	remove_variable = gbr_fertilizer_progress_from_characters
	remove_variable = gbr_fertilizer_progress_from_igs
	remove_variable = gbr_fertilizer_progress_from_buildings
	remove_variable = gbr_fertilizer_progress_from_legitimacy
	remove_variable = gbr_fertilizer_progress_from_price
	remove_variable = gbr_fertilizer_progress_next
	remove_variable = gbr_ending_fertilizer_rationing
	remove_variable = gbr_rationing_fertilizer
	remove_variable = gbr_fertilizer_building_holder
	remove_variable = gbr_chemical_plant_count
	remove_variable = gbr_livestock_ranch_fertilizer_count
}

gbr_remove_clothes_variables = {	
	# Clothes variables
	remove_variable = gbr_clothes_progress_from_characters
	remove_variable = gbr_clothes_progress_from_igs
	remove_variable = gbr_clothes_progress_from_buildings
	remove_variable = gbr_clothes_progress_from_legitimacy
	remove_variable = gbr_clothes_progress_from_price
	remove_variable = gbr_clothes_progress_next
	remove_variable = gbr_ending_clothes_rationing
	remove_variable = gbr_rationing_clothes
	remove_variable = gbr_clothes_building_holder
	remove_variable = gbr_textile_manufactory_count
}

gbr_remove_coal_variables = {	
	# Coal variables
	remove_variable = gbr_coal_progress_from_characters
	remove_variable = gbr_coal_progress_from_igs
	remove_variable = gbr_coal_progress_from_buildings
	remove_variable = gbr_coal_progress_from_legitimacy
	remove_variable = gbr_coal_progress_from_price
	remove_variable = gbr_coal_progress_next
	remove_variable = gbr_ending_coal_rationing
	remove_variable = gbr_rationing_coal
	remove_variable = gbr_coal_building_holder
	remove_variable = gbr_coal_mine_count
}

gbr_remove_coffee_variables = {	
	# Coffee variables
	remove_variable = gbr_coffee_progress_from_characters
	remove_variable = gbr_coffee_progress_from_igs
	remove_variable = gbr_coffee_progress_from_buildings
	remove_variable = gbr_coffee_progress_from_legitimacy
	remove_variable = gbr_coffee_progress_from_price
	remove_variable = gbr_coffee_progress_next
	remove_variable = gbr_ending_coffee_rationing
	remove_variable = gbr_rationing_coffee
	remove_variable = gbr_coffee_building_holder
	remove_variable = gbr_coffee_plantation_count
}

gbr_remove_copper_variables = {	
	# Copper variables
	remove_variable = gbr_copper_progress_from_characters
	remove_variable = gbr_copper_progress_from_igs
	remove_variable = gbr_copper_progress_from_buildings
	remove_variable = gbr_copper_progress_from_legitimacy
	remove_variable = gbr_copper_progress_from_price
	remove_variable = gbr_copper_progress_next
	remove_variable = gbr_ending_copper_rationing
	remove_variable = gbr_rationing_copper
	remove_variable = gbr_copper_building_holder
	remove_variable = gbr_copper_mine_count
}

gbr_remove_engines_variables = {	
	# Engines variables
	remove_variable = gbr_engines_progress_from_characters
	remove_variable = gbr_engines_progress_from_igs
	remove_variable = gbr_engines_progress_from_buildings
	remove_variable = gbr_engines_progress_from_legitimacy
	remove_variable = gbr_engines_progress_from_price
	remove_variable = gbr_engines_progress_next
	remove_variable = gbr_ending_engines_rationing
	remove_variable = gbr_rationing_engines
	remove_variable = gbr_engines_building_holder
	remove_variable = gbr_motor_industry_count
}

gbr_remove_explosives_variables = {	
	# Explosives variables
	remove_variable = gbr_explosives_progress_from_characters
	remove_variable = gbr_explosives_progress_from_igs
	remove_variable = gbr_explosives_progress_from_buildings
	remove_variable = gbr_explosives_progress_from_legitimacy
	remove_variable = gbr_explosives_progress_from_price
	remove_variable = gbr_explosives_progress_next
	remove_variable = gbr_ending_explosives_rationing
	remove_variable = gbr_rationing_explosives
	remove_variable = gbr_explosives_building_holder
	remove_variable = gbr_explosives_industry_count
}

gbr_remove_fabric_variables = {
	# Fabric variables
	remove_variable = gbr_fabric_progress_from_characters
	remove_variable = gbr_fabric_progress_from_igs
	remove_variable = gbr_fabric_progress_from_buildings
	remove_variable = gbr_fabric_progress_from_legitimacy
	remove_variable = gbr_fabric_progress_from_price
	remove_variable = gbr_fabric_progress_next
	remove_variable = gbr_ending_fabric_rationing
	remove_variable = gbr_rationing_fabric
	remove_variable = gbr_fabric_building_holder
	remove_variable = gbr_cotton_plantation_count
	remove_variable = gbr_livestock_ranch_fabric_count
}

gbr_remove_fish_variables = {
	# Fish variables
	remove_variable = gbr_fish_progress_from_characters
	remove_variable = gbr_fish_progress_from_igs
	remove_variable = gbr_fish_progress_from_buildings
	remove_variable = gbr_fish_progress_from_legitimacy
	remove_variable = gbr_fish_progress_from_price
	remove_variable = gbr_fish_progress_next
	remove_variable = gbr_ending_fish_rationing
	remove_variable = gbr_rationing_fish
	remove_variable = gbr_fish_building_holder
	remove_variable = gbr_fishing_wharf_count
}

gbr_remove_fruit_variables = {
	# Fruit variables
	remove_variable = gbr_fruit_progress_from_characters
	remove_variable = gbr_fruit_progress_from_igs
	remove_variable = gbr_fruit_progress_from_buildings
	remove_variable = gbr_fruit_progress_from_legitimacy
	remove_variable = gbr_fruit_progress_from_price
	remove_variable = gbr_fruit_progress_next
	remove_variable = gbr_ending_fruit_rationing
	remove_variable = gbr_rationing_fruit
	remove_variable = gbr_fruit_building_holder
	remove_variable = gbr_banana_plantation_count
	remove_variable = gbr_rye_farm_fruit_count
	remove_variable = gbr_wheat_farm_fruit_count
	remove_variable = gbr_rice_farm_fruit_count
	remove_variable = gbr_maize_farm_fruit_count
	remove_variable = gbr_millet_farm_fruit_count
}

gbr_remove_glass_variables = {
	# Glass variables
	remove_variable = gbr_glass_progress_from_characters
	remove_variable = gbr_glass_progress_from_igs
	remove_variable = gbr_glass_progress_from_buildings
	remove_variable = gbr_glass_progress_from_legitimacy
	remove_variable = gbr_glass_progress_from_price
	remove_variable = gbr_glass_progress_next
	remove_variable = gbr_ending_glass_rationing
	remove_variable = gbr_rationing_glass
	remove_variable = gbr_glass_building_holder
	remove_variable = gbr_glassworks_count
}

gbr_remove_grain_variables = {
	# Grain variables
	remove_variable = gbr_grain_progress_from_characters
	remove_variable = gbr_grain_progress_from_igs
	remove_variable = gbr_grain_progress_from_buildings
	remove_variable = gbr_grain_progress_from_legitimacy
	remove_variable = gbr_grain_progress_from_price
	remove_variable = gbr_grain_progress_next
	remove_variable = gbr_ending_grain_rationing
	remove_variable = gbr_rationing_grain
	remove_variable = gbr_grain_building_holder
	remove_variable = gbr_rye_farm_count
	remove_variable = gbr_wheat_farm_count
	remove_variable = gbr_rice_farm_count
	remove_variable = gbr_maize_farm_count
	remove_variable = gbr_millet_farm_count
}

gbr_remove_groceries_variables = {
	# Groceries variables
	remove_variable = gbr_groceries_progress_from_characters
	remove_variable = gbr_groceries_progress_from_igs
	remove_variable = gbr_groceries_progress_from_buildings
	remove_variable = gbr_groceries_progress_from_legitimacy
	remove_variable = gbr_groceries_progress_from_price
	remove_variable = gbr_groceries_progress_next
	remove_variable = gbr_ending_groceries_rationing
	remove_variable = gbr_rationing_groceries
	remove_variable = gbr_groceries_building_holder
	remove_variable = gbr_food_industry_count
}

gbr_remove_high_quality_fabric_variables = {
	# High Quality Fabric variables
	remove_variable = gbr_high_quality_fabric_progress_from_characters
	remove_variable = gbr_high_quality_fabric_progress_from_igs
	remove_variable = gbr_high_quality_fabric_progress_from_buildings
	remove_variable = gbr_high_quality_fabric_progress_from_legitimacy
	remove_variable = gbr_high_quality_fabric_progress_from_price
	remove_variable = gbr_high_quality_fabric_progress_next
	remove_variable = gbr_ending_high_quality_fabric_rationing
	remove_variable = gbr_rationing_high_quality_fabric
	remove_variable = gbr_high_quality_fabric_building_holder
	remove_variable = gbr_silk_plantation_count
	remove_variable = gbr_synthetics_plant_count
}

gbr_remove_iron_variables = {
	# Iron variables
	remove_variable = gbr_iron_progress_from_characters
	remove_variable = gbr_iron_progress_from_igs
	remove_variable = gbr_iron_progress_from_buildings
	remove_variable = gbr_iron_progress_from_legitimacy
	remove_variable = gbr_iron_progress_from_price
	remove_variable = gbr_iron_progress_next
	remove_variable = gbr_ending_iron_rationing
	remove_variable = gbr_rationing_iron
	remove_variable = gbr_iron_building_holder
	remove_variable = gbr_iron_mine_count
}

gbr_remove_lead_variables = {
	# Lead variables
	remove_variable = gbr_lead_progress_from_characters
	remove_variable = gbr_lead_progress_from_igs
	remove_variable = gbr_lead_progress_from_buildings
	remove_variable = gbr_lead_progress_from_legitimacy
	remove_variable = gbr_lead_progress_from_price
	remove_variable = gbr_lead_progress_next
	remove_variable = gbr_ending_lead_rationing
	remove_variable = gbr_rationing_lead
	remove_variable = gbr_lead_building_holder
	remove_variable = gbr_lead_mine_count
}

gbr_remove_liquor_variables = {
	# Liquor variables
	remove_variable = gbr_liquor_progress_from_characters
	remove_variable = gbr_liquor_progress_from_igs
	remove_variable = gbr_liquor_progress_from_buildings
	remove_variable = gbr_liquor_progress_from_legitimacy
	remove_variable = gbr_liquor_progress_from_price
	remove_variable = gbr_liquor_progress_next
	remove_variable = gbr_ending_liquor_rationing
	remove_variable = gbr_rationing_liquor
	remove_variable = gbr_liquor_building_holder
	remove_variable = gbr_distilleries_liquor_count
}

gbr_remove_meat_variables = {
	# Meat variables
	remove_variable = gbr_meat_progress_from_characters
	remove_variable = gbr_meat_progress_from_igs
	remove_variable = gbr_meat_progress_from_buildings
	remove_variable = gbr_meat_progress_from_legitimacy
	remove_variable = gbr_meat_progress_from_price
	remove_variable = gbr_meat_progress_next
	remove_variable = gbr_ending_meat_rationing
	remove_variable = gbr_rationing_meat
	remove_variable = gbr_meat_building_holder
	remove_variable = gbr_livestock_ranch_count
	remove_variable = gbr_fishing_wharf_meat_count
}

gbr_remove_oil_variables = {
	# Oil variables
	remove_variable = gbr_oil_progress_from_characters
	remove_variable = gbr_oil_progress_from_igs
	remove_variable = gbr_oil_progress_from_buildings
	remove_variable = gbr_oil_progress_from_legitimacy
	remove_variable = gbr_oil_progress_from_price
	remove_variable = gbr_oil_progress_next
	remove_variable = gbr_ending_oil_rationing
	remove_variable = gbr_rationing_oil
	remove_variable = gbr_oil_building_holder
	remove_variable = gbr_oil_rig_count
}

gbr_remove_opium_variables = {
	# Opium variables
	remove_variable = gbr_opium_progress_from_characters
	remove_variable = gbr_opium_progress_from_igs
	remove_variable = gbr_opium_progress_from_buildings
	remove_variable = gbr_opium_progress_from_legitimacy
	remove_variable = gbr_opium_progress_from_price
	remove_variable = gbr_opium_progress_next
	remove_variable = gbr_ending_opium_rationing
	remove_variable = gbr_rationing_opium
	remove_variable = gbr_opium_building_holder
	remove_variable = gbr_opium_plantation_count
}

gbr_remove_paper_variables = {
	# Paper variables
	remove_variable = gbr_paper_progress_from_characters
	remove_variable = gbr_paper_progress_from_igs
	remove_variable = gbr_paper_progress_from_buildings
	remove_variable = gbr_paper_progress_from_legitimacy
	remove_variable = gbr_paper_progress_from_price
	remove_variable = gbr_paper_progress_next
	remove_variable = gbr_ending_paper_rationing
	remove_variable = gbr_rationing_paper
	remove_variable = gbr_paper_building_holder
	remove_variable = gbr_paper_manufactories_count
}

gbr_remove_pharmaceuticals_variables = {
	# Pharmaceuticals variables
	remove_variable = gbr_pharmaceuticals_progress_from_characters
	remove_variable = gbr_pharmaceuticals_progress_from_igs
	remove_variable = gbr_pharmaceuticals_progress_from_buildings
	remove_variable = gbr_pharmaceuticals_progress_from_legitimacy
	remove_variable = gbr_pharmaceuticals_progress_from_price
	remove_variable = gbr_pharmaceuticals_progress_next
	remove_variable = gbr_ending_pharmaceuticals_rationing
	remove_variable = gbr_rationing_pharmaceuticals
	remove_variable = gbr_pharmaceuticals_building_holder
	remove_variable = gbr_pharmaceutical_industry_count
}

gbr_remove_phosphorus_variables = {
	# Phosphorus variables
	remove_variable = gbr_phosphorus_progress_from_characters
	remove_variable = gbr_phosphorus_progress_from_igs
	remove_variable = gbr_phosphorus_progress_from_buildings
	remove_variable = gbr_phosphorus_progress_from_legitimacy
	remove_variable = gbr_phosphorus_progress_from_price
	remove_variable = gbr_phosphorus_progress_next
	remove_variable = gbr_ending_phosphorus_rationing
	remove_variable = gbr_rationing_phosphorus
	remove_variable = gbr_phosphorus_building_holder
	remove_variable = gbr_phosphorus_mine_count
}

gbr_remove_plastics_variables = {
	# Plastics variables
	remove_variable = gbr_plastics_progress_from_characters
	remove_variable = gbr_plastics_progress_from_igs
	remove_variable = gbr_plastics_progress_from_buildings
	remove_variable = gbr_plastics_progress_from_legitimacy
	remove_variable = gbr_plastics_progress_from_price
	remove_variable = gbr_plastics_progress_next
	remove_variable = gbr_ending_plastics_rationing
	remove_variable = gbr_rationing_plastics
	remove_variable = gbr_plastics_building_holder
	remove_variable = gbr_fuel_refineries_plastics_count
}

gbr_remove_refined_fuel_variables = {
	# Refined Fuel variables
	remove_variable = gbr_refined_fuel_progress_from_characters
	remove_variable = gbr_refined_fuel_progress_from_igs
	remove_variable = gbr_refined_fuel_progress_from_buildings
	remove_variable = gbr_refined_fuel_progress_from_legitimacy
	remove_variable = gbr_refined_fuel_progress_from_price
	remove_variable = gbr_refined_fuel_progress_next
	remove_variable = gbr_ending_refined_fuel_rationing
	remove_variable = gbr_rationing_refined_fuel
	remove_variable = gbr_refined_fuel_building_holder
	remove_variable = gbr_fuel_refineries_count
}

gbr_remove_rubber_variables = {
	# Rubber variables
	remove_variable = gbr_rubber_progress_from_characters
	remove_variable = gbr_rubber_progress_from_igs
	remove_variable = gbr_rubber_progress_from_buildings
	remove_variable = gbr_rubber_progress_from_legitimacy
	remove_variable = gbr_rubber_progress_from_price
	remove_variable = gbr_rubber_progress_next
	remove_variable = gbr_ending_rubber_rationing
	remove_variable = gbr_rationing_rubber
	remove_variable = gbr_rubber_building_holder
	remove_variable = gbr_rubber_plantation_count
	remove_variable = gbr_synthetics_plant_rubber_count
}

gbr_remove_steel_variables = {
	# Steel variables
	remove_variable = gbr_steel_progress_from_characters
	remove_variable = gbr_steel_progress_from_igs
	remove_variable = gbr_steel_progress_from_buildings
	remove_variable = gbr_steel_progress_from_legitimacy
	remove_variable = gbr_steel_progress_from_price
	remove_variable = gbr_steel_progress_next
	remove_variable = gbr_ending_steel_rationing
	remove_variable = gbr_rationing_steel
	remove_variable = gbr_steel_building_holder
	remove_variable = gbr_steelworks_count
}

gbr_remove_sugar_variables = {
	# Sugar variables
	remove_variable = gbr_sugar_progress_from_characters
	remove_variable = gbr_sugar_progress_from_igs
	remove_variable = gbr_sugar_progress_from_buildings
	remove_variable = gbr_sugar_progress_from_legitimacy
	remove_variable = gbr_sugar_progress_from_price
	remove_variable = gbr_sugar_progress_next
	remove_variable = gbr_ending_sugar_rationing
	remove_variable = gbr_rationing_sugar
	remove_variable = gbr_sugar_building_holder
	remove_variable = gbr_sugar_plantation_count
	remove_variable = gbr_rye_farm_sugar_count
	remove_variable = gbr_wheat_farm_sugar_count
	remove_variable = gbr_rice_farm_sugar_count
	remove_variable = gbr_maize_farm_sugar_count
	remove_variable = gbr_millet_farm_sugar_count
}

gbr_remove_tea_variables = {
	# Tea variables
	remove_variable = gbr_tea_progress_from_characters
	remove_variable = gbr_tea_progress_from_igs
	remove_variable = gbr_tea_progress_from_buildings
	remove_variable = gbr_tea_progress_from_legitimacy
	remove_variable = gbr_tea_progress_from_price
	remove_variable = gbr_tea_progress_next
	remove_variable = gbr_ending_tea_rationing
	remove_variable = gbr_rationing_tea
	remove_variable = gbr_tea_building_holder
	remove_variable = gbr_tea_plantation_count
}

gbr_remove_tobacco_variables = {
	# Tobacco variables
	remove_variable = gbr_tobacco_progress_from_characters
	remove_variable = gbr_tobacco_progress_from_igs
	remove_variable = gbr_tobacco_progress_from_buildings
	remove_variable = gbr_tobacco_progress_from_legitimacy
	remove_variable = gbr_tobacco_progress_from_price
	remove_variable = gbr_tobacco_progress_next
	remove_variable = gbr_ending_tobacco_rationing
	remove_variable = gbr_rationing_tobacco
	remove_variable = gbr_tobacco_building_holder
	remove_variable = gbr_tobacco_plantation_count
}

gbr_remove_tools_variables = {
	# Tools variables
	remove_variable = gbr_tools_progress_from_characters
	remove_variable = gbr_tools_progress_from_igs
	remove_variable = gbr_tools_progress_from_buildings
	remove_variable = gbr_tools_progress_from_legitimacy
	remove_variable = gbr_tools_progress_from_price
	remove_variable = gbr_tools_progress_next
	remove_variable = gbr_ending_tools_rationing
	remove_variable = gbr_rationing_tools
	remove_variable = gbr_tools_building_holder
	remove_variable = gbr_tool_manufactories_count
}

gbr_remove_wine_variables = {
	# Wine variables
	remove_variable = gbr_wine_progress_from_characters
	remove_variable = gbr_wine_progress_from_igs
	remove_variable = gbr_wine_progress_from_buildings
	remove_variable = gbr_wine_progress_from_legitimacy
	remove_variable = gbr_wine_progress_from_price
	remove_variable = gbr_wine_progress_next
	remove_variable = gbr_ending_wine_rationing
	remove_variable = gbr_rationing_wine
	remove_variable = gbr_wine_building_holder
	remove_variable = gbr_distilleries_wine_count
}

gbr_remove_wood_variables = {
	# Wood variables
	remove_variable = gbr_wood_progress_from_characters
	remove_variable = gbr_wood_progress_from_igs
	remove_variable = gbr_wood_progress_from_buildings
	remove_variable = gbr_wood_progress_from_legitimacy
	remove_variable = gbr_wood_progress_from_price
	remove_variable = gbr_wood_progress_next
	remove_variable = gbr_ending_wood_rationing
	remove_variable = gbr_rationing_wood
	remove_variable = gbr_wood_building_holder
	remove_variable = gbr_logging_camp_count
}

gbr_remove_seasonal_variables = {
	# Winter
	remove_variable = gbr_is_winter_yes
	remove_variable = gbr_is_winter_no
	remove_variable = gbr_winter_event_picked
	remove_variable = gbr_winter_event_triggered
	
	# Spring
	remove_variable = gbr_is_spring_yes
	remove_variable = gbr_is_spring_no
	remove_variable = gbr_spring_event_picked
	remove_variable = gbr_spring_event_triggered
	
	# Summer
	remove_variable = gbr_is_summer_yes
	remove_variable = gbr_is_summer_no
	remove_variable = gbr_summer_event_picked
	remove_variable = gbr_summer_event_triggered
	
	# Autumn
	remove_variable = gbr_is_autumn_yes
	remove_variable = gbr_is_autumn_no
	remove_variable = gbr_autumn_event_picked
	remove_variable = gbr_autumn_event_triggered
}

gbr_remove_seasonal_modifiers = {
	# Core
	remove_modifier = gbr_weather_money_cost
	remove_modifier = gbr_positive_weather
	remove_modifier = gbr_negative_weather
}